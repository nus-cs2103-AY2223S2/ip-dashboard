[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"        String[] dateAndTime \u003d by.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"        if (dateAndTime.length \u003d\u003d 1) by +\u003d \" 2359\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"     * @return the string representation of the task to be stored in the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(this.by) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"    private static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"    private static ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    private static final Storage STORAGE \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"     * @param txt text to indent.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"     * @return indented string.","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    private static String autoIndent(String txt) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"        return \"    \" + txt.replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"     * prints border line.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    private static void borderLine() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        System.out.print(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"     * Prints output in a nice format. (adds borders and indentation).","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"     * @param inp input string.","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    private static void prettifyOut(String inp) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        borderLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        System.out.println(autoIndent(inp));","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        borderLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"     * Prints out that task was added.","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"     * @param task task that was added.","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    private static void printTaskAdded(Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        prettifyOut(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\nNow you have \" + TASKS.size() +","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"                \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"     * Executes the input command.","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"     * @param inp input string.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"     * @return False if input is a bye command.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if input is invalid.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"    private static boolean executeInput(String inp) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"        Duke.Command cmd;","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        String[] splitInput \u003d inp.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"            cmd \u003d Duke.Command.valueOf(splitInput[0].substring(0, 1).toUpperCase() + splitInput[0].substring(1));","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"            if (cmd !\u003d Command.List \u0026\u0026 cmd !\u003d Command.Bye) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"                if (splitInput.length \u003c 2 || splitInput[1].isBlank()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a \" + cmd.toString().toLowerCase() +","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"                            \" cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"                description \u003d splitInput[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        switch (cmd) {","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"            case List:","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"                if (TASKS.isEmpty()) prettifyOut(\"Your list is empty!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"                else {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"                    int count \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"                    borderLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"                    System.out.println(autoIndent(\"Here are the tasks in your list:\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"                    for (Task item : TASKS) {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"                        System.out.println(autoIndent(count + \".\" + item));","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"                        count++;","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"                    borderLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"            case Mark:","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"                int taskToMark \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"                if (taskToMark \u003e\u003d TASKS.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"                    prettifyOut(\"Task does not exist!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"                    TASKS.get(taskToMark).markAsDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"                    prettifyOut(\"Nice! I\u0027ve marked this task as done:\\n\" + TASKS.get(taskToMark));","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"            case Unmark:","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"                int taskToUnmark \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"                if (taskToUnmark \u003e\u003d TASKS.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"                    prettifyOut(\"Task does not exist!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"                    TASKS.get(taskToUnmark).markAsUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"                    prettifyOut(\"OK, I\u0027ve marked this task as not done yet:\\n\" + TASKS.get(taskToUnmark));","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"            case Todo:","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"                Task td \u003d new ToDo(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"                TASKS.add(td);","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"                printTaskAdded(td);","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"            case Deadline:","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"                String[] deadline \u003d description.split(\" /by \");","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"                Task dl \u003d new Deadline(deadline[0], deadline[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"                TASKS.add(dl);","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"                printTaskAdded(dl);","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"            case Event:","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"                String[] event \u003d description.split(\" /from \");","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"                String[] timing \u003d event[1].split(\" /to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"                Task ev \u003d new Event(event[0], timing[0], timing[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"                TASKS.add(ev);","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"                printTaskAdded(ev);","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"            case Delete:","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"                int taskToDelete \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"                if (taskToDelete \u003e\u003d TASKS.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"                    prettifyOut(\"Task does not exist!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"                    prettifyOut(\"Noted. I\u0027ve removed this task:\\n  \" + TASKS.get(taskToDelete) +","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"                            \"\\nNow you have \" + (TASKS.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"                    TASKS.remove(taskToDelete);","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"KS2499"},"content":"            case Bye:","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"KS2499"},"content":"                prettifyOut(GOODBYE);","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"KS2499"},"content":"                return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"KS2499"},"content":"        return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"KS2499"},"content":"     * The main function.","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"KS2499"},"content":"     * @param args command line arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"KS2499"},"content":"            boolean toContinue \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"KS2499"},"content":"            TASKS \u003d STORAGE.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"KS2499"},"content":"            prettifyOut(GREETING);","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"KS2499"},"content":"            Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"KS2499"},"content":"            while (toContinue) {","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"KS2499"},"content":"                String userInput \u003d input.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"KS2499"},"content":"                if (userInput.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"KS2499"},"content":"                    borderLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"KS2499"},"content":"                    continue;","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"KS2499"},"content":"                toContinue \u003d executeInput(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"KS2499"},"content":"                STORAGE.save(TASKS);","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"KS2499"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"KS2499"},"content":"            prettifyOut(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"KS2499"},"content":"     * Available commands.","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"KS2499"},"content":"    public enum Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"KS2499"},"content":"        List, Mark, Unmark, Todo, Deadline, Event, Delete, Bye","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KS2499":166,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"        String[] fromDateTime \u003d from.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"        String[] toDateTime \u003d to.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"        if (fromDateTime.length !\u003d 2) from +\u003d \" 0000\";    // default to 00:00","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"        if (toDateTime.length !\u003d 2) to +\u003d \" 2359\";        // default to 23:59","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"     * @return the string representation of the task to be stored in the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatter.format(this.from) + \" to: \" +","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"                formatter.format(this.to) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":33}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"    private final File file;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"     * Creates a Storage object.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"     * @param filePath the path of the file to be stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"        if (filePath \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"            throw new IllegalArgumentException(\"File path cannot be null\");","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        if (filePath.isBlank()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"            throw new IllegalArgumentException(\"File path cannot be blank\");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"                this.file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"     * Loads the tasks from the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"     * @return the list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if the file is not found.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"                String storageString \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"                Task task \u003d parseStorageString(storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"                this.tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"     * Parses the storage string and returns the Task object.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"     * @param storageString the string representation of the task to be stored in the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"     * @return the Task object.","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if the storage string is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"    private Task parseStorageString(String storageString) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        String[] split \u003d storageString.split(\" \\\\| \");","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        if (split.length \u003c 3) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"Invalid storage string: \" + storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        Task task;","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"        switch (split[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"            case \"T\":","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"                task \u003d new ToDo(split[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"            case \"D\":","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"                if (split.length \u003c 4) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"                    throw new DukeException(\"Invalid storage string: \" + storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"                task \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"            case \"E\":","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"                if (split.length \u003c 5) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"                    throw new DukeException(\"Invalid storage string: \" + storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"                task \u003d new Event(split[2], split[3], split[4]);","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"                throw new DukeException(\"Invalid storage string: \" + storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"        if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"        return task;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"     * Saves the tasks to the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if the file is not found.","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"                fw.write(task.toStorageString() + System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"            fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"KS2499":112}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"     * @return the status icon.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    //...","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":38}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"     * @return the string representation of the task to be stored in the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"deadline return book /by 5pm","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"unmark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"delete 1","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"delete 2","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"delete 3","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":18}}]
