[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"KSunil2001":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":" * Main class for the chatbot.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    /** Deals with loading tasks from the file and saving tasks in the file */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    /** Contains the task list */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    /** Deals with interactions with the user */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the Ui, Storage and TaskList classes.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"     * TaskList is initialized by loading the tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"     * from the task file using the Storage.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"     * If the task file does not exist, it will print","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"     * the error and create the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"     * @param foldPath Path of the folder.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"     * @param filePath Path of the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"    public Duke(Path foldPath, Path filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"        storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"            createFile(foldPath, filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"     * Creates the folder and file to save and","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"     * load tasks if they do not already exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"     * @param foldPath Path of the folder.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"     * @param filePath Path of the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"    public void createFile(Path foldPath, Path filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"            if (!Files.isDirectory(foldPath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"                Files.createDirectory(foldPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"            } else if (!Files.exists(filePath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"            ui.showFileError();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"     * Runs the chatbot by first printing the","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"     * welcome message and then reading the","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"     * commands input by the user. The commands","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"     * read will then be parsed and executed.","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"            Parser.parse(fullCommand, ui, tasks, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"            isExit \u003d ui.getIsExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the Duke class and calls","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"     * the run function.","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"        String fileSep \u003d System.getProperty(\"file.separator\");","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"        String userDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"        Path foldPath \u003d Paths.get( userDir + fileSep + \"data\");","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"        Path filePath \u003d Paths.get(foldPath + fileSep + \"duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"        new Duke(foldPath, filePath).run();","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":93}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":" * This class represents exceptions specific to Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"     * Constructs DukeException when loading unrecognized tasks from the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"☹ OOPS!!! Loading error occurred due to unrecognized task: \" + message);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"     * Constructs DukeException when file could not be found for loading tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    public DukeException(FileNotFoundException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"☹ OOPS!!! Loading error occurred since the file could not be found.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"     * Constructs DukeException when loading invalid date time formatted tasks from the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    public DukeException(DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"☹ OOPS!!! Loading error occurred due to incorrect date time format.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"Format of the date should be (MMM dd yyyy h:mm a).\");","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"     * Constructs DukeException when tasks cannot be saved to the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"    public DukeException(IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"☹ OOPS!!! Tasks could not be saved to the file.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"The following error occurred \" + e);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":40}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":" * This class deals with making sense of the user command.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"     * Parses the command input by the user and executes it.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"     * @param command Command input by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"     * @param tasks Task operations.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     * @param storage Storage to save tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"     * @throws DukeException  If the tasks cannot be saved to the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    public static void parse(String command, Ui ui, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"        String firstWord \u003d command.split(\" \")[0].toLowerCase();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"        String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"        int index;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"        switch (firstWord) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"            ui.exit();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"            ui.listTasks(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"            index \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"            tasks.markTask(ui, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"            index \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"            tasks.unmarkTask(ui, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"            index \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"            tasks.deleteTask(ui, index);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"                description \u003d command.substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"                tasks.saveTask(ui, description);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"                storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"            } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"                ui.showDescriptionError(firstWord);","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"                int byIdx \u003d command.indexOf(\"/by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"                description \u003d command.substring(9, byIdx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(command.substring(byIdx + 4), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"                tasks.saveTask(ui, description, by);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"                storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"                ui.showDateTimeError();","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"            } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"                ui.showDescriptionError(firstWord);","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"                int fromIdx \u003d command.indexOf(\"/from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"                int toIdx \u003d command.indexOf(\"/to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"                description \u003d command.substring(6, fromIdx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(command.substring(fromIdx + 6, toIdx - 1), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(command.substring(toIdx + 4), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"                tasks.saveTask(ui, description, from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"                storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"                ui.showDateTimeError();","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"            } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"                ui.showDescriptionError(firstWord);","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"        case \"find\":","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"            description \u003d command.substring(5);","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"            tasks.findTask(ui, description);","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"KSunil2001"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"KSunil2001"},"content":"            ui.showUnknownError();","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":98}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":" * This class deals with loading tasks from the","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":" * file and saving tasks in the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    /** Path of the task file */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the path of the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"     * @param filePath Path of the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"     * Saves the list of tasks to the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"     * @throws DukeException If the tasks cannot be saved to the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"    public void save(ArrayList\u003cTask\u003e listOfTasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"            String str;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"            for (Task task : listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"                str \u003d task.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"                str \u003d str.replace(\"[ ]\", \" | 0 |\");","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"                str \u003d str.replace(\"[X]\", \" | 1 |\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"                str \u003d str.replace(\"[\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"                str \u003d str.replace(\"]\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"                if (str.startsWith(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"                    str \u003d str.replace(\"(by:\", \"|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"                    str \u003d str.replace(\")\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"                } else if (str.startsWith(\"E\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"                    str \u003d str.replace(\"(from:\", \"|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"                    str \u003d str.replace(\" to: \", \" - \");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"                    str \u003d str.replace(\")\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"                str \u003d str + \"\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"                fw.write(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"            throw new DukeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"     * Returns the tasks from the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"     * @return Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"     * @throws DukeException If the file was not found or has incorrect date time format or has unrecognized tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"            Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"            String description, str, taskInfo;","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"                str \u003d s.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"                taskInfo \u003d str.substring(8);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"                switch (str.charAt(0)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"                    description \u003d taskInfo;","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"KSunil2001"},"content":"                    int byIdx \u003d taskInfo.indexOf(\"|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"KSunil2001"},"content":"                    description \u003d taskInfo.substring(0, byIdx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"KSunil2001"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(taskInfo.substring(byIdx + 2), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"KSunil2001"},"content":"                    task \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"KSunil2001"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"KSunil2001"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"KSunil2001"},"content":"                    int fromIdx \u003d taskInfo.indexOf(\"|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"KSunil2001"},"content":"                    int toIdx \u003d taskInfo.indexOf(\"-\");","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"KSunil2001"},"content":"                    description \u003d taskInfo.substring(0, fromIdx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"KSunil2001"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(taskInfo.substring(fromIdx + 2, toIdx - 1), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"KSunil2001"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(taskInfo.substring(toIdx + 2), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"KSunil2001"},"content":"                    task \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"KSunil2001"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"KSunil2001"},"content":"                default:","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"KSunil2001"},"content":"                    throw new DukeException(str);","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"KSunil2001"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"KSunil2001"},"content":"                if (str.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"KSunil2001"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"KSunil2001"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"KSunil2001"},"content":"                listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"KSunil2001"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"KSunil2001"},"content":"            throw new DukeException(e);","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"KSunil2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"KSunil2001"},"content":"            throw new DukeException(e);","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"KSunil2001"},"content":"        return listOfTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":137}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":" * This class represents the task operations.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    /** Array list of tasks */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"        this.listOfTasks \u003d listOfTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"     * Saves the task to the list of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"     * and prints it.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"    public void saveTask(Ui ui, String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"        ui.printSaveTask(task, listOfTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"    public void saveTask(Ui ui, String description, LocalDateTime by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"        ui.printSaveTask(task, listOfTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"     * @param from Start date time of the event.","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"     * @param to End date time of the event.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"    public void saveTask(Ui ui, String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"        ui.printSaveTask(task, listOfTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"     * Marks the task as done and prints it.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"     * @param index Index of the array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"    public void markTask(Ui ui, int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"            ui.printMarkTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"            ui.showIndexError(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"     * Marks the task as undone and prints it.","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"     * @param index Index of the array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"    public void unmarkTask(Ui ui, int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"KSunil2001"},"content":"            ui.printUnmarkTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"KSunil2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"KSunil2001"},"content":"            ui.showIndexError(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"KSunil2001"},"content":"     * Deletes the task and prints it.","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"KSunil2001"},"content":"     * @param index Index of the array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"KSunil2001"},"content":"    public void deleteTask(Ui ui, int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"KSunil2001"},"content":"            listOfTasks.remove(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"KSunil2001"},"content":"            ui.printDeleteTask(task, listOfTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"KSunil2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"KSunil2001"},"content":"            ui.showIndexError(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"KSunil2001"},"content":"     * Finds and prints the tasks with the matching keyword.","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"KSunil2001"},"content":"     * @param keyword Keyword of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"KSunil2001"},"content":"    public void findTask(Ui ui, String keyword) {","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"KSunil2001"},"content":"        ArrayList\u003cTask\u003e matchedListOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"KSunil2001"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"KSunil2001"},"content":"            if (task.toString().indexOf(keyword) \u003e 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"KSunil2001"},"content":"                matchedListOfTasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"KSunil2001"},"content":"        ui.printMatchingTasks(matchedListOfTasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"KSunil2001"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"KSunil2001"},"content":"        return listOfTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":136}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":" * This class deals with interactions with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"     * Prints the line separator.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"    public void printLine(){","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tHello! I\u0027m C-3PO, Human Cyborg Relations.\\n\\tWhat can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    public void exit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"        return isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"    public void listTasks(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"        Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"        for (int i \u003d 1; i \u003c\u003d listOfTasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"            task \u003d listOfTasks.get(i - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"            System.out.println(\"\\t\" + i + \".\" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"     * Prints the list of matching tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of matching tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"    public void printMatchingTasks(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"        Task task;","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"        for (int i \u003d 1; i \u003c\u003d listOfTasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"            task \u003d listOfTasks.get(i - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"            System.out.println(\"\\t\" + i + \".\" + task);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"     * Prints the task that was saved.","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"     * @param task Task that was saved.","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"    public void printSaveTask(Task task, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tNow you have \" + listOfTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"     * Prints the task that was marked as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"     * @param task Task that was marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"KSunil2001"},"content":"    public void printMarkTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"KSunil2001"},"content":"     * Prints the task that was marked as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"KSunil2001"},"content":"     * @param task Task that was unmarked.","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"KSunil2001"},"content":"    public void printUnmarkTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"KSunil2001"},"content":"     * Prints the task that was deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"KSunil2001"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"KSunil2001"},"content":"    public void printDeleteTask(Task task, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"\\tNow you have \" + listOfTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"KSunil2001"},"content":"        printLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"KSunil2001"},"content":"     * Returns the command input by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"KSunil2001"},"content":"     * @return Input command.","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"KSunil2001"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"KSunil2001"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"KSunil2001"},"content":"        String input \u003d scan.nextLine().trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"KSunil2001"},"content":"        return input;","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"KSunil2001"},"content":"     * Prints the error when the data could","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"KSunil2001"},"content":"     * not be loaded.","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"KSunil2001"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"Creating new file to store tasks due to the above mentioned loading error ...\");","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"KSunil2001"},"content":"        System.out.print(\"WARNING!!! Adding a new task will reset the contents of \");","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"the original file (if it exists).\");","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"Exit the program if you do not wish to continue (enter \u0027bye\u0027)\");","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"KSunil2001"},"content":"     * Prints the error when file or folder","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"KSunil2001"},"content":"     * could not be created.","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"KSunil2001"},"content":"    public void showFileError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"Error occurred when creating the folder/file.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"KSunil2001"},"content":"     * Prints error message for unknown command.","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"KSunil2001"},"content":"    public void showUnknownError() {","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"KSunil2001"},"content":"     * Prints error message for empty task description.","lastModifiedDate":"2023-02-02"},{"lineNumber":167,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"KSunil2001"},"content":"    public void showDescriptionError(String task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":169,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"☹ OOPS!!! The description of \" + task + \" task cannot be empty.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":171,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":172,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":173,"author":{"gitId":"KSunil2001"},"content":"     * Prints error message for out of bounds index.","lastModifiedDate":"2023-02-02"},{"lineNumber":174,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":175,"author":{"gitId":"KSunil2001"},"content":"    public void showIndexError(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"☹ OOPS!!! The index \" + index + \" for the list of tasks is out of bounds.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":177,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":178,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":179,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"KSunil2001"},"content":"     * Prints error message for incorrect date time format.","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"KSunil2001"},"content":"    public void showDateTimeError() {","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"KSunil2001"},"content":"        System.out.println(\"☹ OOPS!!! Incorrect date time format. Use dd/mm/yyyy HHmm instead.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":184,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":185,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":185}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":" * This class inherits from the Task class and represents a deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"    /** Deadline of the task */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"        String by \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":" * This class inherits from the Task class and represents an event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"    /** Start date time of the event */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    /** End date time of the event */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"     * @param from Start date time of the event.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"     * @param to End date time of the event.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"        String from \u003d this.from.format(format);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        String to \u003d this.to.format(format);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":" * This class represents a general task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"    /** Description of the task */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"    /** Status of the task */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the description and status of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":44}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":" * This class inherits from the Task class and represents a todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":25}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    public void saveTaskTest(){","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"14/02/2023 1800\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"19/02/2023 1000\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"19/02/2023 1200\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"        Task task1 \u003d new Todo(\"return book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"        Task task2 \u003d new Deadline(\"assignment\", by);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"        Task task3 \u003d new Event(\"project meeting\", from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"        tasks.saveTask(ui, \"return book\");","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"        tasks.saveTask(ui, \"assignment\", by);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"        tasks.saveTask(ui, \"project meeting\", from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(task1.toString(), tasks.getListOfTasks().get(0).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(task2.toString(), tasks.getListOfTasks().get(1).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(task3.toString(), tasks.getListOfTasks().get(2).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"    public void markTaskTest() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"19/02/2023 1000\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"19/02/2023 1200\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Event(\"project meeting\", from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"        tasks.saveTask(ui, \"project meeting\", from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"        tasks.markTask(ui, 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(tasks.getListOfTasks().get(0).getStatusIcon(), \"X\");","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"        task.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(task.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"                \"[E][X] project meeting (from: Feb 19 2023 10:00 AM to: Feb 19 2023 12:00 PM)\");","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"KSunil2001":52}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"    public void toStringTest1(){","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Todo(\"return book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(\"[T][ ] return book\", task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    public void toStringTest2(){","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Todo(\"read book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"        task.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(\"[T][X] read book\", task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(\"[T][ ] read book\", task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"KSunil2001":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"KSunil2001":13}}]
