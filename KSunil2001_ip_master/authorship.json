[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"KSunil2001":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":" * Class for internal components of the chatbot.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    /** Deals with loading tasks from the file and saving tasks in the file */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    /** Contains the task list */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    /** Deals with interactions with the user */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    /** Stores the path of the folder which contains the task file storage */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    private final Path foldPath;","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    /** Stores the path of the task file storage */","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"     * Constructs Duke to make use of the UI,","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"     * Storage and TaskList in the program.","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"    public Duke() {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"        String fileSep \u003d System.getProperty(\"file.separator\");","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"        String userDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"        foldPath \u003d Paths.get( userDir + fileSep + \"data\");","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"        filePath \u003d Paths.get(foldPath + fileSep + \"duke.txt\");","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"        storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"            createFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"     * Creates the folder and file to save and","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"     * load tasks if they do not already exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"    public void createFile() {","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"            if (!Files.isDirectory(foldPath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"                Files.createDirectory(foldPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"            } else if (!Files.exists(filePath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"                throw new IOException();","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"            ui.showFileError();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"     * Generates a response to user input to display.","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"     * @param input Input command from the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"     * @throws DukeException If the tasks cannot be saved to the file.","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"        String response \u003d ui.getMessage().toString();","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"        if (response.isEmpty()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"            Parser p \u003d new Parser(input, ui, tasks, storage);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"            p.parse();","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"            response \u003d ui.getMessage().toString();","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"        ui.clearMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"        assert ui.getMessage().toString().isEmpty() : \"User input should have been cleared\";","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"        return response;","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":85}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":" * This class represents exceptions specific to Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"     * Constructs DukeException.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"    public DukeException() {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"        super();","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":" * This class deals with making sense of the user command.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    /** Deals with loading tasks from the file and saving tasks in the file */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    /** Contains the task list */","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"    /** Deals with interactions with the user */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    /** Contains the command input by the user */","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    private String command;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"     * Constructs Parser to parse the input command from the user.","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"     * @param command Command input by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"     * @param tasks Task operations.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"     * @param storage Storage to save tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"    public Parser(String command, Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"     * Parses the command input by the user and executes it.","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"     * @throws DukeException If the tasks cannot be saved to the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"    public void parse() throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"        String firstWord \u003d command.split(\" \")[0].toLowerCase();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"        switch (firstWord) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"            parseByeCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"            parseListCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"            parseMarkCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"            parseUnmarkCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"            parseDeleteCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"            parseTodoCommand(firstWord);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"            parseDeadlineCommand(firstWord, format);","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"        case \"event\":","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"            parseEventCommand(firstWord, format);","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"        case \"find\":","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"            parseFindCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"        default:","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"            ui.showUnknownError();","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"    private void parseByeCommand() {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"        ui.printGoodBye();","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"    private void parseListCommand() {","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"        String s \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"        ui.listTasks(tasks.getListOfTasks(), s);","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"    private void parseMarkCommand() throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"        int index \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"        tasks.markTask(ui, index);","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"        storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"KSunil2001"},"content":"    private void parseUnmarkCommand() throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"KSunil2001"},"content":"        int index \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"KSunil2001"},"content":"        tasks.unmarkTask(ui, index);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"KSunil2001"},"content":"        storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"KSunil2001"},"content":"    private void parseDeleteCommand() throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"KSunil2001"},"content":"        int index \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"KSunil2001"},"content":"        tasks.deleteTask(ui, index);","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"KSunil2001"},"content":"        storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"KSunil2001"},"content":"    private void parseTodoCommand(String firstWord) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"KSunil2001"},"content":"            String description \u003d command.substring(5);","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"KSunil2001"},"content":"            tasks.saveTask(ui, description);","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"KSunil2001"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"KSunil2001"},"content":"        } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"KSunil2001"},"content":"            ui.showDescriptionError(firstWord);","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"KSunil2001"},"content":"    private void parseDeadlineCommand(String firstWord, DateTimeFormatter format) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"KSunil2001"},"content":"            int byIdx \u003d command.indexOf(\"/by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"KSunil2001"},"content":"            String description \u003d command.substring(9, byIdx - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"KSunil2001"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(command.substring(byIdx + 4), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"KSunil2001"},"content":"            tasks.saveTask(ui, description, by);","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"KSunil2001"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"KSunil2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"KSunil2001"},"content":"            ui.showDateTimeError();","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"KSunil2001"},"content":"        } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"KSunil2001"},"content":"            ui.showDescriptionError(firstWord);","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"KSunil2001"},"content":"    private void parseEventCommand(String firstWord, DateTimeFormatter format) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"KSunil2001"},"content":"            int fromIdx \u003d command.indexOf(\"/from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"KSunil2001"},"content":"            int toIdx \u003d command.indexOf(\"/to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"KSunil2001"},"content":"            String description \u003d command.substring(6, fromIdx - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"KSunil2001"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(command.substring(fromIdx + 6, toIdx - 1), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"KSunil2001"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(command.substring(toIdx + 4), format);","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"KSunil2001"},"content":"            tasks.saveTask(ui, description, from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"KSunil2001"},"content":"            storage.save(tasks.getListOfTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"KSunil2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"KSunil2001"},"content":"            ui.showDateTimeError();","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"KSunil2001"},"content":"        } catch(StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"KSunil2001"},"content":"            ui.showDescriptionError(firstWord);","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"KSunil2001"},"content":"    private void parseFindCommand() {","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"KSunil2001"},"content":"        String description \u003d command.substring(5);","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"KSunil2001"},"content":"        tasks.findTask(ui, description);","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":152}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":" * This class deals with loading tasks from the","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":" * file and saving tasks in the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    /** Path of the task file */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"    private static final int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    private static final int TASK_STATUS_INDEX \u003d 4;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    private static final int TASK_INFO_INDEX \u003d 8;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"    private static final int MAX_SIZE \u003d 100;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the path of the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"     * @param filePath Path of the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"     * Saves the list of tasks to the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"     * @throws DukeException If the tasks cannot be saved to the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"    public void save(ArrayList\u003cTask\u003e listOfTasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"            for (Task task : listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"                String stringTask \u003d rewriteStringTask(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"                fw.write(stringTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"            fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"    public String rewriteStringTask(Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"        String str \u003d task.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"        str \u003d str.replace(\"[ ]\", \" | 0 |\");","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"        str \u003d str.replace(\"[X]\", \" | 1 |\");","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"        str \u003d str.replace(\"[\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"        str \u003d str.replace(\"]\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"        if (str.startsWith(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"            str \u003d str.replace(\"(by:\", \"|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"            str \u003d str.replace(\")\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"        if (str.startsWith(\"E\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"            str \u003d str.replace(\"(from:\", \"|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"            str \u003d str.replace(\" to: \", \" - \");","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"            str \u003d str.replace(\")\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"        str \u003d str + \"\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"        return str;","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"     * Returns the tasks from the task file.","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"     * @return Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"     * @throws DukeException If the file was not found or has incorrect date time format or has unrecognized tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e(MAX_SIZE);","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"KSunil2001"},"content":"                String stringTask \u003d s.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"KSunil2001"},"content":"                Task task \u003d readTask(stringTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"KSunil2001"},"content":"                listOfTasks.add(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"KSunil2001"},"content":"                assert listOfTasks.get(listOfTasks.size() - 1) \u003d\u003d task : \"Task should be added to the task list\";","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"KSunil2001"},"content":"        } catch (FileNotFoundException | DateTimeParseException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"KSunil2001"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"KSunil2001"},"content":"        return listOfTasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"KSunil2001"},"content":"    public Task readTask(String stringTask) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"KSunil2001"},"content":"        Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"KSunil2001"},"content":"        String taskInfo \u003d stringTask.substring(TASK_INFO_INDEX);","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"KSunil2001"},"content":"        switch (stringTask.charAt(TASK_TYPE_INDEX)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"KSunil2001"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"KSunil2001"},"content":"            task \u003d loadTodo(taskInfo);","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"KSunil2001"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"KSunil2001"},"content":"            task \u003d loadDeadline(taskInfo, format);","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"KSunil2001"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"KSunil2001"},"content":"            task \u003d loadEvent(taskInfo, format);","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"KSunil2001"},"content":"            break;","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"KSunil2001"},"content":"        default:","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"KSunil2001"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"KSunil2001"},"content":"        if (stringTask.charAt(TASK_STATUS_INDEX) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"KSunil2001"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"KSunil2001"},"content":"        return task;","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"KSunil2001"},"content":"    public Task loadTodo(String taskInfo) {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"KSunil2001"},"content":"        return new Todo(taskInfo);","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"KSunil2001"},"content":"    public Task loadDeadline(String taskInfo, DateTimeFormatter format) throws DateTimeParseException {","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"KSunil2001"},"content":"        int byIdx \u003d taskInfo.indexOf(\"|\");","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"KSunil2001"},"content":"        String description \u003d taskInfo.substring(0, byIdx - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(taskInfo.substring(byIdx + 2), format);","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"KSunil2001"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"KSunil2001"},"content":"    public Task loadEvent(String taskInfo, DateTimeFormatter format) throws DateTimeParseException {","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"KSunil2001"},"content":"        int fromIdx \u003d taskInfo.indexOf(\"|\");","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"KSunil2001"},"content":"        int toIdx \u003d taskInfo.indexOf(\"-\");","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"KSunil2001"},"content":"        String description \u003d taskInfo.substring(0, fromIdx - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(taskInfo.substring(fromIdx + 2, toIdx - 1), format);","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(taskInfo.substring(toIdx + 2), format);","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"KSunil2001"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":162}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":" * This class represents the task operations.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    /** Array list of tasks */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"    private static final int MAX_SIZE \u003d 100;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the list of tasks to read,","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"     * write and save tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"        this.listOfTasks \u003d listOfTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"        assert listOfTasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e(MAX_SIZE);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"     * Saves the task to the list of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"     * and prints it.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"    public void saveTask(Ui ui, String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"        assert listOfTasks.get(listOfTasks.size() - 1) \u003d\u003d task : \"Task should be added to the task list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"        ui.printSaveTask(task, listOfTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"    public void saveTask(Ui ui, String description, LocalDateTime by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"        assert listOfTasks.get(listOfTasks.size() - 1) \u003d\u003d task : \"Task should be added to the task list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"        ui.printSaveTask(task, listOfTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"     * @param from Start date time of the event.","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"     * @param to End date time of the event.","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"    public void saveTask(Ui ui, String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"        assert listOfTasks.get(listOfTasks.size() - 1) \u003d\u003d task : \"Task should be added to the task list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"        ui.printSaveTask(task, listOfTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"     * Marks the task as done and prints it.","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"     * @param index Index of the array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"    public void markTask(Ui ui, int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"            assert task.getStatusIcon().equals(\"X\") : \"Task should be marked as done\";","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"            ui.printMarkTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"            ui.showIndexError(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"     * Marks the task as undone and prints it.","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"KSunil2001"},"content":"     * @param index Index of the array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"KSunil2001"},"content":"    public void unmarkTask(Ui ui, int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"KSunil2001"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"KSunil2001"},"content":"            assert task.getStatusIcon().equals(\" \") : \"Task should be marked as undone\";","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"KSunil2001"},"content":"            ui.printUnmarkTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"KSunil2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"KSunil2001"},"content":"            ui.showIndexError(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"KSunil2001"},"content":"     * Deletes the task and prints it.","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"KSunil2001"},"content":"     * @param index Index of the array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"KSunil2001"},"content":"    public void deleteTask(Ui ui, int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"KSunil2001"},"content":"            listOfTasks.remove(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"KSunil2001"},"content":"            assert listOfTasks.get(listOfTasks.size() - 1) !\u003d task : \"Task should be deleted from the task list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"KSunil2001"},"content":"            ui.printDeleteTask(task, listOfTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"KSunil2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"KSunil2001"},"content":"            ui.showIndexError(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"KSunil2001"},"content":"     * Finds and prints the tasks with the matching keyword.","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"KSunil2001"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"KSunil2001"},"content":"     * @param keyword Keyword of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"KSunil2001"},"content":"    public void findTask(Ui ui, String keyword) {","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"KSunil2001"},"content":"        ArrayList\u003cTask\u003e matchedListOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"KSunil2001"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"KSunil2001"},"content":"            assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"KSunil2001"},"content":"            boolean isMatchingTask \u003d task.toString().indexOf(keyword) \u003e 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"KSunil2001"},"content":"            if (isMatchingTask) {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"KSunil2001"},"content":"                matchedListOfTasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"KSunil2001"},"content":"                assert matchedListOfTasks.get(matchedListOfTasks.size() - 1) \u003d\u003d task :","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"KSunil2001"},"content":"                        \"Matched task should be added to the matched task list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"KSunil2001"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"KSunil2001"},"content":"        String s \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"KSunil2001"},"content":"        ui.listTasks(matchedListOfTasks, s);","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"KSunil2001"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"KSunil2001"},"content":"        return listOfTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":150}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":" * This class deals with interactions with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    /** Stores the message to respond to the user\u0027s input */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"    private StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"     * Stores the welcome message in message attribute.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"    public void printWelcome() {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"Hello! I\u0027m C-3PO, Human Cyborg Relations.\\nWhat can I do for you?\");","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"     * Stores the goodbye message in message attribute.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    public void printGoodBye() {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"     * Stores the list of tasks in message attribute.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"     * @param s String to append to message.","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"    public void listTasks(ArrayList\u003cTask\u003e listOfTasks, String s) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"        message.append(s);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"        for (int i \u003d 1; i \u003c\u003d listOfTasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"            Task task \u003d listOfTasks.get(i - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"            message.append(\"\\n\" + i + \".\" + task);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"     * Stores the task that was saved in message attribute.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"     * @param task Task that was saved.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"    public void printSaveTask(Task task, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\n  \" + task);","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\nNow you have \" + listOfTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"     * Stores the task that was marked as done in message attribute.","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"     * @param task Task that was marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"    public void printMarkTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\n  \" + task);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"     * Stores the task that was marked as not done in message attribute.","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"     * @param task Task that was unmarked.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"    public void printUnmarkTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\n  \" + task);","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"KSunil2001"},"content":"     * Stores the task that was deleted in message attribute.","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"KSunil2001"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"KSunil2001"},"content":"     * @param listOfTasks Array list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"KSunil2001"},"content":"    public void printDeleteTask(Task task, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\n  \" + task);","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\nNow you have \" + listOfTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"KSunil2001"},"content":"     * Stores the error in message attribute","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"KSunil2001"},"content":"     * when the data could not be loaded.","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"KSunil2001"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"Creating new file to store tasks due to a loading error ...\");","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\nWARNING!!! Continuing with the program will reset the contents of \");","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\nthe original file (if it exists).\");","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"\\nExit the program if you do not wish to continue (enter \u0027bye\u0027)\");","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"KSunil2001"},"content":"     * Stores the error in message attribute","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"KSunil2001"},"content":"     * when file or folder could not be created.","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"KSunil2001"},"content":"    public void showFileError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"Error occurred when creating the folder/file.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"KSunil2001"},"content":"     * Stores error message in message attribute for unknown command.","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"KSunil2001"},"content":"    public void showUnknownError() {","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"KSunil2001"},"content":"     * Stores error message in message attribute for empty task description.","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"KSunil2001"},"content":"    public void showDescriptionError(String task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"OOPS!!! The description of \" + task + \" task cannot be empty.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"KSunil2001"},"content":"     * Stores error message in message attribute for out of bounds index.","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"KSunil2001"},"content":"    public void showIndexError(int index) {","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"OOPS!!! The index \" + index + \" for the list of tasks is out of bounds.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"KSunil2001"},"content":"     * Stores error message in message attribute for incorrect date time format.","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"KSunil2001"},"content":"    public void showDateTimeError() {","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"KSunil2001"},"content":"        message.append(\"OOPS!!! Incorrect date time format. Use dd/mm/yyyy HHmm instead.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"KSunil2001"},"content":"    public StringBuilder getMessage() {","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"KSunil2001"},"content":"        return message;","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"KSunil2001"},"content":"     * Clears the message attribute to reset it.","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"KSunil2001"},"content":"    public void clearMessage() {","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"KSunil2001"},"content":"        message.setLength(0);","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":143}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.gui;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"    private void flip() {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"        db.flip();","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"        return db;","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"KSunil2001":61}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.gui;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"public class Launcher {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"KSunil2001":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.gui;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke, ui);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWelcomeMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"            stage.show();","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"KSunil2001":37}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.gui;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"    private static final int DELAY \u003d 2;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/r2d2.png\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/c3po.png\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"    public void setDuke(Duke duke, Ui ui) {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"    public void setWelcomeMessage() {","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"        ui.printWelcome();","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"                DialogBox.getDukeDialog(ui.getMessage().toString(), dukeImage));","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"KSunil2001"},"content":"        ui.clearMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"KSunil2001"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"KSunil2001"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"KSunil2001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"KSunil2001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"KSunil2001"},"content":"    @FXML","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"KSunil2001"},"content":"    private void handleUserInput() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"KSunil2001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"KSunil2001"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"KSunil2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"KSunil2001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"KSunil2001"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"KSunil2001"},"content":"        );","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"KSunil2001"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        //@@author amoonguss1-reused","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/amoonguss1/ip/commit/d94530b862bc089f5c2d1025fb5737b06283cae6","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(DELAY));","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            delay.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            delay.play();","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"-":9,"KSunil2001":75}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":" * This class inherits from the Task class and represents a deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"    /** Deadline of the task */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"        String by \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":" * This class inherits from the Task class and represents an event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"    /** Start date time of the event */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    /** End date time of the event */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"     * @param from Start date time of the event.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"     * @param to End date time of the event.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"        String from \u003d this.from.format(format);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        String to \u003d this.to.format(format);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":" * This class represents a general task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"    /** Description of the task */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"    /** Status of the task */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the description and status of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":44}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":" * This class inherits from the Task class and represents a todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"     * Initializes the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"KSunil2001":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"73.0\" prefWidth\u003d\"515.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"KSunil2001":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" AnchorPane.topAnchor\u003d\"557.8571428571429\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.8571428571428541\" AnchorPane.leftAnchor\u003d\"324.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"558.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.85714285714289\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"KSunil2001":19}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"    public void saveTaskTest(){","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"14/02/2023 1800\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"19/02/2023 1000\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"19/02/2023 1200\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"        Task task1 \u003d new Todo(\"return book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"KSunil2001"},"content":"        Task task2 \u003d new Deadline(\"assignment\", by);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"KSunil2001"},"content":"        Task task3 \u003d new Event(\"project meeting\", from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"KSunil2001"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"KSunil2001"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"KSunil2001"},"content":"        tasks.saveTask(ui, \"return book\");","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"KSunil2001"},"content":"        tasks.saveTask(ui, \"assignment\", by);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"KSunil2001"},"content":"        tasks.saveTask(ui, \"project meeting\", from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(task1.toString(), tasks.getListOfTasks().get(0).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(task2.toString(), tasks.getListOfTasks().get(1).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(task3.toString(), tasks.getListOfTasks().get(2).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"KSunil2001"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"KSunil2001"},"content":"    public void markTaskTest() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"KSunil2001"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"19/02/2023 1000\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"KSunil2001"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"19/02/2023 1200\", format);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Event(\"project meeting\", from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"KSunil2001"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"KSunil2001"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"KSunil2001"},"content":"        tasks.saveTask(ui, \"project meeting\", from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"KSunil2001"},"content":"        tasks.markTask(ui, 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(tasks.getListOfTasks().get(0).getStatusIcon(), \"X\");","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"KSunil2001"},"content":"        task.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(task.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"KSunil2001"},"content":"                \"[E][X] project meeting (from: Feb 19 2023 10:00 AM to: Feb 19 2023 12:00 PM)\");","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"KSunil2001":52}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"    public void toStringTest1(){","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Todo(\"return book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(\"[T][ ] return book\", task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"KSunil2001"},"content":"    public void toStringTest2(){","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"KSunil2001"},"content":"        Task task \u003d new Todo(\"read book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"KSunil2001"},"content":"        task.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(\"[T][X] read book\", task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"KSunil2001"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"KSunil2001"},"content":"        assertEquals(\"[T][ ] read book\", task.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"KSunil2001"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"KSunil2001"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"KSunil2001":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KSunil2001"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"KSunil2001"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"KSunil2001"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"KSunil2001"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"KSunil2001"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"KSunil2001"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"KSunil2001"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"KSunil2001"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"KSunil2001"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"KSunil2001"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"KSunil2001"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"KSunil2001"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"KSunil2001"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"KSunil2001":13}}]
