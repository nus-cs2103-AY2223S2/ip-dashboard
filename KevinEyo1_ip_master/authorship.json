[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"D | 0 | acs | 2019-12-01 10:15","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"KevinEyo1":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalDate byDate \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalTime byTime \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"        // eg. 2019-12-01 10:15","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"        String[] strs \u003d by.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        this.byDate \u003d LocalDate.parse(strs[0]);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        if (strs.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"            this.byTime \u003d LocalTime.parse(strs[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"    public String storageStr() {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"        return \"D | \" + super.getStatusValue() + \" | \" + super.description","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"                + \" | \" + this.byDate + (this.byTime !\u003d null? \" \" + this.byTime : \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"        String result \u003d \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"                + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        if (byTime !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"            result \u003d result + \" \" + byTime.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        return result + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":36}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import java.sql.Array;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import java.util.List;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    private static ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    private static File f \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    private static String pad(String val) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        return \"---------------------------\\n\" + val + \"\\n---------------------------\";","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    private static String storageToStr() {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"            result +\u003d storage.get(i).storageStr();","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"            result +\u003d \"\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        return result;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    private static void loadDukeList(String filePath) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"                // convert text to Task","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"                String[] input \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"                String type \u003d input[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"                String mark \u003d input[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"                Task x \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"                    x \u003d new Todo(input[2]);","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"                    x \u003d new Deadline(input[2], input[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"                    x \u003d new Event(input[2], input[3], input[4]);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"                if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"                    x.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"                storage.add(x);","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"            loadDukeList(\"data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"        System.out.println(logo + \"Hello! I\u0027m Duke. How may I be of assistance?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"        String str \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"        while (true){","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"            String[] cmdDetails \u003d str.split(\" \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"            String cmd \u003d cmdDetails[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"            String details \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"            if (str.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"                // exit","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"            if (str.equals(\"list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"                // list tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"KevinEyo1"},"content":"                System.out.println(\"---------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"                if (storage.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"                    System.out.println(\"No tasks added yet.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"KevinEyo1"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"                    for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"                        System.out.println(Integer.toString(i + 1) + \". \" + storage.get(i).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"KevinEyo1"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"                System.out.println(\"---------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"                str \u003d sc.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"KevinEyo1"},"content":"                continue;","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"KevinEyo1"},"content":"            int len \u003d cmdDetails.length;","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"            if (len \u003e 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"                details \u003d cmdDetails[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"KevinEyo1"},"content":"                if (cmd.equals(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"KevinEyo1"},"content":"                    if (storage.isEmpty() || len \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"KevinEyo1"},"content":"                        throw new DukeException(\"Unable to mark.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"KevinEyo1"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"                    // mark task as done","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"KevinEyo1"},"content":"                    Task curr \u003d storage.get(Integer.valueOf(details) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"KevinEyo1"},"content":"                    System.out.println(pad(curr.outputMarked() + curr.toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"KevinEyo1"},"content":"                } else if (cmd.equals(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"KevinEyo1"},"content":"                    if (storage.isEmpty() || len \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"KevinEyo1"},"content":"                        throw new DukeException(\"Unable to unmark.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"KevinEyo1"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"KevinEyo1"},"content":"                    // mark task as undone","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"KevinEyo1"},"content":"                    Task curr \u003d storage.get(Integer.valueOf(details) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"KevinEyo1"},"content":"                    System.out.println(pad(curr.outputUnmarked() + curr.toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"KevinEyo1"},"content":"                } else if (cmd.equals(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"KevinEyo1"},"content":"                    if (len \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"KevinEyo1"},"content":"                        throw new DukeException(\"Description of todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"KevinEyo1"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"KevinEyo1"},"content":"                    Todo addition \u003d new Todo(details);","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"KevinEyo1"},"content":"                    storage.add(addition);","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"KevinEyo1"},"content":"                    System.out.println(pad(\"Understood. I have added the task:\\n\" + addition.toString()","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"KevinEyo1"},"content":"                            + \"\\nThere are now \" + Integer.toString(storage.size()) + \" task(s) in the list.\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"KevinEyo1"},"content":"                } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"KevinEyo1"},"content":"                    String[] temp \u003d details.split(\" /by \");","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"KevinEyo1"},"content":"                    if (len \u003d\u003d 1 || temp.length !\u003d 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"KevinEyo1"},"content":"                        throw new DukeException(\"Description of deadline cannot be incomplete.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"KevinEyo1"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"KevinEyo1"},"content":"                    Deadline addition \u003d new Deadline(temp[0], temp[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"KevinEyo1"},"content":"                    storage.add(addition);","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"KevinEyo1"},"content":"                    System.out.println(pad(\"Understood. I have added the task:\\n\" + addition.toString()","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"KevinEyo1"},"content":"                            + \"\\nThere are now \" + Integer.toString(storage.size()) + \" task(s) in the list.\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"KevinEyo1"},"content":"                } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"KevinEyo1"},"content":"                    String[] temp \u003d details.split(\" /from \");","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"KevinEyo1"},"content":"                    if (len \u003d\u003d 1 || temp.length !\u003d 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"KevinEyo1"},"content":"                        throw new DukeException(\"Description of event cannot be incomplete.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"KevinEyo1"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"KevinEyo1"},"content":"                    String[] temp2 \u003d temp[1].split(\" /to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"KevinEyo1"},"content":"                    if (temp2.length !\u003d 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"KevinEyo1"},"content":"                        throw new DukeException(\"Description of event cannot be incomplete.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"KevinEyo1"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"KevinEyo1"},"content":"                    Event addition \u003d new Event(temp[0], temp2[0], temp2[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"KevinEyo1"},"content":"                    storage.add(addition);","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"KevinEyo1"},"content":"                    System.out.println(pad(\"Understood. I have added the task:\\n\" + addition.toString()","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"KevinEyo1"},"content":"                            + \"\\nThere are now \" + Integer.toString(storage.size()) + \" task(s) in the list.\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"KevinEyo1"},"content":"                } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"KevinEyo1"},"content":"                    if (storage.isEmpty() || len \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"KevinEyo1"},"content":"                        throw new DukeException(\"Unable to delete.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"KevinEyo1"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"KevinEyo1"},"content":"                    Task curr \u003d storage.get(Integer.valueOf(details) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"KevinEyo1"},"content":"                    storage.remove(Integer.valueOf(details) - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"KevinEyo1"},"content":"                    System.out.println(pad(\"Noted. I have removed the task:\\n\" + curr.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"KevinEyo1"},"content":"                            + \"\\nThere are now \" + Integer.toString(storage.size()) + \" task(s) in the list.\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"KevinEyo1"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"KevinEyo1"},"content":"                else {","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"KevinEyo1"},"content":"                    throw new DukeException(\"I do not quite understand that.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"KevinEyo1"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"KevinEyo1"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"KevinEyo1"},"content":"                System.out.println(pad(err.getMessage()));","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"KevinEyo1"},"content":"            str \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":167,"author":{"gitId":"KevinEyo1"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"KevinEyo1"},"content":"            fw.write(storageToStr());","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"KevinEyo1"},"content":"            fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"KevinEyo1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"KevinEyo1"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":172,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"KevinEyo1"},"content":"        System.out.println(pad(\"Thank you for your patronage. Goodbye!\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":169,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"    public DukeException(String err) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"        super(err);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"KevinEyo1":5}},{"path":"src/main/java/DukeFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"public class DukeFile {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"    private static File f;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"    private static String filePath;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    public DukeFile(String filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"        DukeFile.filePath \u003d filePath;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"            f \u003d new File(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"            System.out.println(\"Error:\" + e.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    public static File getFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        return f;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"KevinEyo1":27}},{"path":"src/main/java/DukeReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"public class DukeReader {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"    private static ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    private static void loadDukeList(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"        DukeFile f \u003d new DukeFile(filePath); // create a File for the given file path","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"        Scanner s \u003d new Scanner(DukeFile.getFile()); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"            // convert text to Task","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"            String[] input \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"            String type \u003d input[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"            String mark \u003d input[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"            Task x \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"                x \u003d new Todo(input[2]);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"                x \u003d new Deadline(input[2], input[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"                x \u003d new Event(input[2], input[3], input[4]);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"            if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"                x.mark();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"            storage.add(x);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    public static ArrayList\u003cTask\u003e retrieveDukeList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        return storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"            loadDukeList(\"../../../../data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"            System.out.println(\"No saved data.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"KevinEyo1":43}},{"path":"src/main/java/DukeWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"public class DukeWriter {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"    private static String tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"    public DukeWriter(String tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"        DukeWriter.tasks \u003d tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    private static void writeToFile(String filePath, String tasks) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        fw.write(tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"        String filePath \u003d \"../../../../data/duke.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"            writeToFile(filePath, tasks);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"KevinEyo1":27}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalDate fromDate, toDate \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalTime fromTime, toTime \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"        // eg. 2019-12-01 10:15","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"        String[] fromStrs \u003d from.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"        this.fromDate \u003d LocalDate.parse(fromStrs[0]);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        if (fromStrs.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"            this.fromTime \u003d LocalTime.parse(fromStrs[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"        String[] toStrs \u003d to.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"        this.toDate \u003d LocalDate.parse(toStrs[0]);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        if (toStrs.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"            this.toTime \u003d LocalTime.parse(toStrs[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    public String storageStr() {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        return \"E | \" + super.getStatusValue() + \" | \" + super.description","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"                + \" | \" + this.fromDate + (this.fromTime !\u003d null? \" \" + this.fromTime : \"\")","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"                + \" | \" + this.toDate + (this.toTime !\u003d null? \" \" + this.toTime : \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        String result \u003d  \"[E]\" + super.toString() + \" (from: \" + fromDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        if (fromTime !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"            result \u003d result + \" \" + fromTime.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        result +\u003d \" to: \";","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        if (toTime !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"            result \u003dresult + \" \" + toTime.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"        return result +\u003d \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":44}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"    public abstract String storageStr();","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    public String getStatusValue() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with 1","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    public String outputMarked() {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        return \"Well done. I\u0027ve marked this tasked as done:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    public String outputUnmarked() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        return \"Noted. I\u0027ve marked this tasked as undone:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    public void mark() {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":37}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"    public String storageStr() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"        return \"T | \" + super.getStatusValue() + \" | \" + super.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"invalid","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"todo shopping","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"deadline homework /by Monday","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"event camping /from Tuesday /to Wednesday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"unmark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KevinEyo1":1,"-":20}}]
