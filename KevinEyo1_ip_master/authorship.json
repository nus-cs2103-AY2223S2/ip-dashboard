[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"# reborn.Reborn project template","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"3. After that, locate the `src/main/java/reborn.Reborn.java` file, right-click it, and choose `Run reborn.Reborn.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"KevinEyo1":2,"-":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"    mainClassName \u003d \"reborn.Launcher\"","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"    archiveBaseName \u003d \"reborn\"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"### Logs tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"Can add or delete tasks and save them for later loading.","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"### Mark and Unmark Tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"Mark done tasks and unmark tasks not done.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"### Find Tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"Find certain tasks based on given keywords.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"### List Tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"Look at entire list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"### `todo` - Add todo task","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"Provide task name as input to create a todo task.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"`todo run`","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"Creates a new todo task","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"I\u0027ll help add this for now:","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"[T][ ] run","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"Take your 1 task(s)!","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"### `deadline` - Add deadline task","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"Provide task name as input to create a deadline task.","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"Example of usage:","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"`deadline run /by 2023-12-12`","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"Creates a new deadline task","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"I\u0027ll help add this for now:","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"[D][ ] run (by: Dec 12 2023)","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"Take your 1 task(s)!","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"### `event` - Add event task","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"Provide task name as input to create an event task.","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"Example of usage:","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"`event run /from 2023-12-11 /to 2023-12-12`","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"Creates a new todo task","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"I\u0027ll help add this for now:","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"[E][ ] run (from: 2023-12-11 to: 2023-12-12)","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"Take your 1 task(s)!","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"### `delete` - Delete task","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"Provide index of task to delete.","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"Example of usage:","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"`delete 1`","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"Deletes the task at given index.","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"Less stuff for me to keep note hehe, removed:","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"KevinEyo1"},"content":"[T][ ] run","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"Take your 0 task(s)!","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"KevinEyo1"},"content":"### `mark` - Marks task","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"Provide index of task to mark as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"Example of usage:","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"`mark 1`","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"KevinEyo1"},"content":"Marks the task at given index.","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"KevinEyo1"},"content":"You finally did it huh:","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"[T][X] run","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"KevinEyo1"},"content":"### `unmark` - Unmarks task","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"KevinEyo1"},"content":"Provide index of task to mark as undone.","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"KevinEyo1"},"content":"Example of usage:","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"KevinEyo1"},"content":"`unmark 1`","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"KevinEyo1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"KevinEyo1"},"content":"Unmarks the task at given index.","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"KevinEyo1"},"content":"How did you end up undoing this:","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"KevinEyo1"},"content":"[T][ ] run","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"KevinEyo1"},"content":"### `find` - Find specific tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"KevinEyo1"},"content":"Provide keyword as input to find tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"KevinEyo1"},"content":"`find run`","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"KevinEyo1"},"content":"Find all tasks with the keyword run.","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":142,"author":{"gitId":"KevinEyo1"},"content":"Here you go, now stop wasting my time:","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"KevinEyo1"},"content":"1. [T][X] run","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":145,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"KevinEyo1"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"KevinEyo1"},"content":"Displays entire list of tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"KevinEyo1"},"content":"Example of usage:","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"KevinEyo1"},"content":"`list`","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"KevinEyo1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"KevinEyo1"},"content":"Lists all tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"KevinEyo1"},"content":"1. [T][ ] run","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"KevinEyo1"},"content":"2. [D][ ] swim (by: Dec 12 2023)","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"KevinEyo1"},"content":"3. [E][X] fly (from: 2023-12-11 to: 2023-12-12)","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"KevinEyo1"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"KevinEyo1"},"content":"### `bye` - Ends the program","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"KevinEyo1"},"content":"Ends the Reborn program by saving tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"KevinEyo1"},"content":"Example of usage:","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"KevinEyo1"},"content":"`bye`","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"KevinEyo1"},"content":"Displays goodbye message and saves tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"KevinEyo1"},"content":"Tasks saved. Now get out of here!","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"KevinEyo1":147,"-":31}},{"path":"src/main/java/reborn/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"KevinEyo1":12}},{"path":"src/main/java/reborn/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.MainWindow;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    private Reborn reborn \u003d new Reborn();","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    public Main() throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(reborn);","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"            stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"KevinEyo1":37}},{"path":"src/main/java/reborn/Reborn.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.Command;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.parser.Parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" * Represents Duke application.","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"public class Reborn {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException If loading of saved tasks fails.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    public Reborn() throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        storage \u003d new Storage(\"src/main/java/reborn/data/reborn.txt\");","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        } catch (RebornException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":45}},{"path":"src/main/java/reborn/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Deadline;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Adds deadline task to TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    private String details;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for add deadline command.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     * @param details Description of deadline task.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * @param by Deadline of deadline task.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    public AddDeadlineCommand(String details, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        Deadline addition \u003d new Deadline(this.details, this.by);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        tasks.add(addition);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        String response \u003d ui.showAddTask(addition) + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        response +\u003d ui.showTaskCount(tasks.size());","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        return response;","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":43}},{"path":"src/main/java/reborn/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Event;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Adds event task to TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    private String details;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    private String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    private String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for add event command.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * @param details Description of event task.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     * @param from Start of event task.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     * @param to End of event task.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    public AddEventCommand(String details, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        Event addition \u003d new Event(this.details, this.from, this.to);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        tasks.add(addition);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"        String response \u003d ui.showAddTask(addition) + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"        response +\u003d ui.showTaskCount(tasks.size());","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"        return response;","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":46}},{"path":"src/main/java/reborn/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Todo;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Adds to do task to TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    private String details;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public AddTodoCommand(String details) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"        Todo addition \u003d new Todo(details);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        tasks.add(addition);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        String response \u003d ui.showAddTask(addition) + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        response +\u003d ui.showTaskCount(tasks.size());","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        return response;","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":34}},{"path":"src/main/java/reborn/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":" * Represents an executable command.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     * @return Command execution string.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * Checks if command is an exit command","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"     * @return boolean stating if command is an exit command","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":32}},{"path":"src/main/java/reborn/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Deletes indexed task from TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    private int index;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public DeleteCommand(String details) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        this.index \u003d Integer.valueOf(details);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"            throw new RebornException(\"Unable to delete.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        Task curr \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        String response \u003d ui.showDeleteTask(curr) + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        response +\u003d ui.showTaskCount(tasks.size());","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        return response;","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":37}},{"path":"src/main/java/reborn/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":" * Exits Duke after saving state.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        storage.save(tasks.tasksToStr());","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":31}},{"path":"src/main/java/reborn/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":" * Finds specific tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    private String findString;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for find command.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * @param findString String to find in tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    public FindCommand(String findString) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        this.findString \u003d findString;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        return ui.showMatchingTasks(tasks.filterTasks(this.findString));","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"KevinEyo1":35}},{"path":"src/main/java/reborn/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":" * Lists all tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        return ui.showAllTasks(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":23}},{"path":"src/main/java/reborn/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Marks task as done.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    private int index;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public MarkCommand(String value) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        this.index \u003d Integer.valueOf(value);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"            throw new RebornException(\"Unable to mark.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        Task curr \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        return ui.showMarked(curr);","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":35}},{"path":"src/main/java/reborn/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.command;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import reborn.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Unmarks task that is done","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    private int index;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    public UnmarkCommand(String value) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"        this.index \u003d Integer.valueOf(value);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     * Executes the command given by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks   to be modified","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     * @param ui      to display changes","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * @param storage to interact with as necessary","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     * @return Response string.","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"            throw new RebornException(\"Unable to unmark.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        Task curr \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        return ui.showUnmarked(curr);","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":35}},{"path":"src/main/java/reborn/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.data;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":" * Represents a task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks Tasks to create TaskList.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"        super(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for empty task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"     * Produces string representation of tasks for saving.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"     * @return String to be stored in Storage.","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"    public String tasksToStr() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"            result +\u003d get(i).storageStr();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"            result +\u003d System.lineSeparator();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        return result;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"     * Filters TaskList for tasks containing a string.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"     * @param findString String to check with.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"     * @return ArrayList of tasks that contain the string.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"    public ArrayList\u003cTask\u003e filterTasks(String findString) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"            if (this.get(i).contains(findString)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"                result.add(this.get(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"        assert result.size() \u003c this.size() : \"filtered tasks should be less than total tasks\";","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"        return result;","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"KevinEyo1":59}},{"path":"src/main/java/reborn/data/exception/RebornException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.data.exception;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":" * Represents a Duke application exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"public class RebornException extends Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"    public RebornException(String err) {","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"        super(err);","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"KevinEyo1":10}},{"path":"src/main/java/reborn/data/reborn.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"T | 1 | dniandw","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"KevinEyo1":1}},{"path":"src/main/java/reborn/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.data.task;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    /** Deadline date */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalDate byDate \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    /** Deadline time */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalTime byTime \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for deadline task.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * @param by Deadline of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        // eg. 2019-12-01 10:15","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        String[] strs \u003d by.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        this.byDate \u003d LocalDate.parse(strs[0]);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        if (strs.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"            this.byTime \u003d LocalTime.parse(strs[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"     * String representation of task for storage.","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of task to store.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"    public String storageStr() {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        return \"D | \" + super.getStatusValue() + \" | \" + super.description","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"                + \" | \" + this.byDate + (this.byTime !\u003d null ? \" \" + this.byTime : \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"     * String representation of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        String result \u003d \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"                + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"        if (byTime !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"            result \u003d result + \" \" + byTime.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"        return result + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":58}},{"path":"src/main/java/reborn/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.data.task;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":" * Represents an event task.","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalDate fromDate \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalTime fromTime \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalDate toDate \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    protected LocalTime toTime \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor of event task.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"     * @param from Start of event.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     * @param to End of event.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        // eg. 2019-12-01 10:15","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        String[] fromStrs \u003d from.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        this.fromDate \u003d LocalDate.parse(fromStrs[0]);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"        if (fromStrs.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"            this.fromTime \u003d LocalTime.parse(fromStrs[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"        String[] toStrs \u003d to.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        this.toDate \u003d LocalDate.parse(toStrs[0]);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        if (toStrs.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"            this.toTime \u003d LocalTime.parse(toStrs[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"     * String representation of task for storage.","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of task to store.","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"    public String storageStr() {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"        return \"E | \" + super.getStatusValue() + \" | \" + super.description","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"                + \" | \" + this.fromDate + (this.fromTime !\u003d null ? \" \" + this.fromTime : \"\")","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"                + \" | \" + this.toDate + (this.toTime !\u003d null ? \" \" + this.toTime : \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"     * String representation of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"        String result \u003d \"[E]\" + super.toString() + \" (from: \" + fromDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        if (fromTime !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"            result \u003d result + \" \" + fromTime.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"        result \u003d result + \" to: \" + toDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"        if (toTime !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"            result \u003d result + \" \" + toTime.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"        return result +\u003d \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":68}},{"path":"src/main/java/reborn/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.data.task;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":" * Represents a task.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for task.","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"     * @param description Description of what the task is.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     * String representation of task for storage.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of task to store.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    public abstract String storageStr();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"     * Checks status of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of status.","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"     * Checks status of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of status.","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"    public String getStatusValue() {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with 1","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"     * Marks and displays marked.","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of marked.","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"    public String outputMarked() {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"        return \"You finally did it huh:\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"     * Unmarks and displays unmarked.","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of unmarked.","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"    public String outputUnmarked() {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"        return \"How did you end up undoing this:\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"    public void mark() {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"     * Checks if task description contains given string.","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"     * @param string String to check with.","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"     * @return Boolean whether task description contains string.","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"    public boolean contains(String string) {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"        return this.description.contains(string);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"     * String representation of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":89}},{"path":"src/main/java/reborn/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.data.task;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":" * Represents a to-do task.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"     * String representation of task for storage.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of task to store.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    public String storageStr() {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"        return \"T | \" + super.getStatusValue() + \" | \" + super.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * String representation of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * @return String of task.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":31}},{"path":"src/main/java/reborn/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.AddDeadlineCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.AddEventCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.AddTodoCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.Command;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.DeleteCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.ExitCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.FindCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.ListCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.MarkCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import reborn.command.UnmarkCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":" * Represents command parser.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"     * Parses given command, initialising appropriate command.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * @param fullCommand String of full command.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     * @return Command initialised as appropriate.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException If invalid commands.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    public static Command parse(String fullCommand) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"        String[] cmdDetails \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        String cmd \u003d cmdDetails[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        String details \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        if (fullCommand.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"        int len \u003d cmdDetails.length;","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        if (len \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"            details \u003d cmdDetails[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"        if (cmd.equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"                throw new RebornException(\"Can\u0027t mark.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"            return new MarkCommand(details);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"        } else if (cmd.equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"                throw new RebornException(\"Can\u0027t unmark.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"            return new UnmarkCommand(details);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"        } else if (cmd.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"                throw new RebornException(\"Description of todo can\u0027t be empty.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"            return new AddTodoCommand(details);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"        } else if (cmd.equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"            String[] temp \u003d details.split(\" /by \");","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"            if (len \u003d\u003d 1 || temp.length !\u003d 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"                throw new RebornException(\"Description of deadline can\u0027t be incomplete.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"            return new AddDeadlineCommand(temp[0], temp[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"        } else if (cmd.equals(\"event\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"            String[] temp \u003d details.split(\" /from \");","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"            if (len \u003d\u003d 1 || temp.length !\u003d 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"                throw new RebornException(\"Description of event can\u0027t be incomplete.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"            String[] temp2 \u003d temp[1].split(\" /to \");","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"            if (temp2.length !\u003d 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"                throw new RebornException(\"Description of event can\u0027t be incomplete.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"            return new AddEventCommand(temp[0], temp2[0], temp2[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"        } else if (cmd.equals(\"delete\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"            if (len \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"                throw new RebornException(\"Can\u0027t delete.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"            return new DeleteCommand(details);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"        } else if (cmd.equals(\"find\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"            return new FindCommand(details);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"            throw new RebornException(\"Can you please make some sense?\");","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":85}},{"path":"src/main/java/reborn/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.exception.RebornException;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Deadline;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Event;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Todo;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":" * Represents storage of saved tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    private String filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    private File f;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * @param filePath Filepath to create file for loading and saving.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException If file creation fails.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    public Storage(String filePath) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"                throw new RebornException(e.getMessage());","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"     * Converts string input into appropriate Task.","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"     * @param input String input that represents a saved Task.","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"     * @return Task processed using given String.","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"    public Task processTask(String[] input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"        String type \u003d input[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"        assert type \u003d\u003d \"T\" || type \u003d\u003d \"D\" || type \u003d\u003d \"E\" : \"Type of task should be T, D or E\";","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"        String mark \u003d input[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"        assert mark \u003d\u003d \"1\" || mark \u003d\u003d \"0\" : \"Task mark status should be 1 or 0\";","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"        Task x \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"            x \u003d new Todo(input[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"            x \u003d new Deadline(input[2], input[3]);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"            x \u003d new Event(input[2], input[3], input[4]);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"            x.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"        return x;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"     * Loads in stored tasks from file.","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"     * @return ArrayList of stored tasks.","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException If load fails.","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"    public ArrayList\u003cTask\u003e load() throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"                // convert text to duke.data.task.Task","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"                String[] input \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"                Task x \u003d processTask(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"                tasks.add(x);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"            return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"            throw new RebornException(e.getMessage());","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"     * Saves current tasks to file.","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"     * @param taskListString String containing current tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"     * @throws RebornException If file writing fails","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"KevinEyo1"},"content":"    public void save(String taskListString) throws RebornException {","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"            FileWriter fw \u003d new FileWriter(\"src/main/java/reborn/data/reborn.txt\");","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"KevinEyo1"},"content":"            fw.write(taskListString);","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"            fw.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"KevinEyo1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"            throw new RebornException(e.getMessage());","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":106}},{"path":"src/main/java/reborn/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"    private DialogBox(String text, Image img, boolean reborn) {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        if (reborn) {","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"            dialog.setTextFill(Color.color(1, 0, 0));","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"            dialog.setTextFill(Color.color(0, 1, 0));","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"        return new DialogBox(text, img, false);","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"    public static DialogBox getRebornDialog(String text, Image img) {","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"        var db \u003d new DialogBox(text, img, true);","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"        db.flip();","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"        return db;","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"KevinEyo1":69}},{"path":"src/main/java/reborn/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"import reborn.Reborn;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    private Reborn reborn;","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Verde.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Reborn.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"     * Initializes MainWindow.","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"        showWelcome();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"    public void setDuke(Reborn d) {","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"        reborn \u003d d;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"        String response \u003d reborn.getResponse(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"                DialogBox.getRebornDialog(response, dukeImage)","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"     * Displays welcome message.","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"        dialogContainer.getChildren().add(DialogBox.getRebornDialog(","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"                \"Reborn here. What do you want...\", dukeImage));","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"KevinEyo1":66}},{"path":"src/main/java/reborn/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":" * Ui of application.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"     * Display to user task count.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"     * @param size Number of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"     * @return Show task count string.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"    public String showTaskCount(int size) {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        return \"Take your \" + Integer.toString(size) + \" task(s)!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"     * Displays to user the task added.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"     * @return Add task string.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"KevinEyo1"},"content":"    public String showAddTask(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"KevinEyo1"},"content":"        return \"I\u0027ll help add this for now:\\n\" + task.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"KevinEyo1"},"content":"     * Displays to user the task deleted.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"KevinEyo1"},"content":"     * @param task Task to be deleted.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"KevinEyo1"},"content":"     * @return Delete task string.","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"KevinEyo1"},"content":"    public String showDeleteTask(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"KevinEyo1"},"content":"        return \"Less stuff for me to keep note hehe, removed:\\n\" + task.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"KevinEyo1"},"content":"     * Displays all tasks in TaskList.","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"KevinEyo1"},"content":"     * @param tasks TaskList containing tasks to be displayed.","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"KevinEyo1"},"content":"     * @return All tasks string.","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"KevinEyo1"},"content":"    public String showAllTasks(TaskList tasks) {","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"KevinEyo1"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"KevinEyo1"},"content":"            return \"No tasks added yet, thank god for that.\";","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"KevinEyo1"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"KevinEyo1"},"content":"            String str \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"KevinEyo1"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"KevinEyo1"},"content":"                str +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"KevinEyo1"},"content":"            return str;","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"KevinEyo1"},"content":"     * Displays tasks that contains a string.","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"KevinEyo1"},"content":"     * @param taskArray Array containing the tasks that contain the string.","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"KevinEyo1"},"content":"     * @return Found tasks string.","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"KevinEyo1"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"KevinEyo1"},"content":"        if (taskArray.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"KevinEyo1"},"content":"            return \"No tasks found, what are you even doing....\";","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"KevinEyo1"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"KevinEyo1"},"content":"            String str \u003d \"Here you go, now stop wasting my time:\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"KevinEyo1"},"content":"            for (int i \u003d 0; i \u003c taskArray.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"KevinEyo1"},"content":"                str +\u003d (i + 1) + \". \" + taskArray.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"KevinEyo1"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"KevinEyo1"},"content":"            return str;","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"KevinEyo1"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"KevinEyo1"},"content":"     * Displays task marked.","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"KevinEyo1"},"content":"     * @param task Task to be marked.","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"KevinEyo1"},"content":"     * @return Mark string.","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"KevinEyo1"},"content":"    public String showMarked(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"KevinEyo1"},"content":"        return task.outputMarked() + task.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"KevinEyo1"},"content":"     * Displays task unmarked.","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"KevinEyo1"},"content":"     * @param task Task to be unmarked.","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"KevinEyo1"},"content":"     * @return Unmark string.","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"KevinEyo1"},"content":"    public String showUnmarked(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"KevinEyo1"},"content":"        return task.outputUnmarked() + task.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"KevinEyo1"},"content":"     * Displays goodbye message.","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"KevinEyo1"},"content":"     * @return Goodbye string.","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"KevinEyo1"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"KevinEyo1"},"content":"        return \"Tasks saved. Now get out of here!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"KevinEyo1"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"KevinEyo1"},"content":"     * Displays error message.","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"KevinEyo1"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"KevinEyo1"},"content":"     * @param error Error to be displayed.","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"KevinEyo1"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"KevinEyo1"},"content":"    public void showError(String error) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"KevinEyo1"},"content":"        System.out.println(\"Bruh: \" + error);","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"KevinEyo1":120}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"KevinEyo1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"reborn.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"KevinEyo1":19}},{"path":"src/test/java/reborn/data/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.data;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"import reborn.data.task.Todo;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"        tasks.add(new Todo(\"Do homework\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(\"T | 0 | Do homework\", tasks.get(0).storageStr());","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"KevinEyo1"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"KevinEyo1"},"content":"        tasks.add(new Todo(\"Do homework\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KevinEyo1"},"content":"        tasks.add(new Todo(\"Go run\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(\"T | 0 | Do homework\" + System.lineSeparator()","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KevinEyo1"},"content":"                + \"T | 0 | Go run\" + System.lineSeparator(), tasks.tasksToStr());","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"KevinEyo1"},"content":"        tasks.remove(1);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(\"T | 0 | Do homework\" + System.lineSeparator(), tasks.tasksToStr());","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"KevinEyo1":29}},{"path":"src/test/java/reborn/data/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"package reborn.data.task;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"    public void testTodoStorageStr() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"        Todo todo \u003d new Todo(\"Do homework\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(\"T | 0 | Do homework\", todo.storageStr());","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KevinEyo1"},"content":"        todo.mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KevinEyo1"},"content":"        assertEquals(\"T | 1 | Do homework\", todo.storageStr());","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KevinEyo1"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KevinEyo1"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"KevinEyo1":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KevinEyo1"},"content":"invalid","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"KevinEyo1"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KevinEyo1"},"content":"todo shopping","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"KevinEyo1"},"content":"deadline homework /by Monday","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"KevinEyo1"},"content":"event camping /from Tuesday /to Wednesday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"KevinEyo1"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KevinEyo1"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KevinEyo1"},"content":"unmark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KevinEyo1"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KevinEyo1":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"KevinEyo1"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"KevinEyo1"},"content":"javac  -cp ..\\src\\main\\java\\reborn -Xlint:none -d ..\\bin ..\\src\\main\\java\\reborn\\*.java","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"KevinEyo1"},"content":"java -classpath ..\\bin reborn.Reborn \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KevinEyo1":3,"-":18}}]
