[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"plugins {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"    id \u0027idea\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"repositories {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"sourceSets {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    main {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"        java {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"dependencies {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"    testImplementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    implementation \u0027org.apache.commons:commons-lang3:3.12.0\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"LeonardYam":24}},{"path":"data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"T | false | task","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"E | true | this | today | tmr","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"D | false | this | yesterday","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LeonardYam":3}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"@rem Find java.exe","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"echo.","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"echo.","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"goto fail","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"echo.","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"echo.","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"goto fail","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":":execute","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"@rem Setup the command line","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"LeonardYam"},"content":":end","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"LeonardYam"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"LeonardYam"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"LeonardYam"},"content":":fail","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"LeonardYam"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"LeonardYam"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"LeonardYam"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"LeonardYam"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"LeonardYam"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"LeonardYam"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"LeonardYam"},"content":":mainEnd","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"LeonardYam"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"LeonardYam"},"content":":omega","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"LeonardYam":91}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"rootProject.name \u003d \"ip\"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"LeonardYam":1}},{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"public class Bob {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"    private static final Integer spacing \u003d 5;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"    private static final String wrapper \u003d padLeft(\"~\".repeat(30));","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    private static final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd[ ha]\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    private static String padLeft (String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        return \" \".repeat(spacing) + s;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"    private final Path dataDirectoryPath \u003d Paths.get(\"data/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"    private final Path dataFilePath \u003d Paths.get(\"data/taskList.txt\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"    // Accepts strings that can be separated by \\n","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"    private void formattedPrint(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"        String[] lines \u003d s.split(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"        System.out.println(wrapper);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"            System.out.println(padLeft(line));","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"        System.out.println(wrapper);","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"    private String getTaskDescription(Task t) {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"        return String.format(\"[%s][%s] %s\", t.getTaskType(), t.getStatusIcon(), t);","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"    private void printList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"        System.out.println(wrapper);","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"        System.out.println(padLeft(\"Current task list: \"));","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"        // Iterate through list items sequentially","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"        for (int i \u003d 0, n \u003d this.taskList.size(); i \u003c n; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"            String s \u003d String.format(\"%d. %s\", i + 1, getTaskDescription(t));","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"            System.out.println(padLeft(s));","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"        System.out.println(wrapper);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"    //Check that the string is a number","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isInt(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"        if (s \u003d\u003d null) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"            return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"        // Check that every char is a digit","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"        for (int i \u003d 0, len \u003d s.length(); i \u003c len; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"            char c \u003d s.charAt(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"            if (c \u003c \u00270\u0027 || c \u003e \u00279\u0027) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"                return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"        return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"    // Check if string can be parsed to LocalDate","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isDate(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"LeonardYam"},"content":"            LocalDate.parse(s, format);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"LeonardYam"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"LeonardYam"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"LeonardYam"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"LeonardYam"},"content":"    private void handleMarkCommand(String s) throws BobException{","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"LeonardYam"},"content":"        String[] commands \u003d s.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"LeonardYam"},"content":"        Integer index \u003d Integer.valueOf(commands[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"LeonardYam"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) { // Index not in range","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Index given is out of range!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"LeonardYam"},"content":"        Task t \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"LeonardYam"},"content":"        if (commands[0].equals(\"mark\")) { // mark task","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"LeonardYam"},"content":"            t.mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"LeonardYam"},"content":"            formattedPrint(\"I\u0027ve marked this task as done!\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"LeonardYam"},"content":"                    getTaskDescription(t));","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"LeonardYam"},"content":"        } else { // unmark task","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"LeonardYam"},"content":"            t.unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"LeonardYam"},"content":"            formattedPrint(\"I\u0027ve unmarked this task as not done!\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"LeonardYam"},"content":"                    getTaskDescription(t));","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"LeonardYam"},"content":"    // Determine if a string can be used to mark/unmark a task in a list of size max","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"LeonardYam"},"content":"    // Commands are \"mark\" and \"unmark\"","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"LeonardYam"},"content":"    private boolean isMarkCommand(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"LeonardYam"},"content":"        String[] words \u003d s.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"LeonardYam"},"content":"        String[] markCommands \u003d new String[] {\"mark\", \"unmark\"};","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"LeonardYam"},"content":"        Integer max \u003d taskList.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"LeonardYam"},"content":"        return words.length \u003d\u003d 2","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 Arrays.asList(markCommands).contains(words[0]) // Check if word[0] matches any command","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isInt(words[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"LeonardYam"},"content":"    // Command: todo \u003cdescription\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"LeonardYam"},"content":"    private boolean isTodo(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d s.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"LeonardYam"},"content":"        return command.length \u003e 1 \u0026\u0026 command[0].equals(\"todo\");","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"LeonardYam"},"content":"    private void addTodo(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d s.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"LeonardYam"},"content":"        Todo t \u003d new Todo(command[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"LeonardYam"},"content":"        taskList.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"LeonardYam"},"content":"    // Command: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003c4pm\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"LeonardYam"},"content":"    private boolean isEvent(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"LeonardYam"},"content":"        // A valid event would have only 1 /to and /from command","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"LeonardYam"},"content":"        Boolean validMatches \u003d StringUtils.countMatches(s, \" /from \") \u003d\u003d 1","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 StringUtils.countMatches(s, \" /to \") \u003d\u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"LeonardYam"},"content":"        // A valid command would have 3 different sections with this split","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"LeonardYam"},"content":"        String[] splitCommand \u003d s.split(\" /from | /to \");","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"LeonardYam"},"content":"        // Check if a description exists","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"LeonardYam"},"content":"        String[] command_desc \u003d splitCommand[0].split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"LeonardYam"},"content":"        return validMatches","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 splitCommand.length \u003d\u003d 3","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 command_desc.length \u003e 1","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 command_desc[0].equals(\"event\")","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 s.indexOf(\"/from\") \u003c s.indexOf(\"/to\") // A valid command has /from before /to","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isDate(splitCommand[1])","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isDate(splitCommand[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"LeonardYam"},"content":"    private void addEvent(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d s.split( \" /from | /to \");","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"LeonardYam"},"content":"        String[] command_desc \u003d command[0].split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"LeonardYam"},"content":"        String description \u003d command_desc[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"LeonardYam"},"content":"        LocalDate start \u003d LocalDate.parse(command[1], format);","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"LeonardYam"},"content":"        LocalDate end \u003d LocalDate.parse(command[2], format);","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"LeonardYam"},"content":"        Event e \u003d new Event(description, start, end);","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"LeonardYam"},"content":"        taskList.add(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"LeonardYam"},"content":"    // Command: deadline \u003cdescription\u003e /by \u003cdeadline\u003e","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"LeonardYam"},"content":"    private boolean isDeadline(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"LeonardYam"},"content":"        String[] splitCommand \u003d s.split(\" /by \");","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"LeonardYam"},"content":"        String[] command_desc \u003d splitCommand[0].split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"LeonardYam"},"content":"        return splitCommand.length \u003d\u003d 2","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 command_desc.length \u003d\u003d 2","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 command_desc[0].equals(\"deadline\")","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isDate(splitCommand[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"LeonardYam"},"content":"    private void addDeadline(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"LeonardYam"},"content":"        String[] splitCommand \u003d s.split(\" /by \");","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"LeonardYam"},"content":"        String[] command_desc \u003d splitCommand[0].split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"LeonardYam"},"content":"        String description \u003d command_desc[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"LeonardYam"},"content":"        LocalDate deadline \u003d LocalDate.parse(splitCommand[1], format);","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"LeonardYam"},"content":"        Deadline d \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"LeonardYam"},"content":"        taskList.add(d);","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"LeonardYam"},"content":"    private void addTask(String input) throws BobException {","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"LeonardYam"},"content":"        if (isTodo(input)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"LeonardYam"},"content":"            addTodo(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"LeonardYam"},"content":"        } else if (isEvent(input)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"LeonardYam"},"content":"            addEvent(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"LeonardYam"},"content":"        } else if (isDeadline(input)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"LeonardYam"},"content":"            addDeadline(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"LeonardYam"},"content":"        } else { // Invalid command","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Sorry :( no valid command was entered\");","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"LeonardYam"},"content":"        // Get added task","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"LeonardYam"},"content":"        Task t \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"LeonardYam"},"content":"        formattedPrint(\"I\u0027ve added a new task!\\n\" + getTaskDescription(t));","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"LeonardYam"},"content":"    private boolean isDelete(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d input.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"LeonardYam"},"content":"        return command.length \u003d\u003d 2 \u0026\u0026 command[0].equals(\"delete\") \u0026\u0026 isInt(command[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"LeonardYam"},"content":"    private void deleteTask(String input) throws BobException {","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d input.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"LeonardYam"},"content":"        Integer index \u003d Integer.valueOf(command[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"LeonardYam"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Index given is out of range\");","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"LeonardYam"},"content":"        formattedPrint(\"Sure, removing this task!\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"LeonardYam"},"content":"                       getTaskDescription(taskList.get(index - 1)));","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"LeonardYam"},"content":"        taskList.remove(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"LeonardYam"},"content":"    private void readTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"LeonardYam"},"content":"        String flag \u003d \"bye\";","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"LeonardYam"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":216,"author":{"gitId":"LeonardYam"},"content":"        while (!input.equals(flag)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"LeonardYam"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"LeonardYam"},"content":"                if (input.equals(\"list\")) { // Output list","lastModifiedDate":"2023-01-19"},{"lineNumber":219,"author":{"gitId":"LeonardYam"},"content":"                    printList();","lastModifiedDate":"2023-01-19"},{"lineNumber":220,"author":{"gitId":"LeonardYam"},"content":"                } else if (isMarkCommand(input)) { // Marking task","lastModifiedDate":"2023-01-19"},{"lineNumber":221,"author":{"gitId":"LeonardYam"},"content":"                    handleMarkCommand(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":222,"author":{"gitId":"LeonardYam"},"content":"                } else if (isDelete(input)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"LeonardYam"},"content":"                    deleteTask(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":224,"author":{"gitId":"LeonardYam"},"content":"                } else {  // Add to list","lastModifiedDate":"2023-01-19"},{"lineNumber":225,"author":{"gitId":"LeonardYam"},"content":"                    addTask(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":226,"author":{"gitId":"LeonardYam"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":227,"author":{"gitId":"LeonardYam"},"content":"            } catch (BobException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":228,"author":{"gitId":"LeonardYam"},"content":"                formattedPrint(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":229,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":230,"author":{"gitId":"LeonardYam"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":231,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":232,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":233,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":234,"author":{"gitId":"LeonardYam"},"content":"    private String encodeTask(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":235,"author":{"gitId":"LeonardYam"},"content":"        String common \u003d String.format(\"%s | %s | %s\", t.type, t.isDone, t.description);","lastModifiedDate":"2023-01-29"},{"lineNumber":236,"author":{"gitId":"LeonardYam"},"content":"        StringBuilder encode \u003d new StringBuilder(common);","lastModifiedDate":"2023-01-29"},{"lineNumber":237,"author":{"gitId":"LeonardYam"},"content":"        switch (t.type) {","lastModifiedDate":"2023-01-29"},{"lineNumber":238,"author":{"gitId":"LeonardYam"},"content":"        case \"D\":","lastModifiedDate":"2023-01-29"},{"lineNumber":239,"author":{"gitId":"LeonardYam"},"content":"            Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-01-29"},{"lineNumber":240,"author":{"gitId":"LeonardYam"},"content":"            encode.append(String.format(\" | %s\", d.deadline));","lastModifiedDate":"2023-01-29"},{"lineNumber":241,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":242,"author":{"gitId":"LeonardYam"},"content":"        case \"E\":","lastModifiedDate":"2023-01-29"},{"lineNumber":243,"author":{"gitId":"LeonardYam"},"content":"            Event e \u003d (Event) t;","lastModifiedDate":"2023-01-29"},{"lineNumber":244,"author":{"gitId":"LeonardYam"},"content":"            encode.append(String.format(\" | %s | %s\", e.start, e.end));","lastModifiedDate":"2023-01-29"},{"lineNumber":245,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":246,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":247,"author":{"gitId":"LeonardYam"},"content":"        return encode.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":248,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":249,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":250,"author":{"gitId":"LeonardYam"},"content":"    private Task decodeTask(String s) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":251,"author":{"gitId":"LeonardYam"},"content":"        Task t;","lastModifiedDate":"2023-01-29"},{"lineNumber":252,"author":{"gitId":"LeonardYam"},"content":"        // Separator is \" | \", \\\\ for regex since | is a special character","lastModifiedDate":"2023-01-29"},{"lineNumber":253,"author":{"gitId":"LeonardYam"},"content":"        String[] input \u003d s.split(\" \\\\| \");","lastModifiedDate":"2023-01-29"},{"lineNumber":254,"author":{"gitId":"LeonardYam"},"content":"        String type \u003d input[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":255,"author":{"gitId":"LeonardYam"},"content":"        Boolean isDone \u003d Boolean.parseBoolean(input[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":256,"author":{"gitId":"LeonardYam"},"content":"        String desc \u003d input[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":257,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":258,"author":{"gitId":"LeonardYam"},"content":"        switch (type) {","lastModifiedDate":"2023-01-29"},{"lineNumber":259,"author":{"gitId":"LeonardYam"},"content":"        case \"T\":","lastModifiedDate":"2023-01-29"},{"lineNumber":260,"author":{"gitId":"LeonardYam"},"content":"            t \u003d new Todo(desc);","lastModifiedDate":"2023-01-29"},{"lineNumber":261,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":262,"author":{"gitId":"LeonardYam"},"content":"        case \"D\":","lastModifiedDate":"2023-01-29"},{"lineNumber":263,"author":{"gitId":"LeonardYam"},"content":"            LocalDate deadline \u003d LocalDate.parse(input[3]);","lastModifiedDate":"2023-01-29"},{"lineNumber":264,"author":{"gitId":"LeonardYam"},"content":"            t \u003d new Deadline(desc, deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":265,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":266,"author":{"gitId":"LeonardYam"},"content":"        case \"E\":","lastModifiedDate":"2023-01-29"},{"lineNumber":267,"author":{"gitId":"LeonardYam"},"content":"            LocalDate start \u003d LocalDate.parse(input[3]);","lastModifiedDate":"2023-01-29"},{"lineNumber":268,"author":{"gitId":"LeonardYam"},"content":"            LocalDate end \u003d LocalDate.parse(input[4]);","lastModifiedDate":"2023-01-29"},{"lineNumber":269,"author":{"gitId":"LeonardYam"},"content":"            t \u003d new Event(desc, start, end);","lastModifiedDate":"2023-01-29"},{"lineNumber":270,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":271,"author":{"gitId":"LeonardYam"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":272,"author":{"gitId":"LeonardYam"},"content":"            throw new IOException(\"Invalid file input encountered!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":273,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":274,"author":{"gitId":"LeonardYam"},"content":"        t.isDone \u003d isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":275,"author":{"gitId":"LeonardYam"},"content":"        return t;","lastModifiedDate":"2023-01-29"},{"lineNumber":276,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":277,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":278,"author":{"gitId":"LeonardYam"},"content":"    // Using java.nio.file packages for cross-platform compatibility","lastModifiedDate":"2023-01-29"},{"lineNumber":279,"author":{"gitId":"LeonardYam"},"content":"    private void saveList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":280,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":281,"author":{"gitId":"LeonardYam"},"content":"            // Create data directory if it does not exist","lastModifiedDate":"2023-01-29"},{"lineNumber":282,"author":{"gitId":"LeonardYam"},"content":"            // Assume that a non-directory data file does not exist","lastModifiedDate":"2023-01-29"},{"lineNumber":283,"author":{"gitId":"LeonardYam"},"content":"            if (!Files.exists(dataDirectoryPath)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":284,"author":{"gitId":"LeonardYam"},"content":"                Files.createDirectory(dataDirectoryPath);","lastModifiedDate":"2023-01-29"},{"lineNumber":285,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":286,"author":{"gitId":"LeonardYam"},"content":"            BufferedWriter fw \u003d Files.newBufferedWriter(dataFilePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":287,"author":{"gitId":"LeonardYam"},"content":"            for (Task t : taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":288,"author":{"gitId":"LeonardYam"},"content":"                String outputLine \u003d encodeTask(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":289,"author":{"gitId":"LeonardYam"},"content":"                fw.write(outputLine); // Write to buffer","lastModifiedDate":"2023-01-29"},{"lineNumber":290,"author":{"gitId":"LeonardYam"},"content":"                fw.newLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":291,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":292,"author":{"gitId":"LeonardYam"},"content":"            fw.flush(); // Write to file","lastModifiedDate":"2023-01-29"},{"lineNumber":293,"author":{"gitId":"LeonardYam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":294,"author":{"gitId":"LeonardYam"},"content":"            String errorMessage \u003d \"Error while saving to file - \" + e.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":295,"author":{"gitId":"LeonardYam"},"content":"            formattedPrint(errorMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":296,"author":{"gitId":"LeonardYam"},"content":"        };","lastModifiedDate":"2023-01-29"},{"lineNumber":297,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":298,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":299,"author":{"gitId":"LeonardYam"},"content":"    private void loadList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":300,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":301,"author":{"gitId":"LeonardYam"},"content":"            if (Files.exists(dataFilePath)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":302,"author":{"gitId":"LeonardYam"},"content":"                BufferedReader fr \u003d Files.newBufferedReader(dataFilePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":303,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":304,"author":{"gitId":"LeonardYam"},"content":"                String line \u003d fr.readLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":305,"author":{"gitId":"LeonardYam"},"content":"                while (line !\u003d null) { // While not EOF","lastModifiedDate":"2023-01-29"},{"lineNumber":306,"author":{"gitId":"LeonardYam"},"content":"                    Task t \u003d decodeTask(line);","lastModifiedDate":"2023-01-29"},{"lineNumber":307,"author":{"gitId":"LeonardYam"},"content":"                    taskList.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":308,"author":{"gitId":"LeonardYam"},"content":"                    line \u003d fr.readLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":309,"author":{"gitId":"LeonardYam"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":310,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":311,"author":{"gitId":"LeonardYam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":312,"author":{"gitId":"LeonardYam"},"content":"            String errorMessage \u003d \"Error while opening file - \" + e.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":313,"author":{"gitId":"LeonardYam"},"content":"            formattedPrint(errorMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":314,"author":{"gitId":"LeonardYam"},"content":"        } finally {","lastModifiedDate":"2023-01-29"},{"lineNumber":315,"author":{"gitId":"LeonardYam"},"content":"            printList();","lastModifiedDate":"2023-01-29"},{"lineNumber":316,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":317,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":318,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":319,"author":{"gitId":"LeonardYam"},"content":"     * Main program for Bob, our chat-bot","lastModifiedDate":"2023-01-29"},{"lineNumber":320,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":321,"author":{"gitId":"LeonardYam"},"content":"    public void start() {","lastModifiedDate":"2023-01-29"},{"lineNumber":322,"author":{"gitId":"LeonardYam"},"content":"        //Introduction message","lastModifiedDate":"2023-01-29"},{"lineNumber":323,"author":{"gitId":"LeonardYam"},"content":"        formattedPrint(\"Hi, my name is Bob :)\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":324,"author":{"gitId":"LeonardYam"},"content":"                \"How may I help you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":325,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":326,"author":{"gitId":"LeonardYam"},"content":"        // Load task list from file","lastModifiedDate":"2023-01-29"},{"lineNumber":327,"author":{"gitId":"LeonardYam"},"content":"        loadList();","lastModifiedDate":"2023-01-29"},{"lineNumber":328,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":329,"author":{"gitId":"LeonardYam"},"content":"        // Read tasks from user","lastModifiedDate":"2023-01-29"},{"lineNumber":330,"author":{"gitId":"LeonardYam"},"content":"        readTaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":331,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":332,"author":{"gitId":"LeonardYam"},"content":"        // Save task list to file","lastModifiedDate":"2023-01-29"},{"lineNumber":333,"author":{"gitId":"LeonardYam"},"content":"        saveList();","lastModifiedDate":"2023-01-29"},{"lineNumber":334,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":335,"author":{"gitId":"LeonardYam"},"content":"        // Goodbye message","lastModifiedDate":"2023-01-19"},{"lineNumber":336,"author":{"gitId":"LeonardYam"},"content":"        formattedPrint(\"See you soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":337,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":338,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":338}},{"path":"src/main/java/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"public class BobException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"    public BobException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"LeonardYam":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"        super(description, \"D\");","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"        return String.format(\"%s | by: %s\", this.description, this.deadline.format(f));","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"        super(description, \"E\");","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"        return String.format(\"%s | %s to %s\", this.description, this.start.format(f), this.end.format(f));","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":17}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"public class Main {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"        Bob bob \u003d new Bob();","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"        bob.start();","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"    protected String type;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"        return this.type;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"        super(description, \"T\");","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"todo Buy groceries","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"deadline Do homework /by tomorrow","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"event CNY /from Saturday /to Tuesday","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"unmark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"LeonardYam":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"# Uses gradle shadowJar to build","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"cd ..","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"if ! [ -d \"./build\" ]","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"# Go back to test directory","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"cd text-ui-test","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"java -cp \"../build/libs/ip-1.0-SNAPSHOT-all.jar:../build/classes/java/main\" Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":29,"LeonardYam":7}}]
