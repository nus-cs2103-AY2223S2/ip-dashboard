[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"plugins {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"    id \u0027idea\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"group \u0027iP\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"version \u00270.1-alpha\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"repositories {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"test {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"checkstyle {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"    ignoreFailures \u003d true","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"sourceSets {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    main {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        java {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"            srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"dependencies {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"    implementation \u0027org.apache.commons:commons-lang3:3.12.0\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"LeonardYam":52}},{"path":"data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"D | false | submit | 2023-02-17","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"LeonardYam":1}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"rootProject.name \u003d \"ip\"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"LeonardYam":1}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"/** Bob is a chat bot that helps manage tasks */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"public class Bob extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"    private Image bob \u003d new Image(this.getClass().getResourceAsStream(\"/images/bob.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"     * Creates an instance of Bob which writes to a file with the path \"data/taskList.txt\"","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"    public Bob() {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"        storage \u003d new Storage(\"data/taskList.txt\");","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"        ui \u003d new Ui(\"~\", 30);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"    private String handleList() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"        return ui.printTasks(tasks.getList());","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"    private String handleTodo(String input) throws BobException {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"        Task t \u003d Parser.parseTodo(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"        tasks.add(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"        return ui.printTaskAdded(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"    private String handleEvent(String input) throws BobException {","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"        Task t \u003d Parser.parseEvent(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"        tasks.add(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"        return ui.printTaskAdded(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"    private String handleDeadline(String input) throws BobException {","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"        Task t \u003d Parser.parseDeadline(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"        tasks.add(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"        return ui.printTaskAdded(t);","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"    private String handleMark(String input) throws BobException {","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"        int index \u003d Parser.parseIndex(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"        tasks.mark(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"        return ui.printMarkTask(tasks.get(index));","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":"    private String handleUnmark(String input) throws BobException {","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"        int index \u003d Parser.parseIndex(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"        tasks.unmark(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"        return ui.printUnmarkTask(tasks.get(index));","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"    private String handleDelete(String input) throws BobException {","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"        int index \u003d Parser.parseIndex(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"        return ui.printDeleteTask(tasks.delete(index));","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"LeonardYam"},"content":"    private String handleFind(String input) throws BobException {","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"LeonardYam"},"content":"        String keyword \u003d Parser.parseFind(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"LeonardYam"},"content":"        return ui.printFilteredTasks(tasks.find(keyword));","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"LeonardYam"},"content":"    private String handleRemind() {","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"LeonardYam"},"content":"        return ui.printReminders(tasks.getReminders());","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"LeonardYam"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"LeonardYam"},"content":"        String response;","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"LeonardYam"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleList();","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"LeonardYam"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleTodo(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"LeonardYam"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleEvent(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"LeonardYam"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleDeadline(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"LeonardYam"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleMark(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"LeonardYam"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleUnmark(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"LeonardYam"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleDelete(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"LeonardYam"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleFind(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"LeonardYam"},"content":"            } else if (input.equals(\"remind\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"LeonardYam"},"content":"                response \u003d handleRemind();","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"LeonardYam"},"content":"            } else { // Invalid command","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"LeonardYam"},"content":"                throw new BobException(\"No valid command was entered!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"LeonardYam"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"LeonardYam"},"content":"            response \u003d ui.errorPrint(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"LeonardYam"},"content":"        assert response !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"LeonardYam"},"content":"        return response;","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"LeonardYam"},"content":"    private void loadTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"LeonardYam"},"content":"            storage.load(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"LeonardYam"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"LeonardYam"},"content":"            DialogBox bob \u003d showBobDialog(ui.errorPrint(e));","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"LeonardYam"},"content":"            dialogContainer.getChildren().add(bob);","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"LeonardYam"},"content":"    private void saveTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"LeonardYam"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"LeonardYam"},"content":"        } catch (BobException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"LeonardYam"},"content":"            DialogBox bob \u003d showBobDialog(ui.errorPrint(e));","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"LeonardYam"},"content":"            dialogContainer.getChildren().add(bob);","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"LeonardYam"},"content":"    private DialogBox showUserDialog(String text) {","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"LeonardYam"},"content":"        Label userText \u003d new Label(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"LeonardYam"},"content":"        return DialogBox.getUserDialog(userText, new ImageView(user));","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"LeonardYam"},"content":"    private DialogBox showBobDialog(String text) {","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"LeonardYam"},"content":"        assert text !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"LeonardYam"},"content":"        Label bobText \u003d new Label(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"LeonardYam"},"content":"        return DialogBox.getBobDialog(bobText, new ImageView(bob));","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":146,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"LeonardYam"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"LeonardYam"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":149,"author":{"gitId":"LeonardYam"},"content":"        DialogBox user \u003d showUserDialog(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"LeonardYam"},"content":"        DialogBox bob \u003d showBobDialog(getResponse(input));","lastModifiedDate":"2023-02-08"},{"lineNumber":151,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"LeonardYam"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"LeonardYam"},"content":"                user,","lastModifiedDate":"2023-02-08"},{"lineNumber":154,"author":{"gitId":"LeonardYam"},"content":"                bob","lastModifiedDate":"2023-02-08"},{"lineNumber":155,"author":{"gitId":"LeonardYam"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"LeonardYam"},"content":"        ","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"LeonardYam"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"LeonardYam"},"content":"        // Save task list to data file after every input","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"LeonardYam"},"content":"        saveTasks();","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":162,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":163,"author":{"gitId":"LeonardYam"},"content":"    // JavaFX setup","lastModifiedDate":"2023-02-08"},{"lineNumber":164,"author":{"gitId":"LeonardYam"},"content":"    private void setup(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":165,"author":{"gitId":"LeonardYam"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-08"},{"lineNumber":166,"author":{"gitId":"LeonardYam"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-08"},{"lineNumber":167,"author":{"gitId":"LeonardYam"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-08"},{"lineNumber":168,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":169,"author":{"gitId":"LeonardYam"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-08"},{"lineNumber":170,"author":{"gitId":"LeonardYam"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-08"},{"lineNumber":171,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":172,"author":{"gitId":"LeonardYam"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-08"},{"lineNumber":173,"author":{"gitId":"LeonardYam"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-08"},{"lineNumber":174,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":175,"author":{"gitId":"LeonardYam"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-08"},{"lineNumber":176,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":177,"author":{"gitId":"LeonardYam"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":178,"author":{"gitId":"LeonardYam"},"content":"        stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":179,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":180,"author":{"gitId":"LeonardYam"},"content":"        format(stage, mainLayout);","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":182,"author":{"gitId":"LeonardYam"},"content":"        // Setting event handlers","lastModifiedDate":"2023-02-14"},{"lineNumber":183,"author":{"gitId":"LeonardYam"},"content":"        setHandlers();","lastModifiedDate":"2023-02-14"},{"lineNumber":184,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"LeonardYam"},"content":"    // Format JavaFX","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"LeonardYam"},"content":"    private void format(Stage stage, AnchorPane mainLayout) {","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"LeonardYam"},"content":"        stage.setTitle(\"Bob\");","lastModifiedDate":"2023-02-08"},{"lineNumber":189,"author":{"gitId":"LeonardYam"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":190,"author":{"gitId":"LeonardYam"},"content":"        stage.setMinHeight(600);","lastModifiedDate":"2023-02-08"},{"lineNumber":191,"author":{"gitId":"LeonardYam"},"content":"        stage.setMinWidth(400);","lastModifiedDate":"2023-02-08"},{"lineNumber":192,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":193,"author":{"gitId":"LeonardYam"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":194,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":195,"author":{"gitId":"LeonardYam"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-08"},{"lineNumber":196,"author":{"gitId":"LeonardYam"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-08"},{"lineNumber":197,"author":{"gitId":"LeonardYam"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-08"},{"lineNumber":198,"author":{"gitId":"LeonardYam"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":199,"author":{"gitId":"LeonardYam"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":200,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":201,"author":{"gitId":"LeonardYam"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-08"},{"lineNumber":202,"author":{"gitId":"LeonardYam"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":203,"author":{"gitId":"LeonardYam"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":204,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":205,"author":{"gitId":"LeonardYam"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":206,"author":{"gitId":"LeonardYam"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":207,"author":{"gitId":"LeonardYam"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":208,"author":{"gitId":"LeonardYam"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":209,"author":{"gitId":"LeonardYam"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":210,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":211,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":212,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"LeonardYam"},"content":"    private void setHandlers() {","lastModifiedDate":"2023-02-08"},{"lineNumber":214,"author":{"gitId":"LeonardYam"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":215,"author":{"gitId":"LeonardYam"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-08"},{"lineNumber":216,"author":{"gitId":"LeonardYam"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":217,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":218,"author":{"gitId":"LeonardYam"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":219,"author":{"gitId":"LeonardYam"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-08"},{"lineNumber":220,"author":{"gitId":"LeonardYam"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":221,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":222,"author":{"gitId":"LeonardYam"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-08"},{"lineNumber":223,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":224,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":225,"author":{"gitId":"LeonardYam"},"content":"    private void introduce() {","lastModifiedDate":"2023-02-08"},{"lineNumber":226,"author":{"gitId":"LeonardYam"},"content":"        Label intro \u003d new Label(ui.printIntroduction());","lastModifiedDate":"2023-02-08"},{"lineNumber":227,"author":{"gitId":"LeonardYam"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":228,"author":{"gitId":"LeonardYam"},"content":"                DialogBox.getBobDialog(intro, new ImageView(bob))","lastModifiedDate":"2023-02-08"},{"lineNumber":229,"author":{"gitId":"LeonardYam"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":230,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":231,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":232,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":233,"author":{"gitId":"LeonardYam"},"content":"     * Main program for Bob, our chat-bot","lastModifiedDate":"2023-02-08"},{"lineNumber":234,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":235,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":236,"author":{"gitId":"LeonardYam"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":237,"author":{"gitId":"LeonardYam"},"content":"        setup(stage);","lastModifiedDate":"2023-02-08"},{"lineNumber":238,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":239,"author":{"gitId":"LeonardYam"},"content":"        // Set introduction message","lastModifiedDate":"2023-02-14"},{"lineNumber":240,"author":{"gitId":"LeonardYam"},"content":"        introduce();","lastModifiedDate":"2023-02-08"},{"lineNumber":241,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":242,"author":{"gitId":"LeonardYam"},"content":"        // Load task list from file","lastModifiedDate":"2023-02-08"},{"lineNumber":243,"author":{"gitId":"LeonardYam"},"content":"        loadTasks();","lastModifiedDate":"2023-02-08"},{"lineNumber":244,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":245,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":245}},{"path":"src/main/java/bob/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":" * Exception class that handles any errors related to Bob","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"public class BobException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"    public BobException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"        super(\"Error: \" + message);","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"LeonardYam":10}},{"path":"src/main/java/bob/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"/** Deadline is a type of task that additionally tracks the deadline */","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"     * Creates an instance of Deadline with the given task and deadline for completion","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"     * @param description Description of task to be done","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"     * @param deadline Deadline of task to be done","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"        super(description, \"D\");","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"     * Checks if deadline is overdue with respect to today\u0027s date","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"        boolean isNotDone \u003d !this.isDone;","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        boolean isOverdue \u003d today.isAfter(this.deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        return isNotDone \u0026\u0026 isOverdue;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"    /** String representation of a Deadline task */","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"        return String.format(\"%s | by: %s\", this.description, this.deadline.format(f));","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"        if (o instanceof Deadline) {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"            Deadline d \u003d (Deadline) o;","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"            return this.description.equals(d.description)","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"                    \u0026\u0026 this.deadline.isEqual(d.deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"        return false;","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":46}},{"path":"src/main/java/bob/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":" * JavaFX component used to display dialogs for Bob","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    private Label text;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"     * Returns an instance of DialogBox with the given text and image to display","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"     * @param l Label containing the text to display","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"     * @param iv ImageView to display","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"    private void flip() {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"    public static DialogBox getBobDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"        db.flip();","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"        return db;","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"LeonardYam":51}},{"path":"src/main/java/bob/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":" * Event is a type of Task that also tracks the start date and end date","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"        super(description, \"E\");","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"        return String.format(\"%s | %s to %s\", this.description, this.start.format(f), this.end.format(f));","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"            Event e \u003d (Event) o;","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"            return this.description.equals(e.description)","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"                    \u0026\u0026 this.start.isEqual(e.start)","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"                    \u0026\u0026 this.end.isEqual(e.end);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"        return false;","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":35}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"public class Launcher {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"        Application.launch(Bob.class, args);","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"LeonardYam":12}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"import org.apache.commons.lang3.StringUtils;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":" * Utility class to parse commands related to Bob","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    private static final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd[ ha]\");","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    // Check if string can be parsed to LocalDate","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isDate(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"            LocalDate.parse(s, format);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"            return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"            return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    //Check that the string is a number","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isInt(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        if (s \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"            return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"        // Check that every char is a digit","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"        for (int i \u003d 0, len \u003d s.length(); i \u003c len; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"            char c \u003d s.charAt(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"            if (c \u003c \u00270\u0027 || c \u003e \u00279\u0027) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"                return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"    // Command: todo \u003cdescription\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isTodo(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d s.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"        return command.length \u003e 1 \u0026\u0026 command[0].equals(\"todo\");","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"    // Command: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003c4pm\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isEvent(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"        // A valid event would have only 1 /to and /from command","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"        boolean validMatches \u003d StringUtils.countMatches(s, \" /from \") \u003d\u003d 1","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 StringUtils.countMatches(s, \" /to \") \u003d\u003d 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"        // A valid command would have 3 different sections with this split","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"        String[] splitCommand \u003d s.split(\" /from | /to \");","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"        // Check if a description exists","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"        String[] commandAndDescription \u003d splitCommand[0].split(\" \");","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"        return validMatches","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 splitCommand.length \u003d\u003d 3","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 commandAndDescription.length \u003e 1","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 commandAndDescription[0].equals(\"event\")","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 s.indexOf(\"/from\") \u003c s.indexOf(\"/to\") // A valid command has /from before /to","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isDate(splitCommand[1])","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isDate(splitCommand[2]);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"    // Command: deadline \u003cdescription\u003e /by \u003cdeadline\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isDeadline(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"        String[] splitCommand \u003d s.split(\" /by \");","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"        String[] commandAndDescription \u003d splitCommand[0].split(\" \", 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"        return splitCommand.length \u003d\u003d 2","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 commandAndDescription.length \u003d\u003d 2","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 commandAndDescription[0].equals(\"deadline\")","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isDate(splitCommand[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"LeonardYam"},"content":"    // Determine if a string can be used to mark a task","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isMark(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"LeonardYam"},"content":"        String[] words \u003d s.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"LeonardYam"},"content":"        return words.length \u003d\u003d 2","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 words[0].equals(\"mark\")","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isInt(words[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"LeonardYam"},"content":"    // Determine if a string can be used to unmark a task","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isUnmark(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"LeonardYam"},"content":"        String[] words \u003d s.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"LeonardYam"},"content":"        return words.length \u003d\u003d 2","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 words[0].equals(\"unmark\")","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"LeonardYam"},"content":"                \u0026\u0026 isInt(words[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isDelete(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d input.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"LeonardYam"},"content":"        return command.length \u003d\u003d 2 \u0026\u0026 command[0].equals(\"delete\") \u0026\u0026 isInt(command[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"LeonardYam"},"content":"    private static boolean isFind(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"LeonardYam"},"content":"        return command.length \u003d\u003d 2 \u0026\u0026 command[0].equals(\"find\");","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"LeonardYam"},"content":"     * Parses and returns index specified in a mark/unmark/delete command","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"LeonardYam"},"content":"     * @param s String command","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"LeonardYam"},"content":"     * @return Integer representing index specified","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"LeonardYam"},"content":"    public static int parseIndex(String s) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"LeonardYam"},"content":"        if (!isMark(s) \u0026\u0026 !isUnmark(s) \u0026\u0026 !isDelete(s)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Invalid mark/unmark command!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"LeonardYam"},"content":"        String[] commands \u003d s.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"LeonardYam"},"content":"        int index \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"LeonardYam"},"content":"        return index;","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"LeonardYam"},"content":"     * Validates and parses a given string,","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"LeonardYam"},"content":"     * and returns a Todo object if the string is valid.","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"LeonardYam"},"content":"     * @param s String to be validated and parsed","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"LeonardYam"},"content":"     * @return Todo object","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If string is not a valid todo command","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"LeonardYam"},"content":"    public static Todo parseTodo(String s) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"LeonardYam"},"content":"        if (!isTodo(s)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Invalid todo command!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d s.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"LeonardYam"},"content":"        Todo t \u003d new Todo(command[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"LeonardYam"},"content":"        return t;","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"LeonardYam"},"content":"     * Validates and parses a given string,","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"LeonardYam"},"content":"     * and returns an Event object if the string is valid.","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"LeonardYam"},"content":"     * @param s String to be validated and parsed","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"LeonardYam"},"content":"     * @return Event object","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If string is not a valid Event command","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"LeonardYam"},"content":"    public static Event parseEvent(String s) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"LeonardYam"},"content":"        if (!isEvent(s)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Invalid event command!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d s.split(\" /from | /to \");","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"LeonardYam"},"content":"        String[] commandAndDescription \u003d command[0].split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"LeonardYam"},"content":"        String description \u003d commandAndDescription[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"LeonardYam"},"content":"        LocalDate start \u003d LocalDate.parse(command[1], format);","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"LeonardYam"},"content":"        LocalDate end \u003d LocalDate.parse(command[2], format);","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"LeonardYam"},"content":"        Event e \u003d new Event(description, start, end);","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"LeonardYam"},"content":"        return e;","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"LeonardYam"},"content":"     * Validates and parses a given string,","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"LeonardYam"},"content":"     * and returns a Deadline object if the string is valid.","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"LeonardYam"},"content":"     * @param s String to be validated and parsed","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"LeonardYam"},"content":"     * @return Deadline object","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If string is not a valid Deadline command","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"LeonardYam"},"content":"    public static Deadline parseDeadline(String s) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"LeonardYam"},"content":"        if (!isDeadline(s)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Invalid deadline command!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"LeonardYam"},"content":"        String[] splitCommand \u003d s.split(\" /by \");","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"LeonardYam"},"content":"        String[] commandAndDescription \u003d splitCommand[0].split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":177,"author":{"gitId":"LeonardYam"},"content":"        String description \u003d commandAndDescription[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":178,"author":{"gitId":"LeonardYam"},"content":"        LocalDate deadline \u003d LocalDate.parse(splitCommand[1], format);","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"LeonardYam"},"content":"        Deadline d \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"LeonardYam"},"content":"        return d;","lastModifiedDate":"2023-02-01"},{"lineNumber":181,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":182,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":183,"author":{"gitId":"LeonardYam"},"content":"    public static String parseFind(String s) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"LeonardYam"},"content":"        if (!isFind(s)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Invalid find command!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"LeonardYam"},"content":"        String[] command \u003d s.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"LeonardYam"},"content":"        return command[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":191,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LeonardYam":191}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"    private Path filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"     * Returns a Storage object which can read and write tasks to a .txt file","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"     * @param filePath String file path of the input/output file","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"    private Task decodeTask(String s) throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"        Task t;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"        // Separator is \" | \", \\\\ for regex since | is a special character","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"        String[] input \u003d s.split(\" \\\\| \");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        String type \u003d input[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        boolean isDone \u003d Boolean.parseBoolean(input[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"        String desc \u003d input[2];","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"        switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"        case \"T\":","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"            t \u003d new Todo(desc);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"        case \"D\":","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"            LocalDate deadline \u003d LocalDate.parse(input[3]);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"            t \u003d new Deadline(desc, deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"        case \"E\":","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"            LocalDate start \u003d LocalDate.parse(input[3]);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"            LocalDate end \u003d LocalDate.parse(input[4]);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"            t \u003d new Event(desc, start, end);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"            throw new IOException(\"Invalid file input encountered!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"        t.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"        return t;","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"    private String encodeTask(Task t) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"        assert t !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"        String common \u003d String.format(\"%s | %s | %s\", t.type, t.isDone, t.description);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"        StringBuilder encode \u003d new StringBuilder(common);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"        switch (t.type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"        case \"D\":","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"            Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"            encode.append(String.format(\" | %s\", d.deadline));","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"        case \"E\":","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"            Event e \u003d (Event) t;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"            encode.append(String.format(\" | %s | %s\", e.start, e.end));","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"        default:","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"            assert false;","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"        return encode.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"     * Reads the existing file (if any) and loads the decoded Task objects into the given TaskList object.","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"     * @param taskList TaskList object that stores the tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If there was an error in reading the file","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"    public void load(TaskList taskList) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"        if (Files.exists(this.filePath)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"LeonardYam"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"LeonardYam"},"content":"                BufferedReader reader \u003d Files.newBufferedReader(this.filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"LeonardYam"},"content":"                String line \u003d reader.readLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"LeonardYam"},"content":"                while (line !\u003d null) { // While not EOF","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"LeonardYam"},"content":"                    Task t \u003d decodeTask(line);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"LeonardYam"},"content":"                    taskList.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"LeonardYam"},"content":"                    line \u003d reader.readLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"LeonardYam"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"LeonardYam"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"LeonardYam"},"content":"                throw new BobException(\"Error while loading tasks :(\");","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"LeonardYam"},"content":"     * Read tasks from a taskList object and writes it to the given file.","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"LeonardYam"},"content":"     * @param taskList TaskList object that has the tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If there was an error in writing to the file","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"LeonardYam"},"content":"    public void save(TaskList taskList) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"LeonardYam"},"content":"            // Make all necessary directories","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"LeonardYam"},"content":"            Files.createDirectories(this.filePath.getParent());","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"LeonardYam"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(this.filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"LeonardYam"},"content":"            for (Task t : taskList.getList()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"LeonardYam"},"content":"                String outputLine \u003d encodeTask(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"LeonardYam"},"content":"                writer.write(outputLine); // Write to buffer","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"LeonardYam"},"content":"                writer.newLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"LeonardYam"},"content":"            writer.flush(); // Write to file","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"LeonardYam"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Error while saving tasks :(\");","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LeonardYam":111}},{"path":"src/main/java/bob/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"    protected String type;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"        return this.type;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"LeonardYam":31}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"     * Returns a new TaskList object that can be used to interact with the task list","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    // Check if index is in list","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    private boolean isInvalidIndex(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"        return index \u003c\u003d 0 || index \u003e list.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    private void validate(int index) throws BobException {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"        boolean isEmpty \u003d this.list.size() \u003d\u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"        boolean isOutOfRange \u003d index \u003c\u003d 0 || index \u003e this.list.size();","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"        if (isEmpty) {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(\"Task list is empty!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        } else if (isOutOfRange) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"            String err \u003d String.format(\"Index given should be in range [1-%s]\", this.list.size());","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"            throw new BobException(err);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"     * Adds a given Task object to the list","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"     * @param t","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"        assert t !\u003d null;","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"        list.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"     * Mark the task at the given index","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"     * @param index Index of task to mark","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If index is out of range","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"    public void mark(int index) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"        validate(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"        // Since list is 0-indexed","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"        list.get(index - 1).mark();","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"     * Unmark the task at the given index","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"     * @param index Index of task to unmark","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If index is out of range","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"    public void unmark(int index) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"        validate(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"        // Since list is 0-indexed","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"        list.get(index - 1).unmark();","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"     * Delete the task at the given index","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":"     * @param index Index of task to delete","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If index is out of range","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"    public Task delete(int index) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"        validate(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"        // Since list is 0-indexed","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"        return list.remove(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"LeonardYam"},"content":"     * Returns the task at the given index","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"LeonardYam"},"content":"     * @param index Index of task to return","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"LeonardYam"},"content":"     * @return Task at the given index","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"LeonardYam"},"content":"     * @throws BobException If index is out of range","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"LeonardYam"},"content":"    public Task get(int index) throws BobException {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"LeonardYam"},"content":"        validate(index);","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"LeonardYam"},"content":"        // Since list is 0-indexed","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"LeonardYam"},"content":"        return list.get(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"LeonardYam"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"LeonardYam"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"LeonardYam"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"LeonardYam"},"content":"            // Check if task description contains keyword","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"LeonardYam"},"content":"            if (t.description.contains(keyword)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"LeonardYam"},"content":"                filteredTasks.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"LeonardYam"},"content":"        return filteredTasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"LeonardYam"},"content":"    public ArrayList\u003cDeadline\u003e getReminders() {","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"LeonardYam"},"content":"        ArrayList\u003cDeadline\u003e reminders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"LeonardYam"},"content":"        for (Task t: list) {","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"LeonardYam"},"content":"            // Check for Deadlines","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"LeonardYam"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"LeonardYam"},"content":"                reminders.add((Deadline) t);","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"LeonardYam"},"content":"        return reminders;","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"LeonardYam"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"LeonardYam"},"content":"        return this.list;","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LeonardYam":119}},{"path":"src/main/java/bob/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"/** Todo is the most basic type of Task, requiring only a task description */","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"        super(description, \"T\");","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"        return this.description;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"        if (o instanceof Todo) {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"            Todo t \u003d (Todo) o;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"            return this.description.equals(t.description);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"        return false;","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LeonardYam":21}},{"path":"src/main/java/bob/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":" * Ui is a utility class with methods to return decorated text","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"    private String wrapper;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"     * Initialize an instance of Ui with a wrapper string made of character repeating length times","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"     * @param character Character to repeat","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"     * @param length Number of times to repeat the character","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    public Ui(String character, int length) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"        this.wrapper \u003d character.repeat(length);","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    private String getTaskDescription(Task t) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"        assert t !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"        return String.format(\"[%s][%s] %s\", t.getTaskType(), t.getStatusIcon(), t);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    private String wrapString(String s) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        return String.format(\"%s\\n%s\\n%s\\n\", wrapper, s, wrapper);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"     * Returns a string that represents a task list","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"     * @param list Given task list to output","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"     * @return String representation","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"    private String printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"        assert list !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"            return \"No tasks currently!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"        // Iterate through list items sequentially","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"        for (int i \u003d 0, n \u003d list.size(); i \u003c n; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"            Task t \u003d list.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"            String s \u003d String.format(\"%d. %s\", i + 1, getTaskDescription(t));","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"            string.append(s + \"\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"        return string.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"    public String errorPrint(BobException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"        assert e !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"        return wrapString(\"Sorry! An error has occurred :(\") + e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"    public String printFilteredTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"        assert list !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"        // No matching tasks found","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"            return wrapString(\"No matching tasks found!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"        return wrapString(\"Matching tasks:\") + printList(list);","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"    public String printTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"        assert list !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":"        return wrapString(\"Current task list: \") + printList(list);","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"    public String printReminders(ArrayList\u003cDeadline\u003e reminders) {","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"        assert reminders !\u003d null;","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"        // No deadline tasks found","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"        if (reminders.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"            return wrapString(\"No deadlines \");","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"LeonardYam"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"LeonardYam"},"content":"        // Iterate through list items sequentially","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"LeonardYam"},"content":"        for (int i \u003d 0, n \u003d reminders.size(); i \u003c n; i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"LeonardYam"},"content":"            Deadline d \u003d reminders.get(i);","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"LeonardYam"},"content":"            String s \u003d String.format(\"%d. %s | %s\", i + 1, d.description, d.deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"LeonardYam"},"content":"            string.append(s);","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"LeonardYam"},"content":"            if (d.isOverdue()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"LeonardYam"},"content":"                string.append(\" (overdue!) \");","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"LeonardYam"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"LeonardYam"},"content":"            string.append(\"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"LeonardYam"},"content":"        return wrapString(\"Reminders on your deadlines: \") + string;","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"LeonardYam"},"content":"    public String printIntroduction() {","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"LeonardYam"},"content":"        return \"Hi, my name is Bob :)\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"LeonardYam"},"content":"                + \"How may I help you?\";","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"LeonardYam"},"content":"    public String printTaskAdded(Task t) {","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"LeonardYam"},"content":"        assert t !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"LeonardYam"},"content":"        return wrapString(\"Successfully added a new task :)\")","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"LeonardYam"},"content":"                + getTaskDescription(t);","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"LeonardYam"},"content":"    public String printMarkTask(Task t) {","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"LeonardYam"},"content":"        assert t !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"LeonardYam"},"content":"        return wrapString(\"Successfully marked a task :)\")","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"LeonardYam"},"content":"                + getTaskDescription(t);","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"LeonardYam"},"content":"    public String printUnmarkTask(Task t) {","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"LeonardYam"},"content":"        assert t !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"LeonardYam"},"content":"        return wrapString(\"Successfully unmarked a task :)\")","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"LeonardYam"},"content":"                + getTaskDescription(t);","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"LeonardYam"},"content":"    public String printDeleteTask(Task t) {","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"LeonardYam"},"content":"        assert t !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"LeonardYam"},"content":"        return wrapString(\"Successfully deleted a task :)\")","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"LeonardYam"},"content":"                + getTaskDescription(t);","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LeonardYam":120}},{"path":"src/test/java/bob/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"    public void parseTodo_normalInput_returnTodo() throws BobException {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"        String input \u003d \"todo homework\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"        Todo expected \u003d new Todo(\"homework\");","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"        Todo actual \u003d Parser.parseTodo(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"    public void parseTodo_invalidInput_throwException() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"        String invalidInput \u003d \"todo\";","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"        BobException e \u003d assertThrows(BobException.class, () -\u003e Parser.parseTodo(invalidInput));","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(\"Error: Invalid todo command!\", e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"    public void parseDeadline_normalInput_returnDeadline() throws BobException {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        String input \u003d \"deadline submission /by 2023-02-17\";","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"        Deadline expected \u003d new Deadline(\"submission\", LocalDate.parse(\"2023-02-17\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"        Deadline actual \u003d Parser.parseDeadline(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(expected.description, actual.description);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"    public void parseDeadline_invalidInput_throwException() {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"        String invalidInput \u003d \"deadline /by 2011-03-11\";","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"        BobException e \u003d assertThrows(BobException.class, () -\u003e Parser.parseDeadline(invalidInput));","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(\"Error: Invalid deadline command!\", e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"    public void parseEvent_normalInput_returnEvent() throws BobException {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"        String input \u003d \"event iP /from 2023-01-01 /to 2023-02-16\";","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"        Event expected \u003d new Event(\"iP\", LocalDate.parse(\"2023-01-01\"), LocalDate.parse(\"2023-02-16\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"        Event actual \u003d Parser.parseEvent(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"    public void parseEvent_invalidInput_throwException() {","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"        String invalidInput \u003d \"event iP /to 2011-01-01 /from 2010-01-01\";","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"        BobException e \u003d assertThrows(BobException.class, () -\u003e Parser.parseEvent(invalidInput));","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(\"Error: Invalid event command!\", e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LeonardYam":54}},{"path":"src/test/java/bob/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package bob;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    public void init() {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    public void mark_validIndex_markedTask() throws BobException {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"        Todo t \u003d new Todo(\"test\");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"        tasks.mark(1);","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"        boolean isMarked \u003d tasks.get(1).isDone;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(isMarked, true);","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"    public void unmark_outOfRangeIndex_throwException() {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"        Todo t \u003d new Todo(\"test\");","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"        int invalidIndex \u003d 2;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"        BobException e \u003d assertThrows(BobException.class, () -\u003e tasks.mark(invalidIndex));","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(\"Error: Index given should be in range [1-1]\", e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"    public void delete_emptyList_throwException() {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"        int deleteIndex \u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"        BobException e \u003d assertThrows(BobException.class, () -\u003e tasks.delete(deleteIndex));","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"        assertEquals(\"Error: Task list is empty!\", e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LeonardYam":41}}]
