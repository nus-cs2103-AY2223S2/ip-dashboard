[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LiuMC-SG":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"javafx {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    version \u003d \"11\"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"LiuMC-SG":12,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":" * A chatbot named duke that can process the commands in command line format. The chatbot allows for the adding of","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":" * todo, deadline and event tasks into a task list which can be viewed. Furthermore, the tasks can be marked as done","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":" * or not done to keep track of the progress. The tasks can be deleted as well. Finally, the chatbot is able to save","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":" * and load the data of the tasks on start and ending of its operation.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"     * Able to deal with the loading and storing of data of the respective tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    private final Storage STORAGE;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"     * The list of tasks that is being tracked by the chatbot.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * Sends out the display of the respective tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    private final TextUi UI;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     * Load a new chatbot with a new ui and storage. It obtains the data of the tasks stored if they are present. If","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"     * not, a new empty list of tasks is assigned instead.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"     * @param filePath The file path of where the tasks are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        UI \u003d new TextUi();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"        STORAGE \u003d new Storage(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"            taskList \u003d new TaskList(STORAGE.load());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"            UI.showError(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"     * The main processing of the commands that are sent to the chatbot.","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"     * The welcome text is shown first. Following that, the parser takes care of parsing all the commands to","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"     * respective classes to be interpreted and executed. If there is an exception, it is displayed for the user to","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"     * take note of when keying in their next command. Finally, an exit message is shown at the termination of the","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"     * chatbot and the tasks data are stored.","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"    @Deprecated","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"    public void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"        UI.showWelcome();","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"                String fullCommand \u003d UI.readCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"                UI.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"                c.execute(taskList, UI, STORAGE);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"                UI.showError(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"                UI.showMsg(\"Unknown command/error not caught!\\n Please try again!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"            } finally {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"                UI.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"     * Gets the welcome message by the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The welcome message by the chatbot","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"    public String getWelcome() {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"        return UI.showWelcome();","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"     * Gets the response for the user input in a string representation to be displayed out by the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"     * @param input The command input by the user","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The string representation of the response based on the command","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"LiuMC-SG"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"LiuMC-SG"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"LiuMC-SG"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"LiuMC-SG"},"content":"            String output \u003d c.execute(taskList, UI, STORAGE);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"LiuMC-SG"},"content":"            return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"LiuMC-SG"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"LiuMC-SG"},"content":"            return \"Unknown command/error not caught!\\n Please try again!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LiuMC-SG":96,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":" * An exception class for the chatbot with the provided hints in the exception message.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"     * A Datetime Format Exception for when the user keys in a datetime format that is not recognised by the chatbot","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"     * and provides a hint on the structure of the date to be input.","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"    public static final DukeException DATETIME_FORMAT \u003d new DukeException(","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"            \"Only datetime format of 2023-01-01 is accepted\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a new exception that comprised of the hint to be displayed.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     * @param message The hint to be displayed","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"        super(message);","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"LiuMC-SG":22}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":" * Launcher for the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LiuMC-SG":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.fxui.MainWindow;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":" * The main process for starting the GUI for the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    private final Duke DUKE \u003d new Duke(\"data\" + File.separator + \"tasks.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * Creates a GUI with title of duke chatbot. It loads the main gui scene of the chatbot and sets it up.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     *              primary stages.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"            VBox vBox \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"            Scene scene \u003d new Scene(vBox);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"            stage.setTitle(\"Duke Chatbot\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(DUKE);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LiuMC-SG":44}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":" * A parser that parses all the user text based commands into the respective commands to be executed.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks on whether the command is recognised. If it is, a corresponding command is returned. Otherwise, an","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"     * exception is throw to inform them that the command does not exit.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     * @param fullCommand The full string test command that the user input","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The respective command that the user called for","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"        String[] inputSplit \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"        String command \u003d inputSplit[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"        switch (command) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"            return new ExitCommand(command);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"        case \"list\":","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"            return new ListCommand(command);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"            if (inputSplit.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Mark command missing list numbering.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"            return new MarkCommand(command, inputSplit[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"            if (inputSplit.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Unmark command missing list numbering.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"            return new UnmarkCommand(command, inputSplit[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"            if (inputSplit.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Todo command missing description.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"            return new AddTodoCommand(command, inputSplit[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"            if (inputSplit.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Deadline command missing description.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"            return new AddDeadlineCommand(command, inputSplit[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"            if (inputSplit.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Event command missing description.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"            return new AddEventCommand(command, inputSplit[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"            if (inputSplit.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Delete command missing list numbering.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"            return new DeleteCommand(command, inputSplit[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"        case \"find\":","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"            if (inputSplit.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Find command missing terms.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"            return new FindCommand(command, inputSplit[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Sorry but I don\u0027t understand what this means.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":72}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":" * Storage interface that deals with the loading and storing of the tasks data.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"     * The file path where the tasks data are stored.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a new storage interface with the file path of the tasks data provided.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     * @param filePath The file path where the tasks data are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"        FILE_PATH \u003d filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     * Attempt to load the tasks based on the data of the tasks provided. If the file does not exist, then a new","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     * blank file is created instead. Throws an exception if the program cannot create a new file or there is an","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     * error obtaining the data from the file path.","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * @return A list of tasks loaded from the file path","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"            File file \u003d new File(this.FILE_PATH);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"                Task task \u003d readFromData(data);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"                if (!task.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"            scanner.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"            if (!(e instanceof FileNotFoundException)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Unexpected error when getting data.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"            File file \u003d new File(this.FILE_PATH);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"                throw new DukeException(\"Error when trying to create new file.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"     * Saves all the tasks into their corresponding string representation to be loaded in the future. Throws an","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"     * exception if there is an error accessing or saving the data to the file path.","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList The list of tasks to be saved","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"     * @throws DukeException If there is an error saving the data of the tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"    public void updateData(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.FILE_PATH);","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"            String data \u003d toData(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"            fileWriter.write(data);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Error has occurred when saving data.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"LiuMC-SG"},"content":"     * Converts the list of tasks provided to the corresponding string representation to be saved.","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList The list of tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The string representation of all the tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"LiuMC-SG"},"content":"    private String toData(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"LiuMC-SG"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"LiuMC-SG"},"content":"            output +\u003d task.toData();","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"LiuMC-SG"},"content":"            output +\u003d \"\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"LiuMC-SG"},"content":"        return output;","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"LiuMC-SG"},"content":"     * Converts a string representation of the task into its respective task object and is returned.","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"LiuMC-SG"},"content":"     * @param data The string representation of the task data","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"LiuMC-SG"},"content":"     * @return A corresponding task to the provided data","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"LiuMC-SG"},"content":"     * @throws DukeException If the string representation does not match any format of tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"LiuMC-SG"},"content":"    private Task readFromData(String data) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"LiuMC-SG"},"content":"        String[] typeSplit \u003d data.split(\" \\\\| \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"LiuMC-SG"},"content":"        switch (typeSplit[0]) {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"LiuMC-SG"},"content":"        case \"Todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"LiuMC-SG"},"content":"            return Todo.readFromData(typeSplit[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"LiuMC-SG"},"content":"        case \"Deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"LiuMC-SG"},"content":"            return Deadline.readFromData(typeSplit[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"LiuMC-SG"},"content":"        case \"Event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"LiuMC-SG"},"content":"            return Event.readFromData(typeSplit[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"LiuMC-SG"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Unknown entry in data file\");","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":123}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":" * Tasklist object that allows abstraction to track and edit the list of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"     * The list of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    private final ArrayList\u003cTask\u003e TASKS;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a new empty list of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"        TASKS \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a list of tasks with those provided.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"        TASKS \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The list of tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"        return TASKS;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"     * Adds the provided task into the list of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"     * @param task New task to be added into the list","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"        TASKS.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"     * Returns the number of tasks in the list of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The number of tasks in the list","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"    public int size() {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"        return TASKS.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":58}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to add a new deadline task. The action of adding the task can be carried out","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":" * when called.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     * The description and due date stored as string representation.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    private final String DATA;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to add new deadline task.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The add deadline command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * @param data          The description and due date of the deadline task","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"    public AddDeadlineCommand(String commandString, String data) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.ADD_DEADLINE, commandString);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"        DATA \u003d data;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"     * Adds a new deadline task into the task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     * The due date is filtered out. If it exists, then a deadline task will be created. Otherwise, an exception","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     * would be thrown stating that a due date was not specified.","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        String[] splitData \u003d DATA.split(\" /by \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"        if (splitData.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Deadline command format error. Missing /by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"        Task deadline \u003d new Deadline(splitData[0], splitData[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"        return ui.showAddTask(deadline.toString(), taskList.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":52}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to add a new event task. The action of adding the task can be carried out when","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":" * called.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     * The description, start and end date of the event task.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    private final String DATA;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to add new event task.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The add event command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * @param data          The description, start and end date of the event task","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"    public AddEventCommand(String commandString, String data) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.ADD_EVENT, commandString);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"        DATA \u003d data;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"     * Adds a new event task into the task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     * The start and end dates are filtered out. If they exist, then an event task will be created. Otherwise, an","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     * exception would be thrown stating that either the start or end dates were not specified.","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        String[] splitData1 \u003d DATA.split(\" /from \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"        if (splitData1.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Event command format error. Missing /from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"        String[] splitData2 \u003d splitData1[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"        if (splitData2.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Event command format error. Missing /to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"        Task event \u003d new Event(splitData1[0], splitData2[0], splitData2[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"        taskList.addTask(event);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"        return ui.showAddTask(event.toString(), taskList.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":57}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to add a new todo task. The action of adding the task can be carried out when","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":" * called.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     * The description of the todo task.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    private final String DATA;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to add new todo task.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The add todo command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * @param data          The description of the todo task","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"    public AddTodoCommand(String commandString, String data) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.ADD_TODO, commandString);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"        DATA \u003d data;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"     * Adds a new todo task into the task list with the given description.","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"        Task todo \u003d new Todo(DATA);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"        return ui.showAddTask(todo.toString(), taskList.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":45}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":" * A Command stores the command, together with the command string. The appropriate action can be called subsequently","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":" * that correspond towards the actions specified.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"public class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"     * The command stored.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    private final AvailableCommands CURRENT_COMMAND;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * The string representation of the command stored.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    private final String COMMAND_STRING;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     * The list of commands that are available for use.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    public enum AvailableCommands {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"        EXIT,","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"        LIST,","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        MARK,","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"        UNMARK,","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"        DELETE,","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"        ADD_TODO,","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"        ADD_DEADLINE,","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"        ADD_EVENT,","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"        FIND","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command object.","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"     * @param currentCommand Command being stored that needs to be carried out","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString  String representation of the command stored","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"    public Command(AvailableCommands currentCommand, String commandString) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"        CURRENT_COMMAND \u003d currentCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"        COMMAND_STRING \u003d commandString;","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"     * Executes the command being stored.","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"        return ui.showError(String.format(\"Error processing %s command\", COMMAND_STRING));","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks whether it is the exit command.","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"     * @return Boolean result on whether it is the exit command","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"        return CURRENT_COMMAND \u003d\u003d AvailableCommands.EXIT;","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"     * Check whether the string representation of the index is an integer. If it is, check again whether it is within","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"     * the bounds of the list of tasks stored. Then, return the valid integer representation of the index. Otherwise,","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"     * throw an exception stating the issue with the string representation of the index.","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"     * @param indexStr String representation of the index being checked","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"     * @param tasks    List of tasks being referenced upon","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The integer representation of the index that was in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"     * @throws DukeException If the string representation of index is not an integer or out of bounds of task list","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"    protected int isValidIndex(String indexStr, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"        Pattern pattern \u003d Pattern.compile(\"^[0-9]+$\");","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"        boolean isNumber \u003d pattern.matcher(indexStr).matches();","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"LiuMC-SG"},"content":"        if (!isNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Index provided is not an integer.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"LiuMC-SG"},"content":"        int index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"LiuMC-SG"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Index out of bounds of tasks list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"LiuMC-SG"},"content":"        return index;","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":99}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to delete a task. The action of deleting the task can be carried out when called.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     * The string representation of the index to be deleted.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    private final String INDEX_STRING;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to delete a task.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The delete command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     * @param indexString   The string representation of the index to be deleted","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    public DeleteCommand(String commandString, String indexString) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.DELETE, commandString);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"        INDEX_STRING \u003d indexString;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     * Deletes the task in the task list with the given index.","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks if the index in string representation is valid. If so, deletes the appropriate task. Otherwise, throw","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     * an exception that states the issue with the string representation of the index.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"        int index \u003d isValidIndex(INDEX_STRING, tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"        return ui.showDeleteTask(task.toString(), tasks.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":51}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to quit the chatbot. The action of exiting the chatbot can be carried out when","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":" * called.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to exit the chatbot.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The exit command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    public ExitCommand(String commandString) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.EXIT, commandString);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * Exits the chatbot and shows the exit message.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     * @param tasklist List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList tasklist, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"        String exitMsg \u003d \"Thank you for coming!\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"                + \"Hope to see you again soon!\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"                + \"~~Bye\";","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d ui.showMsg(exitMsg);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"        storage.updateData(tasklist);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"        ui.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"        return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to find all tasks that match the specific term as a substring. The action of","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":" * finding the tasks that match can be carried out when called.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"     * The finding term.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    private final String KEYWORD;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to find all tasks that match the specific term as a substring.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The find command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     * @param term          The finding term","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"    public FindCommand(String commandString, String term) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.FIND, commandString);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"        KEYWORD \u003d term;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"     * Finds all tasks that matches the finding term. Display out a numbered list of all of these tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"        String msgHeader \u003d \"These are the tasks with matching descriptions in them:\";","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d ui.showMsg(msgHeader);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"            if (task.isInDescription(KEYWORD)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"                String msg \u003d String.format(\"%d. %s\", counter++, task);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"                output +\u003d ui.showMsg(msg);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"        return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":51}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to list the tasks in the task list. The action of listing the task can be carried","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" * out when called.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to list the tasks saved in the task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The list command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    public ListCommand(String commandString) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.LIST, commandString);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to list out the tasks in the task list in their string representation.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        String msgHeader \u003d \"Current data in the list are:\";","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d ui.showMsg(msgHeader);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"            String msg \u003d String.format(\"%d. %s\", i + 1, tasks.get(i));","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"            output +\u003d \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"            output +\u003d ui.showMsg(msg);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"        return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":46}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to mark a task as done. The action of marking the task as done when called.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     * The string representation of the index to be marked as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    private final String INDEX_STRING;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to mark a task as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The mark command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * @param indexString   The string representation of the index to be marked as done","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"    public MarkCommand(String commandString, String indexString) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.MARK, commandString);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"        INDEX_STRING \u003d indexString;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"     * Marks the task as done in the task list with the given index.","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks if the index in string representation is valid. If so, mark the appropriate task as done. Otherwise,","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     * throw an exception that states the issue with the string representation of the index.","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskList List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui       UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage  Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList taskList, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"        int index \u003d isValidIndex(INDEX_STRING, tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"        tasks.get(index).markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"        String msgHeader \u003d \"I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d ui.showMsg(msgHeader);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"        output +\u003d \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"        output +\u003d ui.showMsg(tasks.get(index).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"        return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":55}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import duke.textui.TextUi;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":" * A command that stores the command to unmark a task as not done. The action of unmarking the task can be carried out","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" * when called.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     * The string representation of the index to be unmarked as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    private final String INDEX_STRING;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a command to unmark a task as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * @param commandString The unmark command in string representation","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     * @param indexString   The string representation of the index to be unmarked as not done","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    public UnmarkCommand(String commandString, String indexString) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"        super(AvailableCommands.UNMARK, commandString);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"        INDEX_STRING \u003d indexString;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     * Unmark the task as not done in the task list with the given index.","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks if the index in string representation is valid. If so, unmark the appropriate task as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     * Otherwise, throw an exception that states the issue with the string representation of the index.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     * @param tasks   List of tasks that are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * @param ui      UI to deal with the visual output","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     * @param storage Storage to deal with input and output of data","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"    public String execute(TaskList tasks, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"        ArrayList\u003cTask\u003e t \u003d tasks.getTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"        int index \u003d isValidIndex(INDEX_STRING, t);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"        t.get(index).unmarkTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"        String msgHeader \u003d \"I\u0027ve unmarked this task as not done:\";","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d ui.showMsg(msgHeader);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"        output +\u003d \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"        output +\u003d ui.showMsg(t.get(index).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"        return output;","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":56}},{"path":"src/main/java/duke/fxui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.fxui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":" * Dialog box consisting of the response of the chatbot or the query/command by the user. It shows the profile image","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":" * icon on whom the message is from and the message content itself. The chatbot dialog box would be aligned to the","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":" * left side, while the one by the user is aligned to the right side.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * The container for text displayed in the dialog box.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"     * Icon image of the user/chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"    private ImageView displayImage;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a dialog box with the provided text, with the corresponding profile image. It is right aligned.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     * @param text  The text to be displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * @param image The profile image","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"    private DialogBox(String text, Image image) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"        displayImage.setImage(image);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"        setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"        // Expands label to fit the text inside label","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"        dialog.setMinWidth(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"     * Flips the dialog box to be left aligned.","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"     * Factory constructor to create a dialog box corresponding to the user. Specifically, the dialog box is right","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"     * aligned with the respective text and profile image of the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"     * @param text  The text to be displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"     * @param image The profile image","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"     * @return A user dialog box","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"    public static DialogBox getUserDialog(String text, Image image) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"        return new DialogBox(text, image);","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"     * Factory constructor to create a dialog box corresponding to the chatbot. Specifically, the dialog box is left","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"     * aligned with the respective text and profile image of the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"     * @param text  The text to be displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"     * @param image The profile image","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"LiuMC-SG"},"content":"     * @return A chatbot dialog box","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"LiuMC-SG"},"content":"    public static DialogBox getDukeDialog(String text, Image image) {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"LiuMC-SG"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, image);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"LiuMC-SG"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"LiuMC-SG"},"content":"        return dialogBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LiuMC-SG":94}},{"path":"src/main/java/duke/fxui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.fxui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":" * The main GUI window where the user input and chatbot responses are shown. The user can key in their commands to be","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" * processed by the chatbot here and obtain the corresponding response.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"public class MainWindow extends VBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     * The scrollPane responsible for allowing the ability to scroll through user input and responses by the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     * The container that stores all the dialog boxes by the user and chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     * The text field where users key in their commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"     * The button for user to click to send their command.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * The chatbot instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"     * The profile image of the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"     * The profile image of the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"     * Initialises the scrollPane to have a container that contains all the dialog boxes so that it is scrollable.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"     * Sets a reference that the duke chatbot started and shows the welcome message by the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"     * @param duke Duke instance","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"                DialogBox.getDukeDialog(duke.getWelcome(), dukeImage)","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"     * Handles the command by the user. The command by the user is processed and a response is obtained. Dialog boxes","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"     * for the user command and the chatbot response is displayed in the GUI. The text field is cleared afterwards.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LiuMC-SG":86}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" * A deadline task object that stores its description, the due date and on whether is it done or not. The task can be","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":" * marked as done or unmarked as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     * The due date of the deadline task.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    private LocalDate by;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a deadline task with the given description and due date. It checks on whether the due date is","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * in the appropriate format first. If it is not, an exception is throw to provide hints on the due date format.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     * @param by          The due date of the deadline task","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"            throw DukeException.DATETIME_FORMAT;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Unknown error occurred when parsing datetime.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a deadline task with the given description, due date and its status of completion. It checks on","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"     * whether the due date is in the appropriate format first. If it is not, an exception is throw to provide hints","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"     * on the due date format.","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"     * @param by          The due date of the deadline task","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"     * @param isMarked    Whether the deadline task is done or not","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"    public Deadline(String description, String by, boolean isMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"        this(description, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"        isDone \u003d isMarked;","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"        String formattedBy \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), formattedBy);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"    public String toData() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"        String formattedBy \u003d by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"        return String.format(\"Deadline | marked: %s ; description: %s ; deadline: %s\", getMarkedStatus(),","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"                this.description, formattedBy);","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks on whether the string representation of the deadline task is the same format as the one exported. If it","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"     * is, then a new task is created with the described properties. Otherwise, return an empty task.","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"     * @param data String representation of a deadline task","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"     * @return A deadline task object that describes the given data of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"    public static Task readFromData(String data) {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"        Pattern pattern \u003d Pattern.compile(\"(marked:) (.*) ; (description:) (.*) ; (deadline:) (.*)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"        Matcher matcher \u003d pattern.matcher(data);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"            boolean isMarked \u003d matcher.group(2).equals(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"            String description \u003d matcher.group(4);","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"            String deadline \u003d matcher.group(6);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"            return new Deadline(description, deadline, isMarked);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"        return Task.EMPTY_TASK;","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"LiuMC-SG":85}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":" * An event task object that stores its description, the start and end date of the event and on whether is it done or","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":" * not. The task can be marked as done or unmarked as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     * The start date of the event.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    private LocalDate from;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     * The end date of the event.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"    private LocalDate to;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for an event task with the given description, start and end date. It checks on whether the start","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     * and end dates are in the appropriate format first. If it is not, an exception is throw to provide hints on the","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"     * start and end dates format.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"     * @param description The description of the event task","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"     * @param from        The start date of the event","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"     * @param to          The end date of the event","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"            throw DukeException.DATETIME_FORMAT;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"            throw new DukeException(\"Unknown error occurred when parsing datetime.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a deadline task with the given description, start date, end date and its status of completion.","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"     * It checks on whether the start and end dates are in the appropriate format first. If it is not, an exception","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"     * is throw to provide hints on the start and end dates format.","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"     * @param description The description of the event task","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"     * @param from        The start date of the event","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"     * @param to          The end date of the event","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"     * @param isMarked    Whether the event task is done or not","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"    public Event(String description, String from, String to, boolean isMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"        this(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"        isDone \u003d isMarked;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"        String formattedFrom \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"        String formattedTo \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"        return String.format(\"[E]%s (from: %s, to: %s)\", super.toString(), formattedFrom, formattedTo);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"    public String toData() {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"        String formattedFrom \u003d from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"        String formattedTo \u003d to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"        return String.format(\"Event | marked: %s ; description: %s ; from: %s ; to: %s\", getMarkedStatus(),","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"                description, formattedFrom, formattedTo);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks on whether the string representation of the event task is the same format as the one exported. If it is,","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"     * then a new task is created with the described properties. Otherwise, return an empty task.","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"     * @param data String representation of a event task","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"     * @return An event task object that describes the given data of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"    public static Task readFromData(String data) {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"        Pattern pattern \u003d Pattern.compile(\"(marked:) (.*) ; (description:) (.*) ; (from:) (.*) ; (to:) (.*)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"        Matcher matcher \u003d pattern.matcher(data);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"LiuMC-SG"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"LiuMC-SG"},"content":"            boolean isMarked \u003d matcher.group(2).equals(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"LiuMC-SG"},"content":"            String description \u003d matcher.group(4);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"LiuMC-SG"},"content":"            String from \u003d matcher.group(6);","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"LiuMC-SG"},"content":"            String to \u003d matcher.group(8);","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"LiuMC-SG"},"content":"            return new Event(description, from, to, isMarked);","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"LiuMC-SG"},"content":"        return Task.EMPTY_TASK;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"LiuMC-SG":96}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":" * A task stores its description and on whether is it done or not. The task can be marked as done or unmarked as not","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":" * done.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"     * An empty task.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"    public static final Task EMPTY_TASK \u003d new Task(\"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"     * The description of the task.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     * Tracks whether the task is done or not.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a new task with the given description.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a task with the provided description and its status of completion.","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"     * @param isDone      Whether the task is done or not","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"        this(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks the completion status of the task and returns a string representation of it.","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"     * @return String representation of completion status","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"     * Unmark the task as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"     * Provides a string representation of the task to be displayed by the chatbot.","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"     * @return String representation of task to be displayed","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks the current task on whether it is an empty task.","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"     * @return Boolean on whether it is an empty task","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"        return equals(EMPTY_TASK);","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"LiuMC-SG"},"content":"     * Return string representation of the marked status","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"LiuMC-SG"},"content":"     * @return String representation of marked status","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"LiuMC-SG"},"content":"    public String getMarkedStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"LiuMC-SG"},"content":"        return isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"LiuMC-SG"},"content":"     * Creates a string representation of the task so that it can be imported in the future.","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"LiuMC-SG"},"content":"     * @return String representation of task to be stored for future imports","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"LiuMC-SG"},"content":"    public String toData() {","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"LiuMC-SG"},"content":"        return String.format(\"Task | marked: %s ; description: %s\", getMarkedStatus(), description);","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks on whether the string representation of the task is the same format as the one exported. If it is, then a","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"LiuMC-SG"},"content":"     * new task is created with the described properties. Otherwise, return an empty task.","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"LiuMC-SG"},"content":"     * @param data String representation of a task","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"LiuMC-SG"},"content":"     * @return A task object that describes the given data of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"LiuMC-SG"},"content":"    public static Task readFromData(String data) {","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"LiuMC-SG"},"content":"        Pattern pattern \u003d Pattern.compile(\"(marked:) (.*) ; (description:) (.*)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"LiuMC-SG"},"content":"        Matcher matcher \u003d pattern.matcher(data);","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"LiuMC-SG"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"LiuMC-SG"},"content":"            boolean isMarked \u003d matcher.group(2).equals(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"LiuMC-SG"},"content":"            String description \u003d matcher.group(4);","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"LiuMC-SG"},"content":"            return new Task(description, isMarked);","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"LiuMC-SG"},"content":"        return Task.EMPTY_TASK;","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"LiuMC-SG"},"content":"    public boolean isInDescription(String term) {","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"LiuMC-SG"},"content":"        return description.contains(term);","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":128,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"LiuMC-SG":128}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":" * A todo task object that stores its description and on whether is it done or not. The task can be marked as done or","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":" * unmarked as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a todo task with the given description.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a todo task with the provided description and its status of completion.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"     * @param isMarked    Whether the todo task is done or not","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    public Todo(String description, boolean isMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"        this(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"        this.isDone \u003d isMarked;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"    public String toData() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"        return String.format(\"Todo | marked: %s ; description: %s\", getMarkedStatus(), description);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"     * Checks on whether the string representation of the todo task is the same format as the one exported. If it is,","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"     * then a new task is created with the described properties. Otherwise, return an empty task.","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"     * @param data String representation of a todo task","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"     * @return A todo task object that describes the given data of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"    public static Task readFromData(String data) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"        Pattern pattern \u003d Pattern.compile(\"(marked:) (.*) ; (description:) (.*)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"        Matcher matcher \u003d pattern.matcher(data);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"            boolean isMarked \u003d matcher.group(2).equals(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"            String description \u003d matcher.group(4);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"            return new Todo(description, isMarked);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"        return Task.EMPTY_TASK;","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"LiuMC-SG":60}},{"path":"src/main/java/duke/textui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.textui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":" * UI that deals with the display of data for the user once the chatbot is started up.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"public class TextUi {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"     * Divider line.","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"    private static final String LINE \u003d \"__________________________________________\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"     * A scanner that scans for user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    private final Scanner SCANNER;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"     * Constructor for a new UI with a scanner.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"    public TextUi() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"        SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"     * Displays the welcome message when the chatbot is started.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The string being displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"        String introMsg \u003d \"Hello! I\u0027m Duke.\\nWhat can I do for you today?\";","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d concatMsgs(LINE, logo, introMsg, LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"        return showMsg(output);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"     * Display a divider line.","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The string being displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"    public String showLine() {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"        return showMsg(TextUi.LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"     * Display the message provided.","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"     * @param msg The message to be displayed","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The string being displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"    public String showMsg(String msg) {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"        return msg;","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"     * Displays the error/hint message.","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"     * @param errorMsg The error/hint message","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The string being displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"    public String showError(String errorMsg) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d concatMsgs(errorMsg, \"Please try again!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"        return showMsg(output);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"     * Displays the string representation of the task being added, together with the new updated number of tasks in","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"     * the task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskString The string representation of the task being added","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"     * @param size       The number of tasks in the list of tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The string being displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"    public String showAddTask(String taskString, int size) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"        String msgHeader \u003d \"I\u0027ve added this task into the list:\";","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"        String msgFooter \u003d String.format(\"Now you have a total of %s tasks in the list\", size);","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d concatMsgs(msgHeader, taskString, msgFooter);","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"LiuMC-SG"},"content":"        return showMsg(output);","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"LiuMC-SG"},"content":"     * Displays the string representation of the task being deleted, together with the new updated number of tasks in","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"LiuMC-SG"},"content":"     * the task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"LiuMC-SG"},"content":"     * @param taskString The string representation of the task being deleted","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"LiuMC-SG"},"content":"     * @param size       The number of tasks in the list of tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The string being displayed","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"LiuMC-SG"},"content":"    public String showDeleteTask(String taskString, int size) {","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"LiuMC-SG"},"content":"        String msgHeader \u003d \"I\u0027ve deleted this task into the list:\";","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"LiuMC-SG"},"content":"        String msgFooter \u003d String.format(\"Now you have a total of %s tasks in the list\", size);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"LiuMC-SG"},"content":"        String output \u003d concatMsgs(msgHeader, taskString, msgFooter);","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"LiuMC-SG"},"content":"        return showMsg(output);","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"LiuMC-SG"},"content":"     * Scans and returns the full string representation of the command input.","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"LiuMC-SG"},"content":"     * @return The full string representation of the command","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"LiuMC-SG"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"LiuMC-SG"},"content":"        return SCANNER.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"LiuMC-SG"},"content":"     * Closes the scanner that reads user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"LiuMC-SG"},"content":"    public void close() {","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"LiuMC-SG"},"content":"        SCANNER.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"LiuMC-SG"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"LiuMC-SG"},"content":"     * Joins all the string messages into a single string separated by a new line.","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"LiuMC-SG"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"LiuMC-SG"},"content":"     * @param msgs All the messages to be joined together","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"LiuMC-SG"},"content":"     * @return A joined single string of all the messaged","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"LiuMC-SG"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"LiuMC-SG"},"content":"    public String concatMsgs(String... msgs) {","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"LiuMC-SG"},"content":"        return String.join(\"\\n\", msgs);","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":132}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"        \u003cImageView fx:id\u003d\"displayImage\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"                   HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LiuMC-SG":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"\u003c!--","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"  Copyright (c) 2015, 2019, Gluon and/or its affiliates.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"  All rights reserved. Use is subject to license terms.","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"  This file is available and licensed under the following license:","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"  Redistribution and use in source and binary forms, with or without","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"  modification, are permitted provided that the following conditions","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"  are met:","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"  - Redistributions of source code must retain the above copyright","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    notice, this list of conditions and the following disclaimer.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"  - Redistributions in binary form must reproduce the above copyright","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    notice, this list of conditions and the following disclaimer in","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    the documentation and/or other materials provided with the distribution.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"  - Neither the name of Oracle Corporation nor the names of its","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"    contributors may be used to endorse or promote products derived","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"    from this software without specific prior written permission.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"--\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"LiuMC-SG"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"LiuMC-SG"},"content":"\u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"LiuMC-SG"},"content":"      prefWidth\u003d\"1280.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"LiuMC-SG"},"content":"      fx:controller\u003d\"duke.fxui.MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"LiuMC-SG"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"LiuMC-SG"},"content":"        \u003cMenuBar VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"LiuMC-SG"},"content":"            \u003cmenus\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003citems\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"LiuMC-SG"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"LiuMC-SG"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Commands\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"LiuMC-SG"},"content":"                \u003c/Menu\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/menus\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"LiuMC-SG"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"LiuMC-SG"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"200.0\"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"LiuMC-SG"},"content":"                    prefWidth\u003d\"200.0\" vbarPolicy\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"LiuMC-SG"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"LiuMC-SG"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"LiuMC-SG"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"LiuMC-SG"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"LiuMC-SG"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"LiuMC-SG"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"LiuMC-SG"},"content":"        \u003cHBox alignment\u003d\"BOTTOM_CENTER\" fillHeight\u003d\"false\" prefHeight\u003d\"60.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"LiuMC-SG"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cTextField fx:id\u003d\"userInput\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"LiuMC-SG"},"content":"                           promptText\u003d\"Please input your commands here!\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"LiuMC-SG"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"LiuMC-SG"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"LiuMC-SG"},"content":"                \u003c/TextField\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"LiuMC-SG"},"content":"                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" text\u003d\"Send\"","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"LiuMC-SG"},"content":"                        textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003copaqueInsets\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"LiuMC-SG"},"content":"                        \u003cInsets/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"LiuMC-SG"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"LiuMC-SG"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"LiuMC-SG"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"LiuMC-SG"},"content":"                \u003c/Button\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"LiuMC-SG"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"LiuMC-SG"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"LiuMC-SG"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"LiuMC-SG"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"LiuMC-SG":100}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"class DeadlineTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Deadline toString Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"2022-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[D][ ] test (by: Jan 1 2022)\", deadline.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Deadline (un)marking Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    public void markUnmarkTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"2022-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"        deadline.markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[D][X] test (by: Jan 1 2022)\", deadline.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"        deadline.unmarkTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[D][ ] test (by: Jan 1 2022)\", deadline.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Deadline Export Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    public void exportDataTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"2022-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"Deadline | marked: 0 ; description: test ; deadline: 2022-01-01\", deadline.toData());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"        deadline.markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"Deadline | marked: 1 ; description: test ; deadline: 2022-01-01\", deadline.toData());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":36}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Event toString Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"        Event event \u003d new Event(\"test\", \"2022-01-01\", \"2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[E][ ] test (from: Jan 1 2022, to: Jan 1 2023)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Event (un)marking Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    public void markUnmarkTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"        Event event \u003d new Event(\"test\", \"2022-01-01\", \"2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"        event.markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[E][X] test (from: Jan 1 2022, to: Jan 1 2023)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"        event.unmarkTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[E][ ] test (from: Jan 1 2022, to: Jan 1 2023)\", event.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Event Export Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    public void exportDataTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"        Event event \u003d new Event(\"test\", \"2022-01-01\", \"2023-01-01\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"Event | marked: 0 ; description: test ; from: 2022-01-01 ; to: 2023-01-01\", event.toData());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"        event.markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"Event | marked: 1 ; description: test ; from: 2022-01-01 ; to: 2023-01-01\", event.toData());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":36}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Task toString Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"        Task task \u003d new Task(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[ ] test\", task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Task (un)marking Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    public void markUnmarkTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"        Task task \u003d new Task(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"        task.markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[X] test\", task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"        task.unmarkTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[ ] test\", task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Task Export Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    public void exportDataTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"        Task task \u003d new Task(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"Task | marked: 0 ; description: test\", task.toData());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"        task.markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"Task | marked: 1 ; description: test\", task.toData());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":36}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Todo toString Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[T][ ] test\", todo.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Todo (un)marking Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"    public void markUnmarkTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"        todo.markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[T][X] test\", todo.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"        todo.unmarkTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"[T][ ] test\", todo.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"    @DisplayName(\"Todo Export Test\")","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"LiuMC-SG"},"content":"    public void exportDataTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"LiuMC-SG"},"content":"        Todo todo \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"Todo | marked: 0 ; description: test\", todo.toData());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"LiuMC-SG"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"LiuMC-SG"},"content":"        todo.markTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"LiuMC-SG"},"content":"        assertEquals(\"Todo | marked: 1 ; description: test\", todo.toData());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"LiuMC-SG"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"LiuMC-SG"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"LiuMC-SG":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LiuMC-SG"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"LiuMC-SG"},"content":"blah","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"LiuMC-SG"},"content":"read book","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"LiuMC-SG"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"LiuMC-SG"},"content":"mark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"LiuMC-SG"},"content":"unmark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"LiuMC-SG"},"content":"unmark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"LiuMC-SG"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"LiuMC-SG"},"content":"todo borrow book","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"LiuMC-SG"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"LiuMC-SG"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"LiuMC-SG"},"content":"todoborrow book","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"LiuMC-SG"},"content":"deadline return book /bySunday","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"LiuMC-SG"},"content":"event project meeting /fromMon 2pm /to 4pm","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"LiuMC-SG"},"content":"todo abc","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"LiuMC-SG"},"content":"deadline def /by xyz","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"LiuMC-SG"},"content":"event hij /from qwerty 2pm /to asdfg","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"LiuMC-SG"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"LiuMC-SG"},"content":"mark 3","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"LiuMC-SG"},"content":"mark 5","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"LiuMC-SG"},"content":"mark 7","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"LiuMC-SG"},"content":"mark 8","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"LiuMC-SG"},"content":"mark 10","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"LiuMC-SG"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"LiuMC-SG"},"content":"unmark 5","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"LiuMC-SG"},"content":"unmark 7","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"LiuMC-SG"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"LiuMC-SG"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"LiuMC-SG":28}}]
