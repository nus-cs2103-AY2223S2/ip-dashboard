[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mehvin":2,"-":41}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"[T][ ] work","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"[D][X] return book (by: Feb 2 2019)","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"[E][ ] get best book (from: Jan 12 2020 to: Jan 13 2020)","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":" * Handles Duke, a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    public enum TaskType {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"        TODO,","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"        EVENT,","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"        DEADLINE","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    private static final TaskList list \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    private static final Storage storage \u003d new Storage(list);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"     * Adds task into task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task to be added.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     * @param taskType Task type of task to be added.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"    private static void addTask(String description, TaskType taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"            case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"                Todo todoTask \u003d new Todo(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"                list.add(todoTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"                ui.displayAdded(todoTask.toString(), list.size());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"            case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"                try {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"                    String modifiedDescription \u003d parser.getPostDescription(description, \" /from \");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"                    LocalDate fromDate \u003d parser.getDateTime(parser.getPreDescription(modifiedDescription, \" /to \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"                    LocalDate toDate \u003d parser.getDateTime(parser.getPostDescription(modifiedDescription, \" /to \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"                    Event eventTask \u003d new Event(parser.getPreDescription(description, \" /from \"), fromDate, toDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"                    list.add(eventTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"                    ui.displayAdded(eventTask.toString(), list.size());","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"                    ui.displayInvalidFromToFormat();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"                try {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"                    Deadline deadlineTask \u003d new Deadline(parser.getPreDescription(description, \" /by \"),","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"                            parser.getDateTime(parser.getPostDescription(description, \" /by \")));","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"                    list.add(deadlineTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"                    ui.displayAdded(deadlineTask.toString(), list.size());","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"                    ui.displayInvalidByFormat();","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"        storage.saveToFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"     * Marks task from task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"     * @param itemNo Item number in list to be marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"    private static void mark(int itemNo) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"        list.get(itemNo).setStatus(true);","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"        ui.displayMarked(list.get(itemNo).toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"        storage.saveToFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Mehvin"},"content":"     * Unmarks task from task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Mehvin"},"content":"     * @param itemNo Item number in list to be unmarked.","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Mehvin"},"content":"    private static void unmark(int itemNo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Mehvin"},"content":"        list.get(itemNo).setStatus(false);","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Mehvin"},"content":"        ui.displayUnmarked(list.get(itemNo).toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Mehvin"},"content":"        storage.saveToFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Mehvin"},"content":"     * Deletes task from task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"Mehvin"},"content":"     * @param itemNo Item number in list to be deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Mehvin"},"content":"    private static void delete(int itemNo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Mehvin"},"content":"        ui.displayDeleted(list.get(itemNo).toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"Mehvin"},"content":"        list.remove(itemNo);","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Mehvin"},"content":"        storage.saveToFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Mehvin"},"content":"        ui.displayTotalNumList(list.size());","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"Mehvin"},"content":"     * Searches task containing search inputs.","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"Mehvin"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"Mehvin"},"content":"     * @param searchInput Substring to find if any tasks contains it.","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"Mehvin"},"content":"    private static void find(String searchInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"Mehvin"},"content":"        ui.displayResults(list, searchInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"Mehvin"},"content":"     * Entry point to Duke application where Duke is initialized.","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"Mehvin"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"Mehvin"},"content":"     * @param args Unused arguments that user optionally provides when Duke is launched.","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"Mehvin"},"content":"        ui.displayIntro();","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"Mehvin"},"content":"        boolean isQuit \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"Mehvin"},"content":"        storage.initalizeList();","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"Mehvin"},"content":"        while (!isQuit) {","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"Mehvin"},"content":"            ui.displayRepeatedBlank();","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"Mehvin"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"Mehvin"},"content":"            String cmd \u003d parser.getCmd(userInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"Mehvin"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"Mehvin"},"content":"                switch (cmd) {","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"Mehvin"},"content":"                    case \"bye\":","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Mehvin"},"content":"                        isQuit \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"Mehvin"},"content":"                        ui.displayBye();","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Mehvin"},"content":"                    case \"list\":","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"Mehvin"},"content":"                        ui.displayList(list);","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"Mehvin"},"content":"                    case \"mark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"Mehvin"},"content":"                        mark(Integer.parseInt(parser.getDescription(userInput)) - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"Mehvin"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"Mehvin"},"content":"                        unmark(Integer.parseInt(parser.getDescription(userInput)) - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"Mehvin"},"content":"                    case \"todo\":","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"Mehvin"},"content":"                        addTask(parser.getDescription(userInput), TaskType.TODO);","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"Mehvin"},"content":"                    case \"event\":","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"Mehvin"},"content":"                        addTask(parser.getDescription(userInput), TaskType.EVENT);","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"Mehvin"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"Mehvin"},"content":"                        addTask(parser.getDescription(userInput), TaskType.DEADLINE);","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"Mehvin"},"content":"                    case \"delete\":","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"Mehvin"},"content":"                        delete(Integer.parseInt(parser.getDescription(userInput)) - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"Mehvin"},"content":"                    case \"find\":","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"Mehvin"},"content":"                        find(parser.getDescription(userInput));","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"Mehvin"},"content":"                    default:","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"Mehvin"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"Mehvin"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"Mehvin"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"Mehvin"},"content":"                System.out.println(exception.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"Mehvin"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"Mehvin"},"content":"                ui.displayInvalidInputFormat();","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"Mehvin"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"Mehvin"},"content":"                ui.displayInvalidIntFormat();","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Mehvin":163,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":" * Handles exception for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"     * @param msg Error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"        super(\"☹ OOPS!!! \" + msg + \" ☹\");","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" * Parses user input into usable terms for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"     * Returns command from user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     * @return Command as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"    public String getCmd(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"        return input.split(\" \")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     * Returns description of task from user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"     * @return Description of task as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    public String getDescription(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"        return input.split(\" \")[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"     * Returns the front part of description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"     * @param split String to split the description.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"     * @return Front part of the description as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"    public String getPreDescription(String description, String split) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"        return description.split(split)[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     * Returns the back part of description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"     * @param split String to split the description.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"     * @return Back part of the description as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"    public String getPostDescription(String description, String split) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"        return description.split(split)[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"     * Returns the date time format of given description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"     * @return Date/time format of given description as LocalDate.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"    public LocalDate getDateTime(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"        return LocalDate.parse(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"     * Returns the date time format of given description of task with given formatter.","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"     * @param formatter Date time formatter.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"     * @return Date/time format of given description as LocalDate.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"    public LocalDate getDateTime(String description, DateTimeFormatter formatter) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"        return LocalDate.parse(description, formatter);","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":72}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":" * Handles loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    private TaskList list;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"     * @param list Task list to read/write from the current list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    public Storage(TaskList list) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     * Reads from file and store data (tasks) into tasks list.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"    public void initalizeList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"            File yourFile \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"            yourFile.createNewFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"            try (BufferedReader br \u003d new BufferedReader(new FileReader(\"duke.txt\"))) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"                String line;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"                while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"                    char taskType \u003d line.charAt(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"                    boolean isMarked \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"                    Character markedChar \u003d line.charAt(4);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"                    String description \u003d line.substring(7);","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"                    if (markedChar.equals(\u0027X\u0027)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"                        isMarked \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"                    switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"                        case \u0027T\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"                            Todo todoTask \u003d new Todo(description, isMarked);","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"                            list.add(todoTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"                            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"                        case \u0027E\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"                            String modifiedDescription \u003d description.split(\" \\\\(from: \")[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"                            LocalDate fromDate \u003d LocalDate.parse(modifiedDescription.split(\" to: \")[0], DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"                            LocalDate toDate \u003d LocalDate.parse(modifiedDescription.split(\" to: \")[1].split(\"\\\\)\")[0], DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"                            Event eventTask \u003d new Event(description.split(\" \\\\(from: \")[0], isMarked, fromDate, toDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"                            list.add(eventTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"                            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"                        case \u0027D\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"                            LocalDate byDate \u003d LocalDate.parse(description.split(\" \\\\(by: \")[1].split(\"\\\\)\")[0], DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"                            Deadline deadlineTask \u003d new Deadline(description.split(\" \\\\(by: \")[0], isMarked, byDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"                            list.add(deadlineTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"                            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Mehvin"},"content":"     * Gets tasks from tasks list and write data (tasks) into file.","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Mehvin"},"content":"    public void saveToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Mehvin"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Mehvin"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"duke.txt\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Mehvin"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Mehvin"},"content":"                writer.write(list.get(i) + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Mehvin"},"content":"            writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Mehvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Mehvin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":89}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" * Handles all Ui displaying and user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * This object can be used for all Ui purposes, primarily printing messages and reading of user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    public Ui() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"     * Displays the starting logo for Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    public void displayIntro() {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"        String logo","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"                \u003d \" ___________________\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"                + \" | _______________ |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"                + \" | |             | |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"                + \" | |     MEL     | |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"                + \" | |     \u003c3      | |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"                + \" | |   CS2103    | |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"                + \" | |_____________| |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"                + \" |_________________|\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"                + \"     _[_______]_\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"                + \" ___[___________]___\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"                + \"|         [_____] []|__\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"                + \"|         [_____] []|  \\\\__\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"                + \"L___________________J     \\\\ \\\\___\\\\/\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"                + \" ___________________      / \\\\\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"                + \"/###################\\\\    (__)\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"        System.out.println(logo + \"Hello! I\u0027m MEL\\nWhat can I do for you?\\n-----------------------\");","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     * Displays goodbye message.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"    public void displayBye() {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"MEL: Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"     * Reads user input and returns as string.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"     * @return User input as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"     * Displays \u0027\u003e\u0027 to indicate user can input.","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"    public void displayRepeatedBlank() {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"     * Displays message for invalid user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"    public void displayInvalidInputFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"MEL: Invalid format of input, please try again!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"     * Displays message for invalid user input due to integer type.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Mehvin"},"content":"    public void displayInvalidIntFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"MEL: Invalid integer, please try again!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Mehvin"},"content":"     * Displays message for invalid user input due to date/time from \u0026 to format.","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Mehvin"},"content":"    public void displayInvalidFromToFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Invalid format, please try again using [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Mehvin"},"content":"     * Displays message for invalid user input due to date/time by format.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Mehvin"},"content":"    public void displayInvalidByFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Invalid format, please try again using [task] /by [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"Mehvin"},"content":"     * Displays message to inform user that task has been added.","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"Mehvin"},"content":"     * @param taskName Task name that was added.","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Mehvin"},"content":"     * @param size Task list size.","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"Mehvin"},"content":"    public void displayAdded(String taskName, int size) {","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + taskName);","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"Mehvin"},"content":"        displayTotalNumList(size);","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"Mehvin"},"content":"     * Displays message to inform user that task has been deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"Mehvin"},"content":"     * @param taskName Task name that was deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"Mehvin"},"content":"    public void displayDeleted(String taskName) {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskName);","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"Mehvin"},"content":"     * Displays how many tasks is currently in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"Mehvin"},"content":"     * @param size Task list size.","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"Mehvin"},"content":"    public void displayTotalNumList(int size) {","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"Mehvin"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"Mehvin"},"content":"     * @param list Task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"Mehvin"},"content":"    public void displayList(TaskList list) {","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"Mehvin"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"Mehvin"},"content":"            System.out.println(i + 1 + \".\" + list.get(i));","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"Mehvin"},"content":"     * Displays the marked task.","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"Mehvin"},"content":"     * @param taskMarked Name of task that was marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"Mehvin"},"content":"    public void displayMarked(String taskMarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + taskMarked);","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"Mehvin"},"content":"     * Displays the unmarked task.","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"Mehvin"},"content":"     * @param taskUnmarked Name of task that was marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"Mehvin"},"content":"    public void displayUnmarked(String taskUnmarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + taskUnmarked);","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"Mehvin"},"content":"    public void displayResults(TaskList list, String searchInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"Mehvin"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"Mehvin"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"Mehvin"},"content":"            if (list.get(i).toString().contains(searchInput)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":157,"author":{"gitId":"Mehvin"},"content":"                System.out.println(count + \".\" + list.get(i));","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"Mehvin"},"content":"                count++;","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":162}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" * Handles Deadline object.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"     * @param by By Date/Time of event.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"     * @param marked Boolean of Deadline status.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     * @param by By Date/Time of event.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"    public Deadline(String description, boolean marked, LocalDate by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"        super(description, marked);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"     * Return string of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"     * @return Formatted Deadline with details as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" * Handles Event object.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Event object.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"     * @param from From Date/Time of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"     * @param to To Date/Time of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Event object.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     * @param marked Boolean of Event status.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"     * @param from From Date/Time of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     * @param to To Date/Time of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"    public Event(String description, boolean marked, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"        super(description, marked);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"     * Return string of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     * @return Formatted Event with details as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"                + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":" * Handles task object to encapsulate commonalities in subclasses.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"     * @param isMarked Boolean to check if task is marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    public Task(String description, boolean isMarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"        this.isDone \u003d isMarked;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     * Returns status if marked or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"     * @return Marked icon as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"     * Sets status if marked or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     * @param status Status of mark task.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"     * Return string of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"     * @return Formatted task with details as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"        return String.format(\"[\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":58}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":" * Handles storing of the tasks to task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"public class TaskList {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * This object can be used for storing tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"     * Returns size of task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     * @return Size as Integer.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    public int size() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     * Returns task of given index from task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"     * @param index Index of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     * @return Task as Task.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"     * Adds given task to task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"     * @param task Task given to add into list.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"     * Removes task of given index from task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"     * @param index Index of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":55}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":" * Handles Todo object.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Todo.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     * @param marked Boolean of Todo status.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    public Todo(String description, boolean marked) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"        super(description, marked);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     * Return string of Todo.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     * @return Formatted Todo with details as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":36}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"event cs2103 project meeting /from Mon 3pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"wrong input check","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"unmark 33333","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"unmark abc","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":14}}]
