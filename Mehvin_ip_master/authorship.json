[{"path":"MEL.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"[D][ ] finish reading book (by: Jan 1 2024)","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"[E][ ] read 5 chapters (from: Jan 1 2023 to: May 1 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"[T][ ] book","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Mehvin":3}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mehvin":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"checkstyle {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"    archiveBaseName \u003d \"MEL\"","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mehvin":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"**MEL** is your friendly personal assistant chatbot that can help you keep track of your daily tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"## Quick Start","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"1. Ensure you have `Java 11` or above installed in your computer.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"2. Download the latest `MEL.jar` from [here](https://github.com/Mehvin/ip/releases/download/A-Release/MEL.jar).","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"3. Copy `MEL.jar` to the folder you want to use as the *home folder* for MEL.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"4. Open a command terminal in the current *home folder* directory.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"5. Run `java -jar MEL.jar` command to run the application!","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"### Add Task","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"There are 3 different types of tasks available to add.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"1. #### **To do**: `todo [task]`","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"\u003cimg src\u003d\"http://mehvin.github.io/ip/todo.png\" style\u003d\"zoom:85%;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"2. #### **Deadline**: `deadline [task] /by [YYYY-MM-DD]`","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"\u003cimg src\u003d\"http://mehvin.github.io/ip/deadline.png\" style\u003d\"zoom:85%;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"3. #### **Event**: `event [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]`","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"\u003cimg src\u003d\"http://mehvin.github.io/ip/event.png\" style\u003d\"zoom:85%;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"### List: `list`","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"List out all tasks saved.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"\u003cimg src\u003d\"http://mehvin.github.io/ip/list.png\" style\u003d\"zoom:85%;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"### Mark/Unmark Task: `mark [task #]` or `unmark [task #]`","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"Mark/unmark a task as done/not done.","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"\u003cimg src\u003d\"http://mehvin.github.io/ip/mark_unmark.png\" style\u003d\"zoom:85%;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"### Delete Task: `delete [task #]`","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"Delete task from list.","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"\u003cimg src\u003d\"http://mehvin.github.io/ip/delete.png\" style\u003d\"zoom:85%;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"### Find Task: `find [keyword]`","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"Find task(s) by searching for a keyword.","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"\u003cimg src\u003d\"http://mehvin.github.io/ip/find.png\" style\u003d\"zoom:85%;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"### Help: `help` or `help [command]`","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"Provide in-App guidance to users.","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"\u003cimg src\u003d\"http://mehvin.github.io/ip/help.png\" style\u003d\"zoom:85%;\" /\u003e","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Mehvin":43,"-":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"import duke.fx.FxUi;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":" * Handles duke.Duke, a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"public class Duke {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    static final String EASTER_EGG \u003d \"Eri?\";","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"    static final int TODO_LENGTH \u003d \"todo \".length();","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"    static final int EVENT_LENGTH \u003d \"event \".length();","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    static final int DEADLINE_LENGTH \u003d \"deadline \".length();","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"    static final int FIND_LENGTH \u003d \"find \".length();","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    static final String FROM_SUBSTRING \u003d \" /from \";","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    static final String TO_SUBSTRING \u003d \" /to \";","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    static final String BY_SUBSTRING \u003d \" /by \";","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    static final String BLANK_ERROR_MSG \u003d \"BLANK-ERROR-69\";","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    static final String TODO_FORMAT \u003d \"todo [task]\";","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    static final String EVENT_FORMAT \u003d \"event [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]\";","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    static final String DEADLINE_FORMAT \u003d \"deadline [task] /by [YYYY-MM-DD]\";","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     * Handles identifying task type.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"    public enum TaskType {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"        TODO,","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"        EVENT,","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"        DEADLINE","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"    private final FxUi ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"    private final Parser parser;","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     * Duke constructor.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     * @param ui The user interface to display responses.","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"    public Duke(FxUi ui) {","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"        this.storage \u003d new Storage(taskList);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"        storage.initializeList();","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"        taskList.sort();","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"     * Adds task into task list.","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task to be added.","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"     * @param taskType Task type of task to be added.","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"    public void addTask(String description, TaskType taskType) {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"        case TODO:","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"            Todo todoTask \u003d new Todo(description);","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"            taskList.add(todoTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Got it. I\u0027ve added this task: \" + todoTask","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"        case EVENT:","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"                String modifiedDescription \u003d parser.getPostDescription(description, FROM_SUBSTRING);","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"                String newDescription \u003d parser.getPreDescription(description, FROM_SUBSTRING);","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"                LocalDate fromDate \u003d parser.getDateTime(parser.getPreDescription(modifiedDescription, TO_SUBSTRING));","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"Mehvin"},"content":"                LocalDate toDate \u003d parser.getDateTime(parser.getPostDescription(modifiedDescription, TO_SUBSTRING));","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"Mehvin"},"content":"                Event eventTask \u003d new Event(newDescription, fromDate, toDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"Mehvin"},"content":"                taskList.add(eventTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"Mehvin"},"content":"                ui.displayText(\"Got it. I\u0027ve added this task: \" + eventTask","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"Mehvin"},"content":"                        + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"Mehvin"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"Mehvin"},"content":"                ui.displayText(\"Invalid format, please try again, type \u0027\" + EVENT_FORMAT + \"\u0027\");","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"Mehvin"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"Mehvin"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"Mehvin"},"content":"                String newDescription \u003d parser.getPreDescription(description, BY_SUBSTRING);","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"Mehvin"},"content":"                LocalDate byDate \u003d parser.getDateTime(parser.getPostDescription(description, BY_SUBSTRING));","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"Mehvin"},"content":"                Deadline deadlineTask \u003d new Deadline(newDescription, byDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"Mehvin"},"content":"                taskList.add(deadlineTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"Mehvin"},"content":"                ui.displayText(\"Got it. I\u0027ve added this task: \" + deadlineTask","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"Mehvin"},"content":"                        + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"Mehvin"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"Mehvin"},"content":"                ui.displayText(\"Invalid format, please try again, type \u0027\" + DEADLINE_FORMAT + \"\u0027\");","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"Mehvin"},"content":"        default:","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"Mehvin"},"content":"        taskList.sort();","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"Mehvin"},"content":"        storage.saveToFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"Mehvin"},"content":"     * Marks task from task list.","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"Mehvin"},"content":"     * @param itemNo Item number in list to be marked.","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"Mehvin"},"content":"    public void mark(int itemNo) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"Mehvin"},"content":"        handleInvalidTaskNo(itemNo);","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"Mehvin"},"content":"        assert taskList.size() \u003e itemNo;","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"Mehvin"},"content":"        taskList.get(itemNo).setDone(true);","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"Mehvin"},"content":"        ui.displayText(\"Great job! I\u0027ve marked this task as done: \" + taskList.get(itemNo).toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"Mehvin"},"content":"        storage.saveToFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"Mehvin"},"content":"        assert taskList.get(itemNo).isDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"Mehvin"},"content":"     * Unmarks task from task list.","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"Mehvin"},"content":"     * @param itemNo Item number in list to be unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"Mehvin"},"content":"    public void unmark(int itemNo) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"Mehvin"},"content":"        handleInvalidTaskNo(itemNo);","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"Mehvin"},"content":"        assert taskList.size() \u003e itemNo;","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"Mehvin"},"content":"        taskList.get(itemNo).setDone(false);","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"Mehvin"},"content":"        ui.displayText(\"OK, I\u0027ve marked this task as not done yet: \" + taskList.get(itemNo).toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"Mehvin"},"content":"        storage.saveToFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"Mehvin"},"content":"        assert !taskList.get(itemNo).isDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"Mehvin"},"content":"     * Deletes task from task list.","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"Mehvin"},"content":"     * @param itemNo Item number in list to be deleted.","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"Mehvin"},"content":"    public void delete(int itemNo) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"Mehvin"},"content":"        int initialSize \u003d taskList.size();","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"Mehvin"},"content":"        handleInvalidTaskNo(itemNo);","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"Mehvin"},"content":"        assert taskList.size() \u003e itemNo;","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"Mehvin"},"content":"        StringBuilder displayString \u003d new StringBuilder();","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"Mehvin"},"content":"        displayString.append(\"Noted. I\u0027ve removed this task: \").append(taskList.get(itemNo).toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"Mehvin"},"content":"        taskList.remove(itemNo);","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"Mehvin"},"content":"        storage.saveToFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"Mehvin"},"content":"        displayString.append(\"\\nNow you have \").append(taskList.size()).append(\" tasks in the list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"Mehvin"},"content":"        ui.displayText(displayString.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"Mehvin"},"content":"        assert taskList.size() \u003d\u003d initialSize - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":153,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":155,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"Mehvin"},"content":"     * Handles error of invalid task number.","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"Mehvin"},"content":"     * @param itemNo User\u0027s input to check for error.","lastModifiedDate":"2023-02-13"},{"lineNumber":159,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"Mehvin"},"content":"    public void handleInvalidTaskNo(int itemNo) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"Mehvin"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":162,"author":{"gitId":"Mehvin"},"content":"            throw new DukeException(\"You have no remaining tasks!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":163,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":164,"author":{"gitId":"Mehvin"},"content":"        if (taskList.size() \u003c\u003d itemNo || itemNo \u003c 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":165,"author":{"gitId":"Mehvin"},"content":"            throw new DukeException(\"Invalid task number, please enter a valid task number!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":166,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":167,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":169,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"Mehvin"},"content":"     * Searches task containing search inputs.","lastModifiedDate":"2023-02-04"},{"lineNumber":171,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"Mehvin"},"content":"     * @param searchInput Substring to find if any tasks contains it.","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":174,"author":{"gitId":"Mehvin"},"content":"    public void find(String searchInput) {","lastModifiedDate":"2023-02-04"},{"lineNumber":175,"author":{"gitId":"Mehvin"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":176,"author":{"gitId":"Mehvin"},"content":"        boolean hasResult \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"Mehvin"},"content":"        StringBuilder foundString \u003d new StringBuilder();","lastModifiedDate":"2023-02-13"},{"lineNumber":178,"author":{"gitId":"Mehvin"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":179,"author":{"gitId":"Mehvin"},"content":"            if (taskList.get(i).toString().contains(searchInput)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":180,"author":{"gitId":"Mehvin"},"content":"                hasResult \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"Mehvin"},"content":"                foundString.append(String.format(\"%d. %s\", count, taskList.get(i).toString())).append(\"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":182,"author":{"gitId":"Mehvin"},"content":"                count++;","lastModifiedDate":"2023-02-04"},{"lineNumber":183,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":184,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":185,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":186,"author":{"gitId":"Mehvin"},"content":"        if (!hasResult) {","lastModifiedDate":"2023-02-06"},{"lineNumber":187,"author":{"gitId":"Mehvin"},"content":"            assert count \u003d\u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":188,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"There are no matching tasks in your list!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":189,"author":{"gitId":"Mehvin"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":190,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Here are the matching tasks in your list:\\n\" + foundString);","lastModifiedDate":"2023-02-13"},{"lineNumber":191,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":192,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":193,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":194,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":195,"author":{"gitId":"Mehvin"},"content":"     * Displays the list of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":196,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":197,"author":{"gitId":"Mehvin"},"content":"    public void getList() {","lastModifiedDate":"2023-02-07"},{"lineNumber":198,"author":{"gitId":"Mehvin"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":199,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Congrats! You have 0 tasks left!!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":200,"author":{"gitId":"Mehvin"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":201,"author":{"gitId":"Mehvin"},"content":"            assert taskList.size() \u003e 0;","lastModifiedDate":"2023-02-06"},{"lineNumber":202,"author":{"gitId":"Mehvin"},"content":"            StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2023-02-13"},{"lineNumber":203,"author":{"gitId":"Mehvin"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":204,"author":{"gitId":"Mehvin"},"content":"                listString.append(String.format(\"%d. %s\", i + 1, taskList.get(i).toString())).append(\"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":205,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":206,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Here are the tasks in your list:\\n\" + listString);","lastModifiedDate":"2023-02-13"},{"lineNumber":207,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":208,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":209,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":210,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":211,"author":{"gitId":"Mehvin"},"content":"     * Provides details of given command.","lastModifiedDate":"2023-02-13"},{"lineNumber":212,"author":{"gitId":"Mehvin"},"content":"     * If given command is invalid, brief details of all commands will be provided.","lastModifiedDate":"2023-02-07"},{"lineNumber":213,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":214,"author":{"gitId":"Mehvin"},"content":"     * @param cmd User\u0027s given command.","lastModifiedDate":"2023-02-07"},{"lineNumber":215,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":216,"author":{"gitId":"Mehvin"},"content":"    public void getHelp(String cmd) {","lastModifiedDate":"2023-02-07"},{"lineNumber":217,"author":{"gitId":"Mehvin"},"content":"        switch (cmd) {","lastModifiedDate":"2023-02-07"},{"lineNumber":218,"author":{"gitId":"Mehvin"},"content":"        case \"list\":","lastModifiedDate":"2023-02-07"},{"lineNumber":219,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027list\u0027 - returns all tasks\");","lastModifiedDate":"2023-02-07"},{"lineNumber":220,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":221,"author":{"gitId":"Mehvin"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-07"},{"lineNumber":222,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027\" + TODO_FORMAT + \"\u0027 - add todo task to list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":223,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":224,"author":{"gitId":"Mehvin"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-07"},{"lineNumber":225,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027\" + DEADLINE_FORMAT + \"\u0027 - add deadline task to list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":226,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":227,"author":{"gitId":"Mehvin"},"content":"        case \"event\":","lastModifiedDate":"2023-02-07"},{"lineNumber":228,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027\" + EVENT_FORMAT + \"\u0027 - add event task to list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":229,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":230,"author":{"gitId":"Mehvin"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":231,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027mark [task #]\u0027 - mark task from list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":232,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":233,"author":{"gitId":"Mehvin"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-07"},{"lineNumber":234,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027unmark [task #]\u0027 - unmark task from list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":235,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":236,"author":{"gitId":"Mehvin"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-07"},{"lineNumber":237,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027delete [task #]\u0027 - deletes task from list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":238,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":239,"author":{"gitId":"Mehvin"},"content":"        case \"find\":","lastModifiedDate":"2023-02-07"},{"lineNumber":240,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027find [keyword]\u0027 - returns all tasks containing keyword\");","lastModifiedDate":"2023-02-07"},{"lineNumber":241,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":242,"author":{"gitId":"Mehvin"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-07"},{"lineNumber":243,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Type \u0027bye\u0027 - quit program\");","lastModifiedDate":"2023-02-07"},{"lineNumber":244,"author":{"gitId":"Mehvin"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":245,"author":{"gitId":"Mehvin"},"content":"        default:","lastModifiedDate":"2023-02-07"},{"lineNumber":246,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Here are a list of commands, for more info type \u0027help [cmd]\u0027:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":247,"author":{"gitId":"Mehvin"},"content":"                    + \"- list\\n- todo\\n- deadline\\n- event\\n- mark\\n- unmark\\n- delete\\n- find\\n- bye\");","lastModifiedDate":"2023-02-07"},{"lineNumber":248,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":249,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":250,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":251,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":252,"author":{"gitId":"Mehvin"},"content":"     * Starts Duke.","lastModifiedDate":"2023-02-13"},{"lineNumber":253,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":254,"author":{"gitId":"Mehvin"},"content":"    public void start() {","lastModifiedDate":"2023-02-04"},{"lineNumber":255,"author":{"gitId":"Mehvin"},"content":"        ui.displayIntro();","lastModifiedDate":"2023-02-04"},{"lineNumber":256,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":257,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":258,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":259,"author":{"gitId":"Mehvin"},"content":"     * Handles error of blank space.","lastModifiedDate":"2023-02-13"},{"lineNumber":260,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":261,"author":{"gitId":"Mehvin"},"content":"     * @param userInput User\u0027s input to check for error.","lastModifiedDate":"2023-02-13"},{"lineNumber":262,"author":{"gitId":"Mehvin"},"content":"     * @param errorMsg Error message to display if error occurs.","lastModifiedDate":"2023-02-13"},{"lineNumber":263,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":264,"author":{"gitId":"Mehvin"},"content":"    public void handleBlankError(String userInput, String errorMsg) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":265,"author":{"gitId":"Mehvin"},"content":"        if (parser.getDescription(userInput).equals(BLANK_ERROR_MSG)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":266,"author":{"gitId":"Mehvin"},"content":"            throw new DukeException(errorMsg);","lastModifiedDate":"2023-02-13"},{"lineNumber":267,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":268,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":269,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":270,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":271,"author":{"gitId":"Mehvin"},"content":"     * Passes user\u0027s input.","lastModifiedDate":"2023-02-04"},{"lineNumber":272,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":273,"author":{"gitId":"Mehvin"},"content":"     * @param userInput User\u0027s string input.","lastModifiedDate":"2023-02-04"},{"lineNumber":274,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":275,"author":{"gitId":"Mehvin"},"content":"    public void handleInput(String userInput) {","lastModifiedDate":"2023-02-04"},{"lineNumber":276,"author":{"gitId":"Mehvin"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":277,"author":{"gitId":"Mehvin"},"content":"            String cmd \u003d parser.getCmd(userInput);","lastModifiedDate":"2023-02-04"},{"lineNumber":278,"author":{"gitId":"Mehvin"},"content":"            switch (cmd) {","lastModifiedDate":"2023-02-04"},{"lineNumber":279,"author":{"gitId":"Mehvin"},"content":"            case \"help\":","lastModifiedDate":"2023-02-07"},{"lineNumber":280,"author":{"gitId":"Mehvin"},"content":"                getHelp(parser.getDescription(userInput));","lastModifiedDate":"2023-02-07"},{"lineNumber":281,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-07"},{"lineNumber":282,"author":{"gitId":"Mehvin"},"content":"            case \"list\":","lastModifiedDate":"2023-02-04"},{"lineNumber":283,"author":{"gitId":"Mehvin"},"content":"                getList();","lastModifiedDate":"2023-02-07"},{"lineNumber":284,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":285,"author":{"gitId":"Mehvin"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":286,"author":{"gitId":"Mehvin"},"content":"                handleBlankError(userInput, \"Please provide a task number to mark!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":287,"author":{"gitId":"Mehvin"},"content":"                mark(Integer.parseInt(parser.getDescription(userInput)) - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":288,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":289,"author":{"gitId":"Mehvin"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-04"},{"lineNumber":290,"author":{"gitId":"Mehvin"},"content":"                handleBlankError(userInput, \"Please provide a task number to unmark!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":291,"author":{"gitId":"Mehvin"},"content":"                unmark(Integer.parseInt(parser.getDescription(userInput)) - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":292,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":293,"author":{"gitId":"Mehvin"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-04"},{"lineNumber":294,"author":{"gitId":"Mehvin"},"content":"                handleBlankError(userInput, \"Invalid format, please try again, type \u0027\"","lastModifiedDate":"2023-02-13"},{"lineNumber":295,"author":{"gitId":"Mehvin"},"content":"                        + TODO_FORMAT + \"\u0027\");","lastModifiedDate":"2023-02-13"},{"lineNumber":296,"author":{"gitId":"Mehvin"},"content":"                addTask(parser.getDescription(userInput, TODO_LENGTH), TaskType.TODO);","lastModifiedDate":"2023-02-06"},{"lineNumber":297,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":298,"author":{"gitId":"Mehvin"},"content":"            case \"event\":","lastModifiedDate":"2023-02-04"},{"lineNumber":299,"author":{"gitId":"Mehvin"},"content":"                handleBlankError(userInput, \"Invalid format, please try again, type \u0027\"","lastModifiedDate":"2023-02-13"},{"lineNumber":300,"author":{"gitId":"Mehvin"},"content":"                        + EVENT_FORMAT + \"\u0027\");","lastModifiedDate":"2023-02-13"},{"lineNumber":301,"author":{"gitId":"Mehvin"},"content":"                addTask(parser.getDescription(userInput, EVENT_LENGTH), TaskType.EVENT);","lastModifiedDate":"2023-02-06"},{"lineNumber":302,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":303,"author":{"gitId":"Mehvin"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-04"},{"lineNumber":304,"author":{"gitId":"Mehvin"},"content":"                handleBlankError(userInput, \"Invalid format, please try again, type \u0027\"","lastModifiedDate":"2023-02-13"},{"lineNumber":305,"author":{"gitId":"Mehvin"},"content":"                        + DEADLINE_FORMAT + \"\u0027\");","lastModifiedDate":"2023-02-13"},{"lineNumber":306,"author":{"gitId":"Mehvin"},"content":"                addTask(parser.getDescription(userInput, DEADLINE_LENGTH), TaskType.DEADLINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":307,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":308,"author":{"gitId":"Mehvin"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-04"},{"lineNumber":309,"author":{"gitId":"Mehvin"},"content":"                handleBlankError(userInput, \"Please provide a task number to delete!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":310,"author":{"gitId":"Mehvin"},"content":"                delete(Integer.parseInt(parser.getDescription(userInput)) - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":311,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":312,"author":{"gitId":"Mehvin"},"content":"            case \"find\":","lastModifiedDate":"2023-02-04"},{"lineNumber":313,"author":{"gitId":"Mehvin"},"content":"                handleBlankError(userInput, \"Please provide a sub string to find!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":314,"author":{"gitId":"Mehvin"},"content":"                find(parser.getDescription(userInput, FIND_LENGTH));","lastModifiedDate":"2023-02-06"},{"lineNumber":315,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":316,"author":{"gitId":"Mehvin"},"content":"            case EASTER_EGG:","lastModifiedDate":"2023-02-13"},{"lineNumber":317,"author":{"gitId":"Mehvin"},"content":"                ui.displayText(\"If you run, gain one. Move forward, gain two\");","lastModifiedDate":"2023-02-13"},{"lineNumber":318,"author":{"gitId":"Mehvin"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":319,"author":{"gitId":"Mehvin"},"content":"            default:","lastModifiedDate":"2023-02-04"},{"lineNumber":320,"author":{"gitId":"Mehvin"},"content":"                ui.displayText(\"I do not understand you!\\nType \u0027help\u0027 to get help\");","lastModifiedDate":"2023-02-13"},{"lineNumber":321,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":322,"author":{"gitId":"Mehvin"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-02-04"},{"lineNumber":323,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(exception.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":324,"author":{"gitId":"Mehvin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":325,"author":{"gitId":"Mehvin"},"content":"            ui.displayText(\"Invalid integer, please try again!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":326,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":327,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":328,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Mehvin":328}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":" * Handles exception for duke.Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"     * Constructor for DukeException class.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"     * @param msg Error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"        super(msg);","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"public class Launcher {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Mehvin":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"import duke.fx.FxUi;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"import duke.fx.MainWindow;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":" * For GUI application.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"    private Image logoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/logo.jpg\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"            stage.getIcons().add(logoImage);","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"            stage.setTitle(\"MEL\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"            MainWindow mainWindow \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"            FxUi ui \u003d new FxUi(mainWindow);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"            duke \u003d new Duke(ui);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"            mainWindow.setOnInputHandler(input -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"                duke.handleInput(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"                    stage.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"            });","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"            stage.show();","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"            duke.start();","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Mehvin":47}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" * Parses user input into usable terms for duke.Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    static final String BLANK_ERROR_MSG \u003d \"BLANK-ERROR-69\";","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Parser class.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"    public Parser() {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"     * Returns command from user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"     * @return Command as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    public String getCmd(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"        return input.split(\" \")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"     * Returns description of task from user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     * @return Description of task as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"    public String getDescription(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"            return input.split(\" \")[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"            return BLANK_ERROR_MSG;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"     * Returns description of task from user input, depending on given index.","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     * @param input User input.","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     * @param startIndex Index of starting character.","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"     * @return Description of task as String.","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"    public String getDescription(String input, int startIndex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"        return input.substring(startIndex);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"     * Returns the front part of description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"     * @param split Substring to split the description.","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"     * @return Front part of the description as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"    public String getPreDescription(String description, String split) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"        return description.split(split)[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"     * Returns the back part of description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"     * @param split Substring to split the description.","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"     * @return Back part of the description as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"    public String getPostDescription(String description, String split) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"        return description.split(split)[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"     * Returns the date time format of given description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Mehvin"},"content":"     * @return Date/time format of given description as LocalDate.","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Mehvin"},"content":"    public LocalDate getDateTime(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Mehvin"},"content":"        return LocalDate.parse(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Mehvin"},"content":"     * Returns the date time format of given description of task with given formatter.","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Mehvin"},"content":"     * @param formatter Date time formatter.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Mehvin"},"content":"     * @return Date/time format of given description as LocalDate.","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Mehvin"},"content":"    public LocalDate getDateTime(String description, DateTimeFormatter formatter) {","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"Mehvin"},"content":"        return LocalDate.parse(description, formatter);","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":93}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":" * Handles loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    static final String FILE_NAME \u003d \"MEL.txt\";","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    static final int TASK_TYPE_INDEX \u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    static final int IS_MARKED_INDEX \u003d 4;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    static final int DESCRIPTION_INDEX \u003d 7;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    static final char MARKED_CHAR \u003d \u0027X\u0027;","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    static final String FROM_SUBSTRING \u003d \" \\\\(from: \";","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    static final String TO_SUBSTRING \u003d \" to: \";","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"    static final String BY_SUBSTRING \u003d \" \\\\(by: \";","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"    static final String END_SUBSTRING \u003d \"\\\\)\";","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"    static final String DATE_FORMAT \u003d \"MMM d yyyy\";","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"     * @param list Task list to read/write from the current list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    public Storage(TaskList list) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"        this.taskList \u003d list;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     * Reads from file and store data (tasks) into tasks list.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"    public void initializeList() {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"            File yourFile \u003d new File(FILE_NAME);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"            yourFile.createNewFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"            try (BufferedReader br \u003d new BufferedReader(new FileReader(FILE_NAME))) {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"                String line;","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"                while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"                    char taskType \u003d line.charAt(TASK_TYPE_INDEX);","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"                    boolean isMarked \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"                    Character markedChar \u003d line.charAt(IS_MARKED_INDEX);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"                    if (markedChar.equals(MARKED_CHAR)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"                        isMarked \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"                    String description \u003d line.substring(DESCRIPTION_INDEX);","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"                    switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"                        Todo todoTask \u003d new Todo(description, isMarked);","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"                        taskList.add(todoTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"                        String modifiedDescription \u003d description.split(FROM_SUBSTRING)[1];","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"                        String newEventDescription \u003d description.split(FROM_SUBSTRING)[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"                        LocalDate fromDate \u003d LocalDate.parse(modifiedDescription.split(TO_SUBSTRING)[0],","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"                                DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"                        LocalDate toDate \u003d LocalDate.parse(modifiedDescription.split(TO_SUBSTRING)[1]","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"                                .split(END_SUBSTRING)[0], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"Mehvin"},"content":"                        Event eventTask \u003d new Event(newEventDescription, isMarked, fromDate, toDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"Mehvin"},"content":"                        taskList.add(eventTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Mehvin"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Mehvin"},"content":"                        String newDeadlineDescription \u003d description.split(BY_SUBSTRING)[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"Mehvin"},"content":"                        LocalDate byDate \u003d LocalDate.parse(description.split(BY_SUBSTRING)[1]","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"Mehvin"},"content":"                                .split(END_SUBSTRING)[0], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"Mehvin"},"content":"                        Deadline deadlineTask \u003d new Deadline(newDeadlineDescription, isMarked, byDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"Mehvin"},"content":"                        taskList.add(deadlineTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Mehvin"},"content":"                    default:","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Mehvin"},"content":"                        break;","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Mehvin"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Mehvin"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Mehvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"Mehvin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"Mehvin"},"content":"     * Gets tasks from tasks list and write data (tasks) into file.","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Mehvin"},"content":"     * To be executed every time a task is added, modified or deleted.","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"Mehvin"},"content":"    public void saveToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"Mehvin"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"Mehvin"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_NAME));","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"Mehvin"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Mehvin"},"content":"                writer.write(taskList.get(i) + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"Mehvin"},"content":"            writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"Mehvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"Mehvin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":110}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" * Handles all Ui displaying and user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     * This object can be used for all Ui purposes, primarily printing messages and reading of user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"    public Ui() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     * Displays the starting logo for duke.Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    public void displayIntro() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"        String logo \u003d \" ___________________\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"                + \" | _______________ |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"                + \" | |             | |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"                + \" | |     MEL     | |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"                + \" | |     \u003c3      | |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"                + \" | |   CS2103    | |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"                + \" | |_____________| |\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"                + \" |_________________|\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"                + \"     _[_______]_\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"                + \" ___[___________]___\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"                + \"|         [_____] []|__\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"                + \"|         [_____] []|  \\\\__\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"                + \"L___________________J     \\\\ \\\\___\\\\/\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"                + \" ___________________      / \\\\\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"                + \"/###################\\\\    (__)\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"        System.out.println(logo + \"Hello! I\u0027m MEL\\nWhat can I do for you?\\n-----------------------\");","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     * Displays goodbye message.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"    public void displayBye() {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"MEL: Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"     * Reads user input and returns as string.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"     * @return User input as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"     * Displays \u0027\u003e\u0027 to indicate user can input.","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"    public void displayRepeatedBlank() {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"     * Displays message for invalid user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"    public void displayInvalidInputFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"MEL: Invalid format of input, please try again!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"     * Displays message for invalid user input due to integer type.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Mehvin"},"content":"    public void displayInvalidIntFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"MEL: Invalid integer, please try again!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Mehvin"},"content":"     * Displays message for invalid user input due to date/time from \u0026 to format.","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Mehvin"},"content":"    public void displayInvalidFromToFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Invalid format, please try again using [task] /from [YYYY-MM-DD] /to [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Mehvin"},"content":"     * Displays message for invalid user input due to date/time by format.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Mehvin"},"content":"    public void displayInvalidByFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Invalid format, please try again using [task] /by [YYYY-MM-DD]\");","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"Mehvin"},"content":"     * Displays message to inform user that task has been added.","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"Mehvin"},"content":"     * @param taskName Task name that was added.","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Mehvin"},"content":"     * @param size Task list size.","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"Mehvin"},"content":"    public void displayAdded(String taskName, int size) {","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + taskName);","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"Mehvin"},"content":"        displayTotalNumList(size);","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"Mehvin"},"content":"     * Displays message to inform user that task has been deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"Mehvin"},"content":"     * @param taskName Task name that was deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"Mehvin"},"content":"    public void displayDeleted(String taskName) {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskName);","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"Mehvin"},"content":"     * Displays how many tasks is currently in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"Mehvin"},"content":"     * @param size Task list size.","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"Mehvin"},"content":"    public void displayTotalNumList(int size) {","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"Mehvin"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"Mehvin"},"content":"     * @param list Task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"Mehvin"},"content":"    public void displayList(TaskList list) {","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"Mehvin"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"Mehvin"},"content":"            System.out.println(i + 1 + \".\" + list.get(i));","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"Mehvin"},"content":"     * Displays the marked task.","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"Mehvin"},"content":"     * @param taskMarked Name of task that was marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"Mehvin"},"content":"    public void displayMarked(String taskMarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + taskMarked);","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"Mehvin"},"content":"     * Displays the unmarked task.","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"Mehvin"},"content":"     * @param taskUnmarked Name of task that was marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"Mehvin"},"content":"    public void displayUnmarked(String taskUnmarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + taskUnmarked);","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"Mehvin"},"content":"     * Displays the results that contains search input.","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"Mehvin"},"content":"     * @param list Task list to search through.","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"Mehvin"},"content":"     * @param searchInput String input to search substring.","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"Mehvin"},"content":"    public void displayResults(TaskList list, String searchInput) {","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"Mehvin"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"Mehvin"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"Mehvin"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"Mehvin"},"content":"            if (list.get(i).toString().contains(searchInput)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"Mehvin"},"content":"                System.out.println(count + \".\" + list.get(i));","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"Mehvin"},"content":"                count++;","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"Mehvin"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":166,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":167,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":168}},{"path":"src/main/java/duke/fx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.fx;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"    private void flip() {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"     * Returns dialog box for the user.","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"     * @param text Text to display as user.","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"     * @param img Image to display as user.","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"     * @return Dialog box representing user.","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"     * Returns dialog box for the Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"     * @param text Text to display as Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"     * @param img Image to display as Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"     * @return Dialog box representing Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"        db.flip();","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"        return db;","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Mehvin":74}},{"path":"src/main/java/duke/fx/FxUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.fx;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":" * Graphical UI.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"public class FxUi {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"     * Creates FxUi.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     * @param mainWindow Main window\u0027s controller.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"    public FxUi(MainWindow mainWindow) {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"     * Displays text on the GUI.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    public void displayText(String text) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"        mainWindow.displayReply(text);","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     * Displays startup text on the GUI.","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"    public void displayIntro() {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"        mainWindow.displayReply(\"Welcome to MEL! Type \u0027help\u0027 to get help\");","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Mehvin":33}},{"path":"src/main/java/duke/fx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.fx;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.PNG\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    private Image melImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MEL.PNG\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"    private Consumer\u003cString\u003e onInputHandler;","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     * Properties to set for when initializing javaFX.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"    private void initialize() {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"        // Enables auto scroll","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"     * Handles user input and displays the dialog box for the user.","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"        if (onInputHandler !\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"            onInputHandler.accept(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"     * Displays MEL\u0027s reply.","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"     * @param reply String of MEL\u0027s reply.","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"    public void displayReply(String reply) {","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"                DialogBox.getDukeDialog(reply, melImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"     * Sets the input handler to handle user input.","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"     * @param onInputHandler Input handler.","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"Mehvin"},"content":"    public void setOnInputHandler(Consumer\u003cString\u003e onInputHandler) {","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"Mehvin"},"content":"        this.onInputHandler \u003d onInputHandler;","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Mehvin":77}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" * Handles Deadline object.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"     * @param by By Date/Time of event.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"     * @param marked Boolean of Deadline status.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     * @param by By Date/Time of event.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"    public Deadline(String description, boolean marked, LocalDate by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"        super(description, marked);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"     * Return string of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"     * @return Formatted Deadline with details as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" * Handles Event object.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Event object.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"     * @param from From Date/Time of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"     * @param to To Date/Time of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Event object.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     * @param marked Boolean of Event status.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"     * @param from From Date/Time of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     * @param to To Date/Time of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"    public Event(String description, boolean marked, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"        super(description, marked);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"     * Return string of Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     * @return Formatted Event with details as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"                + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":" * Handles task object to encapsulate commonalities in subclasses.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"     * @param isMarked Boolean to check if task is marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"    public Task(String description, boolean isMarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"        this.isDone \u003d isMarked;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     * Returns status if marked or not via a form of string","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"     * @return Marked icon as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"     * Returns status if marked or not.","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     * @return isDone as boolean.","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"        return isDone;","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"     * Sets status if marked or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"     * @param status Status of mark task.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"    public void setDone(boolean status) {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"        return this.toString().compareTo(otherTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Mehvin"},"content":"     * Return string of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Mehvin"},"content":"     * @return Formatted task with details as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Mehvin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Mehvin"},"content":"        return String.format(\"[\" + getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":72}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":" * Handles storing of the tasks to task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"public class TaskList {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"     * This object can be used for storing tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     * Returns size of task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"     * @return Size as Integer.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    public int size() {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     * Returns task of given index from task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"     * @param index Index of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"     * @return Task as Task.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Mehvin"},"content":"     * Adds given task to task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Mehvin"},"content":"     * @param task Task given to add into list.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Mehvin"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Mehvin"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Mehvin"},"content":"     * Removes task of given index from task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Mehvin"},"content":"     * @param index Index of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Mehvin"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Mehvin"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Mehvin"},"content":"    public void sort() {","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Mehvin"},"content":"        Collections.sort(this.taskList);","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":60}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":" * Handles Todo object.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"     * @param description Description of Todo.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"     * @param marked Boolean of Todo status.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"    public Todo(String description, boolean marked) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"        super(description, marked);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"     * Return string of Todo.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Mehvin"},"content":"     * @return Formatted Todo with details as String.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Mehvin"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Mehvin"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Mehvin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Mehvin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"\u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-color: blue; -fx-border-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Mehvin"},"content":"        \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Mehvin"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"72.0\" fitWidth\u003d\"72.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Mehvin"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Mehvin"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Mehvin"},"content":"        \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Mehvin"},"content":"\u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Mehvin"},"content":"\u003cpadding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Mehvin"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Mehvin"},"content":"\u003c/padding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Mehvin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Mehvin":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.fx.MainWindow\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" promptText\u003d\"Insert command here\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Mehvin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Mehvin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Mehvin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Mehvin":19}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Mehvin"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Mehvin":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mehvin"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Mehvin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Mehvin"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Mehvin"},"content":"mark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Mehvin"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Mehvin"},"content":"event cs2103 project meeting /from Mon 3pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Mehvin"},"content":"wrong input check","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Mehvin"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Mehvin"},"content":"unmark 33333","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Mehvin"},"content":"unmark abc","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Mehvin"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Mehvin"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Mehvin"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Mehvin"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Mehvin":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Mehvin"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Mehvin":1,"-":20}}]
