[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    archiveBaseName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Merrickneo":10,"-":39}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.DateTimeParser;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" * Subclass of Task which includes a deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of DeadlineTask.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     * @param deadline Deadline of the DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    public DeadlineTask(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of DeadlineTask.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     * @param deadline Deadline of the DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * @param completed Completion status of DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    public DeadlineTask(String taskName, LocalDateTime deadline, boolean completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, completed);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the deadline of the DeadlineTask in a String format","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"     * @return String format of the DeadlineTask\u0027s deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"    public String dateTimeFormatter() {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"     * Static method to create a DeadlineTask from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"     * @param command Input provided by user.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"     * @param t TaskList to store the newly created DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"    public static void createDeadlineTask(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e(Arrays.asList(command.split(\" \")));","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        if (input.size() \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c byIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"                taskName.append(input.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c byIndex - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"                    taskName.append(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"            } else if (i \u003e byIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"                deadline.append(input.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c input.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"                    deadline.append(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"        DeadlineTask d \u003d new DeadlineTask(taskName.toString(), DateTimeParser.dateTimeParser(deadline.toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"        t.addTask(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"        return String.format(super.saveTaskString() + \"|%s\", this.deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), dateTimeFormatter());","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":91}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.*;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * Duke class to run and execute the program","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    private static final String divider \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     * Initialises the Duke class which handles the TaskList, User Interface","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"     * and Storage of Tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"     * @param fileDir File Directory of duke.txt.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"     * @param filePath File path of duke.txt.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    public Duke(String fileDir, String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"        storage \u003d new Storage(fileDir, filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * Takes in input from the user and execute the specified task while the","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     * Duke program is running.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        boolean repeat \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        while (repeat) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"            String command \u003d ui.nextInput();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"                repeat \u003d Parser.handleGeneralCommand(command, tasks, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"            if (!repeat) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"                    System.out.println(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"                ui.closeCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"     * Main method to run and execute the Duke program","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"     * @param args Array of inputs into the command line","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"        new Duke(\"src/main/data/\", \"src/main/data/duke.txt\").run();","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":67}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.DateTimeParser;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" * Subclass of Task which has a start and end datetime.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of Event Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     * @param start Start datetime for the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"     * @param end End datetime for the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    public Event(String taskName, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of Event Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"     * @param start Start datetime for the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"     * @param end End datetime for the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"     * @param completed Completion status for the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    public Event(String taskName, LocalDateTime start, LocalDateTime end, boolean completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, completed);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"     * Static method to create a Event Task from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"     * @param command User input to be used to create the Event Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"     * @param t TaskList object to add the newly created Task into the list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"    public static void createEvent(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e(Arrays.asList(command.split(\" \")));","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"        if (input.size() \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"event\");","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder end \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c fromIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"                taskName.append(input.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c fromIndex - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"                    taskName.append(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"            } else if ((i \u003e fromIndex) \u0026\u0026 (i \u003c toIndex)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"                start +\u003d input.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c toIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"                    start +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"            } else if (i \u003e toIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"                end.append(input.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c input.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"                    end.append(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"        Event e \u003d new Event(taskName.toString(), DateTimeParser.dateTimeParser(start.stripTrailing()),","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"                DateTimeParser.dateTimeParser(end.toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"        t.addTask(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"        return String.format(super.saveTaskString() + \"|%s|%s\", this.start, this.end);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"                DateTimeParser.datetimeFormatter(this.start), DateTimeParser.datetimeFormatter(this.end));","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":98}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":" * Abstract class which specifies the structure of a Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":" * Subclasses of \u003cb\u003eTask\u003c/b\u003e are:","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * \u003cli\u003eToDo","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * \u003cli\u003e DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" * \u003cli\u003eEvent \u003c/p\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    protected String taskType \u003d \"T\";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    private final String taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    private boolean completed \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"     * Constructor for Task class.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"     * @param completed Specifies if the task is completed.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    public Task(String taskName, boolean completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"     * Constructor for Task class","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     * Marks a task as done and prints out action done.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"     * @param completion Completion status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    public void setCompletion(boolean completion) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        this.completed \u003d completion;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"        if (completion) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n\" + \"     \" + this);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\\n\" + \"       \" + this);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"     * @return String representing the type of the Task","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"    public String displayType() {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"[%s]\", this.taskType);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"     * Outputs completion status of task","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"     * @return String represented the completion status of the Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    public String displayMark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"        if (this.completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"            return \"X\";","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        return \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"     * Checks if the task description contains the specified keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"     * @param keyword","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"     * @return Boolean indicating if the keyword is found in the task description.","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"        return this.taskName.contains(keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"     * Returns the Task string to be stored in a .txt file for saving.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"     * @return String to be saved in Task history.","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s|%s|%b\", this.taskType, this.taskName, this.completed);","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"  %s[%s] %s\", this.displayType(), this.displayMark(), this.taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":88}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * Subclass of Task which stores the taskName","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * Constructor for ToDo","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * Constructor for ToDo","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     * @param completion Completion status of ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    public ToDo(String taskName, boolean completion) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"     * Static method to create a ToDo Task from user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"     * @param command User input to be used to create the ToDo Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     * @param t TaskList object to add the newly created Task into the list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    public static void createToDo(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        String[] input \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        if (input.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"            taskName.append(input[i]);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c input.length - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"                taskName.append(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        ToDo todo \u003d new ToDo(taskName.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"        t.addTask(todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s\", super.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":58}},{"path":"src/main/java/util/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * DateTimeParser class to handle DateTime manipulation.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"     * Static method to format datetime string into a LocalDateTime object.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * @param input String input for datetime.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     * @return LocalDateTime object representing the current datetime.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If the input is not in the write format to be converted.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    public static LocalDateTime dateTimeParser(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"            return LocalDateTime.parse(input, format);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Invalid Date and Time provided\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"     * Takes in the dateTime object to produce the right format to show to the User.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"     * @param datetime LocalDateTime object","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"     * @return String output of the datetime.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    public static String datetimeFormatter(LocalDateTime datetime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":35}},{"path":"src/main/java/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * DukeException class to handle the different errors that can be","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * encountered by the Duke Program.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    private static final ArrayList\u003cString\u003e taskInput \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"            Arrays.asList(\"todo\", \"list\", \"deadline\", \"event\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    private static final ArrayList\u003cString\u003e markInput \u003d new ArrayList\u003c\u003e(Arrays.asList(\"mark\", \"unmark\", \"delete\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    private String errorMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of DukeException.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"     * @param inputType Description of error.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    public DukeException(String inputType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        if (taskInput.contains(inputType)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d String.format(\"The description of a %s cannot be empty\", inputType);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        } else if (markInput.contains(inputType)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d String.format(\"    Usage: \u0027%s taskNumber\u0027\", inputType);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        } else if (inputType.equals(\"bounds\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d \"I\u0027m sorry, but please specify a valid task index.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d inputType;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     * Empty constructor for DukeException","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    public DukeException() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        return \"    :( OOPS!!! \" + errorMessage;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":42}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import duke.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import duke.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * Parser class to handle command input from User.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"     * Static method to handle command input from User and carry out the appropriate actions.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * @param command Action input from the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     * @param tasks TaskList object to manage tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"     * @return Indicates if the Duke Program should continue to run.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    public static boolean handleGeneralCommand(String command, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        if (command.startsWith(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"            tasks.listTasks();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        } else if ((command.startsWith(\"mark\")) || (command.startsWith(\"unmark\"))","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"                || command.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"            tasks.manageTask(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"            Event.createEvent(command, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"            DeadlineTask.createDeadlineTask(command, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"            ToDo.createToDo(command, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"            tasks.findTasks(command);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        else {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":42}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.io.*;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":" * Storage class to help with loading and storing of Tasks in duke.txt.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    private final String fileDir;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of Storage class","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * @param fileDir Directory of duke.txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     * @param filePath Filepath of duke.txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    public Storage(String fileDir, String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        // check if fileDir and filePath are not empty","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     * Loads the tasks stored in the duke.txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"     * @return BufferedReader object that contains the list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If IOException from reading duke.txt is encountered.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    public BufferedReader load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        BufferedReader br;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"            File directory \u003d new File(this.fileDir);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"                directory.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"            br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Unable to read from file, creating a new file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        return br;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"     * Saves the tasks stored TaskList into the duke.txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"     * @throws IOException If IOException from writing to duke.txt is encountered.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"            String tl \u003d tasks.saveTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"            fw.write(tl);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Unable to save task data\");","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":60}},{"path":"src/main/java/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import duke.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import duke.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import duke.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":" * TaskList class to help manage Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    private static final int TASK_TYPE \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    private static final int TASK_NAME \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    private static final int IS_DONE \u003d 2;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    protected ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    protected BufferedReader br;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"     * Empty constructor for TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    public TaskList() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of TaskList with tasks loaded from storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"     * @param br Saved-data loaded stored in BufferedReader object.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If data is unable to be read from BufferedReader object br.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    public TaskList(BufferedReader br) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        this.br \u003d br;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        this.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"     * Adds a new task to be tracked by TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"     * Displays the number of tasks after addition of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"     * @param task Task object to be tracked.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        System.out.printf(\"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"                + \"       %s\\n\" + this.numTasks() + \"%n\", task);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"     * Displays the tasks being tracked by TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"    public void listTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(counter + \". \" + t.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"            counter++;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"     * Displays the tasks in the TaskList that contains the keyword specified.","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"     * @param command Keyword to check with the tasks in the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"    public void findTasks(String command) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"  Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"        String[] keyword \u003d command.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"            // Iterate through the ArrayList to find if a Task matches","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"            if (t.containsKeyword(keyword[1])) {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"                System.out.println(counter + \". \" + t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"                counter++;","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"     * Loads the tasks stored in the BufferedReader object into the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If IOException from the BufferedReader object is encountered.","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"    @SuppressWarnings(\"checkstyle:RightCurly\")","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"    public void load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"            while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"                String taskLine \u003d br.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"Merrickneo"},"content":"                if (taskLine \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"Merrickneo"},"content":"                String[] taskArr \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"                String taskType \u003d taskArr[TASK_TYPE];","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Merrickneo"},"content":"                switch (taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"                case \"T\":","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"                    boolean completion \u003d Boolean.parseBoolean(taskArr[IS_DONE]);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"                    ToDo t \u003d new ToDo(taskArr[TASK_NAME], completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"                case \"D\":","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(taskArr[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"Merrickneo"},"content":"                    DeadlineTask d \u003d new DeadlineTask(taskArr[TASK_NAME], deadline,","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Merrickneo"},"content":"                            Boolean.parseBoolean(taskArr[IS_DONE]));","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Merrickneo"},"content":"                case \"E\":","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(taskArr[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(taskArr[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"Merrickneo"},"content":"                    Event e \u003d new Event(taskArr[TASK_NAME], start, end, Boolean.parseBoolean(taskArr[IS_DONE]));","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"Merrickneo"},"content":"            br.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Unable to read from file, creating a new file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the String to be saved in storage duke.txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"Merrickneo"},"content":"     * @return String representation of the tasks currently being tracked to be saved.","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"Merrickneo"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"Merrickneo"},"content":"            sb.append(t.saveTaskString()).append(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"Merrickneo"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"Merrickneo"},"content":"     * Sets completion status or delete tasks for Tasks being tracked by TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"Merrickneo"},"content":"     * @param command Input from the User.","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If the input command or task number is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"Merrickneo"},"content":"    public void manageTask(String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"Merrickneo"},"content":"        String[] input \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"Merrickneo"},"content":"        if ((input.length !\u003d 2)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(input[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"Merrickneo"},"content":"        int taskNumber \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"Merrickneo"},"content":"        if (taskNumber \u003e\u003d taskList.size() || (taskNumber \u003c 0)) { //negative and out of range is invalid","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"Merrickneo"},"content":"        if (input[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"Merrickneo"},"content":"            Task task \u003d taskList.remove(taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"Merrickneo"},"content":"            System.out.printf(\"    Noted. I\u0027ve removed this task:\\n       %s\\n%s%n\",","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"Merrickneo"},"content":"                    task, numTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"Merrickneo"},"content":"            boolean completion \u003d input[0].equals(\"mark\");","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"Merrickneo"},"content":"            Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"Merrickneo"},"content":"            task.setCompletion(completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the number of tasks being tracked.","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"Merrickneo"},"content":"     * @return String representation the tasks tracked by TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"Merrickneo"},"content":"    public String numTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"     Now you have %d tasks in the list\", taskList.size());","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":167}},{"path":"src/main/java/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":" * Class to handle the User Interface of the Duke program.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    private static final String divider \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    private final Scanner command;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of Ui class.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        greetUser();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        this.command \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * Outputs greeting message to the User when Duke is booted up.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    public void greetUser() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"     * Reads in the input from the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"     * @return String input from user.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    public String nextInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        return this.command.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"     * Closes the Scanner object and displays end message to the User.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"    public void closeCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"        this.command.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"     * Displays the error message from being unable to retrieve","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"     * task history data.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"History unable to be retrieved!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":54}},{"path":"src/test/java/seedu/duke/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import util.DateTimeParser;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    public void createDateTime_invalidFormat_dukeExceptionThrown() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"            DateTimeParser.dateTimeParser(\"2020/02/12 1800\");","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Merrickneo":16}},{"path":"src/test/java/seedu/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    public void checkAddTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        taskList.addTask(new ToDo(\"return book\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(taskList.numTasks(), \"     Now you have 1 tasks in the list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    public void checkInvalidInput() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"            taskList.manageTask(\"deadline\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Merrickneo":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"bye","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Merrickneo":2}}]
