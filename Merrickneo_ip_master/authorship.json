[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"    archiveBaseName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Merrickneo":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"# Duke Task Manager","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"\u003e Too many tasks floating around? Fret Not, Duke is here to save the day!","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"Duke is your personal task manager, helping you easily keep up to date with your tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"### Add a ToDo task: `add`","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"Adds a todo.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"Format: `todo TASK DESCRIPTION`","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"Example: `todo return book`","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"[T][ ] TASK_DESCRIPTION","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"Now you have X task(s) in the list.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"### Add a DeadlineTask: `deadline`","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"Adds a DeadlineTask.","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"Format: `deadline TASK DESCRIPTION /by DD/MM/YYYY HHmm`","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"Example: `deadline return book /by 14/02/2023 1800`","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"[D][ ] TASK_DESCRIPTION (by: MMM d YYYY HHmm)","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"Now you have X task(s) in the list.","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"### Add an Event task: `event`","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"Adds an Event task.","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"Format: `event TASK DESCRIPTION /from DD/MM/YYYY HHmm /to DD/MM/YYYY HHmm`","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"Example: `event borrow book /from 14/02/2023 1800 /to 22/02/2023 1800`","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"[E][ ] TASK_DESCRIPTION (from: MMM d YYYY HHmm to: MMM d YYYY)","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"Now you have X task(s) in the list.","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"### List all tasks: `list`","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"Displays all tasks added.","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"Format: `list`","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"1. ...","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"2. ...","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"Deletes a task from task list.","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"- Deletes the task specified by the User","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"Example: `delete 1`","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"- Deletes the task if there is a task at index 1.","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":" [T][ ] TASK_DESCRIPTION","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"### Finding specific tasks: `find`","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"Display tasks where the description matches given keywords.","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"Example: `find KEYWORD` ","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"- Returns a list of all tasks which contains the KEYWORD.","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"1. ...","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"2. ...","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"### Marking a task: `mark`","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"Merrickneo"},"content":"Marks a task as completed.","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"Merrickneo"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"Merrickneo"},"content":"- INDEX refers to the task to be marked as completed.","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"Merrickneo"},"content":"Example: `mark 1` marks the first task as completed if it exists.","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"Merrickneo"},"content":"OK! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"Merrickneo"},"content":"[T][X] TASK_DESCRIPTION","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"Merrickneo"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"Merrickneo"},"content":"Marks a task as incomplete.","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"Merrickneo"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"Merrickneo"},"content":"- INDEX refers to the task to be marked as incomplete.","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"Merrickneo"},"content":"Example: `unmark 1` marks the first task as uncompleted if it exists.","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"Merrickneo"},"content":"Marks a task as incomplete when valid index is given.","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"Merrickneo"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"Merrickneo"},"content":"[T][ ] TASK_DESCRIPTION","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"Merrickneo"},"content":"### Snoozing a task: `snooze`","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"Merrickneo"},"content":"Shifts back the deadline of a Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"Merrickneo"},"content":"Format: `snooze INDEX /day DAY /hour HOUR /minutes MINUTES`","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"Merrickneo"},"content":"- INDEX refers to the task to be snoozed","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"Merrickneo"},"content":"- Note: ToDo has no deadline","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"Merrickneo"},"content":"Example: `snooze 1 /day 10 /hour 10 /minutes 20`","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"Merrickneo"},"content":"Outputs the new deadline of the Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"Merrickneo"},"content":"New deadline is MMM d YYYY HHmm!","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"Merrickneo"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"Merrickneo"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"Merrickneo"},"content":"Exits the program.","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"Merrickneo"},"content":"Format: `bye`","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"Merrickneo"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"Merrickneo"},"content":"`Bye. Hope to see you again soon!`","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Merrickneo":126,"-":18}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import util.DateTimeParser;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":" * Subclass of Task which includes a deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of DeadlineTask.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"     * @param deadline Deadline of the DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    public DeadlineTask(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of DeadlineTask.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"     * @param deadline Deadline of the DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"     * @param isCompleted Completion status of DeadlineTask","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    public DeadlineTask(String taskName, LocalDateTime deadline, boolean isCompleted) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        assert deadline !\u003d null : \"Deadline is invalid\";","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the deadline of the DeadlineTask in a String format","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"     * @return String format of the DeadlineTask\u0027s deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    public String formatDateTime() {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"     * Creates a DeadlineTask from user input.","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"     * @param command Input provided by user.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"     * @param t TaskList to store the newly created DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"     * @return Message to be shown to the user.","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"    public static String createDeadlineTask(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e(Arrays.asList(command.split(\" \")));","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        if (input.size() \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c byIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"                taskName.append(input.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c byIndex - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"                    taskName.append(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"            } else if (i \u003e byIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"                deadline.append(input.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c input.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"                    deadline.append(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"        DeadlineTask d \u003d new DeadlineTask(taskName.toString(), DateTimeParser.dateTimeParser(deadline.toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"        return t.addTask(d);","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"        return String.format(super.saveTaskString() + \"|%s\", this.deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), formatDateTime());","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"Merrickneo"},"content":"     * Changes the deadline of the DeadlineTask.","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"Merrickneo"},"content":"     * @param days Number of days to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"Merrickneo"},"content":"     * @param hours Number of hours to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"     * @param minutes Number of minutes to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"Merrickneo"},"content":"     * @return new deadline of the Deadline Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeDeadline(int days, int hours, int minutes) {","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d this.deadline.plusDays(days);","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d this.deadline.plusHours(hours);","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d this.deadline.plusMinutes(minutes);","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"New deadline is %s!\", DateTimeParser.datetimeFormatter(this.deadline) );","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"     * Changes the deadline of the DeadlineTask by a default value of 5 minutes.","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"Merrickneo"},"content":"     * @return New deadline of the DeadlineTask.","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeDeadline() {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"Merrickneo"},"content":"        return this.snoozeDeadline(0, 0, 5);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":113}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        db.flip();","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        return db;","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Merrickneo":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"import util.Parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"import util.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"import util.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":" * Duke class to run and execute the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    private static final String divider \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    private static final String FILE_DIR \u003d \"data\";","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    private static final String FILE_PATH \u003d FILE_DIR + File.separator + \"duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"     * Initialises the Duke class which handles the TaskList, User Interface","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"     * and Storage of Tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"    public Duke() {","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"        this.storage \u003d new Storage(FILE_DIR, FILE_PATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"        stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"Merrickneo"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"Merrickneo"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"Merrickneo"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"Merrickneo"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"Merrickneo"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"Merrickneo"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"Merrickneo"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"Merrickneo"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"Merrickneo"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"Merrickneo"},"content":"        });","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"Merrickneo"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"Merrickneo"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"Merrickneo"},"content":"        });","lastModifiedDate":"2023-02-05"},{"lineNumber":117,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"Merrickneo"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"Merrickneo"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"Merrickneo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"Merrickneo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"Merrickneo"},"content":"        String response \u003d this.getResponse(userInput.getText());","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"Merrickneo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"Merrickneo"},"content":"                DialogBox.getUserDialog(input, user),","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"Merrickneo"},"content":"                DialogBox.getDukeDialog(response, duke)","lastModifiedDate":"2023-02-05"},{"lineNumber":129,"author":{"gitId":"Merrickneo"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"Merrickneo"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"Merrickneo"},"content":"     * Gets the response from Duke from running the command.","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"Merrickneo"},"content":"     * @param command Input command from user.","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"Merrickneo"},"content":"     * @return Response to the action specified by user.","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"Merrickneo"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"Merrickneo"},"content":"        return parser.handleGeneralCommand(command, tasks, storage, ui);","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":141}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import util.DateTimeParser;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" * Event task which has a start and end datetime.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of Event Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * @param start Start datetime for the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     * @param deadline End datetime for the Event.","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    public Event(String taskName, LocalDateTime start, LocalDateTime deadline) {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        assert start !\u003d null : \"Start Time is not valid\";","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        assert deadline !\u003d null : \"End Time is not valid\";","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of Event Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"     * @param start Start datetime for the Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"     * @param deadline End datetime for the Event.","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"     * @param isCompleted Completion status for the Event.","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    public Event(String taskName, LocalDateTime start, LocalDateTime deadline, boolean isCompleted) {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"     * Creates an Event Task from user input.","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"     * @param command User input to be used to create the Event Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"     * @param t TaskList object to add the newly created Task into the list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"     * @return Message to be shown to the user.","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"    public static String createEvent(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e(Arrays.asList(command.split(\" \")));","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        if (input.size() \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"event\");","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c fromIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"                taskName.append(input.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c fromIndex - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"                    taskName.append(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"            } else if ((i \u003e fromIndex) \u0026\u0026 (i \u003c toIndex)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"                start +\u003d input.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c toIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"                    start +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"            } else if (i \u003e toIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"                deadline.append(input.get(i));","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c input.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"                    deadline.append(\" \");","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"        Event e \u003d new Event(taskName.toString(), DateTimeParser.dateTimeParser(start.stripTrailing()),","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"                DateTimeParser.dateTimeParser(deadline.toString()));","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"        return t.addTask(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"     * Changes the deadline of the Event Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"     * @param days Number of days to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"     * @param hours Number of hours to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"Merrickneo"},"content":"     * @param minutes Number of minutes to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"Merrickneo"},"content":"     * @return new deadline of the Event Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeDeadline(int days, int hours, int minutes) {","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d this.deadline.plusDays(days);","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d this.deadline.plusHours(hours);","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d this.deadline.plusMinutes(minutes);","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"New deadline is %s!\", DateTimeParser.datetimeFormatter(this.deadline));","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"     * Changes the deadline of the Event by a default value of 5 minutes.","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"     * @return New deadline of the Event.","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeDeadline() {","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"        return this.snoozeDeadline(0, 0, 5);","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"Merrickneo"},"content":"        return String.format(super.saveTaskString() + \"|%s|%s\", this.start, this.deadline);","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"Merrickneo"},"content":"                DateTimeParser.datetimeFormatter(this.start), DateTimeParser.datetimeFormatter(this.deadline));","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":120}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Merrickneo":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"            stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Merrickneo":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        String welcomeMessage \u003d \"Welcome to Duke! What can you do!\";","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Merrickneo":55}},{"path":"src/main/java/duke/Snoozable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":" * Snoozable interface to help push back tasks by a specified amount.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"public interface Snoozable {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeDeadline(int days, int hours, int minutes);","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeDeadline();","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Merrickneo":10}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":" * Abstract class which specifies the structure of a Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * Subclasses of \u003cb\u003eTask\u003c/b\u003e are:","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" * \u003cli\u003eToDo","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" * \u003cli\u003e DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":" * \u003cli\u003eEvent \u003c/p\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"public abstract class Task implements Snoozable {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    protected String taskType \u003d \"T\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    protected LocalDateTime deadline \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    private final String taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"     * Constructor for Task class.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     * @param isCompleted Specifies if the task is isCompleted.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    public Task(String taskName, boolean isCompleted) {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"     * Constructor for Task class","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"     * Marks a task as done and prints out action done.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"     * @param isCompleted Completion status of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"    public String setCompletion(boolean isCompleted) {","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"            return String.format(\"    Nice! I\u0027ve marked this task as done:\\n\" + \"     \" + this);","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"            return String.format(\"    OK, I\u0027ve marked this task as not done yet:\\n\" + \"       \" + this);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"     * @return String representing the type of the Task","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"    public String displayType() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"[%s]\", this.taskType);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"     * Outputs completion status of task","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"     * @return String represented the completion status of the Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"    public String displayMark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"            return \"X\";","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"        return \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"     * Checks if the task description contains the specified keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"     * @param keyword Phrase to match with our Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"     * @return Boolean indicating if the keyword is found in the task description.","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"        return this.taskName.contains(keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"     * Returns the Task string to be stored in a .txt file for saving.","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"     * @return String to be saved in Task history.","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s|%s|%b\", this.taskType, this.taskName, this.isCompleted);","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"  %s[%s] %s\", this.displayType(), this.displayMark(), this.taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":91}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * Todo task which stores the taskName.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"     * Constructor for ToDo","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * @param taskName Description of ToDo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     * @param isCompleted Completion status of ToDo task.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    public ToDo(String taskName, boolean isCompleted) {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, isCompleted);","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"     * Creates a ToDo Task from user input.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"     * @param command User input to be used to create the ToDo Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"     * @param t TaskList object to add the newly created Task into the list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     * @return Message to be shown to the user.","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    public static String createToDo(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        String[] input \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        if (input.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"            taskName.append(input[i]);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c input.length - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"                taskName.append(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        ToDo todo \u003d new ToDo(taskName.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"        return t.addTask(todo);","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s\", super.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"     * Changes the deadline of a ToDo Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"     * @param days Number of days to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"     * @param hours Number of hours to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"     * @param minutes Number of minutes to shift back.","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"     * @return new deadline of the ToDo Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeDeadline(int days, int hours, int minutes) {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"        return this.snoozeDeadline();","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the new deadline of the ToDo Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"     * @return new deadline of the ToDo Task.","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeDeadline() {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"        return \"ToDo task has no deadline!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":76}},{"path":"src/main/java/util/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * DateTimeParser class to handle DateTime manipulation.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"     * Static method to format datetime string into a LocalDateTime object.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * @param input String input for datetime.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     * @return LocalDateTime object representing the current datetime.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If the input is not in the write format to be converted.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    public static LocalDateTime dateTimeParser(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"            return LocalDateTime.parse(input, format);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Invalid Date and Time provided\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"     * Takes in the dateTime object to produce the right format to show to the User.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"     * @param datetime LocalDateTime object","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"     * @return String output of the datetime.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    public static String datetimeFormatter(LocalDateTime datetime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":35}},{"path":"src/main/java/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * DukeException class to handle the different errors that can be encountered by the Duke Program.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    private static final ArrayList\u003cString\u003e taskInput \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"            Arrays.asList(\"todo\", \"list\", \"deadline\", \"event\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    private static final ArrayList\u003cString\u003e markInput \u003d new ArrayList\u003c\u003e(Arrays.asList(\"mark\", \"unmark\", \"delete\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    private String errorMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     * Empty constructor for DukeException","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    public DukeException() {}","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of DukeException.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     * @param inputType Description of error.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    public DukeException(String inputType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        if (taskInput.contains(inputType)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d String.format(\"The description of a %s cannot be empty\", inputType);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        } else if (markInput.contains(inputType)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d String.format(\"Usage: \u0027%s taskNumber\u0027\", inputType);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        } else if (inputType.equals(\"bounds\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d \"I\u0027m sorry, but please specify a valid task index.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d inputType;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        return \":( OOPS!!! \" + errorMessage;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":42}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import duke.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import duke.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" * Parser class to handle command input from User.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"     * Static method to handle command input from User and carry out the appropriate actions.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * @param command Action input from the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     * @param tasks TaskList object to manage tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"     * @return Output to be shown to the user.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    public static String handleGeneralCommand(String command, TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        assert tasks !\u003d null : \"TaskList should be already initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        assert storage !\u003d null : \"Storage should be already initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        assert ui !\u003d null : \"UI should already be initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"            if (command.startsWith(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"                return tasks.listTasks();","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"            } else if ((command.startsWith(\"mark\")) || (command.startsWith(\"unmark\"))","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"                    || command.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"                return tasks.manageTask(command);","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"                storage.saveTasks(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"                return ui.closeCommand();","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"                return Event.createEvent(command, tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"                return DeadlineTask.createDeadlineTask(command, tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"                return ToDo.createToDo(command, tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"            } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"                return tasks.findTasks(command);","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"            } else if (command.startsWith(\"snooze\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"                return tasks.snoozeTask(command);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"            return e.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"        return \"Sorry I do not understand your command :(\";","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":48}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.io.File;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":" * Storage class to help with loading and storing of Tasks in duke.txt.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    private final String fileDir;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of Storage class","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    public Storage(String fileDir, String filePath) {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        assert !fileDir.isEmpty() : \"File Directory should not be empty!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        assert !filePath.isEmpty() : \"File Path should not be empty!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"     * Loads the tasks stored in the duke.txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"     * @return BufferedReader object that contains the list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If IOException from reading duke.txt is encountered.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    public BufferedReader loadData() throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        assert !fileDir.isEmpty() : \"File Directory cannot be empty!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        assert !filePath.isEmpty() : \"File Path cannot be empty\";","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        BufferedReader br;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"            File directory \u003d new File(this.fileDir);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"                directory.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"            br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Unable to read from file, creating a new file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        return br;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"     * Saves the tasks stored TaskList into the duke.txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"     * @throws IOException If IOException from writing to duke.txt is encountered.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"    public void saveTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"            String tl \u003d tasks.saveTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"            fw.write(tl);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Unable to save task data\");","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":66}},{"path":"src/main/java/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import duke.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import duke.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import duke.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":" * TaskList class to help manage Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    private static final int TASK_TYPE \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    private static final int TASK_NAME \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    private static final int IS_DONE \u003d 2;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    protected ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    protected BufferedReader br;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"     * Empty constructor for TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    public TaskList() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of TaskList with tasks loaded from storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"     * @param br Saved-data loaded stored in BufferedReader object.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If data is unable to be read from BufferedReader object br.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    public TaskList(BufferedReader br) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        this.br \u003d br;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        this.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"     * Adds a new task to be tracked by TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"     * Displays the number of tasks after addition of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"     * @param task Task object to be tracked.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\" + \"       %s\\n\" + this.numTasks() + \"%n\", task);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"     * Displays the tasks being tracked by TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"    public String listTasks() {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"            sb.append(counter + \". \" + t.toString() + \"\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"            counter++;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"            return \"Nothing at the moment!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"     * Displays the tasks in the TaskList that contains the keyword specified.","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"     * @param command Keyword to check with the tasks in the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"    public String findTasks(String command) {","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"        String[] keyword \u003d command.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"            // Iterate through the ArrayList to find if a Task matches","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"            if (t.containsKeyword(keyword[1])) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"                if (counter \u003d\u003d taskList.size()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"                    sb.append(counter + \". \" + t.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"                sb.append(counter + \". \" + t.toString() + \"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"                counter++;","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Merrickneo"},"content":"     * Loads the tasks stored in the BufferedReader object into the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If IOException from the BufferedReader object is encountered.","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Merrickneo"},"content":"    @SuppressWarnings({\"checkstyle:RightCurly\", \"checkstyle:MissingSwitchDefault\"})","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"    public void load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"            while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"                String taskLine \u003d br.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"                if (taskLine \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"                String[] taskArr \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"                String taskType \u003d taskArr[TASK_TYPE];","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"Merrickneo"},"content":"                switch (taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Merrickneo"},"content":"                case \"T\":","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"                    boolean completion \u003d Boolean.parseBoolean(taskArr[IS_DONE]);","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"Merrickneo"},"content":"                    ToDo t \u003d new ToDo(taskArr[TASK_NAME], completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Merrickneo"},"content":"                case \"D\":","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(taskArr[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"Merrickneo"},"content":"                    DeadlineTask d \u003d new DeadlineTask(taskArr[TASK_NAME], deadline,","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Merrickneo"},"content":"                            Boolean.parseBoolean(taskArr[IS_DONE]));","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"Merrickneo"},"content":"                case \"E\":","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(taskArr[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(taskArr[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"Merrickneo"},"content":"                    Event e \u003d new Event(taskArr[TASK_NAME], start, end, Boolean.parseBoolean(taskArr[IS_DONE]));","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Merrickneo"},"content":"                default:","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"Merrickneo"},"content":"                    throw new DukeException(\"Not a valid Task Type!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"Merrickneo"},"content":"            br.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Unable to read from file, creating a new file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the String to be saved in storage duke.txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"Merrickneo"},"content":"     * @return String representation of the tasks currently being tracked to be saved.","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"Merrickneo"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"Merrickneo"},"content":"            sb.append(t.saveTaskString()).append(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"Merrickneo"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"Merrickneo"},"content":"     * Sets completion status or delete tasks for Tasks being tracked by TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"Merrickneo"},"content":"     * @param command Input from the User.","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException If the input command or task number is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"Merrickneo"},"content":"    public String manageTask(String command) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":151,"author":{"gitId":"Merrickneo"},"content":"        String[] input \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"Merrickneo"},"content":"        if ((input.length !\u003d 2)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(input[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"Merrickneo"},"content":"        int taskNumber \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"Merrickneo"},"content":"        if (taskNumber \u003e\u003d taskList.size() || (taskNumber \u003c 0)) { //negative and out of range is invalid","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"Merrickneo"},"content":"        if (input[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"Merrickneo"},"content":"            Task task \u003d taskList.remove(taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"Merrickneo"},"content":"            return String.format(\"Noted. I\u0027ve removed this task:\\n       %s\\n%s%n\", task, numTasks());","lastModifiedDate":"2023-02-05"},{"lineNumber":162,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"Merrickneo"},"content":"            boolean completion \u003d input[0].equals(\"mark\");","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"Merrickneo"},"content":"            Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"Merrickneo"},"content":"            return task.setCompletion(completion);","lastModifiedDate":"2023-02-05"},{"lineNumber":166,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"Merrickneo"},"content":"     * Outputs the number of tasks being tracked.","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"Merrickneo"},"content":"     * @return String representation the tasks tracked by TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"Merrickneo"},"content":"    public String numTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"Now you have %d tasks in the list\", taskList.size());","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":178,"author":{"gitId":"Merrickneo"},"content":"     * Snoozes the task specified.","lastModifiedDate":"2023-02-14"},{"lineNumber":179,"author":{"gitId":"Merrickneo"},"content":"     * @param command Action input from the user.","lastModifiedDate":"2023-02-14"},{"lineNumber":180,"author":{"gitId":"Merrickneo"},"content":"     * @return New deadline of the task specified.","lastModifiedDate":"2023-02-14"},{"lineNumber":181,"author":{"gitId":"Merrickneo"},"content":"     * @throws DukeException Index of task is invalid","lastModifiedDate":"2023-02-14"},{"lineNumber":182,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":183,"author":{"gitId":"Merrickneo"},"content":"    @SuppressWarnings(\"checkstyle:OperatorWrap\")","lastModifiedDate":"2023-02-14"},{"lineNumber":184,"author":{"gitId":"Merrickneo"},"content":"    public String snoozeTask(String command) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":185,"author":{"gitId":"Merrickneo"},"content":"        // \"snooze 1 /day 10 /hour 10 /minutes 20\"","lastModifiedDate":"2023-02-09"},{"lineNumber":186,"author":{"gitId":"Merrickneo"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e(Arrays.asList(command.split(\" \")));","lastModifiedDate":"2023-02-09"},{"lineNumber":187,"author":{"gitId":"Merrickneo"},"content":"        int dayIndex \u003d input.indexOf(\"/day\");","lastModifiedDate":"2023-02-09"},{"lineNumber":188,"author":{"gitId":"Merrickneo"},"content":"        int hourIndex \u003d input.indexOf(\"/hour\");","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"Merrickneo"},"content":"        int minutesIndex \u003d input.indexOf(\"/minutes\");","lastModifiedDate":"2023-02-09"},{"lineNumber":190,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":191,"author":{"gitId":"Merrickneo"},"content":"        if (dayIndex \u003d\u003d -1 || hourIndex \u003d\u003d -1 || minutesIndex \u003d\u003d -1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":192,"author":{"gitId":"Merrickneo"},"content":"            String output \u003d \"Usage should be:\\n snooze {taskNumber} /day {days} /hour {hour} /minutes {minutes}\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":193,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(output);","lastModifiedDate":"2023-02-14"},{"lineNumber":194,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"Merrickneo"},"content":"        int taskNumber \u003d Integer.parseInt(input.get(1)) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":196,"author":{"gitId":"Merrickneo"},"content":"        int days \u003d Integer.parseInt(input.get(dayIndex + 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"Merrickneo"},"content":"        int hours \u003d Integer.parseInt(input.get(hourIndex + 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":198,"author":{"gitId":"Merrickneo"},"content":"        int minutes \u003d Integer.parseInt(input.get(minutesIndex + 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":200,"author":{"gitId":"Merrickneo"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-02-09"},{"lineNumber":201,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":202,"author":{"gitId":"Merrickneo"},"content":"        return task.snoozeDeadline(days, hours, minutes);","lastModifiedDate":"2023-02-09"},{"lineNumber":203,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":204,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":204}},{"path":"src/main/java/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":" * Class to handle the User Interface of the Duke program.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":" * @author Merrick","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    private static final String divider \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    private final Scanner command;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"     * Constructor of Ui class.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        greetUser();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        this.command \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"     * Output greeting message to the User when Duke is booted up.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"     * @return Greeting message to user.","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    public String greetUser() {","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        return divider + \"    Hello! I\u0027m Duke\\n\" + \"    What can I do for you?\\n\" + divider;","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"     * Closes the Scanner object and displays end message to the User.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"     * @return Goodbye message to User.","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    public String closeCommand() {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        this.command.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        return \"    Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Merrickneo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Merrickneo":19}},{"path":"src/test/java/seedu/duke/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import util.DateTimeParser;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    public void createDateTime_invalidFormat_dukeExceptionThrown() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"            DateTimeParser.dateTimeParser(\"2020/02/12 1800\");","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Merrickneo":19}},{"path":"src/test/java/seedu/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import duke.ToDo;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    public void checkAddTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        taskList.addTask(new ToDo(\"return book\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        assertEquals(taskList.numTasks(), \"Now you have 1 tasks in the list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    public void checkInvalidInput() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"            taskList.manageTask(\"deadline\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Merrickneo":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"bye","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Merrickneo":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Merrickneo":1,"-":37}}]
