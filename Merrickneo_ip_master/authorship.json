[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Merrickneo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Merrickneo":5,"-":41}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.DateTimeParser;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    public DeadlineTask(String taskName, LocalDateTime deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    public DeadlineTask(String taskName, LocalDateTime deadline, boolean completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, completed);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    public String dateTimeFormatter() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    public static void createDeadlineTask(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList(Arrays.asList(command.split(\" \")));","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        if (input.size() \u003c\u003d 1) throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        String deadline \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c byIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"                taskName +\u003d input.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c byIndex - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"                    taskName +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"            } else if (i \u003e byIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"                deadline +\u003d input.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c input.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"                    deadline +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"        DeadlineTask d \u003d new DeadlineTask(taskName, DateTimeParser.dateTimeParser(deadline));","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"        t.addTask(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        return String.format(super.saveTaskString() + \"|%s\", this.deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), dateTimeFormatter());","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    private static String divider \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    public void run(){","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"        boolean repeat \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"        while (repeat) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"            String command \u003d ui.nextInput();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"                repeat \u003d Parser.handleGeneralCommand(command, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"            if (!repeat) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"                    System.out.println(\"Unable to save! Creating new save file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"                ui.closeCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        new Duke(\"src/main/data/\", \"src/main/data/duke.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    public Duke(String fileDir, String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        storage \u003d new Storage(fileDir, filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":51}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.DateTimeParser;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    public Event(String taskName, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    public Event(String taskName, LocalDateTime start, LocalDateTime end, boolean completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, completed);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    public static void createEvent(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList(Arrays.asList(command.split(\" \")));","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        if (input.size() \u003c\u003d 1) throw new DukeException(\"event\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        String start \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c fromIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"                taskName +\u003d input.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c fromIndex - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"                    taskName +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"            } else if ((i \u003e fromIndex) \u0026\u0026 (i \u003c toIndex)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"                start +\u003d input.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c toIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"                    start +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"            } else if (i \u003e toIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"                end +\u003d input.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"                if (i \u003c input.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"                    end +\u003d \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"        Event e \u003d new Event(taskName, DateTimeParser.dateTimeParser(start.stripTrailing()), DateTimeParser.dateTimeParser(end));","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        t.addTask(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"        return String.format(super.saveTaskString() + \"|%s|%s\", this.start, this.end);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"                DateTimeParser.datetimeFormatter(this.start), DateTimeParser.datetimeFormatter(this.end));","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":70}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    protected boolean completed \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    protected String taskType \u003d \"T\";","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"    protected static int numTasks \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    protected boolean deleted \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    public Task(String taskName, boolean completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        numTasks++;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        numTasks++;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    public void setCompletion(boolean completion) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        this.completed \u003d completion;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        if (completion) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n\" + \"     \"+ this);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\\n\" + \"       \" + this);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    public String displayType() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"[%s]\", this.taskType);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"    public String displayMark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        if (this.completed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"            return \"X\";","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"        return \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    public static void saveTaskData(Task t, int isAppend) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"        String PATH \u003d \"src/main/data\";","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"        File directory \u003d new File(\"src/main/data/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"            directory.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"            FileWriter fw \u003d new FileWriter(\"src/main/data/duke.txt\", true);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"            String description \u003d String.format(\"%s|%d|%s\\n\", t.taskType, isAppend, t.taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"            fw.write(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(\"Unable to save information into the file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s|%s|%b\", this.taskType, this.taskName, this.completed);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"  %s[%s] %s\", this.displayType(), this.displayMark(), this.taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":70}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import util.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    public ToDo(String taskName, boolean completion) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"        super(taskName, completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    public static void createToDo(String command, TaskList t) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        String[] input \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        if (input.length \u003c\u003d 1) throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"            taskName.append(input[i]);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"            if (i \u003c input.length - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"                taskName.append(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        ToDo todo \u003d new ToDo(taskName.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        t.addTask(todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"%s\", super.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":36}},{"path":"src/main/java/util/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"    // Format deadline into a Datetime object","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    // Format expected is 08/12/2023 1800","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    public static LocalDateTime dateTimeParser(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"        return LocalDateTime.parse(input, format);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    public static String datetimeFormatter(LocalDateTime datetime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":17}},{"path":"src/main/java/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"    protected String errorMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    private static final ArrayList\u003cString\u003e taskInput \u003d new ArrayList\u003c\u003e (Arrays.asList(\"todo\", \"list\", \"deadline\", \"event\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    private static final ArrayList\u003cString\u003e markInput \u003d new ArrayList\u003c\u003e (Arrays.asList(\"mark\", \"unmark\", \"delete\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    public DukeException(String inputType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"        if (taskInput.contains(inputType)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d String.format(\"The description of a %s cannot be empty\", inputType);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"        } else if (markInput.contains(inputType)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d String.format(\"    Usage: \u0027%s taskNumber\u0027\", inputType);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        } else if(inputType.equals(\"bounds\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d \"I\u0027m sorry, but please specify a valid task index.\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"            this.errorMessage \u003d inputType;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    public DukeException() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        return \"    :( OOPS!!! \" + errorMessage;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":30}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import duke.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import duke.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    public static boolean handleGeneralCommand(String command, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"        if (command.startsWith(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"            tasks.listTasks();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"        } else if ((command.startsWith(\"mark\")) || (command.startsWith(\"unmark\")) ||","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"                command.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"            tasks.manageTask(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"            tasks.saveTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.startsWith(\"event\")){","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"            Event.createEvent(command, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"            DeadlineTask.createDeadlineTask(command, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"            ToDo.createToDo(command, tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"        else {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":29}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.io.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"    private String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"    private String fileDir;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"    public Storage(String fileDir, String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"        // check if fileDir and filePath are not empty","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    public BufferedReader load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"        BufferedReader br;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"            File directory \u003d new File(this.fileDir);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"                directory.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"            br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Unable to read from file, creating a new file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"        return br;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"            String tl \u003d tasks.saveTaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"            fw.write(tl);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":43}},{"path":"src/main/java/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import duke.DeadlineTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"import duke.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"import duke.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"import duke.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    private static int TASK_TYPE \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"    private static int TASK_NAME \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"    private static int IS_DONE \u003d 2;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"    protected ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"    protected BufferedReader br;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"    // T | false | book buy | false","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"    public TaskList() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"    public TaskList(BufferedReader br) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"        this.br \u003d br;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        this.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"    // Add new taskList to the list","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    // Outputs a String with the details of the task and the number of taskList in the list","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(String.format(\"     Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Merrickneo"},"content":"                \"       %s\\n\" + this.numTasks(), task));","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Merrickneo"},"content":"    public void listTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Merrickneo"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Merrickneo"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(counter + \". \" + t.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Merrickneo"},"content":"            counter++;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Merrickneo"},"content":"    public void load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Merrickneo"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Merrickneo"},"content":"            while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Merrickneo"},"content":"                String taskLine \u003d br.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Merrickneo"},"content":"                if (taskLine \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Merrickneo"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Merrickneo"},"content":"                String[] taskArr \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Merrickneo"},"content":"//                for (String s: taskArr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Merrickneo"},"content":"//                    System.out.println(s);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Merrickneo"},"content":"//                }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Merrickneo"},"content":"                String taskType \u003d taskArr[TASK_TYPE];","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Merrickneo"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Merrickneo"},"content":"                    boolean completion \u003d Boolean.parseBoolean(taskArr[IS_DONE]);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Merrickneo"},"content":"                    ToDo t \u003d new ToDo(taskArr[TASK_NAME], completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Merrickneo"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(taskArr[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Merrickneo"},"content":"                    boolean completion \u003d Boolean.parseBoolean(taskArr[IS_DONE]);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Merrickneo"},"content":"                    DeadlineTask d \u003d new DeadlineTask(taskArr[TASK_NAME], deadline, completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Merrickneo"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(taskArr[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Merrickneo"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(taskArr[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Merrickneo"},"content":"                    boolean completion \u003d Boolean.parseBoolean(taskArr[IS_DONE]);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Merrickneo"},"content":"                    Event e \u003d new Event(taskArr[TASK_NAME], start, end, completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Merrickneo"},"content":"                    this.taskList.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Merrickneo"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Merrickneo"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Merrickneo"},"content":"            br.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Merrickneo"},"content":"        catch (IOException e){","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"Unable to read from file, creating a new file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Merrickneo"},"content":"    public String saveTaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Merrickneo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Merrickneo"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Merrickneo"},"content":"            sb.append(t.saveTaskString()).append(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Merrickneo"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Merrickneo"},"content":"    public void manageTask(String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Merrickneo"},"content":"        String[] input \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"Merrickneo"},"content":"        if ((input.length !\u003d 2)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(input[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"Merrickneo"},"content":"        int taskNumber \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"Merrickneo"},"content":"        if (taskNumber \u003e\u003d taskList.size() || (taskNumber \u003c 0)) { //negative and out of range is invalid","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Merrickneo"},"content":"            throw new DukeException(\"bounds\");","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"Merrickneo"},"content":"        if (input[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"Merrickneo"},"content":"            Task task \u003d taskList.remove(taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"Merrickneo"},"content":"            System.out.println(String.format(\"    Noted. I\u0027ve removed this task:\\n       %s\\n%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"Merrickneo"},"content":"                    task, numTasks()));","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"Merrickneo"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"Merrickneo"},"content":"            boolean completion \u003d input[0].equals(\"mark\");","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"Merrickneo"},"content":"            Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"Merrickneo"},"content":"            task.setCompletion(completion);","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"Merrickneo"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"Merrickneo"},"content":"    public String numTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"Merrickneo"},"content":"        return String.format(\"     Now you have %d tasks in the list\", taskList.size());","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":113}},{"path":"src/main/java/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"package util;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Merrickneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Merrickneo"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Merrickneo"},"content":"    protected static String divider \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Merrickneo"},"content":"    private Scanner command;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Merrickneo"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Merrickneo"},"content":"        greetUser();","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Merrickneo"},"content":"        this.command \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Merrickneo"},"content":"    public void greetUser() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Merrickneo"},"content":"    public String nextInput() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Merrickneo"},"content":"        return this.command.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Merrickneo"},"content":"    public void closeCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Merrickneo"},"content":"        this.command.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Merrickneo"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Merrickneo"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Merrickneo"},"content":"        System.out.println(\"History unable to be retrieved!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Merrickneo"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Merrickneo"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Merrickneo":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Merrickneo"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"Merrickneo"},"content":"bye","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Merrickneo":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Merrickneo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Merrickneo":1,"-":20}}]
