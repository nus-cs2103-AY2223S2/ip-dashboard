[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"    protected String dateToComplete;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    public Deadline(String taskInfo, String dateToComplete) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"        super(taskInfo);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"        this.dateToComplete \u003d dateToComplete;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        return \"[D]\" + super.getTaskInfo() + \" (by:\" + dateToComplete + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"import java.util.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"import java.io.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        PrintWriter pw \u003d new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    Hello! I\u0027m Duke\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    What can I do for you?\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        pw.println(sb.toString());  // Welcome Message bye Duke","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"        pw.flush();","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        sb.setLength(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cTask\u003e storage2 \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        boolean goNext \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        while (true) {  // Echoing","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            text \u003d br.readLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            String[] tempText \u003d text.split(\" \", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"            switch(tempText[0].toLowerCase()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"                        DukeException.validate(tempText.length, 1, \"bye\");","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"                    } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"                        goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"                    sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    Bye. Hope to see you again soon!\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"                case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"                        DukeException.validate(tempText.length, 1, \"list\");","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"                    } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"                        goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"                    sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"                    for (int i \u003d 0; i \u003c storage2.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"                        sb.append(\"    \").append(i + 1).append(\".\").append(storage2.get(i).getTaskInfo()).append(\"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"                    sb.append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"                        DukeException.validate(tempText.length, 2, \"mark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"                        DukeException.validate(tempText[1], \"mark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"                    } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"                        goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"                    int taskNumber \u003d Integer.parseInt(tempText[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"                    if (taskNumber \u003c\u003d storage2.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"                        // need to add in an exception if out of range","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"                        Task tempTask \u003d storage2.get(taskNumber - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"                        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"                                .append(tempTask.markAsDone())","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"                                .append(\"\\n    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"                        storage2.set(taskNumber -1, tempTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"                        DukeException.validate(tempText.length, 2, \"unmark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"                        DukeException.validate(tempText[1], \"unmark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"                    } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"                        goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"                    int taskNumber2 \u003d Integer.parseInt(tempText[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"                    if (taskNumber2 \u003c\u003d storage2.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"                        // need to add in an exception if out of range","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"                        Task tempTask \u003d storage2.get(taskNumber2 - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"                        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"                                .append(tempTask.markAsIncomplete())","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"                                .append(\"\\n    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"                        storage2.set(taskNumber2 -1, tempTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"                        DukeException.validate(tempText.length, 2, \"delete\");","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"                        DukeException.validate(tempText[1], \"delete\");","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"                    } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"                        System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"                        goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"                    int taskNumber3 \u003d Integer.parseInt(tempText[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"                    if (taskNumber3 \u003c\u003d storage2.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"                        // need to add in an exception if out of range","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"                        Task tempTask \u003d storage2.remove(taskNumber3 - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"                        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"                                .append(\"    Noted. I\u0027ve removed this task:\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"                                .append(\"      \").append(tempTask.getTaskInfo())","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"                                .append(\"\\n    Now you have \").append(storage2.size()).append(\" tasks in the list.\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"                                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"                default:","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"                    Task newTask \u003d new Task(text);","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"                    switch (tempText[0]) {","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"                        case \"todo\":","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"                            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText.length, 2, \"todo\");","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText[1], \"todo\");","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"                            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"                                System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"                                goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"                                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"                            newTask \u003d new ToDos(tempText[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"                            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"                            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText.length, 2, \"deadLine\");","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText[1], \"deadLine\");","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"                            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"                                System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"                                goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"                                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"                            String[] tempText2 \u003d tempText[1].split(\"/by\", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"                            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText2.length, 2, \"deadLine\");","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText2[1], \"deadLine\");","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"                            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"                                System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"                                goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"                                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"                            System.out.println(tempText2[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"                            newTask \u003d new Deadline(tempText2[0], tempText2[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"                            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"                        case \"event\":","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"                            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText.length, 2, \"event\");","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText[1], \"event\");","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"                            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"                                System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"                                goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"                                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"                            String[] tempText3 \u003d tempText[1].split(\"/from\", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"                            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText3.length, 2, \"mark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText3[1], \"event\");","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"MrTwit99"},"content":"                            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"                                System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"MrTwit99"},"content":"                                goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"MrTwit99"},"content":"                                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"MrTwit99"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"MrTwit99"},"content":"                            String[] tempText4 \u003d tempText3[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"MrTwit99"},"content":"                            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText4.length, 2, \"mark\");","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate(tempText4[1], \"event\");","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"MrTwit99"},"content":"                            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"                                System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"                                goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"                                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"                            newTask \u003d new Event(tempText3[0], tempText4[0], tempText4[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"                            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":177,"author":{"gitId":"MrTwit99"},"content":"                        default:","lastModifiedDate":"2023-01-20"},{"lineNumber":178,"author":{"gitId":"MrTwit99"},"content":"                            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"MrTwit99"},"content":"                                DukeException.validate2();","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"MrTwit99"},"content":"                            } catch (InvalidCommandException ex) {","lastModifiedDate":"2023-01-20"},{"lineNumber":181,"author":{"gitId":"MrTwit99"},"content":"                                System.out.println(ex);","lastModifiedDate":"2023-01-20"},{"lineNumber":182,"author":{"gitId":"MrTwit99"},"content":"                                goNext \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"MrTwit99"},"content":"                                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":184,"author":{"gitId":"MrTwit99"},"content":"                            }","lastModifiedDate":"2023-01-20"},{"lineNumber":185,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"MrTwit99"},"content":"                    if (!goNext) {","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"MrTwit99"},"content":"                        storage2.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"MrTwit99"},"content":"                    sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    Got it. I\u0027ve added this task:\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"      \").append(newTask.getTaskInfo())","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"\\n    Now you have \").append(storage2.size()).append(\" tasks in the list.\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"MrTwit99"},"content":"            if (goNext) {","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"MrTwit99"},"content":"                goNext \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"MrTwit99"},"content":"                sb.setLength(0);","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"MrTwit99"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"MrTwit99"},"content":"            pw.println(sb.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"MrTwit99"},"content":"            pw.flush();","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"MrTwit99"},"content":"            if (tempText[0].equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":205,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":207,"author":{"gitId":"MrTwit99"},"content":"        br.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":208,"author":{"gitId":"MrTwit99"},"content":"        pw.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MrTwit99":201,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"import java.util.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"import java.io.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"public class DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"    static void validate (int actualArgs, int expectedArgs,String command) throws IncorrectNoOfArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"        if (actualArgs !\u003d expectedArgs) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"\\n    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"     ☹ OOPS!!! You have provided incorrect number of arguments for the command \u0027\")","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"                    .append(command).append(\"\u0027.\\n     Please try again after checking!\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"            throw new IncorrectNoOfArgumentException(sb.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    static void validate (String text, String command) throws IncorrectNoOfArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        if ( (text.equals(\"\")) || (text.isBlank()) ) {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"\\n    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"     ☹ OOPS!!! You have provided incorrect number of arguments for the command \u0027\")","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"                    .append(command).append(\"\u0027.\\n     Please try again after checking!\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"            throw new IncorrectNoOfArgumentException(sb.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    static void validate2 () throws InvalidCommandException {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"                .append(\"     ☹ OOPS!!! This is an incorrect command!\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"                .append(\"     Please try again with a valid command!\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        throw new InvalidCommandException(sb.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"class IncorrectNoOfArgumentException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"    public IncorrectNoOfArgumentException (String str) {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        super(str);","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"class InvalidCommandException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"    public InvalidCommandException (String str) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"        super(str);","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":47}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"    protected String startDate, endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    public Event(String taskInfo, String startDate, String endDate) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"        super(taskInfo);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        return \"[E]\" + super.getTaskInfo() + \"(from:\" + startDate + \"to:\" + endDate + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"    protected String taskInfo;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"    public Task(String taskInfo) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"        this.taskInfo \u003d taskInfo;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        return \"     Nice! I\u0027ve marked this task as done:\\n       \" + this.getTaskInfo();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    public String markAsIncomplete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        return \"     OK, I\u0027ve marked this task as not done yet:\\n       \" + this.getTaskInfo();","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"            return \"[X] \" + this.taskInfo;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            return \"[ ] \" + this.taskInfo;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"MrTwit99":27}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"    public ToDos(String taskInfo) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"        super(taskInfo);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"        return \"[T]\" + super.getTaskInfo();","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":4}}]
