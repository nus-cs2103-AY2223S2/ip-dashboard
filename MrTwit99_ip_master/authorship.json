[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MrTwit99":1,"-":41}},{"path":"src/main/java/classes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"    protected String newDate, newTime, oldDate, oldTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    protected LocalTime time;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    public Deadline(String taskInfo, String stringDate, String stringTime) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"        super(taskInfo);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        this.oldDate \u003d stringDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        this.oldTime \u003d stringTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        this.date \u003d LocalDate.parse(stringDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        this.newDate \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"                .format(date);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        if (stringTime.equals(\"\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"            this.time \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            this.newTime \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            this.time \u003d LocalTime.parse(stringTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"            this.newTime \u003d \" | \" + DateTimeFormatter.ofLocalizedTime(FormatStyle.MEDIUM)","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"                    .format(time);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfoStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"        return \"[D]\" + super.getTaskInfoStatus() + \"(by: \" + this.newDate + this.newTime + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        return \"[D]\" + super.getTaskInfoStatus() + \"/by \" + this.oldDate + \" \" + this.oldTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":41}},{"path":"src/main/java/classes/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import exceptions.IncorrectNoOfArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    public Duke(String filePath, String folderPath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        this.storage \u003d new Storage(filePath, folderPath);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"            this.ui.showLoadingError(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            this.tasks \u003d new TaskList(new ArrayList\u003cString\u003e());","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"            ArrayList\u003cString\u003e commandInfo;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"                commandInfo \u003d Parser.parse(ui.readCommand());","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            } catch (IncorrectNoOfArgumentException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"                continue;","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            if (commandInfo.size() !\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"                switch (commandInfo.get(0)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"                    isExit \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"                    ui.showFarewellMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"                case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"                    ui.printCommand(tasks.list());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"                    ui.printCommand(tasks.markTask(commandInfo, this.storage));","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"                    ui.printCommand(tasks.unmarkTask(commandInfo, this.storage));","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"                    ui.printCommand(tasks.deleteTask(commandInfo, this.storage));","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"                case \"error\":","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"                default:","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                    try {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"                        ui.printCommand(tasks.addTask(commandInfo, this.storage));","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"                        System.out.println(\"Invalid inputs!\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"                        System.out.println(\"Please enter your date \u0026 time in the format: YYYY-MM-DD HH:MM \\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"                        System.out.println(\"Please also ensure they are valid values!\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"        new Duke(\"data/storage.txt\", \"data\").run();","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MrTwit99":74,"-":3}},{"path":"src/main/java/classes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"    protected String newStartDate, newEndDate, newStartTime, newEndTime,","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"            oldStartDate, oldEndDate, oldStartTime, oldEndTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    protected LocalTime startTime, endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    protected LocalDate startDate, endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    public Event(String taskInfo, String stringStartDate, String stringEndDate, String stringStartTime","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"            , String stringEndTime) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        super(taskInfo);","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        this.oldStartDate \u003d stringStartDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"        this.oldEndDate \u003d stringEndDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        this.oldStartTime \u003d \" \" + stringStartTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        this.oldEndTime \u003d \" \" + stringEndTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        this.startDate \u003d LocalDate.parse(stringStartDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        this.newStartDate \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"                .format(startDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        this.endDate \u003d LocalDate.parse(stringEndDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        this.newEndDate \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"                .format(endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        if (stringStartTime.equals(\"\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"            this.startTime \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"            this.newStartTime \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"            this.oldStartTime \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            this.startTime \u003d LocalTime.parse(stringStartTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            this.newStartTime \u003d \" | \" + DateTimeFormatter.ofLocalizedTime(FormatStyle.MEDIUM)","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"                    .format(startTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"        if (stringEndTime.equals(\"\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"            this.endTime \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"            this.newEndTime \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"            this.oldEndTime \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"            this.endTime \u003d LocalTime.parse(stringEndTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"            this.newEndTime \u003d \" | \" + DateTimeFormatter.ofLocalizedTime(FormatStyle.MEDIUM)","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"                    .format(endTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfoStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        return \"[E]\" + super.getTaskInfoStatus() + \"(from: \" + this.newStartDate + this.newStartTime + \" to: \"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                + this.newEndDate + this.newEndTime + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        return \"[E]\" + super.getTaskInfoStatus() + \"/from \" + this.oldStartDate + this.oldStartTime + \" /to \"","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                + this.oldEndDate + this.oldEndTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":62}},{"path":"src/main/java/classes/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import exceptions.IncorrectNoOfArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    protected static ArrayList\u003cString\u003e parse(String taskInfo) throws IncorrectNoOfArgumentException {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e parseInfo \u003d new ArrayList\u003c\u003e();    // stores in the format \"command\" followed by \"arguments\"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        boolean isFnAvailable \u003d false;  // indicates whether user is calling a supported function provided by Duke","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        String tempCmd;    // stores function call by user (eg todo, mark, etc)","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"        String[] tempTaskInfo \u003d taskInfo.split(\"] \");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        if (tempTaskInfo.length !\u003d 1) {   // retrieving info from file","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"            switch (tempTaskInfo[0]) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"            case \"[D][ \":","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"                tempCmd \u003d \"deadline\";","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"            case \"[D][X\":","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"                tempCmd \u003d \"deadline\";","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"                parseInfo.add(\"done\");","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            case \"[T][ \":","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"                tempCmd \u003d \"todo\";","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"            case \"[T][X\":","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"                tempCmd \u003d \"todo\";","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"                parseInfo.add(\"done\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"            case \"[E][ \":","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"                tempCmd \u003d \"event\";","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            case \"[E][X\":","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"                tempCmd \u003d \"event\";","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"                parseInfo.add(\"done\");","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                tempCmd \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        } else {    // adding new task that is not from file","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"            tempTaskInfo \u003d taskInfo.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"            tempCmd \u003d tempTaskInfo[0].toLowerCase();","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"        if ( (tempCmd.equals(\"mark\")) || (tempCmd.equals(\"unmark\")) || (tempCmd.equals(\"delete\")) ||","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"                (tempCmd.equals(\"todo\")) || (tempCmd.equals(\"deadline\")) || (tempCmd.equals(\"event\")) ) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"            isFnAvailable \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"        try {   // determine function called by the user has required arguments and if its valid","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"            DukeException.validate(isFnAvailable, tempCmd, tempTaskInfo);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempCmd); // save function call (command) into parseInfo","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"            System.out.println(ex);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"            parseInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"            return parseInfo;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        switch (tempCmd) {  // retrieving arguments required by the commands","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        case \"bye\":     // format: bye","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"        case \"list\":    // format: list","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        case \"mark\":    // format: mark | index","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempTaskInfo[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"        case \"unmark\":  // format: unmark | index","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempTaskInfo[1]); // index","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"        case \"delete\":  // format: delete | index","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempTaskInfo[1]); // index","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"        case \"todo\":    // format: done (optional) | String.toString(to+do) | taskInfo","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempTaskInfo[1]); // taskInfo","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"        case \"deadline\":    // format: done (optional) | deadline | taskInfo | date | time","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"            String[] tempTaskInfo2 \u003d tempTaskInfo[1].split(\"/by\", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"            try {   // checking the element \"cccc\" in \".../by cccc\"","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"                DukeException.validate(true, tempCmd, tempTaskInfo2);","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"                System.out.println(ex);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"                parseInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"            String time;","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"            String[] tempDateTime \u003d tempTaskInfo2[1].split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"            if (tempDateTime.length !\u003d 3) {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"                time \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"                time \u003d tempDateTime[2];","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempTaskInfo2[0]);    // taskInfo","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempDateTime[1]); // date","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(time);    // time","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"        case \"event\":   // format: done (optional) | event | taskInfo | startDate | startTime | endDate | endTime","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"            String[] tempTaskInfo3 \u003d tempTaskInfo[1].split(\"/from\", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"            try {   // checking the element \"bbbb\" in \".../from bbbb /to aaaa\"","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"                DukeException.validate(true, tempCmd, tempTaskInfo3);","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"                System.out.println(ex);","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"                parseInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"            String startTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"            String[] tempStartDateTime \u003d tempTaskInfo3[1].split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"            if (tempStartDateTime.length \u003e 2) { // check if given a startDate","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"                if (tempStartDateTime[2].equals(\"/to\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"                    startTime \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"                } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"                    startTime \u003d tempStartDateTime[2];","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"                DukeException.validate(\"\", \"event\");","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"            String[] tempText4 \u003d tempTaskInfo3[1].split(\"/to\", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"            try {   // checking the element \"aaaa\" in \".../to aaaa\"","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"                DukeException.validate(true, tempCmd, tempText4);","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"            } catch (IncorrectNoOfArgumentException ex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"                System.out.println(ex);","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"                parseInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"            String endTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"            String[] tempEndDateTime \u003d tempText4[1].split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"            if (tempEndDateTime.length \u003e 1) {   // check if given a endDate","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"                if (tempEndDateTime.length !\u003d 3) {","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"                    endTime \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"                } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"                    endTime \u003d tempEndDateTime[2];","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"                DukeException.validate(\"\", \"event\");","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempTaskInfo3[0]);    // taskInfo","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempStartDateTime[1]);    // startDate","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(startTime);   // startTime","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(tempEndDateTime[1]);  // endDate","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"            parseInfo.add(endTime); // endTime","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"        default:    // throw an error as the user is trying to call a function that does not exist","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"                DukeException.validate2();","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"            } catch (InvalidCommandException ex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"                System.out.println(ex);","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"                parseInfo.set(0, \"error\");","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"MrTwit99"},"content":"        return parseInfo;","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"MrTwit99":164}},{"path":"src/main/java/classes/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import exceptions.FolderNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    private String filePath, folderPath;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    private StringBuilder sb;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    public Storage(String filePath, String folderPath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        this.sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    public ArrayList\u003cString\u003e load() throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e fileElements \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"            fileElements \u003d getFileContents();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        } catch (FolderNotFoundException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"            Path tempFilePath \u003d Paths.get(\"data/storage.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            Files.createDirectories(tempFilePath.getParent());","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            Files.createFile(tempFilePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    File \u0027storage\u0027 cannot be found in the folder \u0027data\u0027.\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    A new file \u0027storage\u0027 has been created for you under the folder \u0027data\u0027\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    for storing the tasks!\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"            Path tempFilePath2 \u003d Paths.get(\"data/storage.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"            Files.createFile(tempFilePath2);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"            System.out.println(sb.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        } finally {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"            return fileElements;","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"    public ArrayList\u003cString\u003e getFileContents() throws IOException, FolderNotFoundException {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e fileElements \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        DukeException.folderCheck(this.folderPath);  // Checks if the folder exists","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        BufferedReader fr \u003d new BufferedReader(new FileReader(this.filePath));","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        // Checks if the storage file is in the right folder","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"        String currLine;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        while ( (currLine \u003d fr.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"            fileElements.add(currLine);  // Copy tasks from file over","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        fr.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        return fileElements;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"    public void writeToFile(String textToAdd, ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"            fileTasks \u003d load();","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"            System.out.println(\"An unexpected error has occurred: \" + e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"        } finally {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"            if (fileTasks.size() !\u003d 0) {    // file has information inside","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"            } else {    // file is empty","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"                    fw.write(taskList.get(i).getTaskInfo() + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"            fw.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"    public void writeToFile(String oldText, String newText, int oldTextIndex,","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"                                    ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"            fileTasks \u003d load();","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"            System.out.println(\"An unexpected error has occurred: \" + e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"        } finally {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"            FileWriter fw \u003d new FileWriter(\"data/storage.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"            if (fileTasks.size() !\u003d 0) {    // file not empty","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"                for (int i \u003d 0; i \u003c fileTasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"                    if ( (fileTasks.get(i).equals(oldText)) \u0026\u0026 (i \u003d\u003d oldTextIndex) ) {","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"                        if (!newText.equals(\"\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"                            fw.write(newText + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"                        }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"                        continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"                    fw.write(fileTasks.get(i) + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"            } else {    // file is empty","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"                    if (i \u003d\u003d oldTextIndex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"                        if (newText.equals(\"\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"                            continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"                        }","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"                        fw.write(newText + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"                        continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"                    fw.write(taskList.get(i).getTaskInfo() + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"            fw.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"MrTwit99":119}},{"path":"src/main/java/classes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    protected String taskInfo;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"    protected boolean hasCompleted;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"    public Task(String taskInfo) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"        this.taskInfo \u003d taskInfo;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"        this.hasCompleted \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        this.hasCompleted \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        return \"     Nice! I\u0027ve marked this task as done:\\n       \" + this.getTaskInfoStatus();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    public String markAsIncomplete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        this.hasCompleted \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        return \"     Alright, I\u0027ve marked this task as not done yet:\\n       \" + this.getTaskInfoStatus();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfoStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        if (hasCompleted) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            return \"[X] \" + this.taskInfo;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            return \"[ ] \" + this.taskInfo;","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    public abstract String getTaskInfo();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"MrTwit99":31}},{"path":"src/main/java/classes/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import exceptions.IncorrectNoOfArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    private StringBuilder sb;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    private String message;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    public TaskList(ArrayList\u003cString\u003e fileTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"        this.taskList \u003d addAll(fileTasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        this.sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    public String addTask(ArrayList\u003cString\u003e parsedTaskInfo, Storage file) {   // returns message that needs to be printed to user","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        boolean hasIssue \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        switch (parsedTaskInfo.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        case 2:","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            newTask \u003d new ToDos(parsedTaskInfo.get(1));","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        case 3:","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"            newTask \u003d new ToDos(parsedTaskInfo.get(2));","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        case 4:","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"            newTask \u003d new Deadline(parsedTaskInfo.get(1), parsedTaskInfo.get(2), parsedTaskInfo.get(3));","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        case 5:","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"            newTask \u003d new Deadline(parsedTaskInfo.get(2), parsedTaskInfo.get(3), parsedTaskInfo.get(4));","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        case 6:","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"            newTask \u003d new Event(parsedTaskInfo.get(1), parsedTaskInfo.get(2), parsedTaskInfo.get(4),","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"                    parsedTaskInfo.get(3), parsedTaskInfo.get(5));","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"        case 7:","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"            newTask \u003d new Event(parsedTaskInfo.get(2), parsedTaskInfo.get(3), parsedTaskInfo.get(5),","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"                    parsedTaskInfo.get(4), parsedTaskInfo.get(6));","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"            hasIssue \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        if (!hasIssue) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"            this.taskList.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"                file.writeToFile(newTask.getTaskInfo() + \"\\n\", this.taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"                        .append(\"    Got it. I\u0027ve added this task to the list:\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"                        .append(\"      \").append(newTask.getTaskInfoStatus())","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"                        .append(\"\\n    Now you have \").append(this.taskList.size()).append(\" tasks in the list.\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"                        .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"                this.message \u003d sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"                this.message \u003d \"An unexpected error has occurred: \" + e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"        return this.message;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"    public String deleteTask(ArrayList\u003cString\u003e parsedTaskInfo, Storage file) {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"        int taskNumber \u003d Integer.parseInt(parsedTaskInfo.get(1));","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"        if ((taskNumber \u003c\u003d this.taskList.size()) \u0026\u0026 (taskNumber \u003e 0)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"            Task tempTask \u003d this.taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    Noted. I\u0027ve removed this task:\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"      \").append(tempTask.getTaskInfoStatus())","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"\\n    Now you have \").append(this.taskList.size()).append(\" tasks in the list.\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"            this.message \u003d sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"                file.writeToFile(tempTask.getTaskInfo(), \"\", taskNumber - 1, this.taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"                this.message \u003d \"An unexpected error has occurred: \" + e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    The task you are trying to delete is out of range! Try again!\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"            this.message \u003d sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"        return this.message;","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"    public String markTask(ArrayList\u003cString\u003e parsedTaskInfo, Storage file) {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"        int taskNumber \u003d Integer.parseInt(parsedTaskInfo.get(1));","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"        if ((taskNumber \u003c\u003d this.taskList.size()) \u0026\u0026 (taskNumber \u003e 0)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"            Task tempTask \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"            String oldTaskInfo \u003d tempTask.getTaskInfo();","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"                    .append(tempTask.markAsDone())","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"\\n    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"            taskList.set(taskNumber - 1, tempTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"            this.message \u003d sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"                file.writeToFile(oldTaskInfo, tempTask.getTaskInfo(), taskNumber - 1, taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"                this.message \u003d \"An unexpected error has occurred: \" + e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    The task you are trying to mark is out of range! Try again!\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"            this.message \u003d sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"        return this.message;","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"    public String unmarkTask(ArrayList\u003cString\u003e parsedTaskInfo, Storage file) {","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"        int taskNumber \u003d Integer.parseInt(parsedTaskInfo.get(1));","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"        if ((taskNumber \u003c\u003d this.taskList.size()) \u0026\u0026 (taskNumber \u003e 0)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"            Task tempTask \u003d this.taskList.get(taskNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"            String oldTaskInfo \u003d tempTask.getTaskInfo();","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"                    .append(tempTask.markAsIncomplete())","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"\\n    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"            taskList.set(taskNumber - 1, tempTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"            this.message \u003d sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"                file.writeToFile(oldTaskInfo, tempTask.getTaskInfo(), taskNumber - 1, taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"                this.message \u003d \"An unexpected error has occurred: \" + e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    The task you are trying to unmark is out of range! Try again!\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"            this.message \u003d sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"        return this.message;","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"    public String list() {  // returns message that needs to be printed to user","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"    \").append(i + 1).append(\".\").append(this.taskList.get(i).getTaskInfoStatus())","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"        sb.append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"        this.message \u003d sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"        sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"        return this.message;","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"    private static ArrayList\u003cTask\u003e addAll(ArrayList\u003cString\u003e fileTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"MrTwit99"},"content":"        String taskInfo;","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"        boolean hasCompleted \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"MrTwit99"},"content":"        boolean hasIssue \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"MrTwit99"},"content":"        for (int i \u003d 0; i \u003c fileTasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"MrTwit99"},"content":"            taskInfo \u003d fileTasks.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"MrTwit99"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"MrTwit99"},"content":"            ArrayList\u003cString\u003e parsedTaskInfo;","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"MrTwit99"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"MrTwit99"},"content":"                parsedTaskInfo \u003d Parser.parse(taskInfo);","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"            } catch (IncorrectNoOfArgumentException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"                System.out.println(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"                continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"            switch (parsedTaskInfo.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"            case 2:","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"MrTwit99"},"content":"                newTask \u003d new ToDos(parsedTaskInfo.get(1));","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"MrTwit99"},"content":"            case 3:","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"MrTwit99"},"content":"                newTask \u003d new ToDos(parsedTaskInfo.get(2));","lastModifiedDate":"2023-02-01"},{"lineNumber":181,"author":{"gitId":"MrTwit99"},"content":"                newTask.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":182,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":183,"author":{"gitId":"MrTwit99"},"content":"            case 4:","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"MrTwit99"},"content":"                newTask \u003d new Deadline(parsedTaskInfo.get(1), parsedTaskInfo.get(2), parsedTaskInfo.get(3));","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"MrTwit99"},"content":"            case 5:","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"MrTwit99"},"content":"                newTask \u003d new Deadline(parsedTaskInfo.get(2), parsedTaskInfo.get(3), parsedTaskInfo.get(4));","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"MrTwit99"},"content":"                newTask.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"MrTwit99"},"content":"            case 6:","lastModifiedDate":"2023-02-01"},{"lineNumber":191,"author":{"gitId":"MrTwit99"},"content":"                newTask \u003d new Event(parsedTaskInfo.get(1), parsedTaskInfo.get(2), parsedTaskInfo.get(4),","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"MrTwit99"},"content":"                        parsedTaskInfo.get(3), parsedTaskInfo.get(5));","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"MrTwit99"},"content":"            case 7:","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"MrTwit99"},"content":"                newTask \u003d new Event(parsedTaskInfo.get(2), parsedTaskInfo.get(3), parsedTaskInfo.get(5),","lastModifiedDate":"2023-02-01"},{"lineNumber":196,"author":{"gitId":"MrTwit99"},"content":"                        parsedTaskInfo.get(4), parsedTaskInfo.get(6));","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"MrTwit99"},"content":"                newTask.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":198,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":199,"author":{"gitId":"MrTwit99"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":200,"author":{"gitId":"MrTwit99"},"content":"                hasIssue \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":201,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":202,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"MrTwit99"},"content":"            if (!hasIssue) {","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"MrTwit99"},"content":"                newTaskList.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":207,"author":{"gitId":"MrTwit99"},"content":"        return newTaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":208,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":209,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"MrTwit99":209}},{"path":"src/main/java/classes/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    public ToDos(String taskInfo) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"        super(taskInfo);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfoStatus() {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"        return \"[T]\" + super.getTaskInfoStatus();","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        return \"[T]\" + super.getTaskInfoStatus();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":16}},{"path":"src/main/java/classes/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    private PrintWriter pw;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    private StringBuilder sb;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    private BufferedReader br;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    public Ui() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        this.pw \u003d new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        this.sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        this.br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        sb.append(\"Hello from\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"                .append(\" ____        _        \\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"                .append(\"|  _ \\\\ _   _| | _____ \\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"                .append(\"| | | | | | | |/ / _ \\\\\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"                .append(\"| |_| | |_| |   \u003c  __/\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"                .append(\"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    Hello! I\u0027m Duke.\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    What can I do for you?\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        pw.println(sb.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"        pw.flush(); // Flush the message out and print to user","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"        sb.setLength(0);    // Clear string stored in StringBuilder","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"    public void showFarewellMessage() throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    Bye. Hope to see you again soon!\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        pw.println(sb.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"        pw.flush();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"        pw.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        br.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    public void printCommand(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        pw.println(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        pw.flush();","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        sb.setLength(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"    public void showLoadingError(Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        pw.println(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        return br.readLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"MrTwit99":62}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"public class DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    private static int expectedArgs \u003d 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"    public static void validate(boolean secondaryCheck, String command,","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"                                String[] text) throws IncorrectNoOfArgumentException {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        if (secondaryCheck) {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"            expectedArgs \u003d 2;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"            expectedArgs \u003d 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        if (text.length !\u003d expectedArgs) {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"\\n    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"     ☹ OOPS!!! You have provided incorrect number of arguments for the command \u0027\")","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"                    .append(command).append(\"\u0027.\\n     Please try again after checking!\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"            throw new IncorrectNoOfArgumentException(sb.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        if (secondaryCheck) {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            validate(text[1], command);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    public static void validate(String text, String command) throws IncorrectNoOfArgumentException {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        // Checking for blank spaces","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"        if ( (text.equals(\"\")) || (text.isBlank()) ) {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"\\n    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"     ☹ OOPS!!! You have provided incorrect number of arguments for the command \u0027\")","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"                    .append(command).append(\"\u0027.\\n     Please try again after checking!\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"            throw new IncorrectNoOfArgumentException(sb.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    public static void validate2() throws InvalidCommandException {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"        sb.append(\"\\n    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"                .append(\"     ☹ OOPS!!! This is an incorrect command!\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"                .append(\"     Please try again with a valid command!\\n\")","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"        throw new InvalidCommandException(sb.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"    public static void folderCheck(String str) throws FolderNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        File tempFolder \u003d new File(str);","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        if ( (!tempFolder.isDirectory()) || (!tempFolder.exists()) ) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"            sb.append(\"\\n    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"     Folder \u0027\").append(str).append(\"\u0027 cannot be found.\\n\")","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"     A new folder \u0027\").append(str).append(\"\u0027 has been created for you!\\n\")","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"     A new file \u0027storage\u0027 for storing the tasks has been created for you as well!\\n\")","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"                    .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"            throw new FolderNotFoundException(sb.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"MrTwit99":62}},{"path":"src/main/java/exceptions/FolderNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"public class FolderNotFoundException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    public FolderNotFoundException (String str) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"        super(str);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MrTwit99":7}},{"path":"src/main/java/exceptions/IncorrectNoOfArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"public class IncorrectNoOfArgumentException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    public IncorrectNoOfArgumentException (String str) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"        super(str);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MrTwit99":7}},{"path":"src/main/java/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    public InvalidCommandException (String str) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"        super(str);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MrTwit99":7}},{"path":"src/test/java/classes/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import exceptions.IncorrectNoOfArgumentException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    Task tempTask \u003d new Deadline(\"Assignment Submission\", \"2023-01-12\", \"12:30\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    Task tempTask2 \u003d new Deadline(\"Assignment Submission\", \"2023-01-12\", \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    public void getTaskInfoStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[D][X] Assignment Submission(by: January 12, 2023 | 12:30:00 PM)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"                tempTask.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/2 checks of marking tasks: Deadline.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        tempTask2.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[D][X] Assignment Submission(by: January 12, 2023)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"                tempTask2.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/2 checks of marking tasks: Deadline.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[D][ ] Assignment Submission(by: January 12, 2023 | 12:30:00 PM)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"                tempTask.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/2 checks of unmarking tasks: Deadline.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        tempTask2.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[D][ ] Assignment Submission(by: January 12, 2023)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"                tempTask2.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/2 checks of unmarking tasks: Deadline.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"    public void getTaskInfo() {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[D][X] Assignment Submission/by 2023-01-12 12:30\",","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"                tempTask.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/2 checks of marking tasks: Deadline.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        tempTask2.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[D][X] Assignment Submission/by 2023-01-12 \",","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                tempTask2.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/2 checks of marking tasks: Deadline.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[D][ ] Assignment Submission/by 2023-01-12 12:30\",","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"                tempTask.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/2 checks of unmarking tasks: Deadline.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"        tempTask2.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[D][ ] Assignment Submission/by 2023-01-12 \",","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"                tempTask2.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/2 checks of unmarking tasks: Deadline.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MrTwit99":52}},{"path":"src/test/java/classes/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import exceptions.IncorrectNoOfArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        new Duke(\"data/storage.txt\", \"data\").run();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e actualCommandInfo \u003d Parser.parse(\"event Birthday /from 2012-12-22 /to 2012-12-23\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e expectedCommandInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo.add(\"event\");","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo.add(\"Birthday \");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo.add(\"2012-12-22\");","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo.add(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo.add(\"2012-12-23\");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo.add(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(expectedCommandInfo, actualCommandInfo);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/4 checks of parsing task \u0027event\u0027: Duke.run()\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e actualCommandInfo2 \u003d Parser.parse(\"event Birthday /from 2012-12-22 15:00 /to 2012-12-23\");","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e expectedCommandInfo2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo2.add(\"event\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo2.add(\"Birthday \");","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo2.add(\"2012-12-22\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo2.add(\"15:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo2.add(\"2012-12-23\");","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo2.add(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(expectedCommandInfo2, actualCommandInfo2);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/4 checks of parsing task \u0027event\u0027: Duke.run()\");","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e actualCommandInfo3 \u003d Parser.parse(\"event Birthday /from 2012-12-22 /to 2012-12-23 16:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e expectedCommandInfo3 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo3.add(\"event\");","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo3.add(\"Birthday \");","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo3.add(\"2012-12-22\");","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo3.add(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo3.add(\"2012-12-23\");","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo3.add(\"16:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(expectedCommandInfo3, actualCommandInfo3);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 3/4 checks of parsing task \u0027event\u0027: Duke.run()\");","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e actualCommandInfo4 \u003d Parser.parse(\"event Birthday /from 2012-12-22 15:00 /to 2012-12-23 16:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cString\u003e expectedCommandInfo4 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo4.add(\"event\");","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo4.add(\"Birthday \");","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo4.add(\"2012-12-22\");","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo4.add(\"15:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo4.add(\"2012-12-23\");","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        expectedCommandInfo4.add(\"16:00\");","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(expectedCommandInfo4, actualCommandInfo4);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 4/4 checks of parsing task \u0027event\u0027: Duke.run()\");","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"        Storage storage \u003d new Storage(\"data/storageTest(delete before each test).txt\", \"data\");","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        TaskList tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        String actualCommandOutput \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"                \"    Got it. I\u0027ve added this task to the list:\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"                \"      [E][ ] Birthday (from: December 22, 2012 | 3:00:00 PM to: December 23, 2012 | 4:00:00 PM)\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"                \"    Now you have 1 tasks in the list.\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"                \"    ____________________________________________________________\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(actualCommandOutput, tasks.addTask(actualCommandInfo4, storage));","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/1 check of creating task \u0027event\u0027: Duke.run()\");","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"MrTwit99":77}},{"path":"src/test/java/classes/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import exceptions.IncorrectNoOfArgumentException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"public class EventTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"    Task tempTask \u003d new Event(\"Birthday\", \"2023-02-05\", \"2023-02-05\", \"00:00\", \"23:59\");","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    Task tempTask2 \u003d new Event(\"Birthday\", \"2023-02-05\", \"2023-02-05\", \"\", \"23:59\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    Task tempTask3 \u003d new Event(\"Birthday\", \"2023-02-05\", \"2023-02-05\", \"00:00\", \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    Task tempTask4 \u003d new Event(\"Birthday\", \"2023-02-05\", \"2023-02-05\", \"\", \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    public void getTaskInfoStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][X] Birthday(from: February 5, 2023 | 12:00:00 AM to: February 5, 2023 | 11:59:00 PM)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"                tempTask.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/4 checks of marking tasks: Event.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"        tempTask2.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][X] Birthday(from: February 5, 2023 to: February 5, 2023 | 11:59:00 PM)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"                tempTask2.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/4 checks of marking tasks: Event.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        tempTask3.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][X] Birthday(from: February 5, 2023 | 12:00:00 AM to: February 5, 2023)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"                tempTask3.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 3/4 checks of marking tasks: Event.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        tempTask4.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][X] Birthday(from: February 5, 2023 to: February 5, 2023)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"                tempTask4.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 4/4 checks of marking tasks: Event.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][ ] Birthday(from: February 5, 2023 | 12:00:00 AM to: February 5, 2023 | 11:59:00 PM)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"                tempTask.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/4 checks of unmarking tasks: Event.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        tempTask2.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][ ] Birthday(from: February 5, 2023 to: February 5, 2023 | 11:59:00 PM)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"                tempTask2.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/4 checks of unmarking tasks: Event.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"        tempTask3.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][ ] Birthday(from: February 5, 2023 | 12:00:00 AM to: February 5, 2023)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"                tempTask3.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 3/4 checks of unmarking tasks: Event.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        tempTask4.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][ ] Birthday(from: February 5, 2023 to: February 5, 2023)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"                tempTask4.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 4/4 checks of unmarking tasks: Event.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"    public void getTaskInfo() {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][X] Birthday/from 2023-02-05 00:00 /to 2023-02-05 23:59\",","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                tempTask.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/4 checks of marking tasks: Event.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        tempTask2.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][X] Birthday/from 2023-02-05 /to 2023-02-05 23:59\",","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"                tempTask2.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/4 checks of marking tasks: Event.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        tempTask3.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][X] Birthday/from 2023-02-05 00:00 /to 2023-02-05\",","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"                tempTask3.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 3/4 checks of marking tasks: Event.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        tempTask4.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][X] Birthday/from 2023-02-05 /to 2023-02-05\",","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"                tempTask4.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 4/4 checks of marking tasks: Event.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][ ] Birthday/from 2023-02-05 00:00 /to 2023-02-05 23:59\",","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"                tempTask.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/4 checks of unmarking tasks: Event.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"        tempTask2.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][ ] Birthday/from 2023-02-05 /to 2023-02-05 23:59\",","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"                tempTask2.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 2/4 checks of unmarking tasks: Event.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"        tempTask3.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][ ] Birthday/from 2023-02-05 00:00 /to 2023-02-05\",","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"                tempTask3.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 3/4 checks of unmarking tasks: Event.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"        tempTask4.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[E][ ] Birthday/from 2023-02-05 /to 2023-02-05\",","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"                tempTask4.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 4/4 checks of unmarking tasks: Event.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MrTwit99":85}},{"path":"src/test/java/classes/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package classes;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import exceptions.IncorrectNoOfArgumentException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"public class ToDosTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"    Task tempTask \u003d new ToDos(\"borrow book\");","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    public void getTaskInfoStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[T][X] borrow book\", tempTask.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/1 check of marking tasks: ToDo.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[T][ ] borrow book\", tempTask.getTaskInfoStatus());","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/1 check of unmarking tasks: ToDo.getTaskInfoStatus()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    public void getTaskInfo() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[T][X] borrow book\", tempTask.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/1 check of marking tasks: ToDo.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        tempTask.markAsIncomplete();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        assertEquals(\"[T][ ] borrow book\", tempTask.getTaskInfo());","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        System.out.println(\"Passed 1/1 check of unmarking tasks: ToDo.getTaskInfo()\");","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"MrTwit99":30}}]
