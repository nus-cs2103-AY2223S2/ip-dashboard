[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"import java.util.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"import java.io.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        PrintWriter pw \u003d new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    Hello! I\u0027m Duke\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    What can I do for you?\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        pw.println(sb.toString());  // Welcome Message bye Duke","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"        pw.flush();","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        sb.setLength(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        ArrayList\u003cTask\u003e storage2 \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        while (true) {  // Echoing","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            text \u003d br.readLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            String[] tempText \u003d text.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            switch(tempText[0].toLowerCase()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"                    sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    Bye. Hope to see you again soon!\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"                case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"                    sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"                    for (int i \u003d 0; i \u003c storage2.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"                        sb.append(\"    \").append(i + 1).append(\". \").append(storage2.get(i).getTaskInfo());","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"                    sb.append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                    int taskNumber \u003d Integer.parseInt(tempText[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"                    // need to take care of this error where there isnt a tempText[1]","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"                    if (taskNumber \u003c\u003d storage2.size()) {    // need to add in an else print an error statement","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"                        // If the task number given is within the range of tasks in the list","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"                        Task tempTask \u003d storage2.get(taskNumber - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"                        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"                                .append(tempTask.markAsDone())","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"                                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"                        storage2.set(taskNumber -1, tempTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"                    int taskNumber2 \u003d Integer.parseInt(tempText[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                    // need to take care of this error where there isnt a tempText[1]","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"                    if (taskNumber2 \u003c\u003d storage2.size()) {    // need to add in an else print an error statement","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"                        // If the task number given is within the range of tasks in the list","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"                        Task tempTask \u003d storage2.get(taskNumber2 - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"                        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"                                .append(tempTask.markAsIncomplete())","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"                        storage2.set(taskNumber2 -1, tempTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"                default:","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"                    Task newTask \u003d new Task(text);","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"                    storage2.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"                    sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    added: \").append(newTask.getTaskInfo())","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"                            .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"            pw.println(sb.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"            pw.flush();","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"            sb.setLength(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"            if (tempText[0].equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"        br.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"        pw.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MrTwit99":72,"-":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"    protected String taskInfo;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"    public Task(String taskInfo) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"        this.taskInfo \u003d taskInfo;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        return \"     Nice! I\u0027ve marked this task as done:\\n       \" + this.getTaskInfo();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    public String markAsIncomplete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        return \"     OK, I\u0027ve marked this task as not done yet:\\n       \" + this.getTaskInfo();","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"            return \"[X] \" + this.taskInfo + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            return \"[ ] \" + this.taskInfo + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"MrTwit99":27}}]
