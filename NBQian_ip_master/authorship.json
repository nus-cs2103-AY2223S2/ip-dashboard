[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    public Duke(String filePath, String folderPath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        storage \u003d new Storage(filePath, folderPath);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    public void run() {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        ui.welcome();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"                String inputLine \u003d ui.readCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"                Command c \u003d Parser.parse(inputLine);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        new Duke(\"data/tasks.txt\", \"data\").run();","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"NBQian":38,"-":3}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"D/Return books/0/06-09-2000 1800","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"T/Borrow book/0","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"E/project/0/27-01-2023 0000/29-01-2023 2359","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"D/reach diamond in league of legends /0/08-08-2023 2359","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"T/reach diamond in league of legends/0","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"E/reach diamond in league of legends/0/01-01-2023 0000/08-08-2023 2359","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"D/testwrite /0/01-01-2023 0000","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"E/reach diamond/0/01-01-2023 0000/08-08-2023 2359","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"NBQian":8}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    private Task task;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        ui.printToFormat(\"Task successfully added:\\n    \" + task);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"            System.out.println(\"failed to update tasks locally: \" + e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":27}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"        ui.printToFormat(\"Bye, have a nice day.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":16}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":13}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    public DeleteCommand(int n) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        this.taskNo \u003d n;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    ","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"            ui.printToFormat(\"The following task is removed:\\n    \" + tasks.remove(taskNo));","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"            System.out.println(\"failed to update tasks locally: \" + e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":30}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"        ui.printToFormat(tasks.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":11}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    public MarkCommand(int n) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        this.taskNo \u003d n;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"            ui.printToFormat(\"Marked as completed:\\n    \" + tasks.mark(taskNo));","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"            System.out.println(\"failed to update tasks locally: \" + e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":29}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    private int taskNo;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    public UnmarkCommand(int n) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        this.taskNo \u003d n;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"            ui.printToFormat(\"Marked as yet to complete:\\n    \" + tasks.unmark(taskNo));","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"            System.out.println(\"failed to update tasks locally: \" + e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":29}},{"path":"src/main/java/duke/commandtype/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.commandtype;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":" * a list of valid Commands as enum","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"public enum CommandType {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":8}},{"path":"src/main/java/duke/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.dukeexception;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"     * @param inputLine: a line of command entered by the user, to be checked if it is valid","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"     * @throws DukeException: throws a customised exception message if the command input is ","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"     * not valid.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"    public static void checkInput(String inputLine) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        if (inputLine.equals(\"deadline\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        } else if (inputLine.equals(\"todo\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        } else if (inputLine.equals(\"event\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"        } else if (inputLine.equals(\"delete\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify which task to delete.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        } ","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":25}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.commandtype.CommandType;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    public static Command parse(String inputLine) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"            /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"             * @param inputLine: a String that is the command entered by the user","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"             * @param words[]: an array whose elements are from inputline separated by","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"             * a space. used to determine which command is entered","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"             */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"            DukeException.checkInput(inputLine);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"            String words[] \u003d inputLine.split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"            CommandType commandtype \u003d CommandType.valueOf(words[0].toUpperCase());","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"            switch (commandtype) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"                case BYE:","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"                    return new ByeCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"                case LIST:","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"                    return new ListCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"                case MARK:","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"                /**","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"                 * change the specified task\u0027s status to \"[X]\"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"                 */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"                    int taskNoMark \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"                    return new MarkCommand(taskNoMark);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"                /**","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"                 * changed the specified task\u0027s staus to \"[ ]\"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"                 */","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"                    int taskNoUnmark \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"                    return new UnmarkCommand(taskNoUnmark);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"                /**","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"                 * creates and adds a deadline task to the arraylist of all tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"                 */","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"                    String[] parts \u003d inputLine.split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"                    Deadline task \u003d new Deadline(parts[0].split(\" \", 2)[1], 0, parts[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"                case EVENT:","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"                /**","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"                 * creates and adds an event task to the arraylist of all tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"                 */","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"                    String[] parts1 \u003d inputLine.split(\" /\");","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"                    Event event \u003d new Event(parts1[0].split(\" \", 2)[1], 0, parts1[1], parts1[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"                    return new AddCommand(event);","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"                case TODO:","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"                /**","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"                 * creates and adds a todo task to the arraylist of all tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"                 */","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"                    Todo todo \u003d new Todo(inputLine.split(\" \", 2)[1], 0);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"                    return new AddCommand(todo);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"                case DELETE:","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"                /**","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"                 * removes the task at the specified index","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"                 */","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"                    return new DeleteCommand(Integer.parseInt(words[1]));","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"                default:","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"                    throw new DukeException(\"Not a valid command: \" + inputLine);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"            /**","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"             * prints out the error message if an error is caught","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"             */","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"            throw e;","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"    public static LocalDateTime formatDateTime(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"        return dateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"    public static String reverseFormatDateTime(LocalDateTime input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"        return input.format(formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"    public static String TransformDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy \u0027at\u0027 HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"        return dateTime.format(outputFormatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":90}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    private File allTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    private File taskFolder;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"    public Storage(String filePath, String folderPath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"        this.allTasks \u003d new File(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        this.taskFolder \u003d new File(folderPath);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        ArrayList\u003cTask\u003e defaultTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        if (!taskFolder.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"            System.out.println(\"---The default duke.task.Task Folder is not found, creating data folder with task file...\");","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"            taskFolder.mkdir();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"            System.out.println(\"---Task Folder created successfully\");","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"            File f \u003d new File(taskFolder, \"task.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"                System.out.printf(\"---Task File created successfully\\n---ready to create tasks\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"                System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        } else if (!allTasks.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"            System.out.println(\"The default tasks do not exist, creating default task file...\");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"            File f \u003d new File(taskFolder, \"task.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"                System.out.printf(\"---Task File created successfully\\n---ready to create tasks\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"                System.out.println(\"Error creating file: \" + e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"                defaultTasks \u003d loadDefaultTasks(new ArrayList\u003cTask\u003e(), allTasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"                System.out.println(\"Could not load the default tasks: \" + e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"            System.out.println(\"\\n\\n---Default duke.task.Task List successfully loaded\\n\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"        return defaultTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"    private static ArrayList\u003cTask\u003e loadDefaultTasks(ArrayList\u003cTask\u003e tasks, File file) throws FileNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        while(s.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"            String[] lineArr \u003d s.nextLine().split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"            switch (lineArr[0]) {","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"                case \"D\":","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"                    tasks.add(new Deadline(lineArr[1], Integer.parseInt(lineArr[2]), lineArr[3]));","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"                case \"T\":","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"                    tasks.add(new Todo(lineArr[1], Integer.parseInt(lineArr[2])));","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"                case \"E\":","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"                    tasks.add(new Event(lineArr[1], Integer.parseInt(lineArr[2]), lineArr[3], lineArr[4]));","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"        s.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"        return tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"    public void update(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"        FileWriter fw \u003d new FileWriter(this.allTasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"        fw.write(tasks.getWriteString());","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"        fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":84}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":" * Creates a duke.task.Deadline class that inherits from duke.task.Task","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":" * to handle deadline tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    protected final LocalDateTime deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     * @param name: a string indicating the name of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"     * @param status: a String indicating whether the task is done or not","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"     * @param deadline: a string indicating the deadline of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    public Deadline(String name, int status, String dlString) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        super(name, status);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        this.deadline \u003d Parser.formatDateTime(dlString);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"    private int getStatusNo() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        if (super.status.equals(\"[ ]\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"            return 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"            return 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"     * overrides the toString method","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        return \"[D]\" + status + \" \" + name + \"(by \" + Parser.TransformDateTime(deadline) + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    ","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    public String toStoreFormatString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"        return String.format(\"D/%s/%d/%s\", super.name, this.getStatusNo(), Parser.reverseFormatDateTime(deadline));","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":40}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    protected final LocalDateTime from;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    protected final LocalDateTime to;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"     * @param name: a string indicating thename of the duke.task.Event task","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"     * @param status: a String that checks if the duke.task.Event is done or not","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"     * @param from: a string representing the starting time passed in by the user","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"     * @param to: a string representing the ending time passed in by the user","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    public Event(String name, int status, String from, String to) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"        super(name, status);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        this.from \u003d Parser.formatDateTime(from);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        this.to \u003d Parser.formatDateTime(to);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"    private int getStatusNo() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        if (super.status.equals(\"[ ]\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"            return 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"            return 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"     * overrrides toString method","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        return String.format(\"[E]%s %s (from %s to %s)\", status, name, Parser.TransformDateTime(from),","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"        Parser.TransformDateTime(to));","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"    ","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"    public String toStoreFormatString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"        return String.format(\"E/%s/%d/%s/%s\", super.name, this.getStatusNo(), Parser.reverseFormatDateTime(from), Parser.reverseFormatDateTime(to));","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"     * @param name: a string indicating the name of the task","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"     * @param status: a boolean indicating whether the task is done or not","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    protected String name;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    protected String status;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"    public Task(String name, int status) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"        if (status \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"            this.status \u003d \"[X]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"            this.status \u003d \"[ ]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"     * overrides the toString method","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"        return \".\" + status + \" \" + name;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"     * method to update a task as done.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"     * @return a new duke.task.Task with status being true","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    public void mark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        this.status \u003d \"[X]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"     * method to update a task as undone","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"     * @return a new duke.task.Task with status being false","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"        this.status \u003d \"[ ]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"    public String toStoreFormatString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        return \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":43}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"     * @param name: a String indicating the name of the todo task","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"     * @param status: a String indicating whether the task is done","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    public Todo(String name, int status) {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"        super(name, status);","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    private int getStatusNo() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"        if (super.status.equals(\"[ ]\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"            return 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"            return 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"     * overrides toString method","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        return \"[T]\" + status + \" \" + name;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public String toStoreFormatString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        return String.format(\"T/%s/%d\", super.name, this.getStatusNo());","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":30}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"            return \"You do not have any tasks yet\";","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"        /**","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"         * loop through all tasks in the arraylist and print out each task","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"         */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"        sb.append(\"1. \" + tasks.get(0) + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"        for (int i \u003d 2; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"            sb.append(\"    \" + i + \". \" + tasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"    public Task mark(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"            tasks.get(taskNumber - 1).mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"duke.task.Task does not exist, current number of tasks: \" + tasks.size());","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"    public Task unmark(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"            tasks.get(taskNumber - 1).unmark();","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"duke.task.Task does not exist, current number of tasks: \" + tasks.size());","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"    public Task remove(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"            return tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"duke.task.Task does not exist, current number of tasks: \" + tasks.size());","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"    public String getWriteString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"            sb.append(task.toStoreFormatString() + System.lineSeparator());","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":71}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"    private String welcomeMessage \u003d \"Hello from\\n\" + ","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"    \" ____        _        \\n\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    \"|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"    \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"    \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    public void welcome() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"NBQian"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"NBQian"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"NBQian"},"content":"        return input;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"NBQian"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"NBQian"},"content":"        this.printToFormat(\"Sorry, default tasks could not be loaded, starting a fresh task list\");","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"    ","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"    public void printToFormat(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"        String lineBreak1 \u003d \"--\u003e--\u003e--\u003e--\u003e--\u003e--\u003e--\u003e--\u003e--\u003e--\u003e--\u003e\\n    \";","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"        String lineBreak2 \u003d \"\\n\u003c--\u003c--\u003c--\u003c--\u003c--\u003c--\u003c--\u003c--\u003c--\u003c--\\n\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"        System.out.println(lineBreak1 + message + lineBreak2);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":32}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"public class EventTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"        assertEquals(\"[E][ ] finish individual project (from Jan 01 2023 at 00:00 to Aug 08 2023 at 23:59)\",","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"        new Event(\"finish individual project\", 0, \"01-01-2023 0000\", \"08-08-2023 2359\").toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":13}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"        assertEquals(new Todo(\"finish individual project\", 0).toString(), \"[T][ ] finish individual project\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"NBQian":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"NBQian":8}}]
