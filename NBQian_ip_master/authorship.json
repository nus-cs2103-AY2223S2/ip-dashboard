[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"import java.util.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"     * method to print messages in desired format","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"     * @param message a string describing the message","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"    static void printToFormat(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"        String lineBreak1 \u003d \"(((***---***---***---***---***---***\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"        String lineBreak2 \u003d \"\\n---***---***---***---***---***---***)))\\n\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"NBQian"},"content":"        System.out.println(lineBreak1 + message + lineBreak2);","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"NBQian"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"NBQian"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"NBQian"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"NBQian"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"NBQian"},"content":"                /**","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"NBQian"},"content":"                 * @param inputLine: a String that is the command entered by the user","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"NBQian"},"content":"                 * @param words[]: an array whose elements are from inputline separated by","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"NBQian"},"content":"                 * a space. used to determine which command is entered","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"NBQian"},"content":"                 */","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"NBQian"},"content":"                String inputLine \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"NBQian"},"content":"                DukeException.checkInput(inputLine);","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"NBQian"},"content":"                String words[] \u003d inputLine.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"NBQian"},"content":"                Command command \u003d Command.valueOf(words[0].toUpperCase());","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"NBQian"},"content":"                switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"NBQian"},"content":"                    case BYE: ","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"NBQian"},"content":"                        printToFormat(\"    GoodBye, have a nice day!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"NBQian"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"NBQian"},"content":"                    case LIST:","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"NBQian"},"content":"                    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"NBQian"},"content":"                     * loop through all tasks in the arraylist and print out each task","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"NBQian"},"content":"                     */","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"NBQian"},"content":"                        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"NBQian"},"content":"                        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"NBQian"},"content":"                            sb.append(\"    \" + i + \". \" + tasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"NBQian"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"NBQian"},"content":"                        printToFormat(sb.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"NBQian"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"NBQian"},"content":"                    case MARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"NBQian"},"content":"                    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"NBQian"},"content":"                     * change the specified task\u0027s status to \"[X]\"","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"NBQian"},"content":"                     */","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"NBQian"},"content":"                        int ind \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"NBQian"},"content":"                    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"NBQian"},"content":"                     * prints error message if the index is too large","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"NBQian"},"content":"                     */","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"NBQian"},"content":"                        if (ind \u003e tasks.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"NBQian"},"content":"                            printToFormat(\"    This task does not exist\");","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"NBQian"},"content":"                        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"NBQian"},"content":"                            Task updatedTask \u003d tasks.get(ind - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"NBQian"},"content":"                            tasks.get(ind - 1).mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"NBQian"},"content":"                            printToFormat(\"    Congrats on completing the following task:\\n    \" + updatedTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"NBQian"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"NBQian"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"NBQian"},"content":"                    case UNMARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"NBQian"},"content":"                    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"NBQian"},"content":"                     * changed the specified task\u0027s staus to \"[ ]\"","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"NBQian"},"content":"                     */","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"NBQian"},"content":"                        int ind1 \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"NBQian"},"content":"                        if (ind1 \u003e tasks.size()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"NBQian"},"content":"                            printToFormat(\"    This task does not exist\");","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"NBQian"},"content":"                        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"NBQian"},"content":"                            Task updatedTask \u003d tasks.get(ind1 - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"NBQian"},"content":"                            tasks.get(ind1 - 1).unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"NBQian"},"content":"                            printToFormat(\"    Unchecked the following task:\\n    \" + updatedTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"NBQian"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"NBQian"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"NBQian"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"NBQian"},"content":"                    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"NBQian"},"content":"                     * creates and adds a deadline task to the arraylist of all tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"NBQian"},"content":"                     */","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"NBQian"},"content":"                        String[] parts \u003d inputLine.split(\"/\");","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"NBQian"},"content":"                        Deadline task \u003d new Deadline(parts[0].split(\" \")[1], false, parts[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"NBQian"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"NBQian"},"content":"                        printToFormat(\"    Successfully added the following task:\\n    \" + task);","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"NBQian"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"NBQian"},"content":"                    case EVENT:","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"NBQian"},"content":"                    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"NBQian"},"content":"                     * creates and adds an event task to the arraylist of all tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"NBQian"},"content":"                     */","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"NBQian"},"content":"                        String[] parts1 \u003d inputLine.split(\"/\");","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"NBQian"},"content":"                        Event event \u003d new Event(parts1[0].split(\" \")[1], false, parts1[1], parts1[2]);","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"NBQian"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"NBQian"},"content":"                        printToFormat(\"    Successfully added the following task:\\n    \" + event);","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"NBQian"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"NBQian"},"content":"                    case TODO:","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"NBQian"},"content":"                    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"NBQian"},"content":"                     * creates and adds a todo task to the arraylist of all tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"NBQian"},"content":"                     */","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"NBQian"},"content":"                        Todo todo \u003d new Todo(inputLine.split(\" \", 2)[1], false);","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"NBQian"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"NBQian"},"content":"                        printToFormat(\"    Successfully added the following task:\\n    \" + todo);","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"NBQian"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"NBQian"},"content":"                    case DELETE:","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"NBQian"},"content":"                    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"NBQian"},"content":"                     * removes the task at the specified index","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"NBQian"},"content":"                     */","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"NBQian"},"content":"                        printToFormat(\"    The following task is removed:\\n    \" + tasks.remove(Integer.parseInt(words[1]) - 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"NBQian"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"NBQian"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"NBQian"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"NBQian"},"content":"                /**","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"NBQian"},"content":"                 * prints out the error message if an error is caught","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"NBQian"},"content":"                 */","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"NBQian"},"content":"                printToFormat(\"    \" + e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"NBQian"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"NBQian"},"content":" * Creates a Task class to handle different tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"NBQian"},"content":"class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"NBQian"},"content":"     * @param name: a string indicating the name of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"NBQian"},"content":"     * @param status: a boolean indicating whether the task is done or not","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"NBQian"},"content":"    protected String name;","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"NBQian"},"content":"    protected String status;","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"NBQian"},"content":"    public Task(String name, boolean status) {","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"NBQian"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"NBQian"},"content":"        if (status) {","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"NBQian"},"content":"            this.status \u003d \"[X]\";","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"NBQian"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"NBQian"},"content":"            this.status \u003d \"[ ]\";","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"NBQian"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"NBQian"},"content":"     * overrides the toString method","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"NBQian"},"content":"        return \".\" + status + \" \" + name;","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"NBQian"},"content":"     * method to update a task as done.","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"NBQian"},"content":"     * @return a new Task with status being true","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"NBQian"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"NBQian"},"content":"        this.status \u003d \"[X]\";","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"NBQian"},"content":"     * method to update a task as undone","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"NBQian"},"content":"     * @return a new Task with status being false","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"NBQian"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"NBQian"},"content":"        this.status \u003d \"[ ]\";","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"NBQian"},"content":" * Creates a Deadline class that inherits from Task","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"NBQian"},"content":" * to handle deadline tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"NBQian"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"NBQian"},"content":"    protected final String deadline;","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"NBQian"},"content":"     * @param name: a string indicating the name of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"NBQian"},"content":"     * @param status: a String indicating whether the task is done or not","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"NBQian"},"content":"     * @param deadline: a string indicating the deadline of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"NBQian"},"content":"    Deadline (String name, boolean status, String deadline) {","lastModifiedDate":"2023-01-20"},{"lineNumber":176,"author":{"gitId":"NBQian"},"content":"        super(name, status);","lastModifiedDate":"2023-01-20"},{"lineNumber":177,"author":{"gitId":"NBQian"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-20"},{"lineNumber":178,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"NBQian"},"content":"     * overrides the toString method","lastModifiedDate":"2023-01-20"},{"lineNumber":181,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":182,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"NBQian"},"content":"        return \"[D]\" + status + \" \" + name + \"(\" + deadline + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":184,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":185,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"NBQian"},"content":"class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"NBQian"},"content":"    protected final String from;","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"NBQian"},"content":"    protected final String to;","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"NBQian"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"NBQian"},"content":"     * @param name: a string indicating thename of the Event task","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"NBQian"},"content":"     * @param status: a String that checks if the Event is done or not","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"NBQian"},"content":"     * @param from: a string representing the starting time passed in by the user","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"NBQian"},"content":"     * @param to: a string representing the ending time passed in by the user","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"NBQian"},"content":"    Event(String name, boolean status, String from, String to) {","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"NBQian"},"content":"        super(name, status);","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"NBQian"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"NBQian"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"NBQian"},"content":"     * overrrides toString method","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"NBQian"},"content":"        return \"[E]\" + status + \" \" + name + \"(\" + from + to + \")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"NBQian"},"content":"class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"NBQian"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"NBQian"},"content":"     * @param name: a String indicating the name of the todo task","lastModifiedDate":"2023-01-20"},{"lineNumber":214,"author":{"gitId":"NBQian"},"content":"     * @param status: a String indicating whether the task is done","lastModifiedDate":"2023-01-20"},{"lineNumber":215,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":216,"author":{"gitId":"NBQian"},"content":"    Todo(String name, boolean status) {","lastModifiedDate":"2023-01-20"},{"lineNumber":217,"author":{"gitId":"NBQian"},"content":"        super(name, status);","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"NBQian"},"content":"     * overrides toString method","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"NBQian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"NBQian"},"content":"        return \"[T]\" + status + \" \" + name;","lastModifiedDate":"2023-01-20"},{"lineNumber":224,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":225,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":227,"author":{"gitId":"NBQian"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":228,"author":{"gitId":"NBQian"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":229,"author":{"gitId":"NBQian"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":230,"author":{"gitId":"NBQian"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":231,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":232,"author":{"gitId":"NBQian"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":233,"author":{"gitId":"NBQian"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":234,"author":{"gitId":"NBQian"},"content":"     * @param inputLine: a line of command entered by the user, to be checked if it is valid","lastModifiedDate":"2023-01-20"},{"lineNumber":235,"author":{"gitId":"NBQian"},"content":"     * @throws DukeException: throws a customised exception message if the command input is ","lastModifiedDate":"2023-01-20"},{"lineNumber":236,"author":{"gitId":"NBQian"},"content":"     * not valid.","lastModifiedDate":"2023-01-20"},{"lineNumber":237,"author":{"gitId":"NBQian"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":238,"author":{"gitId":"NBQian"},"content":"    public static void checkInput(String inputLine) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":239,"author":{"gitId":"NBQian"},"content":"        if (inputLine.equals(\"deadline\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":240,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":241,"author":{"gitId":"NBQian"},"content":"        } else if (inputLine.equals(\"todo\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":242,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":243,"author":{"gitId":"NBQian"},"content":"        } else if (inputLine.equals(\"event\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":244,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":245,"author":{"gitId":"NBQian"},"content":"        } else if (inputLine.equals(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":246,"author":{"gitId":"NBQian"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify which task to delete.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":247,"author":{"gitId":"NBQian"},"content":"        } ","lastModifiedDate":"2023-01-20"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":250,"author":{"gitId":"NBQian"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":251,"author":{"gitId":"NBQian"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":252,"author":{"gitId":"NBQian"},"content":" * a list of valid Commands as enum","lastModifiedDate":"2023-01-20"},{"lineNumber":253,"author":{"gitId":"NBQian"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":254,"author":{"gitId":"NBQian"},"content":"enum Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":255,"author":{"gitId":"NBQian"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT","lastModifiedDate":"2023-01-20"},{"lineNumber":256,"author":{"gitId":"NBQian"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"NBQian":244,"-":12}},{"path":"src/main/java/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"unmark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"NBQian"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"NBQian"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"NBQian"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"NBQian":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBQian"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"NBQian"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"NBQian"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"NBQian"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"NBQian"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"NBQian"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"NBQian"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"NBQian"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"NBQian":8}}]
