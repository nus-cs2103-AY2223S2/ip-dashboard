[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nafeij":3,"-":39}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nafeij":4,"-":85}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":" * CS2103T Individual Project.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":" * @author Wang Jiefan","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":" * @version 1.0","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * @since 1/20/2023","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"package duke;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import duke.command.ArgCommand;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import duke.command.BasicCommand;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" * The main class of the Duke program.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"  private final Ui ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"  private final Parser parser;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"  private Duke(String filename) {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    this.ui \u003d new Ui();","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    TaskList taskList;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    try {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"      taskList \u003d new TaskList(filename);","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"      ui.loadError(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"      taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    Command[] commands \u003d new Command[]{","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"        new BasicCommand(\"exit\", \"exit the app\", () -\u003e new String[]{\"Goodbye.\"}),","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        new BasicCommand(\"help\", \"show this help message\", ui::getHelpMsg),","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"        new BasicCommand(\"list\", \"list tasks\", taskList::stringify),","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"        new ArgCommand(\"add\", \"add task\", new String[]{\"\\\\s\"}, taskList::add),","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"        new ArgCommand(\"mark\", \"mark/unmark task as done\", new String[]{}, taskList::mark),","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"        new ArgCommand(\"delete\", \"delete task\", new String[]{}, taskList::delete),","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"        new ArgCommand(\"find\", \"find tasks containing text fragment\",","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"            new String[]{}, taskList::find)};","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    ui.setCommands(commands);","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"    this.parser \u003d new Parser(commands);","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"  private void run() {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    this.ui.printIntro();","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-13"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"    String[] outputs;","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"    String[] arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"    String[] lineParts;","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    Command cmd;","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"    while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-13"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"      try {","lastModifiedDate":"2023-01-14"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"        lineParts \u003d scanner.nextLine().split(\"\\\\s\", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        cmd \u003d this.parser.parseCommand(lineParts[0]);","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"        if (cmd.hasParams()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"          if (lineParts.length \u003c 2 || lineParts[1].isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"            throw new IllegalArgumentException(\"Missing argument.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"          }","lastModifiedDate":"2023-01-13"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"          arguments \u003d Parser.parseArgs(lineParts[1], cmd);","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"          outputs \u003d cmd.execute(arguments);","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"          outputs \u003d cmd.execute(new String[]{});","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"        this.ui.print(outputs);","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"        if (cmd.getName().equals(\"exit\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"          break;","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"      } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"        this.ui.error(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"      }","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"    scanner.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"   * The start of execution of the Duke program.","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"   * @param args The command line arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"    new Duke(\"data.txt\").run();","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Nafeij":85,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * Utility class for parsing user input and command arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" * @see duke.Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" * @see duke.command.Command","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"public class Parser {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"  Command[] commands;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"   * Creates a new Parser.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"   * @param commands The commands that the parser recognizes.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"  public Parser(Command[] commands) {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    this.commands \u003d commands;","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"   * Parses the specified command name and returns the corresponding command.","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"   * @param name The name of the command to be parsed.","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"   * @return The command corresponding to the specified name.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"  public Command parseCommand(String name) {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    for (Command cmd : commands) {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"      if (name.equals(cmd.getName())) {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"        return cmd;","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"      }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    throw new IllegalArgumentException(\"Command not found: \" + name);","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"   * Parses the specified argument string and returns an array of arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"   * @param argPart The argument string to be parsed.","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"   * @param cmd     The command that the arguments are for.","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"   * @return An array of arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"  public static String[] parseArgs(String argPart, Command cmd) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    return Parser.parseArgs(argPart, cmd.getParams());","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"   * Parses the specified argument string and returns an array of arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"   * @param argPart The argument string to be parsed.","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"   * @param regexes The regular expressions to be used to split the argument string.","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"   * @return An array of arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"  public static String[] parseArgs(String argPart, String[] regexes) {","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    String[] outputs \u003d new String[regexes.length + 1];","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"    for (int i \u003d 0; i \u003c regexes.length; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"      String[] temp \u003d argPart.split(regexes[i], 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"      if (temp.length \u003e 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"        outputs[i] \u003d temp[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"        argPart \u003d temp[1];","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"      } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"        throw new IllegalArgumentException(\"Missing argument.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"      }","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"    outputs[regexes.length] \u003d argPart;","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"    return outputs;","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Nafeij":70}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import java.util.List;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":" * Utility used by TaskList to manage file I/O and data storage.","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * The default save location is {@code data.txt}.","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":" * @see Task","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":" * @see TaskList","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"public class Storage {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"  private String fileName \u003d \"data.txt\";","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"   * Saves the given tasks to the last accessed location.","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"   * @param tasks the tasks to be saved","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"  public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    try {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"      FileOutputStream fos \u003d new FileOutputStream(fileName);","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"      ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"      oos.writeObject(tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"      oos.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"      System.out.println(\"\\t[ERROR] While saving, the following error occurred: \\n\\t\" + e);","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"   * Saves the given tasks to the given file.","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"   * @param tasks    the tasks to be saved","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"   * @param fileName the name of the file to be used to store tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"  public void save(List\u003cTask\u003e tasks, String fileName) {","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    this.fileName \u003d fileName;","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    this.save(tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"   * Loads the tasks from the last accessed location.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"   * @return the tasks stored in the last accessed location","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"   * @throws IOException            if the file cannot be found or created.","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"   * @throws ClassNotFoundException if the file cannot be deserialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"  public List\u003cTask\u003e load() throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    FileInputStream fin \u003d new FileInputStream(fileName);","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"    ObjectInputStream ois \u003d new ObjectInputStream(fin);","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    @SuppressWarnings(\"unchecked\") List\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    fin.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"    return tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"   * Loads the tasks from the given file.","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"   * @param fileName the name of the file used to store tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"   * @return the tasks stored in the given file","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"   * @throws IOException            if the file cannot be found or created.","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"   * @throws ClassNotFoundException if the file cannot be deserialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"  public List\u003cTask\u003e load(String fileName)","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"      throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"    this.fileName \u003d fileName;","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"    return this.load();","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Nafeij":77}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":" * Utility used by Duke to manage tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":" * @see Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":" * @see Task","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":" * @see Storage","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"public class TaskList {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"  private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"  private final Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"   * Constructs a new TaskList with the given tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"   * @param tasks the tasks to be managed","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"  public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    this.tasks \u003d tasks;","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    storage.save(tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"   * Constructs a new TaskList with no tasks and stores it in the given file.","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"   * @param fileName the name of the file to be used to store tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"   * @throws IOException            if the file cannot be found or created.","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"   * @throws ClassNotFoundException if the file cannot be deserialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"  public TaskList(String fileName) throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    try {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"      tasks \u003d storage.load(fileName);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"      storage.save(tasks, fileName);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"    this.tasks \u003d tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"   * Constructs a new TaskList with no tasks and stores it in the default location.","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"   * @throws IOException            if the file cannot be found or created.","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"   * @throws ClassNotFoundException if the file cannot be deserialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"   * @see Storage","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"  public TaskList() throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"    List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"    try {","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"      tasks \u003d storage.load();","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"    } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"      storage.save(tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"    this.tasks \u003d tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"   * Returns a string representation of the tasks in the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"   * @return a string representation of the tasks in the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"   * @see Ui#print(String)","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"  public String[] stringify() {","lastModifiedDate":"2023-01-14"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"    if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"      return new String[]{\"No tasks found.\"};","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"    String[] outputs \u003d new String[this.tasks.size()];","lastModifiedDate":"2023-01-14"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"    for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"      outputs[i] \u003d addOrdinal(i, this.tasks.get(i));","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"    return outputs;","lastModifiedDate":"2023-01-14"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"   * Creates a new {@link Task} from the given arguments and adds it to the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"   * @param arguments the arguments to be used to create the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"   * @return a string representation of the task that was added.","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"  public String[] add(String[] arguments) {","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"    Task newTask;","lastModifiedDate":"2023-01-14"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"    switch (arguments[0]) {","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"      case \"/todo\" -\u003e newTask \u003d new ToDo(arguments[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"      case \"/deadline\" -\u003e {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"        String[] deadlineArgs \u003d Parser.parseArgs(arguments[1], new String[]{\" /by \"});","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"        newTask \u003d new Deadline(deadlineArgs[0], deadlineArgs[1]);","lastModifiedDate":"2023-01-14"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"      }","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"      case \"/event\" -\u003e {","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"        String[] eventArgs \u003d Parser.parseArgs(arguments[1], new String[]{\" /from \", \" /to \"});","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"        newTask \u003d new Event(eventArgs[0], eventArgs[1], eventArgs[2]);","lastModifiedDate":"2023-01-14"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"      }","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"      default -\u003e throw new IllegalArgumentException(\"Invalid task type: \" + arguments[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"    this.tasks.add(newTask);","lastModifiedDate":"2023-01-14"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":"    this.save();","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"    return new String[]{\"added: \" + newTask};","lastModifiedDate":"2023-01-14"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"   * Marks (toggle) the task(s) at the given index(es).","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"   * @param indStr the index(es) of the task(s) to be marked as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":"   * @return a string representation of the task(s) that were (un)marked.","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":"  public String[] mark(String[] indStr) {","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"Nafeij"},"content":"    List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-14"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"    Consumer\u003cInteger\u003e mark \u003d ind -\u003e {","lastModifiedDate":"2023-01-14"},{"lineNumber":122,"author":{"gitId":"Nafeij"},"content":"      this.tasks.get(ind).mark();","lastModifiedDate":"2023-01-14"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"      indexes.add(ind);","lastModifiedDate":"2023-01-14"},{"lineNumber":124,"author":{"gitId":"Nafeij"},"content":"    };","lastModifiedDate":"2023-01-14"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"    this.consume(indStr, mark);","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"Nafeij"},"content":"    this.save();","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":"    if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"      throw new IllegalArgumentException(\"No tasks found.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"    } else if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"      Task task \u003d this.tasks.get(indexes.get(0));","lastModifiedDate":"2023-01-14"},{"lineNumber":131,"author":{"gitId":"Nafeij"},"content":"      return new String[]{(task.isDone() ? \"marked: \" : \"unmarked: \")","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"          + addOrdinal(indexes.get(0), task)};","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"    } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"      List\u003cString\u003e outputs \u003d indexes.stream()","lastModifiedDate":"2023-01-14"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"          .map(i -\u003e \"\\t\" + addOrdinal(i, this.tasks.get(i)))","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"          .collect(Collectors.toList());","lastModifiedDate":"2023-01-14"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"      outputs.add(0, \"marked:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"      return outputs.toArray(new String[0]);","lastModifiedDate":"2023-01-14"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"   * Deletes the task(s) at the given index(es).","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"   * @param indStr the index(es) of the task(s) to be deleted.","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"   * @return a string representation of the task(s) that were deleted.","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"  public String[] delete(String[] indStr) {","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":"    List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-14"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"    Consumer\u003cInteger\u003e delete \u003d ind -\u003e {","lastModifiedDate":"2023-01-14"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"      if (this.tasks.size() \u003c\u003d ind) {","lastModifiedDate":"2023-01-14"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"        throw new IllegalArgumentException(\"Task not found: \" + ind);","lastModifiedDate":"2023-01-14"},{"lineNumber":153,"author":{"gitId":"Nafeij"},"content":"      }","lastModifiedDate":"2023-01-14"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"      indexes.add(ind);","lastModifiedDate":"2023-01-14"},{"lineNumber":155,"author":{"gitId":"Nafeij"},"content":"    };","lastModifiedDate":"2023-01-14"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"    this.consume(indStr, delete);","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"Nafeij"},"content":"    if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"      throw new IllegalArgumentException(\"No tasks found.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"    } else if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"      Task rmTask \u003d this.tasks.remove((int) indexes.get(0));","lastModifiedDate":"2023-01-14"},{"lineNumber":161,"author":{"gitId":"Nafeij"},"content":"      this.save();","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"      return new String[]{\"deleted: \" + addOrdinal(indexes.get(0), rmTask)};","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"    } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"      indexes.sort(Collections.reverseOrder());","lastModifiedDate":"2023-01-14"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"      List\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-14"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":"      for (int i : indexes) {","lastModifiedDate":"2023-01-14"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"        outputs.add(\"\\t\" + addOrdinal(i, this.tasks.remove(i)));","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"      }","lastModifiedDate":"2023-01-14"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"      this.save();","lastModifiedDate":"2023-01-17"},{"lineNumber":170,"author":{"gitId":"Nafeij"},"content":"      Collections.reverse(outputs);","lastModifiedDate":"2023-01-14"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"      outputs.add(0, \"deleted:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":172,"author":{"gitId":"Nafeij"},"content":"      return outputs.toArray(new String[0]);","lastModifiedDate":"2023-01-14"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":174,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":175,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":176,"author":{"gitId":"Nafeij"},"content":"  private void consume(String[] argument, Consumer\u003cInteger\u003e consumer) {","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"Nafeij"},"content":"    try {","lastModifiedDate":"2023-01-14"},{"lineNumber":178,"author":{"gitId":"Nafeij"},"content":"      String[] inds \u003d argument[0].split(\"\\\\s\");","lastModifiedDate":"2023-01-14"},{"lineNumber":179,"author":{"gitId":"Nafeij"},"content":"      for (String s : inds) {","lastModifiedDate":"2023-01-14"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"        int ind \u003d Integer.parseInt(s) - 1;","lastModifiedDate":"2023-01-14"},{"lineNumber":181,"author":{"gitId":"Nafeij"},"content":"        consumer.accept(ind);","lastModifiedDate":"2023-01-14"},{"lineNumber":182,"author":{"gitId":"Nafeij"},"content":"      }","lastModifiedDate":"2023-01-14"},{"lineNumber":183,"author":{"gitId":"Nafeij"},"content":"    } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"Nafeij"},"content":"      throw new IllegalArgumentException(\"Invalid index.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":185,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":186,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":187,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":188,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"Nafeij"},"content":"   * Performs a search for partial matches on task descriptions.","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"Nafeij"},"content":"   * @param argument the search term.","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"Nafeij"},"content":"   * @return a string representation of the tasks that matched the search term.","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"  public String[] find(String[] argument) {","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"Nafeij"},"content":"    String keyword \u003d argument[0].toLowerCase();","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"    List\u003cInteger\u003e matchIndexes \u003d IntStream.range(0, this.tasks.size())","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"Nafeij"},"content":"        .parallel()","lastModifiedDate":"2023-01-18"},{"lineNumber":198,"author":{"gitId":"Nafeij"},"content":"        .filter(i -\u003e this.tasks.get(i).getDesc().toLowerCase().contains(keyword))","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"Nafeij"},"content":"        .boxed().toList();","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"Nafeij"},"content":"    if (matchIndexes.size() \u003c 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"Nafeij"},"content":"      return new String[]{\"No matches found.\"};","lastModifiedDate":"2023-01-18"},{"lineNumber":202,"author":{"gitId":"Nafeij"},"content":"    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":203,"author":{"gitId":"Nafeij"},"content":"      List\u003cString\u003e outputs \u003d matchIndexes.stream()","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"Nafeij"},"content":"          .map(i -\u003e addOrdinal(i, this.tasks.get(i)))","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"Nafeij"},"content":"          .collect(Collectors.toList());","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"Nafeij"},"content":"      outputs.add(0, matchIndexes.size()","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"Nafeij"},"content":"          + String.format(\" match%s found:\", matchIndexes.size() \u003e 1 ? \"es\" : \"\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"Nafeij"},"content":"      return outputs.toArray(String[]::new);","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":212,"author":{"gitId":"Nafeij"},"content":"  private void save() {","lastModifiedDate":"2023-01-18"},{"lineNumber":213,"author":{"gitId":"Nafeij"},"content":"    storage.save(this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":215,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":216,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":217,"author":{"gitId":"Nafeij"},"content":"   * Returns a string representation of the task with the given index.","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"Nafeij"},"content":"   * Used for printing in ordered lists.","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"Nafeij"},"content":"   * @param index the index of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":221,"author":{"gitId":"Nafeij"},"content":"   * @param task  the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":222,"author":{"gitId":"Nafeij"},"content":"   * @return a string representation of the task with the given index.","lastModifiedDate":"2023-01-18"},{"lineNumber":223,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":224,"author":{"gitId":"Nafeij"},"content":"  public String addOrdinal(int index, Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":225,"author":{"gitId":"Nafeij"},"content":"    return (index + 1) + \". \" + task;","lastModifiedDate":"2023-01-18"},{"lineNumber":226,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":227,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":227}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" * Utility class for formatting and printing output from Duke.","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" * @see Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"public class Ui {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"  private String[] helpMsg \u003d {};","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"   * Defines the Duke commands from which the help message is generated.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"   * @param commands The commands recognized by Duke.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"  public void setCommands(Command[] commands) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    this.helpMsg \u003d generateHelp(commands);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"  private String[] generateHelp(Command[] commands) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    Stream\u003cString\u003e strings \u003d Arrays.stream(commands)","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"        .map(c -\u003e String.format(\"\\t%4s : %s\", c.getName(), c.getHelpStr()));","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    return Stream.concat(Stream.of(\"Usage: \u003ccommand\u003e [\u003cargs\u003e]\"), strings)","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        .toArray(String[]::new);","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"   * Returns the help message.","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"   * @return The help message.","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"  public String[] getHelpMsg() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    return helpMsg;","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"   * Prints the help message.","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"  public void print() {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    this.print(this.helpMsg);","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"   * Prints the specified message with proper formatting.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"   * @param msg The message to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"  public void print(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"    this.print(msg.split(\"\\n\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"   * Prints the specified lines with proper formatting.","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"   * @param lines The lines to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"  public void print(String[] lines) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"    StringBuilder outputs \u003d new StringBuilder();","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"    for (String str : lines) {","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"      outputs.append(\"\\t\").append(str).append(\"\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"    outputs.append(\"-----------------------------------------------\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"    System.out.print(outputs);","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"   * Prints the introductory message.","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"  public void printIntro() {","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"    String logo \u003d \"\"\"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"         ____        _       \\s","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"        |  _ \\\\ _   _| | _____\\s","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"        | | | | | | | |/ / _ \\\\","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"        | |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"        |____/ \\\\__,_|_|\\\\_\\\\___| ,","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"        \"\"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"    System.out.println(\"Hello, I\u0027m\\n\" + logo + \"how may I help?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"   * Prints the error message with formatting.","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"   * @param e The exception to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"  public void error(Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"    this.print(\"\\t[ERROR] \" + e);","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"    this.print();","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"   * Prints the error message with formatting, for a failed initialization.","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"   * @param e The exception to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"  public void loadError(Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"    this.print(\"\\t[ERROR] While loading, the following error occurred: \\n\\t\" + e);","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"    this.print();","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Nafeij":104}},{"path":"src/main/java/duke/command/ArgCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.command;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * A command that takes arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" * @see Command","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"public class ArgCommand extends Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"  private final Function\u003cString[], String[]\u003e function;","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"   * Creates a new ArgCommand.","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"   * @param name     The name of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"   * @param helpStr  The help string of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"   * @param params   The named parameters of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"   * @param function The function to be called when the command is executed.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"  public ArgCommand(String name, String helpStr,","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"                    String[] params, Function\u003cString[], String[]\u003e function) {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    super(name, helpStr, true, params);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    this.function \u003d function;","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"  @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"  public String[] execute(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    return function.apply(args);","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":31}},{"path":"src/main/java/duke/command/BasicCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.command;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * A simple command that does not take arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" * @see Command","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"public class BasicCommand extends Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"  private final Supplier\u003cString[]\u003e supplier;","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"   * Creates a new BasicCommand.","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"   * @param name     The name of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"   * @param helpStr  The help string of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"   * @param supplier The supplier to be called when the command is executed.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"  public BasicCommand(String name, String helpStr, Supplier\u003cString[]\u003e supplier) {","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    super(name, helpStr, false, new String[]{});","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    this.supplier \u003d supplier;","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"  @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"  public String[] execute(String[] params) {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    return supplier.get();","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":29}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":" * Defines classes that represent commands that Duke recognizes.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":" * Commands are either {@link BasicCommand}s, which do not","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":" * accept arguments; or {@link ArgCommand}s, which do.","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * @see duke.Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"package duke.command;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * Represents a command that Duke recognizes.","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"  private final String name;","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"  private final String helpStr;","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"  private final boolean hasBaseParam;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"  private final String[] params;","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"   * Creates a new Command.","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"   * @param name         The name of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"   * @param helpStr      The help string of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"   * @param hasBaseParam Whether the command accepts a base (unnamed) parameter.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"   * @param params       The named parameters of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"  public Command(String name, String helpStr, boolean hasBaseParam, String[] params) {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    this.name \u003d name;","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    this.helpStr \u003d helpStr;","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    this.hasBaseParam \u003d hasBaseParam;","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    this.params \u003d params;","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"   * Returns the help string of the command.","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"   * Used by the {@link Ui} class to generate the help message.","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"   * @return The help string of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"  public String getHelpStr() {","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"    return helpStr;","lastModifiedDate":"2023-01-14"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"   * Returns the name of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"   * @return The name of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"  public String getName() {","lastModifiedDate":"2023-01-14"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    return name;","lastModifiedDate":"2023-01-14"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"   * Returns the named parameters of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"   * @return The named parameters of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"  public String[] getParams() {","lastModifiedDate":"2023-01-14"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"    return params;","lastModifiedDate":"2023-01-14"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"   * True if the command accepts at least one parameter.","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"   * @return True if the command accepts at least one parameter.","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"  public boolean hasParams() {","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"    return params.length \u003e 0 || hasBaseParam;","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"   * Each command encapsulates an operation that Duke can perform,","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"   * as a function that may accept parameters. This method executes the operation.","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"   * @param params The parameters to pass to the operation.","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"   * @return The output of the operation.","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"  public abstract String[] execute(String[] params);","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":82}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * A task implementation with a due date.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"   * The due date of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"  private final LocalDate by;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"   * Constructs a new Deadline with the given description and due date.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"   * @param desc the description of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"   * @param by   the due date of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"  public Deadline(String desc, String by) {","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    super(desc);","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"  @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"  public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + by.format(DATE_FORMAT) + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * A task implementation with a start and end date.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"   * The start date of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"  private final LocalDate from;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"   * The end date of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"  private final LocalDate to;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"   * Constructs a new Event with the given description and start and end dates.","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"   * @param desc the description of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"   * @param from the start date of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"   * @param to   the end date of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"  public Event(String desc, String from, String to) {","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    super(desc);","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"  @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"  public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    return String.format(\"[E]%s (from: %s) (to: %s)\",","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        super.toString(), from.format(DATE_FORMAT), to.format(DATE_FORMAT));","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" * Represents a task that is managed by Duke.","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" * A task has a description and can either be a {@link ToDo}; a {@link Deadline}","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" * with a due date or a {@link Event} with a start and end date.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" * @see duke.Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":" * @see duke.TaskList","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"   * The description of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"  private final String desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"   * The status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"  private boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"  static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"eee, d MMM uuuu\");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"   * Constructs a new task with the given description.","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"   * @param desc the description of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"  public Task(String desc) {","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    this.desc \u003d desc;","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"   * Returns the description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"   * @return The description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"  public String getDesc() {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    return desc;","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"   * Returns the status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"   * @return True if the task is marked as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"  public boolean isDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"    return isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"   * Marks the task as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"  public void mark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-01-14"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    // return this.isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"  @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"  public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"    return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + desc;","lastModifiedDate":"2023-01-14"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":68}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":" * A simple task implementation with only a description and a status.","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"  /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"   * Constructs a new ToDo with the given description.","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"   *","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"   * @param desc the description of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"   */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"  public ToDo(String desc) {","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    super(desc);","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"  @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"  public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"  }","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":21}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.command;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"public class CommandTest {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"    private final Command basCommand \u003d new BasicCommand(\"test\", \"test help\", () -\u003e new String[]{\"test\"});","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"    private final Command argCommand \u003d new ArgCommand(\"test2\", \"test2 help\", new String[]{\"\\\\s\"}, (params) -\u003e new String[]{\"test\"});","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    void testBasCommand() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", basCommand.getName());","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test help\", basCommand.getHelpStr());","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"        assertFalse(basCommand.hasParams());","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"        assertArrayEquals(new String[]{}, basCommand.getParams());","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"        assertArrayEquals(new String[]{\"test\"}, basCommand.execute(new String[]{}));","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    void testArgCommand() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test2\", argCommand.getName());","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test2 help\", argCommand.getHelpStr());","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"        assertTrue(argCommand.hasParams());","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"        assertArrayEquals(new String[]{\"\\\\s\"}, argCommand.getParams());","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"        assertArrayEquals(new String[]{\"test\"}, argCommand.execute(new String[]{}));","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Nafeij":30}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"    private final Task toDo \u003d new ToDo(\"test\");","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"    private final Task deadline \u003d new Deadline(\"test\", \"2020-01-01\");","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"    private final Task event \u003d new Event(\"test\", \"2020-01-01\", \"2020-01-02\");","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    void testToDo() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"        assertFalse(toDo.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", toDo.getDesc());","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[T][ ] test\", toDo.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    void testToDoMark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"        toDo.mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"        assertTrue(toDo.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[T][X] test\", toDo.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    void testDeadline() {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", deadline.getDesc());","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[D][ ] test (by: Wed, 1 Jan 2020)\", deadline.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    void testDeadlineMark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        deadline.mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"        assertTrue(deadline.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[D][X] test (by: Wed, 1 Jan 2020)\", deadline.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    void testEvent() {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", event.getDesc());","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[E][ ] test (from: Wed, 1 Jan 2020) (to: Thu, 2 Jan 2020)\", event.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    void testEventMark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"        event.mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        assertTrue(event.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[E][X] test (from: Wed, 1 Jan 2020) (to: Thu, 2 Jan 2020)\", event.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Nafeij":54}}]
