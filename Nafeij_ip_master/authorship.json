[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"java {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    toolchain {","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"        languageVersion \u003d JavaLanguageVersion.of(11)","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"compileJava {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    options.release \u003d 11","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"/*jar {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    manifest {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"        attributes(","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"                \u0027Class-Path\u0027: configurations.implementation.collect { it.getName() }.join(\u0027 \u0027),","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"                \u0027Main-Class\u0027: \u0027duke.Launcher\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"        )","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"}*/","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"dependencies {","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"javafx {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Nafeij":47,"-":33}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"\u003e _If you wish to forget anything on the spot, make a note that this thing is to be remembered._","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"\u003e ― Edgar Allan Poe","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"# Duke++ User Guide","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"**Duke++** is a command line interface for you to create and manage reminders for yourself, built on top of [Project Duke](https://nus-cs2103-ay2223s2.github.io/website/se-book-adapted/projectDuke/index.html#project-duke).","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"### Manage Your Tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"Add and manage your tasks, including defining deadlines and events.","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"### Save and Load Your Tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"Save your tasks to a file and load them back when you start the program again.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"### `add todo` - Add a todo task","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"`add todo \u003cdescription\u003e` will add a todo task with the given description to the list. Duke++ will output a conformation message and details of the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"Example of usage: `add todo make dinner`","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"\tadded: [T][ ] make dinner","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"### `add deadline` - Add a deadline task","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"`add dealine \u003cdescription\u003e /by \u003cdate\u003e` will add a deadline task with the given description and due date to the list. Duke++ will output a conformation message and details of the task. Dates have to follow the `YYYY-MM-DD` format.","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"Example of usage: `add deadline do homework /by 2022-02-02`","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"\tadded: [D][ ] do homework (by: Wed, 2 Feb 2022)","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"### `add event` - Add an event task","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"`add event \u003cdescription\u003e /from \u003cstart_date\u003e /to \u003cend_date\u003e` will add an event task with the given description, start date and end date to the list. Duke++ will output a conformation message and details of the task. Dates have to follow the `YYYY-MM-DD` format.","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"Example of usage: `add event holiday cruise /from 2023-02-23 /to 2023-03-10`","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"\tadded: [E][ ] holiday cruise (from: Thu, 23 Feb 2023) (to: Fri, 10 Mar 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"### `list` - List your tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"Enter `list` and Duke++ will list all your tasks by the order they are added.","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"Example output:","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"\ttasks: ","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"\t\t1. [E][ ] holiday cruise (from: Thu, 23 Feb 2023) (to: Fri, 10 Mar 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"\t\t2. [T][ ] make dinner","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"\t\t3. [D][ ] do homework (by: Wed, 2 Feb 2022)","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"### `mark` - Mark or Unmark a task as done","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"`mark [indexes...] [/done [indexes...]] [/notdone [indexes...]]` will perform certain operations related to completion status on tasks, given the indexes as they appear in `list`. By default, the statuses are toggled, but the optional flags `/done` and `/notdone` allow you to specify the operation done. Duke++ will output a conformation message with updated details of the tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"1. Tasks succeeding `mark` will have their status toggled.","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"2. Tasks succeeding `/done` will instead be marked as done.","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"3. Tasks succeeding `/notdone` will instead be marked as not done (unmarked).","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"Example of usage: `mark 1 2 /done 3 4 /notdone 5 6`","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"\u003e list","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"\ttasks: ","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"\t\t1. [E][ ] holiday cruise (from: Thu, 23 Feb 2023) (to: Fri, 10 Mar 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"\t\t2. [T][X] make dinner","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"\t\t3. [D][ ] do homework (by: Wed, 2 Feb 2022)","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"\t\t4. [T][X] cut hair","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"\t\t5. [E][ ] hackathon (from: Mon, 2 Oct 2023) (to: Wed, 4 Oct 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"\t\t6. [D][X] birthday (by: Mon, 17 Apr 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"\u003e mark 1 2 /done 3 4 /notdone 5 6","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"\tmarked: ","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"\t\t1. [E][X] holiday cruise (from: Thu, 23 Feb 2023) (to: Fri, 10 Mar 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"\t\t2. [T][ ] make dinner","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"\tmarked: ","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"\t\t3. [D][X] do homework (by: Wed, 2 Feb 2022)","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"\t\t4. [T][X] cut hair","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"\tmarked: ","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"\t\t5. [E][ ] hackathon (from: Mon, 2 Oct 2023) (to: Wed, 4 Oct 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"\t\t6. [D][ ] birthday (by: Mon, 17 Apr 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"\u003e list","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"    tasks: ","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"\t\t1. [E][X] holiday cruise (from: Thu, 23 Feb 2023) (to: Fri, 10 Mar 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"\t\t2. [T][ ] make dinner","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"\t\t3. [D][X] do homework (by: Wed, 2 Feb 2022)","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"\t\t4. [T][X] cut hair","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"\t\t5. [E][ ] hackathon (from: Mon, 2 Oct 2023) (to: Wed, 4 Oct 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"\t\t6. [D][ ] birthday (by: Mon, 17 Apr 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"### `delete` - Delete tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"`delete [indexes...]` deletes the tasks with the given indexes as they appear in `list`. Duke++ will output a conformation message with updated details of the tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"Example of usage: `delete 3 6`","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"\tdeleted:","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"\t\t3. [D][X] do homework (by: Wed, 2 Feb 2022)","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"\t\t6. [T][ ] cut hair","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":"### `find` - Search for tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"`find [string]` finds and lists the tasks with descriptions that (partially) match the search string. A description with a substring exactly matching the search string is considered a match.","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"Example of usage: `find day`","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":"\t2 matches found:","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"\t\t1. [E][X] holiday cruise (from: Thu, 23 Feb 2023) (to: Fri, 10 Mar 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"\t\t4. [D][ ] birthday (by: Mon, 17 Apr 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"### `alias` - Aliases for commands","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"`alias` performs operations related to command aliases. Aliases are used to rename or shorten the commands you type. For example, `delete` can be aliased to `del` so that you can type `del [indexes...]` instead of `delete [indexes...]`.","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"1. `alias /list` lists all currently active aliases.","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"    ","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"    Example output:","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"    ```","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"    \taliases:","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":"                pop -\u003e delete","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"                drop -\u003e delete","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"                q -\u003e exit","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"                search -\u003e find","lastModifiedDate":"2023-02-14"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"                rename -\u003e alias","lastModifiedDate":"2023-02-14"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"                ls -\u003e list","lastModifiedDate":"2023-02-14"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":"                X -\u003e mark","lastModifiedDate":"2023-02-14"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"                quit -\u003e exit","lastModifiedDate":"2023-02-14"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":"                rm -\u003e delete","lastModifiedDate":"2023-02-14"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"                put -\u003e add","lastModifiedDate":"2023-02-14"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"                push -\u003e add","lastModifiedDate":"2023-02-14"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"                remove -\u003e delete","lastModifiedDate":"2023-02-14"},{"lineNumber":153,"author":{"gitId":"Nafeij"},"content":"    ```","lastModifiedDate":"2023-02-14"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"2. `alias /add \u003calias\u003e /is \u003ccommand\u003e` adds an alias for the given command.","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"Nafeij"},"content":"    ","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"    Example of usage: `alias /add del /is delete`","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"Nafeij"},"content":"    ","lastModifiedDate":"2023-02-14"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"    Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"    ```","lastModifiedDate":"2023-02-14"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"    \talias added: del -\u003e delete","lastModifiedDate":"2023-02-14"},{"lineNumber":161,"author":{"gitId":"Nafeij"},"content":"    ```","lastModifiedDate":"2023-02-14"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"3. `alias /delete \u003calias\u003e` deletes the given alias.","lastModifiedDate":"2023-02-14"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"    Example of usage: `alias /delete del`","lastModifiedDate":"2023-02-14"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"    ","lastModifiedDate":"2023-02-14"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":"    Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"    ```","lastModifiedDate":"2023-02-14"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"    \talias deleted: del -\u003e delete","lastModifiedDate":"2023-02-14"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"    ```","lastModifiedDate":"2023-02-14"},{"lineNumber":170,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"Example of usage: `alias /add del /is delete`","lastModifiedDate":"2023-02-14"},{"lineNumber":172,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"Expected output:","lastModifiedDate":"2023-02-14"},{"lineNumber":174,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":175,"author":{"gitId":"Nafeij"},"content":"\t2 matches found:","lastModifiedDate":"2023-02-14"},{"lineNumber":176,"author":{"gitId":"Nafeij"},"content":"\t\t1. [E][X] holiday cruise (from: Thu, 23 Feb 2023) (to: Fri, 10 Mar 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":177,"author":{"gitId":"Nafeij"},"content":"\t\t4. [D][ ] birthday (by: Mon, 17 Apr 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":178,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":179,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"### `help` - Help menu","lastModifiedDate":"2023-02-14"},{"lineNumber":181,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":182,"author":{"gitId":"Nafeij"},"content":"`help` displays a help menu with a list of commands and their usage.","lastModifiedDate":"2023-02-14"},{"lineNumber":183,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":184,"author":{"gitId":"Nafeij"},"content":"Example output:","lastModifiedDate":"2023-02-14"},{"lineNumber":185,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":186,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":187,"author":{"gitId":"Nafeij"},"content":"\tUsage: \u003ccommand\u003e [\u003cargs\u003e]","lastModifiedDate":"2023-02-14"},{"lineNumber":188,"author":{"gitId":"Nafeij"},"content":"\t\t add : add task","lastModifiedDate":"2023-02-14"},{"lineNumber":189,"author":{"gitId":"Nafeij"},"content":"\t\thelp : show this help message","lastModifiedDate":"2023-02-14"},{"lineNumber":190,"author":{"gitId":"Nafeij"},"content":"\t\texit : exit the app","lastModifiedDate":"2023-02-14"},{"lineNumber":191,"author":{"gitId":"Nafeij"},"content":"\t\tfind : find tasks by description","lastModifiedDate":"2023-02-14"},{"lineNumber":192,"author":{"gitId":"Nafeij"},"content":"\t\talias : add / remove command alias","lastModifiedDate":"2023-02-14"},{"lineNumber":193,"author":{"gitId":"Nafeij"},"content":"\t\tlist : list tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"\t\tdelete : delete task at index","lastModifiedDate":"2023-02-14"},{"lineNumber":195,"author":{"gitId":"Nafeij"},"content":"\t\tmark : toggle task mark","lastModifiedDate":"2023-02-14"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"Nafeij"},"content":"### `exit` - Exit the app","lastModifiedDate":"2023-02-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":200,"author":{"gitId":"Nafeij"},"content":"`exit` quits the app after an exit message.","lastModifiedDate":"2023-02-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":202,"author":{"gitId":"Nafeij"},"content":"Example output:","lastModifiedDate":"2023-02-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":204,"author":{"gitId":"Nafeij"},"content":"    Goodbye.","lastModifiedDate":"2023-02-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Nafeij":180,"-":25}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":" * CS2103T Individual Project.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":" * @author Wang Jiefan","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":" * @version 1.0","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * @since 1/20/2023","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"package duke;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import duke.command.NestCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"import duke.util.State;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"import duke.util.Stateful;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"import java.util.Queue;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":" * The main class of the Duke program.","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    public static final String DEFAULT_PATH \u003d \"data.txt\";","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    private State state;","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    public Duke() {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"        this(DEFAULT_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    public Duke(String filename) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"        TaskList taskList;","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"        TaskList temp;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"            temp \u003d new TaskList(filename);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"            ui.loadError(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"            temp \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"        taskList \u003d temp;","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"        Command[] commands \u003d new Command[]{","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"            new Command(\"exit\", \"exit the app\",","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"                    stateful -\u003e stateful.next(\"Goodbye.\", stateful.getState().next(true))","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"            ),","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"            new Command(\"help\",","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"                    \"show this help message\",","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"                    (stateful, input) -\u003e stateful.next(ui.getHelpMsg())","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"            ),","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"            new Command(\"list\",","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"                    \"list tasks\",","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"                    stateful -\u003e stateful.next(taskList.stringify())","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"            ),","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"            new NestCommand(\"add\",","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"                    \"add task\",","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"                    new Command[]{","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"                        new Command(\"todo\",","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"                                \"add todo task\",","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"                                (stateful, input) -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"                                    String desc \u003d String.join(\" \", input);","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"                                    return stateful.next(taskList.addTodo(desc));","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"                                }","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"                        ),","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"                        new Command(\"deadline\",","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"                                \"add deadline task\",","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"                                (stateful, input) -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"                                    HashMap\u003cString, String\u003e args \u003d Parser.extractTokensWithJoin(Set.of(\"/by\"), input);","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"                                    return stateful.next(taskList.addDeadline(args.get(\"\"), args.get(\"/by\")));","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"                                }","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"                        ),","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"                        new Command(\"event\",","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"                                \"add event task\",","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"                                (stateful, input) -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"                                    HashMap\u003cString, String\u003e args \u003d Parser.extractTokensWithJoin(Set.of(\"/from\",\"/to\"), input);","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"                                    return stateful.next(taskList.addEvent(args.get(\"\"), args.get(\"/from\"), args.get(\"/to\")));","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"                                }","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"                        ),","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"            new NestCommand(\"mark\",","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"                    \"toggle task mark\",","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"                    (stateful, input) -\u003e stateful.next(taskList.toggleMark(input, null)),","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"                    new Command[]{","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"                            new Command(\"/done\",","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"                                    \"mark succeeding tasks as done\",","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"                                    (stateful, input) -\u003e stateful.next(taskList.toggleMark(input, true))","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"                            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"                            new Command(\"/notdone\",","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"                                    \"unmark succeeding tasks\",","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"                                    (stateful, input) -\u003e stateful.next(taskList.toggleMark(input, false))","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"                            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":"                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"            new Command(\"delete\",","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"                    \"delete task at index\",","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"                    (stateful, input) -\u003e stateful.next(taskList.delete(input))","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"            new Command(\"find\",","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"                    \"find tasks by description\",","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":"                    (stateful, input) -\u003e stateful.next(taskList.find(String.join(\" \", input)))","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":"            new NestCommand(\"alias\",","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"Nafeij"},"content":"                    \"add / remove command alias\",","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"                    new Command[]{","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"Nafeij"},"content":"                            new Command(\"/list\",","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"                                    \"list aliases\",","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"Nafeij"},"content":"                                    (stateful, input) -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"                                        if (stateful.getState().getAliases().isEmpty()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"Nafeij"},"content":"                                            return stateful.next(\"No aliases found\");","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":"                                        }","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"                                        stateful.next(\"aliases:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"                                        stateful.getState().getAliases().entrySet().stream()","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"                                                .map(e -\u003e \"\\t\" + e.getKey() + \" -\u003e \" + e.getValue())","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"Nafeij"},"content":"                                                .forEach(stateful::next);","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"                                        return stateful;","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"                                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"                            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"                            new Command(\"/add\",","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"                                    \"add alias\",","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"                                    (stateful, input) -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"                                        HashMap\u003cString, String\u003e args \u003d Parser.extractTokensWithJoin(Set.of(\"/is\"), input);","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"                                        stateful.getState().getAliases().put(args.get(\"\"), args.get(\"/is\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"                                        return stateful.next(\"alias added: \" + args.get(\"\") + \" -\u003e \" + args.get(\"/is\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":"                                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"                            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"                            new Command(\"/delete\",","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"                                    \"delete alias\",","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"                                    (stateful, input) -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"                                        String name \u003d String.join(\" \", input);","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":"                                        String orig \u003d stateful.getState().getAliases().remove(name);","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"                                        return stateful.next(\"alias deleted: \" + name + \" -\u003e \" + orig);","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":"                                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"                            ),","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"                    }","lastModifiedDate":"2023-02-04"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"            ),","lastModifiedDate":"2023-02-03"},{"lineNumber":153,"author":{"gitId":"Nafeij"},"content":"        };","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"        ui.setHelpDict(commands);","lastModifiedDate":"2023-02-04"},{"lineNumber":155,"author":{"gitId":"Nafeij"},"content":"        commands[1].setFunction((stateful, input) -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"            if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"Nafeij"},"content":"                return stateful.next(ui.getHelpMsg());","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"            List\u003cString\u003e commandList \u003d input.stream()","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"                    .map(s -\u003e ui.getHelpDict().get(s))","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"Nafeij"},"content":"                    .filter(Objects::nonNull)","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"            if (commandList.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"                return stateful.next(\"No such command.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":"            return stateful.next(Ui.getHelpMsg(commandList));","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"        });","lastModifiedDate":"2023-02-04"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"        HashMap\u003cString, String\u003e aliases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"q\", \"exit\");","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"quit\", \"exit\");","lastModifiedDate":"2023-02-04"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"ls\", \"list\");","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"put\", \"add\");","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"push\", \"add\");","lastModifiedDate":"2023-02-04"},{"lineNumber":174,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"X\", \"mark\");","lastModifiedDate":"2023-02-04"},{"lineNumber":175,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"pop\", \"delete\");","lastModifiedDate":"2023-02-04"},{"lineNumber":176,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"drop\", \"delete\");","lastModifiedDate":"2023-02-04"},{"lineNumber":177,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"remove\", \"delete\");","lastModifiedDate":"2023-02-04"},{"lineNumber":178,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"rm\", \"delete\");","lastModifiedDate":"2023-02-04"},{"lineNumber":179,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"search\", \"find\");","lastModifiedDate":"2023-02-04"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"        aliases.put(\"rename\", \"alias\");","lastModifiedDate":"2023-02-04"},{"lineNumber":181,"author":{"gitId":"Nafeij"},"content":"        this.state \u003d new State(false, aliases);","lastModifiedDate":"2023-02-04"},{"lineNumber":182,"author":{"gitId":"Nafeij"},"content":"        this.parser \u003d new Parser(commands);","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":185,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"Nafeij"},"content":"     * The start of execution of the Duke program.","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"Nafeij"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"Nafeij"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":191,"author":{"gitId":"Nafeij"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-27"},{"lineNumber":192,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"    private void run() {","lastModifiedDate":"2023-02-03"},{"lineNumber":195,"author":{"gitId":"Nafeij"},"content":"        this.ui.printIntro();","lastModifiedDate":"2023-02-03"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":197,"author":{"gitId":"Nafeij"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":198,"author":{"gitId":"Nafeij"},"content":"            Stateful stateful \u003d this.getResponse(scanner.nextLine());","lastModifiedDate":"2023-02-03"},{"lineNumber":199,"author":{"gitId":"Nafeij"},"content":"            this.state \u003d stateful.getState();","lastModifiedDate":"2023-02-19"},{"lineNumber":200,"author":{"gitId":"Nafeij"},"content":"            ui.print(String.join(\"\\n\",stateful.getOutputs()));","lastModifiedDate":"2023-02-19"},{"lineNumber":201,"author":{"gitId":"Nafeij"},"content":"            if (this.state.isDoQuit()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":202,"author":{"gitId":"Nafeij"},"content":"                break;","lastModifiedDate":"2023-02-03"},{"lineNumber":203,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":204,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":205,"author":{"gitId":"Nafeij"},"content":"        scanner.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":206,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":207,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":208,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":209,"author":{"gitId":"Nafeij"},"content":"     * Get the response from the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":210,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":211,"author":{"gitId":"Nafeij"},"content":"     * @param input The input string.","lastModifiedDate":"2023-02-04"},{"lineNumber":212,"author":{"gitId":"Nafeij"},"content":"     * @return The response.","lastModifiedDate":"2023-02-04"},{"lineNumber":213,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":214,"author":{"gitId":"Nafeij"},"content":"    public Stateful getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":215,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-01-14"},{"lineNumber":216,"author":{"gitId":"Nafeij"},"content":"            Queue\u003cString\u003e words \u003d new LinkedList\u003c\u003e(Arrays.asList(input.split(\"\\\\s\")));","lastModifiedDate":"2023-02-04"},{"lineNumber":217,"author":{"gitId":"Nafeij"},"content":"            Command cmd \u003d this.parser.parseCommand(words.remove(), this.state.getAliases());","lastModifiedDate":"2023-02-19"},{"lineNumber":218,"author":{"gitId":"Nafeij"},"content":"            if (cmd.hasSubCommands()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":219,"author":{"gitId":"Nafeij"},"content":"                if (words.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":220,"author":{"gitId":"Nafeij"},"content":"                    throw new IllegalArgumentException(\"Missing argument for command: \"  + cmd.getName());","lastModifiedDate":"2023-02-04"},{"lineNumber":221,"author":{"gitId":"Nafeij"},"content":"                }","lastModifiedDate":"2023-01-13"},{"lineNumber":222,"author":{"gitId":"Nafeij"},"content":"                Function\u003cStateful, Stateful\u003e composedCommands \u003d this.parser.parseArgs(words, (NestCommand) cmd);","lastModifiedDate":"2023-02-04"},{"lineNumber":223,"author":{"gitId":"Nafeij"},"content":"                return composedCommands.apply(new Stateful(new LinkedList\u003c\u003e(), this.state));","lastModifiedDate":"2023-02-04"},{"lineNumber":224,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"Nafeij"},"content":"            return cmd.execute(new Stateful(new LinkedList\u003c\u003e(), this.state), words);","lastModifiedDate":"2023-02-04"},{"lineNumber":226,"author":{"gitId":"Nafeij"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"Nafeij"},"content":"            return new Stateful(new LinkedList\u003c\u003e(Arrays.asList(e.toString().split(\"\\\\r?\\\\n\"))),","lastModifiedDate":"2023-02-04"},{"lineNumber":228,"author":{"gitId":"Nafeij"},"content":"                    this.state);","lastModifiedDate":"2023-02-04"},{"lineNumber":229,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Nafeij":229,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"public class Launcher {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Nafeij":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"            stage.show();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Nafeij":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":" * Defines classes that represent commands that Duke recognizes.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":" * Commands are either {@link duke.command.BasicCommand}s, which do not","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":" * accept arguments; or {@link duke.command.ArgCommand}s, which do.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * @see duke.Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"package duke.command;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import duke.util.Stateful;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"import java.util.Queue;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":" * Represents a command that Duke recognizes.","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":" * Apart from possible reads/writes to data, a command when given an input may perform a modification on a","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":" * {@link Stateful} object via a (bi)function which can be writing to output, changing the state of the program, or both.","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"public class Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    private final String name;","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    private final String helpStr;","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    private final boolean hasSubCommands;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    private BiFunction\u003cStateful, Queue\u003cString\u003e, Stateful\u003e function;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"     * Creates a new Command.","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"     * @param name              The name of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"     * @param helpStr           The help string of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"     * @param hasSubCommands    Whether the command has subcommands.","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"     * @param function          The function that the command, given an input, performs.","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    public Command(String name, String helpStr, boolean hasSubCommands, BiFunction\u003cStateful, Queue\u003cString\u003e, Stateful\u003e function) {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"        this.helpStr \u003d helpStr;","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"        this.hasSubCommands \u003d hasSubCommands;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"        this.function \u003d function;","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    public Command(String name, String helpStr, BiFunction\u003cStateful, Queue\u003cString\u003e, Stateful\u003e function) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"        this(name, helpStr, false, function);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"    public Command(String name, String helpStr, Function\u003cStateful, Stateful\u003e function) {","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        this(name, helpStr, false, Command.makeStateful(function));","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"    public Command(String name, String helpStr, Supplier\u003cStateful\u003e supplier) {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"        this(name, helpStr, false, Command.makeStateful(supplier));","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    private static BiFunction\u003cStateful, Queue\u003cString\u003e, Stateful\u003e makeStateful (Supplier\u003cStateful\u003e supplier) {","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"        return (stateful, string) -\u003e  stateful.next(supplier.get().getOutputs());","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"    private static BiFunction\u003cStateful, Queue\u003cString\u003e, Stateful\u003e makeStateful(Function\u003cStateful, Stateful\u003e function) {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"        return (stateful, string) -\u003e function.apply(stateful);","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"     * Returns the help text of the command (command name + help string)","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"     * Used by the {@link Ui} class to generate the help message.","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"     * @return The help text of the command.","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"    public String getHelpText() {","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"        return String.format(\"\\t%4s : %s\", this.name, this.helpStr);","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"     * Returns the name of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"     * @return The name of the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"    public String getName() {","lastModifiedDate":"2023-01-14"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"        return name;","lastModifiedDate":"2023-01-14"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"     * True if the command has subcommands.","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"     * Alternative would be to type-test between {@link NestCommand} and {@link Command} :(","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"     * @return True if the command accepts at least one subcommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"    public boolean hasSubCommands() {","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"        return hasSubCommands;","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"     * Returns the State function that the command performs.","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"     * @return The State function that the command performs.","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"    public BiFunction\u003cStateful, Queue\u003cString\u003e, Stateful\u003e getFunction() {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"        return function;","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"     * Sets the State function that the command performs.","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":"     * @param function  The State function that the command performs.","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"    public void setFunction(BiFunction\u003cStateful, Queue\u003cString\u003e, Stateful\u003e function) {","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"        this.function \u003d function;","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"     * Transforms the command\u0027s state+output bifunction into a partial state function by supplying one of the arguments","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":"     * (the input). Used to simplify the composition and execution of multiple commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":"     * @param input The input, as a list of words.","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"Nafeij"},"content":"     * @return      The partial function upon supplying the input.","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"     * @see         duke.util.Parser#parseArgs(Queue, NestCommand) ","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"    public Function\u003cStateful, Stateful\u003e getFurnishedFunction(Queue\u003cString\u003e input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"Nafeij"},"content":"        return stateful -\u003e function.apply(stateful, input);","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"     * Utility method to create a name-dictionary of commands from an array of commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"     * @param commands A array of commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"Nafeij"},"content":"     * @return         A dictionary of commands, keyed by names.","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"    public static HashMap\u003cString, Command\u003e makeCommandMap(Command[] commands) {","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"        return Arrays.stream(commands)","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"                .collect(HashMap::new,","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"                        (map, command) -\u003e map.put(command.getName(), command),","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"                        HashMap::putAll","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"                );","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"     * Each command encapsulates an operation that Duke can perform, as a function that may accept parameters. This","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"     * method executes the operation.","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"     * @param stateful  The parameters (and program state) to pass to the operation.","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"     * @return          The output of the operation (and any side effects).","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"    public Stateful execute(Stateful stateful, Queue\u003cString\u003e input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":"        return function.apply(stateful, input);","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":151}},{"path":"src/main/java/duke/command/NestCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.util.Stateful;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.util.Queue;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" * A (nested) command that has subcommands.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":" * @see Command","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"public class NestCommand extends Command{","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"    private final HashMap\u003cString, Command\u003e subcommands;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"     * Creates a new NestCommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     * @param name         The name of the command.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"     * @param helpStr      The help string of the command.","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"     * @param function     The function that the command, given an input, performs.","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"     * @param commands     The subcommands of the command.","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    public NestCommand(String name, String helpStr, BiFunction\u003cStateful, Queue\u003cString\u003e, Stateful\u003e function, Command[] commands) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"        super(name, helpStr, true, function);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"        this.subcommands \u003d Command.makeCommandMap(commands);","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    public NestCommand(String name, String helpStr, Command[] commands) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"        super(name, helpStr, true, (stateful, strings) -\u003e stateful);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"        this.subcommands \u003d Command.makeCommandMap(commands);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"     * Returns the subcommands of the command.","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"     * @return The subcommands of the command.","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    public HashMap\u003cString, Command\u003e getSubCommands() {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"        return subcommands;","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Nafeij":44}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.controller;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"        db.flip();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"        return db;","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Nafeij":61}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.controller;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import duke.util.Stateful;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/user.png\")));","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/duke.png\")));","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"        Stateful response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"        assert response.getOutputs() !\u003d null \u0026\u0026 response.getOutputs().size() \u003e 0;","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"        String output \u003d String.join(\"\\n\", response.getOutputs());","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"                .addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"                        DialogBox.getDukeDialog(output, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"                );","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"        if (response.getState().isDoQuit()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"            userInput.setEditable(false);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"            stage.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Nafeij":62}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * A task implementation with a due date.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"     * The due date of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * Constructs a new Deadline with the given description and due date.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"     * @param desc the description of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"     * @param by   the due date of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    public Deadline(String desc, String by) {","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"        super(desc);","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DATE_FORMAT) + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":30}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * A task implementation with a start and end date.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"     * The start date of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * The end date of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     * Constructs a new Event with the given description and start and end dates.","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"     * @param desc the description of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"     * @param from the start date of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     * @param to   the end date of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    public Event(String desc, String from, String to) {","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"        super(desc);","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"        return String.format(\"[E]%s (from: %s) (to: %s)\",","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"                super.toString(),","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"                from.format(DATE_FORMAT),","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"                to.format(DATE_FORMAT)","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" * Represents a task that is managed by Duke.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" * A task has a description and can either be a {@link ToDo}; a {@link Deadline}","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":" * with a due date or a {@link Event} with a start and end date.","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":" * @see duke.Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * @see TaskList","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"eee, d MMM uuuu\");","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     * The description of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    private final String desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"     * The status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"     * Constructs a new task with the given description.","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"     * @param desc the description of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    public String getDesc() {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"        return desc;","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"     * @return True if the task is marked as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        return isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"     * Toggles the status of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    public void mark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"        this.mark(!this.isDone);","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"     * Explicitly marks the task as done (or not done).","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"     * @param isDone The new status of the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"    public void mark(boolean isDone){","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + desc;","lastModifiedDate":"2023-01-14"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":77}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":" * A simple task implementation with only a description and a status.","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"     * Constructs a new ToDo with the given description.","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"     * @param desc the description of the task","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"        super(desc);","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":21}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.util;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import duke.command.NestCommand;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import java.util.Queue;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":" * Utility class for parsing user input, command arguments, and subcommands.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" * @see duke.Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":" * @see duke.command.Command","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"public class Parser {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    private final HashMap\u003cString, Command\u003e baseCommandTokens;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     * Creates a new Parser.","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"     * @param commands The commands that the parser recognizes.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    public Parser(Command[] commands) {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        this.baseCommandTokens \u003d Command.makeCommandMap(commands);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"     * Given a list of input-words, and a command with subcommands, attempts to parse base arguments to their","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"     * commands and recursively parse subcommand arguments to their subcommands.","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"     * @param words         the input, as whitespace-delimited words","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"     * @param baseCmd       the base or root command","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    public Function\u003cStateful, Stateful\u003e parseArgs(Queue\u003cString\u003e words, NestCommand baseCmd) {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"        Set\u003cString\u003e subCommandTokens \u003d baseCmd.getSubCommands().keySet();","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"        HashMap\u003cString, Queue\u003cString\u003e\u003e subCommandMap \u003d Parser.extractTokenArgs(subCommandTokens, words);","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"        return getComposedStateOperation(baseCmd, subCommandMap);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    private Function\u003cStateful, Stateful\u003e getComposedStateOperation(NestCommand baseCmd, HashMap\u003cString, Queue\u003cString\u003e\u003e subCommandMap) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"        Function\u003cStateful, Stateful\u003e baseFunction \u003d baseCmd.getFurnishedFunction(subCommandMap.remove(\"\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        for (Map.Entry\u003cString, Queue\u003cString\u003e\u003e entry : subCommandMap.entrySet()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"            String token \u003d entry.getKey();","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"            Queue\u003cString\u003e input \u003d entry.getValue();","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"            Command subCommand \u003d baseCmd.getSubCommands().get(token);","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"            Function\u003cStateful, Stateful\u003e subFunction;","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"            if (subCommand.hasSubCommands()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"                subFunction \u003d parseArgs(input, (NestCommand) subCommand);","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"                subFunction \u003d subCommand.getFurnishedFunction(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"            baseFunction \u003d baseFunction.andThen(subFunction);","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"        return baseFunction;","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"    /*private static Queue\u003cString\u003e extractCommandWords(Queue\u003cString\u003e words, Set\u003cString\u003e otherTokens) {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"        if (otherTokens \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"            return words;","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"        Queue\u003cString\u003e subCommandWords \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"        while (!words.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"            String word \u003d words.peek();","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"            if (otherTokens.contains(word)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"                break;","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"            subCommandWords.add(words.poll());","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"        return subCommandWords;","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"    }*/","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"     * Given a list of input-words, and a set of tokens, attempts to parse arguments to their respective tokens.","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"     * The parsing is independent of the order of the tokens.","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"     * @param tokens            the tokens to parse","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"     * @param words             the input, as whitespace-delimited words","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"     * @param allowOptional     whether arguments are allowed to be blank","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"     * @return                  a map of tokens to their respective arguments","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"    public static HashMap\u003cString, Queue\u003cString\u003e\u003e extractTokenArgs(Set\u003cString\u003e tokens, Queue\u003cString\u003e words, boolean allowOptional) {","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"        HashMap\u003cString, Queue\u003cString\u003e\u003e outputs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"        String prevToken \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"        Set\u003cString\u003e unmatchedTokens \u003d new HashSet\u003c\u003e(tokens);","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"        unmatchedTokens.add(prevToken);","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"        Queue\u003cString\u003e subWords \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"        while (!words.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"            String word \u003d words.poll();","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"            if (unmatchedTokens.contains(word)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"                if (!subWords.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"                    outputs.put(prevToken, subWords);","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"                    unmatchedTokens.remove(prevToken);","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"                prevToken \u003d word;","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"                subWords \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"                subWords.add(word);","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":"        if (allowOptional || !subWords.isEmpty()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"            outputs.put(prevToken, subWords);","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"            unmatchedTokens.remove(prevToken);","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"        boolean isMissingOne \u003d !unmatchedTokens.isEmpty() || subWords.isEmpty() || outputs.get(\"\") \u003d\u003d null;","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"        boolean isMissingAll \u003d outputs.isEmpty();","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"        if (isMissingAll || (!allowOptional \u0026\u0026 isMissingOne)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"            if (unmatchedTokens.remove(\"\")){","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":"                unmatchedTokens.add(\"\u003cbase argument\u003e\");","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":"            throw new IllegalArgumentException(\"Missing argument for: \" + unmatchedTokens);","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"        return outputs;","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"Nafeij"},"content":"    public static HashMap\u003cString, Queue\u003cString\u003e\u003e extractTokenArgs(Set\u003cString\u003e tokens, Queue\u003cString\u003e words) {","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"        return extractTokenArgs(tokens, words, true);","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"     * Given a list of input-words, and a set of tokens, attempts to parse arguments to their respective tokens.","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"     * This differs from {@link #extractTokenArgs(Set, Queue)} in that it joins the argument-lists into a single string.","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"     * @param tokens            the tokens to parse","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"     * @param words             the input, as whitespace-delimited words","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"     * @return                  a map of tokens to their respective arguments","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"    public static HashMap\u003cString, String\u003e extractTokensWithJoin(Set\u003cString\u003e tokens, Queue\u003cString\u003e words) {","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"        return extractTokenArgs(tokens, words, false).entrySet().stream().collect(","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"                Collectors.toMap(","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"                        Map.Entry::getKey,","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"                        e -\u003e String.join(\" \", e.getValue()),","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":"                        (a, b) -\u003e b,","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"                        HashMap::new","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"                )","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"     * Parses the specified command name and returns the corresponding command.","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"     * @param name The name of the command to be parsed.","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"     * @return The command corresponding to the specified name.","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"Nafeij"},"content":"    public Command parseCommand(String name, HashMap\u003cString, String\u003e aliases) {","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"        if (baseCommandTokens.containsKey(name)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":155,"author":{"gitId":"Nafeij"},"content":"            return baseCommandTokens.get(name);","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"Nafeij"},"content":"        if (aliases.containsKey(name)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"            return baseCommandTokens.get(aliases.get(name));","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"        for (Command command : baseCommandTokens.values()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"Nafeij"},"content":"            if (command.getName().contains(name)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"                return command;","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"        throw new IllegalArgumentException(\"Command not found: \" + name);","lastModifiedDate":"2023-02-04"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Nafeij":167}},{"path":"src/main/java/duke/util/State.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.util;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * State encapsulates (modifications to) the program state","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" * @see Stateful","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"public class State {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"    private final boolean doQuit;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    private final HashMap\u003cString, String\u003e aliases;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    public State(boolean doQuit, HashMap\u003cString, String\u003e aliases) {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"        this.doQuit \u003d doQuit;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"        this.aliases \u003d aliases;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    public State (boolean doQuit) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"        this(doQuit, new HashMap\u003c\u003e());","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    public State next(boolean doQuit) {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"        return new State(doQuit, this.aliases);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    public boolean isDoQuit() {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        return doQuit;","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    public HashMap\u003cString, String\u003e getAliases() {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"        return aliases;","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Nafeij":35}},{"path":"src/main/java/duke/util/Stateful.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.util;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import java.util.Queue;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":" * Wrapper class for command functions to hold whitespace-delimited string input-output *and* side-effects","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":" * (e.g. modifications to execution flow)","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":" * @see State","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"public class Stateful {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"    private final Queue\u003cString\u003e outputs;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    private final State state;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"     * Creates a new Stateful.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"     * @param outputs Lines of string of outputs","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"     * @param state  (Modified) State of program","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    public Stateful(Queue\u003cString\u003e outputs, State state) {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"        this.outputs \u003d outputs;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"        this.state \u003d state;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"     * Returns a new Stateful with the given changes. Encapsulates the advancement of the program state.","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"     * @param output    The output to be added to the output queue.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"     * @param state     The new state of the program.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"     * @return          A new Stateful with the given changes.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    public Stateful next(String output, State state) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        this.outputs.add(output);","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"        return new Stateful(this.outputs, state);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"    public Stateful next(Queue\u003cString\u003e outputs, State state) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"        this.outputs.addAll(outputs);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"        return new Stateful(this.outputs, state);","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"    public Stateful next(String output) {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"        return next(output, this.state);","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    public Stateful next(Queue\u003cString\u003e outputs) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"        return next(outputs, this.state);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"    public Queue\u003cString\u003e getOutputs() {","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"        return outputs;","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"    public State getState() {","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"        return state;","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Nafeij":58}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.util;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import java.util.List;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":" * Utility used by TaskList to manage file I/O and data storage.","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" * The default save location is {@code data.txt}.","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":" * @see Task","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" * @see TaskList","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"public class Storage {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    private String fileName \u003d \"data.txt\";","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"     * Saves the given tasks to the last accessed location.","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     * @param tasks the tasks to be saved","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"            FileOutputStream fos \u003d new FileOutputStream(fileName);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"            oos.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"            System.out.println(\"\\t[ERROR] While saving, the following error occurred: \\n\\t\" + e);","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"     * Saves the given tasks to the given file.","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"     * @param tasks    the tasks to be saved","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"     * @param fileName the name of the file to be used to store tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"    public void save(List\u003cTask\u003e tasks, String fileName) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"        this.save(tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"     * Loads the tasks from the last accessed location.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"     * @return the tasks stored in the last accessed location","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"     * @throws IOException            if the file cannot be found or created.","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"     * @throws ClassNotFoundException if the file cannot be deserialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    public List\u003cTask\u003e load() throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        FileInputStream fin \u003d new FileInputStream(fileName);","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"        ObjectInputStream ois \u003d new ObjectInputStream(fin);","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"        @SuppressWarnings(\"unchecked\") List\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"        fin.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"        return tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"     * Loads the tasks from the given file.","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"     * @param fileName the name of the file used to store tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"     * @return the tasks stored in the given file","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"     * @throws IOException            if the file cannot be found or created.","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"     * @throws ClassNotFoundException if the file cannot be deserialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"    public List\u003cTask\u003e load(String fileName) throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"        return this.load();","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Nafeij":77}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.util;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"import java.util.Queue;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"import java.util.function.IntConsumer;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":" * Utility used by Duke to manage tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":" * @see Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":" * @see Task","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":" * @see Storage","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"public class TaskList {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"     * Constructs a new TaskList with the given tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"     * @param tasks the tasks to be managed","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-14"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"     * Constructs a new TaskList with no tasks and stores it in the given file.","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"     * @param fileName the name of the file to be used to store tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"     * @throws IOException            if the file cannot be found or created.","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"     * @throws ClassNotFoundException if the file cannot be deserialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    public TaskList(String fileName) throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"            tasks \u003d storage.load(fileName);","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"            storage.save(tasks, fileName);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"     * Constructs a new TaskList with no tasks and stores it in the default location.","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"     * @throws IOException            if the file cannot be found or created.","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"     * @throws ClassNotFoundException if the file cannot be deserialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"     * @see Storage","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"    public TaskList() throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"     * Returns a string representation of the tasks in the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"     * @return  a string representation of the tasks in the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"     * @see     Ui#print(String)","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"    public Queue\u003cString\u003e stringify() {","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"            return new LinkedList\u003c\u003e(Collections.singletonList(\"No tasks found.\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"        Queue\u003cString\u003e header \u003d new LinkedList\u003c\u003e(Collections.singletonList(\"tasks: \"));","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"        Queue\u003cString\u003e outputs \u003d IntStream.range(0, this.tasks.size())","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"                .mapToObj(i -\u003e \"\\t\" + addOrdinal(i, this.tasks.get(i)))","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"                .collect(Collectors.toCollection(LinkedList::new));","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"        header.addAll(outputs);","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"        return header;","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"     * Adds a new {@link Task} to the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"     * @param  task the task to be added.","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"     * @return a string representation of the task that was added.","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"        this.save();","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"        return \"added: \" + task;","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"    public String addTodo(String description) {","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"        Task newTask \u003d new ToDo (Objects.requireNonNull(description));","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"        return this.add(newTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"    public String addDeadline(String description, String by) {","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"        Task newTask \u003d new Deadline(Objects.requireNonNull(description),","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"                Objects.requireNonNull(by));","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"        return this.add(newTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":"    public String addEvent(String description, String from, String to) {","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"        Task newTask \u003d new Event(Objects.requireNonNull(description),","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":"                Objects.requireNonNull(from),","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"Nafeij"},"content":"                Objects.requireNonNull(to));","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"        return this.add(newTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":124,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"     * Marks (toggle) the task(s) at the given index(es).","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":"     * @param indStr the index(es) of the task(s) to be marked as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"     * @param isDone the new status of the task(s). Null to toggle.","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"     * @return a string representation of the task(s) that were (un)marked.","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Nafeij"},"content":"    public Queue\u003cString\u003e toggleMark(Queue\u003cString\u003e indStr, Boolean isDone) {","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"Nafeij"},"content":"        if (indStr \u003d\u003d null || indStr.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"Nafeij"},"content":"            return new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"Nafeij"},"content":"        List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-14"},{"lineNumber":136,"author":{"gitId":"Nafeij"},"content":"        IntConsumer mark \u003d ind -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"Nafeij"},"content":"            if (isDone !\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"Nafeij"},"content":"                this.tasks.get(ind).mark(isDone);","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"Nafeij"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"Nafeij"},"content":"                this.tasks.get(ind).mark();","lastModifiedDate":"2023-01-14"},{"lineNumber":141,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"Nafeij"},"content":"            indexes.add(ind);","lastModifiedDate":"2023-01-14"},{"lineNumber":143,"author":{"gitId":"Nafeij"},"content":"        };","lastModifiedDate":"2023-01-14"},{"lineNumber":144,"author":{"gitId":"Nafeij"},"content":"        this.consume(indStr, mark);","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"Nafeij"},"content":"        this.save();","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"Nafeij"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":147,"author":{"gitId":"Nafeij"},"content":"            throw new IllegalArgumentException(\"No tasks found.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":148,"author":{"gitId":"Nafeij"},"content":"        } else if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":149,"author":{"gitId":"Nafeij"},"content":"            Task task \u003d this.tasks.get(indexes.get(0));","lastModifiedDate":"2023-01-14"},{"lineNumber":150,"author":{"gitId":"Nafeij"},"content":"            return new LinkedList\u003c\u003e(Collections.singletonList(","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"Nafeij"},"content":"                    (task.isDone() ? \"marked: \" : \"unmarked: \")","lastModifiedDate":"2023-02-04"},{"lineNumber":152,"author":{"gitId":"Nafeij"},"content":"                            + addOrdinal(indexes.get(0), task)","lastModifiedDate":"2023-02-04"},{"lineNumber":153,"author":{"gitId":"Nafeij"},"content":"            ));","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":155,"author":{"gitId":"Nafeij"},"content":"            Queue\u003cString\u003e header \u003d new LinkedList\u003c\u003e(Collections.singletonList(\"marked: \"));","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"Nafeij"},"content":"            Queue\u003cString\u003e outputs \u003d indexes.stream()","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"Nafeij"},"content":"                    .map(i -\u003e \"\\t\" + addOrdinal(i, this.tasks.get(i)))","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"Nafeij"},"content":"                    .collect(Collectors.toCollection(LinkedList::new));","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"Nafeij"},"content":"            header.addAll(outputs);","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"Nafeij"},"content":"            return header;","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":162,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":163,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":164,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"Nafeij"},"content":"     * Deletes the task(s) at the given index(es).","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"Nafeij"},"content":"     * @param indStr the index(es) of the task(s) to be deleted.","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"Nafeij"},"content":"     * @return a string representation of the task(s) that were deleted.","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"Nafeij"},"content":"    public Queue\u003cString\u003e delete(Queue\u003cString\u003e indStr) {","lastModifiedDate":"2023-02-04"},{"lineNumber":171,"author":{"gitId":"Nafeij"},"content":"        List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-14"},{"lineNumber":172,"author":{"gitId":"Nafeij"},"content":"        IntConsumer delete \u003d ind -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"Nafeij"},"content":"            if (this.tasks.size() \u003c\u003d ind) {","lastModifiedDate":"2023-01-14"},{"lineNumber":174,"author":{"gitId":"Nafeij"},"content":"                throw new IllegalArgumentException(\"Task not found: \" + ind);","lastModifiedDate":"2023-01-14"},{"lineNumber":175,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":176,"author":{"gitId":"Nafeij"},"content":"            indexes.add(ind);","lastModifiedDate":"2023-01-14"},{"lineNumber":177,"author":{"gitId":"Nafeij"},"content":"        };","lastModifiedDate":"2023-01-14"},{"lineNumber":178,"author":{"gitId":"Nafeij"},"content":"        this.consume(indStr, delete);","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"Nafeij"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-14"},{"lineNumber":180,"author":{"gitId":"Nafeij"},"content":"            throw new IllegalArgumentException(\"No tasks found.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":181,"author":{"gitId":"Nafeij"},"content":"        } else if (indexes.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":182,"author":{"gitId":"Nafeij"},"content":"            Task rmTask \u003d this.tasks.remove((int) indexes.get(0));","lastModifiedDate":"2023-01-14"},{"lineNumber":183,"author":{"gitId":"Nafeij"},"content":"            this.save();","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"Nafeij"},"content":"            return new LinkedList\u003c\u003e(Collections.singletonList(","lastModifiedDate":"2023-02-04"},{"lineNumber":185,"author":{"gitId":"Nafeij"},"content":"                    \"deleted: \" + addOrdinal(indexes.get(0), rmTask)","lastModifiedDate":"2023-02-04"},{"lineNumber":186,"author":{"gitId":"Nafeij"},"content":"            ));","lastModifiedDate":"2023-02-04"},{"lineNumber":187,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":188,"author":{"gitId":"Nafeij"},"content":"            indexes.sort(Collections.reverseOrder());","lastModifiedDate":"2023-01-14"},{"lineNumber":189,"author":{"gitId":"Nafeij"},"content":"            List\u003cString\u003e outputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-14"},{"lineNumber":190,"author":{"gitId":"Nafeij"},"content":"            for (int i : indexes) {","lastModifiedDate":"2023-01-14"},{"lineNumber":191,"author":{"gitId":"Nafeij"},"content":"                outputs.add(\"\\t\" + addOrdinal(i, this.tasks.remove(i)));","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"Nafeij"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":193,"author":{"gitId":"Nafeij"},"content":"            this.save();","lastModifiedDate":"2023-01-17"},{"lineNumber":194,"author":{"gitId":"Nafeij"},"content":"            Collections.reverse(outputs);","lastModifiedDate":"2023-01-14"},{"lineNumber":195,"author":{"gitId":"Nafeij"},"content":"            outputs.add(0, \"deleted:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":196,"author":{"gitId":"Nafeij"},"content":"            return new LinkedList\u003c\u003e(outputs);","lastModifiedDate":"2023-02-04"},{"lineNumber":197,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":198,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":199,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":200,"author":{"gitId":"Nafeij"},"content":"    private void consume(Queue\u003cString\u003e arguments, IntConsumer consumer) {","lastModifiedDate":"2023-02-04"},{"lineNumber":201,"author":{"gitId":"Nafeij"},"content":"        try {","lastModifiedDate":"2023-01-14"},{"lineNumber":202,"author":{"gitId":"Nafeij"},"content":"            arguments.stream().mapToInt(Integer::parseInt).map(i -\u003e --i).forEach(consumer);","lastModifiedDate":"2023-02-04"},{"lineNumber":203,"author":{"gitId":"Nafeij"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":204,"author":{"gitId":"Nafeij"},"content":"            throw new IllegalArgumentException(\"Invalid index.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":205,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":206,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":207,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":208,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"Nafeij"},"content":"     * Performs a search for partial matches on task descriptions.","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"Nafeij"},"content":"     * @param argument the search term.","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"Nafeij"},"content":"     * @return a string representation of the tasks that matched the search term.","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":214,"author":{"gitId":"Nafeij"},"content":"    public Queue\u003cString\u003e find(String argument) {","lastModifiedDate":"2023-02-04"},{"lineNumber":215,"author":{"gitId":"Nafeij"},"content":"        String keyword \u003d argument.toLowerCase();","lastModifiedDate":"2023-02-04"},{"lineNumber":216,"author":{"gitId":"Nafeij"},"content":"        List\u003cInteger\u003e matchIndexes \u003d IntStream.range(0, this.tasks.size())","lastModifiedDate":"2023-02-03"},{"lineNumber":217,"author":{"gitId":"Nafeij"},"content":"                .parallel()","lastModifiedDate":"2023-02-03"},{"lineNumber":218,"author":{"gitId":"Nafeij"},"content":"                .filter(i -\u003e this.tasks.get(i).getDesc().toLowerCase().contains(keyword))","lastModifiedDate":"2023-02-04"},{"lineNumber":219,"author":{"gitId":"Nafeij"},"content":"                .boxed().collect(Collectors.toList());","lastModifiedDate":"2023-02-19"},{"lineNumber":220,"author":{"gitId":"Nafeij"},"content":"        if (matchIndexes.size() \u003c 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"Nafeij"},"content":"            return new LinkedList\u003c\u003e(Collections.singletonList(\"No matches found.\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":222,"author":{"gitId":"Nafeij"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":223,"author":{"gitId":"Nafeij"},"content":"            String countStr \u003d String.format(\"%d match%s found:\", matchIndexes.size(), matchIndexes.size() \u003e 1 ? \"es\" : \"\");","lastModifiedDate":"2023-02-14"},{"lineNumber":224,"author":{"gitId":"Nafeij"},"content":"            Queue\u003cString\u003e header \u003d new LinkedList\u003c\u003e(Collections.singletonList(countStr));","lastModifiedDate":"2023-02-04"},{"lineNumber":225,"author":{"gitId":"Nafeij"},"content":"            Queue\u003cString\u003e outputs \u003d matchIndexes.stream().map(i -\u003e \"\\t\" + addOrdinal(i, this.tasks.get(i))).collect(Collectors.toCollection(LinkedList::new));","lastModifiedDate":"2023-02-04"},{"lineNumber":226,"author":{"gitId":"Nafeij"},"content":"            header.addAll(outputs);","lastModifiedDate":"2023-02-04"},{"lineNumber":227,"author":{"gitId":"Nafeij"},"content":"            return header;","lastModifiedDate":"2023-02-04"},{"lineNumber":228,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":229,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":230,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":231,"author":{"gitId":"Nafeij"},"content":"    private void save() {","lastModifiedDate":"2023-01-18"},{"lineNumber":232,"author":{"gitId":"Nafeij"},"content":"        storage.save(this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":233,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":234,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":235,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":236,"author":{"gitId":"Nafeij"},"content":"     * Returns a string representation of the task with the given index.","lastModifiedDate":"2023-01-20"},{"lineNumber":237,"author":{"gitId":"Nafeij"},"content":"     * Used for printing in ordered lists.","lastModifiedDate":"2023-01-20"},{"lineNumber":238,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":239,"author":{"gitId":"Nafeij"},"content":"     * @param index the index of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":240,"author":{"gitId":"Nafeij"},"content":"     * @param task  the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":241,"author":{"gitId":"Nafeij"},"content":"     * @return a string representation of the task with the given index.","lastModifiedDate":"2023-01-18"},{"lineNumber":242,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":243,"author":{"gitId":"Nafeij"},"content":"    public String addOrdinal(int index, Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":244,"author":{"gitId":"Nafeij"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 task !\u003d null;","lastModifiedDate":"2023-02-03"},{"lineNumber":245,"author":{"gitId":"Nafeij"},"content":"        return (index + 1) + \". \" + task;","lastModifiedDate":"2023-01-18"},{"lineNumber":246,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":247,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Nafeij":247}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.util;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import java.util.Queue;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":" * Utility class for formatting and printing printable from Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":" *","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":" * @see Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"public class Ui {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    private HashMap\u003cString, String\u003e helpDict \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"    private static final List\u003cString\u003e HEADER_STR \u003d Collections.singletonList(\"Usage: \u003ccommand\u003e [\u003cargs\u003e]\");","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"     * Creates the help message dictionary from the given Duke commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"     * @param commands The commands recognized by Duke.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"    public void setHelpDict(Command[] commands) {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        this.helpDict \u003d generateHelp(commands);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    private HashMap\u003cString, String\u003e generateHelp(Command[] commands) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"        return Arrays.stream(commands)","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"                .collect(Collectors.toMap(Command::getName,","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"                        Command::getHelpText,","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"                        (prev, next) -\u003e next,","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"                        HashMap::new)","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"                );","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"     * Returns the help message dictionary.","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"     * @return The help message dictionary.","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"    public HashMap\u003cString, String\u003e getHelpDict() {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"        return this.helpDict;","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"     * Returns the help message.","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"     * @return The help message.","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"Nafeij"},"content":"    public Queue\u003cString\u003e getHelpMsg() {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Nafeij"},"content":"        Queue\u003cString\u003e header \u003d new LinkedList\u003c\u003e(HEADER_STR);","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"Nafeij"},"content":"        header.addAll(new LinkedList\u003c\u003e(this.helpDict.values()));","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"Nafeij"},"content":"        return header;","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"Nafeij"},"content":"    public static Queue\u003cString\u003e getHelpMsg(List\u003cString\u003e commands) {","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Nafeij"},"content":"        Queue\u003cString\u003e header \u003d new LinkedList\u003c\u003e(HEADER_STR);","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Nafeij"},"content":"        header.addAll(commands);","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Nafeij"},"content":"        return header;","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Nafeij"},"content":"     * Prints the help message.","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Nafeij"},"content":"    public void print() {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Nafeij"},"content":"        this.print(this.getHelpMsg());","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Nafeij"},"content":"     * Prints the specified message with proper formatting.","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"Nafeij"},"content":"     * @param msg The message to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Nafeij"},"content":"    public void print(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Nafeij"},"content":"        this.print(new LinkedList\u003c\u003e(Arrays.asList(msg.split(\"\\n\"))));","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Nafeij"},"content":"     * Prints the specified lines with proper formatting.","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"Nafeij"},"content":"     * @param lines The lines to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Nafeij"},"content":"    public void print(Queue\u003cString\u003e lines) {","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"Nafeij"},"content":"        StringBuilder outputs \u003d new StringBuilder();","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"Nafeij"},"content":"        for (String str : lines) {","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"Nafeij"},"content":"            outputs.append(\"\\t\").append(str).append(\"\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Nafeij"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Nafeij"},"content":"        outputs.append(\"-----------------------------------------------\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"Nafeij"},"content":"        System.out.print(outputs);","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"Nafeij"},"content":"     * Prints the introductory message.","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"Nafeij"},"content":"    public void printIntro() {","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"Nafeij"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"Nafeij"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"Nafeij"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"Nafeij"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"Nafeij"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"Nafeij"},"content":"        System.out.println(\"Hello, I\u0027m\\n\" + logo + \"how may I help?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"Nafeij"},"content":"     * Prints the error message with formatting.","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"Nafeij"},"content":"     * @param e The exception to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"Nafeij"},"content":"    public void error(Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"Nafeij"},"content":"        this.print(\"\\t[ERROR] \" + e);","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"Nafeij"},"content":"        this.print();","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"Nafeij"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"Nafeij"},"content":"     * Prints the error message with formatting, for a failed initialization.","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"Nafeij"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"Nafeij"},"content":"     * @param e The exception to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"Nafeij"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"Nafeij"},"content":"    public void loadError(Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"Nafeij"},"content":"        this.print(\"\\t[ERROR] While loading, the following error occurred: \\n\\t\" + e);","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Nafeij"},"content":"        this.print();","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Nafeij":130}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Nafeij":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"            fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Nafeij":19}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.command;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"import duke.util.State;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import duke.util.Stateful;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"public class CommandTest {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"    private final Command command \u003d new Command(\"test\",\"test help\", stateful -\u003e new Stateful(new LinkedList\u003c\u003e(List.of(\"test\")), new State(false)));","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"    private final NestCommand nestedCommand \u003d new NestCommand(\"test2\",\"test2 help\", new Command[]{command});","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"    void testCommand() {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", command.getName());","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"\\ttest : test help\", command.getHelpText());","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"        assertFalse(command.hasSubCommands());","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", command.execute(new Stateful(new LinkedList\u003c\u003e(), new State(false)),new LinkedList\u003c\u003e()).getOutputs().poll());","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"        assertFalse(command.execute(new Stateful(new LinkedList\u003c\u003e(), new State(false)),new LinkedList\u003c\u003e()).getState().isDoQuit());","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    void testNestCommand() {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test2\", nestedCommand.getName());","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"\\ttest2 : test2 help\", nestedCommand.getHelpText());","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"        assertTrue(nestedCommand.hasSubCommands());","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"        assertEquals(command, nestedCommand.getSubCommands().get(\"test\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Nafeij":34}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nafeij"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Nafeij"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Nafeij"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Nafeij"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Nafeij"},"content":"    private final Task toDo \u003d new ToDo(\"test\");","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Nafeij"},"content":"    private final Task deadline \u003d new Deadline(\"test\", \"2020-01-01\");","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Nafeij"},"content":"    private final Task event \u003d new Event(\"test\", \"2020-01-01\", \"2020-01-02\");","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Nafeij"},"content":"    void testToDo() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Nafeij"},"content":"        assertFalse(toDo.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", toDo.getDesc());","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[T][ ] test\", toDo.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Nafeij"},"content":"    void testToDoMark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Nafeij"},"content":"        toDo.mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Nafeij"},"content":"        assertTrue(toDo.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[T][X] test\", toDo.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Nafeij"},"content":"    void testDeadline() {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Nafeij"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", deadline.getDesc());","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[D][ ] test (by: Wed, 1 Jan 2020)\", deadline.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Nafeij"},"content":"    void testDeadlineMark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Nafeij"},"content":"        deadline.mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Nafeij"},"content":"        assertTrue(deadline.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[D][X] test (by: Wed, 1 Jan 2020)\", deadline.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Nafeij"},"content":"    void testEvent() {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Nafeij"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"test\", event.getDesc());","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[E][ ] test (from: Wed, 1 Jan 2020) (to: Thu, 2 Jan 2020)\", event.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Nafeij"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Nafeij"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Nafeij"},"content":"    void testEventMark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Nafeij"},"content":"        event.mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Nafeij"},"content":"        assertTrue(event.isDone());","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Nafeij"},"content":"        assertEquals(\"[E][X] test (from: Wed, 1 Jan 2020) (to: Thu, 2 Jan 2020)\", event.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"Nafeij"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Nafeij"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Nafeij":54}}]
