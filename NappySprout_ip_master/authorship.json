[{"path":"runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"NappySprout"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"NappySprout"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"NappySprout"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"NappySprout"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"NappySprout"},"content":"then","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"NappySprout"},"content":"    mkdir ../bin","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"NappySprout"},"content":"fi","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"NappySprout"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"NappySprout"},"content":"# delete output from previous run","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"NappySprout"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"NappySprout"},"content":"then","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"NappySprout"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"NappySprout"},"content":"fi","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"NappySprout"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"NappySprout"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"NappySprout"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"NappySprout"},"content":"then","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"NappySprout"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"NappySprout"},"content":"    exit 1","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"NappySprout"},"content":"fi","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"NappySprout"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"NappySprout"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"NappySprout"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"NappySprout"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"NappySprout"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"NappySprout"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"NappySprout"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"NappySprout"},"content":"then","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"NappySprout"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"NappySprout"},"content":"    exit 0","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"NappySprout"},"content":"else","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"NappySprout"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"NappySprout"},"content":"    exit 1","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"NappySprout"},"content":"fi","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"NappySprout":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NappySprout"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"NappySprout"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"NappySprout"},"content":"//if user put in wrong format for deadline events, error will occur","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"NappySprout"},"content":"//need to handle them using wrong array index exception","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"NappySprout"},"content":"enum Query { LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE }","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"Hello! I am your anime waifu!\"); ","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"What can I do for you my husbando?\");        ","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"NappySprout"},"content":"        ","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\" (*_*)\");        ","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"|(   )|\");        ","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"  |-|\");        ","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"NappySprout"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"NappySprout"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"NappySprout"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"NappySprout"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"NappySprout"},"content":"        String input \u003d scan.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"NappySprout"},"content":"        while(!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"NappySprout"},"content":"            String[] tokens \u003d input.split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"NappySprout"},"content":"            try {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"NappySprout"},"content":"                Query query \u003d Query.valueOf(tokens[0].toUpperCase());","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"NappySprout"},"content":"                switch (query) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"NappySprout"},"content":"                    case LIST: ","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"NappySprout"},"content":"                        list(tasks);","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"NappySprout"},"content":"                        break; ","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"NappySprout"},"content":"                    case MARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"NappySprout"},"content":"                        mark(true, tasks, tokens[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"NappySprout"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"NappySprout"},"content":"                    case UNMARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"NappySprout"},"content":"                        mark(false, tasks, tokens[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"NappySprout"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"NappySprout"},"content":"                    case TODO:","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"NappySprout"},"content":"                        todo(tasks, tokens[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"NappySprout"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"NappySprout"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"NappySprout"},"content":"                        deadline(tasks, tokens[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"NappySprout"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"NappySprout"},"content":"                    case EVENT:","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"NappySprout"},"content":"                        event(tasks, tokens[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"NappySprout"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"NappySprout"},"content":"                    case DELETE:","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"NappySprout"},"content":"                        delete(tasks, tokens[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"NappySprout"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"NappySprout"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"NappySprout"},"content":"            } catch(IllegalArgumentException e) {System.out.println(\"please make sure your command is valid!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"NappySprout"},"content":"            } catch(IndexOutOfBoundsException e) {System.out.println(\"please ensure there are arguments for particular commands!\");}","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"NappySprout"},"content":"            System.out.println(\"----------\");","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"NappySprout"},"content":"            input \u003d scan.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"NappySprout"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"Bye! Hope to see you again \u003c3!\");        ","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"NappySprout"},"content":"    private static void list(ArrayList\u003cTask\u003e a) {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"NappySprout"},"content":"        for (int i \u003d 0; i \u003c a.size(); i++) { System.out.format(\"%d.%s%n\",i+1,a.get(i));}","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"NappySprout"},"content":"    private static void mark(boolean mark ,ArrayList\u003cTask\u003e a, String s) {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"NappySprout"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"NappySprout"},"content":"            int num \u003d Integer.parseInt(s);","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"NappySprout"},"content":"            Task t \u003d a.get(num - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"NappySprout"},"content":"            if (mark) {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"NappySprout"},"content":"                t.mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"NappySprout"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"NappySprout"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"NappySprout"},"content":"            else {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"NappySprout"},"content":"                t.unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"NappySprout"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"NappySprout"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"NappySprout"},"content":"            System.out.println(t.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"NappySprout"},"content":"        } catch (NumberFormatException e) {System.out.println(\"please only input numbers\");","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"NappySprout"},"content":"        } catch (IndexOutOfBoundsException e) {System.out.println(\"make sure the number is in range\");}","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"NappySprout"},"content":"    private static void todo(ArrayList\u003cTask\u003e a, String s) {","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"NappySprout"},"content":"        Todo t \u003d new Todo(s);","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"NappySprout"},"content":"        a.add(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"Got it I\u0027ve added a todo!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"NappySprout"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"NappySprout"},"content":"    private static void deadline(ArrayList\u003cTask\u003e a, String s) {","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"NappySprout"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"NappySprout"},"content":"            String[] tokens \u003d s.split(\" /by \");","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"NappySprout"},"content":"            String name \u003d tokens[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"NappySprout"},"content":"            String by \u003d tokens[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"NappySprout"},"content":"            Deadline t \u003d new Deadline(name, by);            ","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"NappySprout"},"content":"            a.add(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"NappySprout"},"content":"            System.out.println(\"Got it I\u0027ve added a deadline\");","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"NappySprout"},"content":"            System.out.println(t.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"NappySprout"},"content":"        } catch (IndexOutOfBoundsException e) { System.out.println(\"please ensure u have a /by option and that /by option argument exist\");}","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"NappySprout"},"content":"    private static void event(ArrayList\u003cTask\u003e a, String s) {","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"NappySprout"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"NappySprout"},"content":"            String[] tokens \u003d s.split(\" /from \");","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"NappySprout"},"content":"            String name \u003d tokens[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"NappySprout"},"content":"            String tmptoken \u003d tokens[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"NappySprout"},"content":"            String[] options \u003d tmptoken.split(\" /to \");","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"NappySprout"},"content":"            String from \u003d options[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"NappySprout"},"content":"            String to \u003d options[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"NappySprout"},"content":"            Event t \u003d new Event(name, from, to);            ","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"NappySprout"},"content":"            a.add(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"NappySprout"},"content":"            System.out.println(\"Got it I\u0027ve added an event\");","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"NappySprout"},"content":"            System.out.println(t.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"NappySprout"},"content":"        } catch (IndexOutOfBoundsException e) { System.out.println(\"please ensure u have a /from /to (in that order!) option and that their arguments exist\");}","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"NappySprout"},"content":"    private static void delete(ArrayList\u003cTask\u003e a, String s) {","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"NappySprout"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"NappySprout"},"content":"            int num \u003d Integer.parseInt(s);","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"NappySprout"},"content":"            Task t \u003d a.remove(num - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"NappySprout"},"content":"            System.out.println(\"I have removed this task\");","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"NappySprout"},"content":"            System.out.println(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"NappySprout"},"content":"        } catch (NumberFormatException e) {System.out.println(\"please only input numbers\");","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"NappySprout"},"content":"        } catch (IndexOutOfBoundsException e) {System.out.println(\"make sure the number is in range\");}","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"NappySprout"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"NappySprout":110,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NappySprout"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"NappySprout"},"content":"class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"NappySprout"},"content":"    boolean done;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"NappySprout"},"content":"    String name;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"NappySprout"},"content":"    public Task(String n) {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"NappySprout"},"content":"        name \u003d n;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"NappySprout"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"NappySprout"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"NappySprout"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"NappySprout"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"NappySprout"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"NappySprout"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"NappySprout"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"NappySprout"},"content":"    public String toString(){","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"NappySprout"},"content":"        return String.format(\"[%s] %s\",this.done ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"NappySprout"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"NappySprout"},"content":"class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"NappySprout"},"content":"    public Todo(String n) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"NappySprout"},"content":"        super(n);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"NappySprout"},"content":"    public String toString(){","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"NappySprout"},"content":"        return String.format(\"[T][%s] %s\",this.done ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"NappySprout"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"NappySprout"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"NappySprout"},"content":"    String by;","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"NappySprout"},"content":"    public Deadline(String n, String b) {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"NappySprout"},"content":"        super(n);","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"NappySprout"},"content":"        by \u003d b;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"NappySprout"},"content":"    public String toString(){","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"NappySprout"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",this.done ? \"X\" : \" \", this.name, this.by);","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"NappySprout"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"NappySprout"},"content":"class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"NappySprout"},"content":"    String by;","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"NappySprout"},"content":"    String from;","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"NappySprout"},"content":"    String to;","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"NappySprout"},"content":"    public Event(String n, String f, String t) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"NappySprout"},"content":"        super(n);","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"NappySprout"},"content":"        from \u003d f;","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"NappySprout"},"content":"        to \u003d t;","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"NappySprout"},"content":"    public String toString(){","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"NappySprout"},"content":"        return String.format(\"[E][%s] %s (from: %s to %s)\",this.done ? \"X\" : \" \", this.name, this.from, this.to);","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"NappySprout"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"NappySprout"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"NappySprout":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NappySprout"},"content":"todo hi","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"NappySprout"},"content":"deadline weee /by 5pm","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"NappySprout"},"content":"event eevee /from Friday /to Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"NappySprout"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"NappySprout"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"NappySprout"},"content":"delete 1","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"NappySprout"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"NappySprout"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"NappySprout":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"NappySprout"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NappySprout":1,"-":37}}]
