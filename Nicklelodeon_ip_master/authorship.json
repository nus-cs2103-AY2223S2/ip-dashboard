[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"### Duke","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"**Duke frees your mind of having to remember things you need to do. It\u0027s,**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"- text-based","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"- easy to learn","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"- interactive","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"**All you need to do is,**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"1. download it from [here]([https://nus-cs2103-ay2223s2.github.io/website/schedule/week4/project.html](https://github.com/Nicklelodeon/ip)).","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"2. open the JAR file ","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"3. interact with Duke to add and manage tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"4. And it is FREE!","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"**Features:**","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"Things to take note of: ","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"- commands should only be in lower case","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"- words that are fully capitalised (e.g INDEX) refer to variable names","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"- all DATE variables must be formatted as yyyy-mm-dd","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"**List of Commands** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"1. **bye** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"Guides user on how to exit the chatbot","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"2. **list** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"Displays a list of current tasks stored in Duke","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"3. **mark INDEX** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"Sets the task at the specified INDEX as completed \u003cbr\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    - INDEX refers to the task number, must be a valid positive integer greater than 0 and less than size of current task list","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"4. **unmark INDEX** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"Sets the task at specified INDEX as uncompleted \u003cbr\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"    - INDEX refers to the task number, must be a valid positive integer greater than 0 and less than size of current task list","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"5. **todo DESCRIPTION** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"Creates a ToDo task with the specified DESCRIPTION","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"    - DESCRIPTION refers to the details of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"6. **deadline DESCRIPTION /by DATE** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"Creates a Deadline task with the specified DESCRIPTION and DEADLINE \u003cbr\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"    - DESCRIPTION refers to the details of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"    - DATE refers to the deadline when the task is due, must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"7. **event DESCRIPTION /from STARTDATE /to ENDDATE** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"Creates an Event task with the specified DESCRIPTION, STARTDATE and ENDDATE \u003cbr\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"    - DESCRIPTION refers to the details of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"    - STARTDATE refers to the starting date of the event, must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"    - ENDDATE refers to the ending date of the event, must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"    - STARTDATE cannot be later than ENDDATE","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"    ","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"8. **reschedule INDEX VARARGS** \u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"Reschedules a task to a later date. Task must be of type Deadline or Event \u003cbr\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"    - INDEX refers to the task number, must be a valid positive integer greater than 0 and less than size of current task list","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"    - VARARGS refer to variable arguments. ","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"    - For Deadline, VARARGS \u003d /by DATE (e.g Reschedule 2 /by 2022-01-01), DATE must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"    - For Event, VARARGS \u003d /from STARTDATE /to ENDDATE (e.g reschedule 3 /from 2022-01-01 /to 2023-02-02), STARTDATE and ENDDATE must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Nicklelodeon":61,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"    mainClassName \u003d \"duke.Main\"","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Nicklelodeon":22,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"T | 0 | run","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"E | 0 | return book | 2022-03-03 2024-03-04","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"D | 0 | eat | 2022-01-01","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"### Duke","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"**Duke frees your mind of having to remember things you need to do. It\u0027s,**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"- text-based","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"- easy to learn","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"- interactive","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"**All you need to do is,**","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"1. download it from [here]([https://nus-cs2103-ay2223s2.github.io/website/schedule/week4/project.html](https://github.com/Nicklelodeon/ip)).","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"2. open the JAR file ","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"3. interact with Duke to add and manage tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"4. And it is FREE!","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"**Features:**","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"Things to take note of: ","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"- commands should only be in lower case","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"- words that are fully capitalised (e.g INDEX) refer to variable names","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"- all DATE variables must be formatted as yyyy-mm-dd","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"**List of Commands** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"1. **bye** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"Guides user on how to exit the chatbot","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"2. **list** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"Displays a list of current tasks stored in Duke","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"3. **mark INDEX** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"Sets the task at the specified INDEX as completed \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    - INDEX refers to the task number, must be a valid positive integer greater than 0 and less than size of current task list","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"4. **unmark INDEX** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"Sets the task at specified INDEX as uncompleted \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"    - INDEX refers to the task number, must be a valid positive integer greater than 0 and less than size of current task list","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"5. **todo DESCRIPTION** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"Creates a ToDo task with the specified DESCRIPTION","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"    - DESCRIPTION refers to the details of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"6. **deadline DESCRIPTION /by DATE** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"Creates a Deadline task with the specified DESCRIPTION and DEADLINE \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"    - DESCRIPTION refers to the details of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"    - DATE refers to the deadline when the task is due, must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"7. **event DESCRIPTION /from STARTDATE /to ENDDATE** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"Creates an Event task with the specified DESCRIPTION, STARTDATE and ENDDATE \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"    - DESCRIPTION refers to the details of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"    - STARTDATE refers to the starting date of the event, must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"    - ENDDATE refers to the ending date of the event, must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"    - STARTDATE cannot be later than ENDDATE","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"    ","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"8. **reschedule INDEX VARARGS** \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"Reschedules a task to a later date. Task must be of type Deadline or Event \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"\u003cins\u003eFormat\u003c/ins\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"    - INDEX refers to the task number, must be a valid positive integer greater than 0 and less than size of current task list","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"    - VARARGS refer to variable arguments. ","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"    - For Deadline, VARARGS \u003d /by DATE (e.g Reschedule 2 /by 2022-01-01), DATE must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"    - For Event, VARARGS \u003d /from STARTDATE /to ENDDATE (e.g reschedule 3 /from 2022-01-01 /to 2023-02-02), STARTDATE and ENDDATE must be in yyyy-mm-dd format","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Nicklelodeon":52,"-":13}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Nicklelodeon":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" * Duke is the main class of this app and runs the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    public Duke() {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"        this.storage \u003d new Storage(FILE_PATH, DIRECTORY_PATH);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            this.taskList \u003d storage.readFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (NeroException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"     * Creates the response that Duke replies to the user","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"     * @param input commands given by the user","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Duke\u0027s response to the commands","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"            String toPrint \u003d parser.parseCommand(input, taskList, ui);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"            storage.saveFile(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"            return toPrint;","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printFileNotFound();","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (NeroException ne) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"            return ne.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Nicklelodeon":55}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Nicklelodeon":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Nicklelodeon":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    // userImage taken from \"https://www.pngfind.com/mpng/TihxTxw_asta-black-clover-black-clover-asta-png-transparent/\"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"    // dukeImage taken from \"https://blackcloverthots.tumblr.com/post/612892427599134720/marisashinx-nero-gets-what-nero-deserves\"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Asta.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/New.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"                DialogBox.getDukeDialog(ui.printGreetingMessage(), dukeImage));","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Nicklelodeon":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.commands.*;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" * Handles the reading and execution of inputs","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    enum Types { LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, BYE, FIND, RESCHEDULE }","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    Parser() { }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"     * Reads input from user and splits it into cases based on Types specified","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"     * in enum","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"     * @param inputString Input from user","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"     * @param taskList       List containing all current tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"     * @param ui             Ui that runs output","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String which contains duke\u0027s response to the commands","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException Throws an exception depending on the exception faced","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    String parseCommand(String inputString, TaskList taskList, Ui ui) throws NeroException {","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            String[] input \u003d inputString.split(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"            switch (Enum.valueOf(Types.class, input[0].toUpperCase())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            case BYE:","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"                Command newCommand \u003d new ByeCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"            case LIST:","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new ListCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"            case MARK:","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new MarkCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new UnmarkCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"            case TODO:","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new ToDoCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new DeadlineCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"            case EVENT:","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new EventCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"            case DELETE:","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new DeleteCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"            case FIND:","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new FindCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"            case RESCHEDULE:","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"                newCommand \u003d new RescheduleCommand(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"                return newCommand.executeCommand(inputString);","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"            default:","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"                return ui.printCommandNotDetected();","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectInputException();","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Nicklelodeon":66}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":" * Handles the reading, writing and saving of duke.txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    private String filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    private String directoryPath;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"     * Constructor for Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"     * @param filePath String containing file path where duke.txt is stored","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"     * @param directoryPath String containing directory path where duke.txt is stored","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    public Storage(String filePath, String directoryPath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"     * Reads the duke.txt file and saves the saved tasks into a task list","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Task list containing saved tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException Throws when file is not found","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    TaskList readFile() throws NeroException {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"        assert directory.exists();","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"                String[] cleanedInputs \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"                boolean isDone \u003d (cleanedInputs[1].equals(\"0\")) ? false : true;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"                if (cleanedInputs[0].equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"                    taskList.addTask(new ToDo(cleanedInputs[2], isDone));","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"                } else if (cleanedInputs[0].equals(\"D\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"                    String cleanedDuration \u003d cleanedInputs[3].replace(\"by:\", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"                    taskList.addTask(new Deadline(cleanedInputs[2], isDone, cleanedDuration));","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"                } else if (cleanedInputs[0].equals(\"E\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"                    String[] splitDates \u003d cleanedInputs[3].split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"                    String cleanedStartDate \u003d splitDates[0].replace(\"from: \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"                    String cleanedEndDate \u003d splitDates[1].replace(\"to: \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"                    taskList.addTask(new Event(cleanedInputs[2], isDone,","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"                            cleanedStartDate, cleanedEndDate));","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"            sc.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"            return taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"            throw new NeroException(\"File was not found!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Nicklelodeon"},"content":"     * Saves the current task list into duke.txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"     * @param taskList Task list containing all current tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws IOException Throws when file is not found","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"    void saveFile(TaskList taskList) throws IOException {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"                fw.write(taskList.get(i).toSave() + \"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Nicklelodeon"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Nicklelodeon"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Nicklelodeon"},"content":"            System.out.println(\"The file was not found!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Nicklelodeon":87}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" * Takes charge of the output and interactions with user","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":" *","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    public Ui() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    public String printGreetingMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Hi, I\u0027m Duke and I am an automated chat bot \\n \" +","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"                \"What would you like to do?\";","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    public String printTasksMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Here are all your tasks!\";","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"     * Standard Duke response when user enters \"MARK\" command","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"     * @param markedTask toString() of Task that was completed","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Message congratulating user for completing the task","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    public String printMarkedTaskMessage(String markedTask) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Good job on completing this task! \\n\" + markedTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"     * Standard Duke response when user enters \"UNMARK\" command","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"     * @param unmarkedTask toString() of Task that was remarked as uncompleted","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Message reminding user to complete the task","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"    public String printUnmarkedTaskMessage(String unmarkedTask) {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Remember to complete this task!! \\n\" + unmarkedTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"     * Standard Duke response when user enters \"ADD\" command","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"     * @param addedTask toString() of Task that was added","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"     * @param taskListSize size of current taskList after adding the task","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Message informing users on the task added and number of tasks in the list","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"    public String printAddedTasks(String addedTask, int taskListSize) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"        return String.format(\"Got it! I\u0027ve added this task to the list!\"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"                + \"\\n\" + \"%s\" + \"\\n\" + \"Now you have %d tasks in the list!\"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"                + \"\\n\", addedTask, taskListSize);","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"     * Standard Duke response when user enters \"DELETE\" command","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"     * @param deletedTask toString() of task that was deleted","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"     * @param taskListSize size of current taskList after deleting task","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Message informing users on the task deleted and number of tasks left in the list","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"    public String printDeletedTasks(String deletedTask, int taskListSize) {","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"        return String.format(\"Alright, let me remove this task...\"","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"                + \"\\n\" + \"%s\" + \"\\n\" + \"Now you have %d tasks in the list!\"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"                + \"\\n\", deletedTask, taskListSize);","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"    public String printFileNotFound() {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"        return \"File not found :(((\";","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"     * Standard Duke response when user enters \"FIND\" command and matching tasks are found","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Message telling users the tasks in list","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"    public String printMatchingTasks() {","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Here are the matching tasks in your list: \";","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"Nicklelodeon"},"content":"     * Standard Duke response when user enters \"FIND\" command and no matching tasks are found","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Message telling users there are no matching tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"Nicklelodeon"},"content":"    public String printNoMatchingTasks() {","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Unfortunately there are no matching tasks :((\";","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"Nicklelodeon"},"content":"     * Standard Duke response when user enters \"BYE\" command","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Goodbye message and exit instructions","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"Nicklelodeon"},"content":"    public String printExitInstructions() {","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Goodbye! Hope to see you again XOXO\\n Click on the box on the top left to exit!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"Nicklelodeon"},"content":"    public String printFailedReschedule() {","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Unable to reschedule ToDo as there is no deadline!!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"Nicklelodeon"},"content":"    public String printSuccessfulReschedule(String changedTask) {","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"Nicklelodeon"},"content":"        return String.format(\"I have successfully rescheduled this task \\n %s\", changedTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"Nicklelodeon"},"content":"    public String printCommandNotDetected() {","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"Nicklelodeon"},"content":"        return \"Command not detected! Please retry\";","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Nicklelodeon":108}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types bye as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    public ByeCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"        return ui.printExitInstructions();","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":24}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" * Command is the parent class of all other commands. It contains a ui and task list","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    protected Ui ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"     * Constructor for command","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"     * @param ui processes output to user based on input","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"     * @param taskList contains all present tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public Command(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"     * takes in user input and processes the input","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"     * @param userInput command given by user","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String containing dukes\u0027 response to the user based on input given","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException accounts for all possible exceptions that inherit from NeroException","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"     * and are thrown when processing inputs","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    public abstract String executeCommand(String userInput) throws NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":32}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectCapitalisationException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectDeadlineFormatException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types deadline as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    public DeadlineCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            //cleanedString contains [description, duration]","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            String[] cleanedString \u003d cleanDeadline(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"            Task newTask \u003d new Deadline(cleanedString[0], cleanedString[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printAddedTasks(newTask.toString(), taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectDeadlineFormatException();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"     * performs cleaning on deadline input","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"     * @param inputString input entered by user","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String array containing [description, deadline]","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException incorrect capitalisation exception and incorrect date format exception","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"    String[] cleanDeadline(String inputString) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"        String[] cleanedString \u003d new String[2];","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"        String[] splitString \u003d inputString.split(\"/\");","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"        if (splitString[0].indexOf(\"deadline\") \u003d\u003d -1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectCapitalisationException();","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"        String description \u003d splitString[0].replace(\"deadline\", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"        String deadline \u003d splitString[1].replace(\"by\", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"        cleanedString[0] \u003d description;","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"        cleanedString[1] \u003d deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"        return cleanedString;","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":54}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectIndexException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types delete as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    public DeleteCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"        String[] input \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"            int toDelete \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            Task removedTask \u003d taskList.get(toDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            taskList.removeTask(toDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printDeletedTasks(removedTask.toString(), taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectIndexException(taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":33}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectCapitalisationException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectEventFormatException;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types event as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    public EventCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            //cleanedString contains [description, startDate, endDate]","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"            String[] cleanedString \u003d cleanEvent(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            Task newTask \u003d new Event(cleanedString[0], cleanedString[1], cleanedString[2]);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printAddedTasks(newTask.toString(), taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectEventFormatException();","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"     * performs string cleaning on event input","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"     * @param inputString input entered by user","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String array containing [description, start date, end date]","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException incorrect capitalisation exception and incorrect date exception","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"    String[] cleanEvent(String inputString) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"        String[] cleanedString \u003d new String[3];","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"        String[] splitString \u003d inputString.split(\"/\");","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"        if (splitString[0].indexOf(\"event\") \u003d\u003d -1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectCapitalisationException();","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"        String description \u003d splitString[0].replace(\"event\", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"        String startDate \u003d splitString[1].replace(\"from\", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"        String endDate \u003d splitString[2].replace(\"to\", \"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"        cleanedString[0] \u003d description;","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"        cleanedString[1] \u003d startDate;","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"        cleanedString[2] \u003d endDate;","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"        return cleanedString;","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":60}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types find as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    public FindCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"        String[] input \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"        TaskList newTaskList \u003d taskList.findMatchingTasks(input[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"        if (newTaskList.getSize() \u003e 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printMatchingTasks() + \"\\n\" + newTaskList.printTasks();","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printNoMatchingTasks();","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":28}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types list as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    public ListCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"        return ui.printTasksMessage() + \"\\n\" + taskList.printTasks();","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":23}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectIndexException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types mark as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    public MarkCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) throws IncorrectIndexException {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"        String[] input \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"            int taskToMark \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"            Task currTask \u003d taskList.get(taskToMark);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            currTask.setAsDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printMarkedTaskMessage(currTask.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectIndexException(taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":32}},{"path":"src/main/java/duke/commands/RescheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectIndexException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.RescheduleException;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types reschedule as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"public class RescheduleCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    public RescheduleCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"        String[] input \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            int taskIndex \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            if (taskIndex \u003e\u003d taskList.getSize() || taskIndex \u003c 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"                throw new IncorrectIndexException(taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"            if (currTask instanceof ToDo) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"                return ui.printFailedReschedule();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"            } else if (currTask instanceof Deadline) {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"                String newDeadline \u003d input[3];","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"                Task newTask \u003d new Deadline(currTask.getDescription(), newDeadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"                taskList.set(taskIndex, newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"                return ui.printSuccessfulReschedule(newDeadline.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"            } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"                String startDate \u003d input[3];","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"                String endDate \u003d input[5];","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"                Task newTask \u003d new Event(currTask.getDescription(), startDate, endDate);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"                taskList.set(taskIndex, newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"                return ui.printSuccessfulReschedule(newTask.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"            throw new RescheduleException();","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"            throw new RescheduleException();","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":51}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectCapitalisationException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types todo as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    public ToDoCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"        int index \u003d userInput.indexOf(\"todo\");","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectCapitalisationException();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"            String description \u003d userInput.substring(index + 5);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"            Task newTask \u003d new ToDo(description);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printAddedTasks(newTask.toString(), taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":38}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectIndexException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":" * Command created when user types unmark as first word in input","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    public UnmarkCommand(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"        super(ui, taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    public String executeCommand(String userInput) throws IncorrectIndexException {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"        String[] input \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"            int taskToUnmark \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"            Task currTask \u003d taskList.get(taskToUnmark);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            currTask.setAsUndone();","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            return ui.printUnmarkedTaskMessage(currTask.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectIndexException(taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":32}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"public class EmptyDescriptionException extends NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"        super(\"Description of a task cannot be empty!!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":7}},{"path":"src/main/java/duke/exceptions/IncorrectCapitalisationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"public class IncorrectCapitalisationException extends NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"    public IncorrectCapitalisationException() {","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"        super(\"Do not capitalise commands!!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Nicklelodeon":7}},{"path":"src/main/java/duke/exceptions/IncorrectDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":" * Exception is thrown when dates are in wrong format (not yyyy-mm-dd)","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"public class IncorrectDateFormatException extends NeroException {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"    public IncorrectDateFormatException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"        super(\"Dates should be in yyyy-mm-dd format!!!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Nicklelodeon":12}},{"path":"src/main/java/duke/exceptions/IncorrectDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":" * Exception is thrown when Deadline is created in wrong format (not {description} /by {date})","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"public class IncorrectDeadlineFormatException extends NeroException {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"    public IncorrectDeadlineFormatException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"        super(\"Format of a Deadline should be : {description} /by {date} \");","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Nicklelodeon":13}},{"path":"src/main/java/duke/exceptions/IncorrectEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":" * Exception is thrown when Event is created in","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" * wrong format (not {description} /from {start date} /to {end date})","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"public class IncorrectEventFormatException extends NeroException {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"    public IncorrectEventFormatException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"        super(\"Format of an event should be: {description} /from {start date} /to {end date}\");","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Nicklelodeon":13}},{"path":"src/main/java/duke/exceptions/IncorrectIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":" * Exception is thrown when index is \u003c0 or more than size of task list","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"public class IncorrectIndexException extends NeroException {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"    public IncorrectIndexException(int taskListSize) {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"        super(String.format(\"Please add the correct index from 1 to %d\", taskListSize));","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Nicklelodeon":11}},{"path":"src/main/java/duke/exceptions/IncorrectInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":" * Exception is thrown when user keys in an unknown command","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"public class IncorrectInputException extends NeroException {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"    public IncorrectInputException() {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"        super(\"Wrong input!! Command not found!!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Nicklelodeon":11}},{"path":"src/main/java/duke/exceptions/IncorrectToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":" * Exception is thrown when user enters an empty description for todo","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"public class IncorrectToDoException extends NeroException {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"    public IncorrectToDoException() {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"        super(\"Description cannot be empty!!!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Nicklelodeon":11}},{"path":"src/main/java/duke/exceptions/NeroException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":" * Parent of all other exceptions, thrown in general cases","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"public class NeroException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"    public NeroException(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Nicklelodeon":11}},{"path":"src/main/java/duke/exceptions/RescheduleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":" * Exception is thrown when format for rescheduling is incorrect","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"public class RescheduleException extends NeroException{","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"    public RescheduleException() {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"        super(\"For Deadline: reschedule taskNum by yyyy-mm-dd \\n \" +","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"                \"For Event: reschedule taskNum from yyyy-mm-dd to yyyy-mm-dd\");","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Nicklelodeon":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectDateFormatException;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" * Deadline is a subclass of Task. It contains a specified deadline for a task.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    private LocalDate date;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"     * @param description Details of the Deadline task","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"     * @param isDone Keeps track of whether the Deadline task is completed","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"     * @param deadline Due date of the Deadline task, formatted as yyyy-mm-dd","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException When the date is entered in the incorrect format (not yyyy-mm-dd)","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    public Deadline(String description, boolean isDone,","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"            String deadline) throws NeroException {","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            this.date \u003d LocalDate.parse(deadline.trim());","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectDateFormatException();","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"     * Similar as above constructor, except it initialises isDone to False by default","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"    public Deadline(String description, String deadline) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"        this(description, false, deadline);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String of task icon","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"        return \"D\";","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String formatted as d MMM yyyy (e.g 1 Jan 2020)","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"    String dateFormatter() {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"        return \"by: \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String with task formatted to be saved into duke.txt","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"    public String toSave() {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"        return this.getTaskIcon() + SEPARATOR + convertBoolean()","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"                + SEPARATOR + this.getDescription()","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"                + SEPARATOR + this.date;","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"        return String.format(\"[%s]%s %s %s\",","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"                this.getTaskIcon(), this.getStatusIcon(),","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"                this.getDescription(), this.dateFormatter());","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Nicklelodeon":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.IncorrectDateFormatException;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":" * Event is a subclass of Task. It specifies the start date and","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":" * end date of a task.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"     * Constructor for Event","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     * @param description Contains details on the Event","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"     * @param isDone Keeps track of whether the Event is completed","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"     * @param startDate Date where the Event starts","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"     * @param endDate Date where the Event ends","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException Thrown when date is formatted incorrectly (not in yyyy-mm-dd)","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"    public Event(String description, boolean isDone,","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"                 String startDate, String endDate) throws NeroException {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"            this.startDate \u003d LocalDate.parse(startDate.trim());","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"            this.endDate \u003d LocalDate.parse(endDate.trim());","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"            assert this.endDate.isAfter(this.startDate);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"            throw new IncorrectDateFormatException();","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"            throw new NeroException(\"End date must be after start date!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"     * Same as above constructor, except isDone is initialised to False","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"     * @param description","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"     * @param startDate","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"     * @param endDate","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"    public Event(String description, String startDate,","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"            String endDate) throws NeroException {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"        this(description, false, startDate, endDate);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String formatted as d MMM yyyy","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"    public String dateFormatter() {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"        return \"from: \" + startDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" to: \"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"                + endDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"        return \"E\";","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String with task formatted to be saved into duke.txt","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"    public String toSave() {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Nicklelodeon"},"content":"        return this.getTaskIcon() + SEPARATOR + convertBoolean()","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"                + SEPARATOR + this.getDescription()","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Nicklelodeon"},"content":"                + SEPARATOR + this.startDate + \" \" + this.endDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"        return String.format(\"[%s]%s %s %s\", this.getTaskIcon(),","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"                this.getStatusIcon(), this.getDescription(),","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"                this.dateFormatter());","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Nicklelodeon":83}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" * Task is the parent class of ToDo, Event and Deadline. It contains description","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":" * of task and its completion status.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    private String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    protected Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"     * Constructor for Task","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"     * @param description Details of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     * @param isDone Keeps track of whether task is completed","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    public Task(String description, boolean isDone) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"        description \u003d description.trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"     * Same as above constructor, except isDone is initalised to false","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"    public Task(String description) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"        this(description, false);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"        return this.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"     * Converts true to 1 and false to 0 when saving in duke.txt","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"     * @return 1 if true else 0","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"    public String convertBoolean() {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"        return (this.isDone) ? \"1\" : \"0\";","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"     * Sets task as completed","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"    public void setAsDone() {","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"     * Sets task as uncompleted","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"    public void setAsUndone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Nicklelodeon"},"content":"     * Finds tasks that contain word in their description","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"     * @param word String containing common prefix","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Nicklelodeon"},"content":"     * @return true if the description of the task contains word else false","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"    boolean containsWord(String word) {","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        return (description.indexOf(word) \u003d\u003d -1) ? false : true;","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"    public abstract String toSave();","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Nicklelodeon":83}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":" * TaskList stores all current tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"public class TaskList {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"     * Constructor for TaskList, uses an ArrayList containing tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"     * @param index location of the task in the TaskList","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"     * @return Task at the index of the TaskList","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"     * Removes task from taskList","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"     * @param index location of the task to be removed","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws NeroException Throws when index does not exist","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    public void removeTask(int index) throws NeroException {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"            taskList.remove(index);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"            throw new NeroException(\"Please enter a valid index from 0 to \"","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"                    + (taskList.size() - 1));","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"    public void set(int index, Task newTask) throws NeroException {","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"            taskList.set(index, newTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"            throw new NeroException(\"Please enter a valid index from 0 to \"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"                    + (taskList.size() - 1));","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"    public TaskList findMatchingTasks(String word) {","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"            if (taskList.get(i).containsWord(word)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"                newTaskList.addTask(taskList.get(i));","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"        return newTaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"     * Prints the toString of all tasks in the taskList","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"    public String printTasks() {","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"        String toPrintTasks \u003d \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"Nicklelodeon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"            toPrintTasks +\u003d String.format(\"%d. %s\", (i + 1), taskList.get(i).toString()) + \"\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"        return toPrintTasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Nicklelodeon":79}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":" * ToDo is a subclass of Task. It is the most general as it only","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":" * contains the description of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"     * Constructor for ToDo","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"     * @param description Details of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"     * @param isDone Keeps track of whether the task is completed","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    public ToDo(String description, boolean isDone) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"     * Same as above constructor, but with isDone initialised as false","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    public ToDo(String description) throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"        this(description, false);","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        return \"T\";","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"     * @return String with task formatted to be saved into duke.txt","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"    public String toSave() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"        return this.getTaskIcon() + SEPARATOR + convertBoolean()","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"                + SEPARATOR + this.getDescription();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"        return String.format(\"[%s]%s %s\", this.getTaskIcon(), this.getStatusIcon(),","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"                this.getDescription());","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Nicklelodeon":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Nicklelodeon":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Nicklelodeon":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    public void testGetTaskIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"            assertEquals(\"D\", new Deadline(\"run around\", \"2019-01-01\").getTaskIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (NeroException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"            assertEquals(\"[D][ ] eat food by: 1 Jan 2019\",","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"                    new Deadline(\"eat food\", \"2019-01-01\").toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (NeroException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Nicklelodeon":31}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    public void testGetTaskIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"            assertEquals(\"E\", new Event(\"run around\",","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"                    \"2019-01-01\", \"2020-02-02\").getTaskIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (NeroException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"            assertEquals(\"[E][ ] eat food from: 1 Jan 2019 to: 2 Jan 2019\",","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"                    new Event(\"eat food\", \"2019-01-01\", \"2019-01-02\").toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (NeroException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Nicklelodeon":30}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import duke.exceptions.NeroException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"    public void testGetTaskIcon() throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(\"T\", new ToDo(\"run around\").getTaskIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    public void testToString() throws NeroException {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(\"[T][ ] eat food\", new ToDo(\"eat food\").toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Nicklelodeon":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"todo return book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"deadline return book ","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"delete 5","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Nicklelodeon":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nicklelodeon":1,"-":20}}]
