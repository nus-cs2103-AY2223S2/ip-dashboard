[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"# duke.duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Oliverloo0909":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"plugins {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"    id \"com.github.johnrengelman.shadow\" version \"5.1.0\"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"    id \u0027org.javamodularity.moduleplugin\u0027 version \u00271.8.12\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"    id \u0027org.beryx.jlink\u0027 version \u00272.25.0\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"group \u0027com.example\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"repositories {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"ext {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"    junitVersion \u003d \u00275.9.1\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"application {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"sourceCompatibility \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"targetCompatibility \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"javafx {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"dependencies {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"    testImplementation(\"org.junit.jupiter:junit-jupiter-api:${junitVersion}\")","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:${junitVersion}\")","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"test {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"jlink {","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"    imageZip \u003d project.file(\"${buildDir}/distributions/app-${javafx.platform.classifier}.zip\")","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"    options \u003d [\u0027--strip-debug\u0027, \u0027--compress\u0027, \u00272\u0027, \u0027--no-header-files\u0027, \u0027--no-man-pages\u0027]","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"    launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"        name \u003d \u0027app\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"jlinkZip {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"    group \u003d \u0027distribution\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Oliverloo0909":73}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"rootProject.name \u003d \u0027duke-gradle-project\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Oliverloo0909":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Locale;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"// class Deadline - Type of task with description and a date to finish it by","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"        super(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"dd-MM-yyyy\")","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        this.by \u003d LocalDate.parse(by, df);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        return \"D | \" + super.toSavedString() + \" | \" + this.by.format(df);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(df) + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":35}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    private Label text;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Oliverloo0909":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"public class Duke extends Application{","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        storage \u003d new Storage(System.getProperty(\"user.dir\") +\"/data/duke.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"        stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"                DialogBox.getDukeDialog(new Label(ui.showWelcome()), new ImageView(duke))","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"        });","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"        });","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"Oliverloo0909"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"Oliverloo0909"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"Oliverloo0909"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"Oliverloo0909"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"Oliverloo0909"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"Oliverloo0909"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"Oliverloo0909"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"Oliverloo0909"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"Oliverloo0909"},"content":"        String response \u003d Ui.handleCommand(input, tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"Oliverloo0909"},"content":"        Label userText \u003d new Label(input + \"  \");","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"Oliverloo0909"},"content":"        Label dukeText \u003d new Label(response);","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"Oliverloo0909"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"Oliverloo0909"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"Oliverloo0909"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"Oliverloo0909"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"Oliverloo0909"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"Oliverloo0909"},"content":"        if (input.contains(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"Oliverloo0909"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"Oliverloo0909"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"Oliverloo0909"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"Oliverloo0909"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"Oliverloo0909"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"Oliverloo0909"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Oliverloo0909":141}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" * Exceptions specific to the duke package","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" * @author oliverloo","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":" * @version 1.0","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"     * DukeException constructor method","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"     * @param msg","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Locale;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"// class Event - Type of task with description, a start date + time and an end time","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    protected LocalTime to;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"        super(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"dd-MM-yyyy HH:mm\")","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df2 \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"HH:mm\")","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"        this.from \u003d LocalDateTime.parse(from, df);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        this.to \u003d LocalTime.parse(to, df2);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df2 \u003d DateTimeFormatter.ofPattern(\"HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        return \"E | \" + super.toSavedString() + \" | \" + this.from.format(df) + \" | \" + this.to.format(df2);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        DateTimeFormatter df2 \u003d DateTimeFormatter.ofPattern(\"HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(df) + \" to: \" + to.format(df2) + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":39}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Oliverloo0909":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" * Handles the processing of inputs in the terminal through string processing","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" * @author oliverloo","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":" * @version 1.0","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    /* Takes in an input,","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    1. looks at first word and checks if it is a task","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    2. if it is, splits words future","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"     * Given an event task string, parses and returns an Event object","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"     * @return event object, formatted with description and time period","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    public static Event parseEvent(String input) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        String event \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        String[] event_Arr \u003d event.split(\" /from\", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"        if (event_Arr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"            String content \u003d event_Arr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"            String[] period_Arr \u003d event_Arr[1].split(\" /to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"            if (period_Arr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"                String from \u003d period_Arr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"                String to \u003d period_Arr[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"                return new Event(content, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"                throw new DukeException(\"Invalid Input! You need to specify a /from and /to or content is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"            throw new DukeException(\"Invalid Input! You need to specify a /from and /to or content is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"     * Given a delete/marked/unmarked command returns the index of that command","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"     * @return returns the index of that command as an int type","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    public static int getIndex(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        String int_Str \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        int index \u003d Integer.parseInt(int_Str);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        return index;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"     * Given a deadline task , parses and returns an Deadline object","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"     * @return deadline object, formatted with description and time period","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"    public static Deadline parseDeadline(String input) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        String deadline \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"        String[] deadline_Arr \u003d deadline.split(\" /by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        if (deadline_Arr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"            String content \u003d deadline_Arr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"            String date \u003d deadline_Arr[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"            return new Deadline(content, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"            throw new DukeException(\"Duke.Deadline Input Error! You need to specify date or content is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"     * Takes a line input extracts the todo task description","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"     * @return description of the todo task","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"    public static String getTodo(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"        String todo \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        return todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is todo task command","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is todo task , else false","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_toDo(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is event command","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is event task, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Event(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is deadline command","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is deadline, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Deadline(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is mark command","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is mark, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Mark(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Find(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"Oliverloo0909"},"content":"    public static String get_Findable(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"Oliverloo0909"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Unmark(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is list command","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is list, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_List(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"Oliverloo0909"},"content":"        return input.equalsIgnoreCase(\"list\");","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is bye command","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is bye, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Bye(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"Oliverloo0909"},"content":"        return input.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is delete command","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is delete, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Delete(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is clear command","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is clear, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Clear(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":202,"author":{"gitId":"Oliverloo0909"},"content":"        return input.equalsIgnoreCase(\"clear\");","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":204}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.File;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"// class Storage - handles the loading of data when duke is run and","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"// saving of data when duke is closed","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"class Storage {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"    private String filePath;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"    public Storage(String s) {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        this.filePath \u003d s;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"        System.out.println(\"    . . . Loading . . . \");","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        File dir \u003d new File(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            dir.mkdir();","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"            Scanner saveFile \u003d new Scanner(file);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"            System.out.println(\"    Saved data found, welcome back!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"            while (saveFile.hasNextLine()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"                loadSaved(saveFile.nextLine(), tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"            System.out.println(\"    No saved data not found, new file will be created\");","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        return tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"    public static void loadSaved(String s, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"        if (s.substring(0, 1).equals(\"T\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"            Todo newTodo \u003d new Todo(s.substring(8));","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"            if (s.substring(4, 5).equals(\"1\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"                newTodo.toggleMarked();","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        } else if (s.substring(0, 1).equals(\"D\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"            String marked \u003d s.substring(4, 5);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"            String task \u003d s.substring(8);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"            Deadline newDeadline \u003d new Deadline(task.substring(0, task.indexOf(\"|\") - 1),","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"                    task.substring(task.indexOf(\"|\") + 2));","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"            if (marked.equals(\"1\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"                newDeadline.toggleMarked();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"            String marked \u003d s.substring(4, 5);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"            String task \u003d s.substring(8);","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"            String desc \u003d task.substring(0, task.indexOf(\"|\") - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"            task \u003d task.substring(task.indexOf(\"|\") + 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"            Event newEvent \u003d new Event(desc, task.substring(0, task.indexOf(\"|\") - 1),","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"                    task.substring(task.indexOf(\"|\") + 2));","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"    public void saveData(TaskList t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"            FileWriter fWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"                fWriter.write(task.toSavedString());","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"                    fWriter.write(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"            fWriter.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Oliverloo0909":96}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"// custom duke.Task class to store individual tasks that the user enters","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"public class Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"    protected String description;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"    public void toggleMarked() {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"        return description;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        return this.isDone ? \"1 | \" + this.description : \"0 | \" + this.description;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Oliverloo0909":35}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"// class TaskList - handles lists of Task objects using an ArrayList","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"public class TaskList {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"    public TaskList(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    public String displayTasks() {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"            s +\u003d \"    No tasks\";","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"                s +\u003d \"    \" + (i + 1) + \". \" + task;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"                s +\u003d i !\u003d tasks.size() ? \"\\n\" : \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"        return s;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Oliverloo0909":34}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"// class To do - Type of task with just a description","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"        super(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"        return \"T | \" + super.toSavedString();","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Oliverloo0909":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"// class Ui - handles all the lines to be printed and all the user inputs (commands)","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"    public Ui() {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    // prints out welcome greeting to user when Duke is run","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"        return \"    Hi! I\u0027m Duke\\n    How can I help?\";","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"/*    public void takeCommands(TaskList t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"        String s \u003d sc.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        int taskCounter \u003d tasks.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"        while (!s.equals(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"                // method handleCommand handles current command, returns updated taskCounter variable","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"                taskCounter \u003d handleCommand(s, tasks, taskCounter);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            // take in next command","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"            s \u003d sc.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"        System.out.println(\"    Bye. Hope to see you soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"    }*/","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    public static String handleCommand(String s, TaskList t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"        // user enters list command","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"        if (s.contains(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"            TaskList taskListing \u003d new TaskList(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"            return taskListing.displayTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"            // return string of tasks -\u003e make displayTasks() return string first","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"            // user enters mark or unmark command","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        } else if (s.contains(\"mark\") || s.contains(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"            int taskNumber \u003d Integer.parseInt(s.substring(s.length() - 1)) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"            tasks.get(taskNumber).toggleMarked();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"            String output \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"            if (s.contains(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"                output +\u003d \"    OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"                output +\u003d \"    Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"            return output + \"  \" + tasks.get(taskNumber).toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"            // user enters a new task","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"        } else if (s.contains(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"            if (s.substring(4).isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"                return \"    OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"                Task newTask \u003d new Todo(s.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"                return \"    added: \" + newTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"        } else if (s.contains(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"            if (s.substring(8).isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"                return \"    OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"                String by \u003d s.substring(s.indexOf(\"/\") + 4);","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"                Task newTask \u003d new Deadline(s.substring(9, s.indexOf(\"/\") - 1), by);","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"                return \"    added: \" + newTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"        } else if (s.contains(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"            if (s.substring(5).isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"                return \"    OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"                String from \u003d s.substring(s.indexOf(\"/\") + 6, s.lastIndexOf(\"/\") - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"                String to \u003d s.substring(s.lastIndexOf(\"/\") + 4);","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"                Task newTask \u003d new Event(s.substring(6, s.indexOf(\"/\") - 1), from, to);","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"                return \"    added: \" + newTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":"        } else if (s.contains(\"delete\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"            if (s.substring(6).isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"                return \"    OOPS!!! You have not entered anything to delete.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"                int taskNumber \u003d Integer.parseInt(s.substring(s.length() - 1)) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"                Task deletedTask \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"                tasks.remove(taskNumber);","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"                return \"    Noted. I\u0027ve removed this task:\\n      \" + deletedTask +","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"                        \"\\n    Now you have \" + tasks.size()+ \" tasks in the list\";","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"        } else if (s.contains(\"find\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"            String findString \u003d s.substring(5);","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"Oliverloo0909"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"Oliverloo0909"},"content":"                if (task.toString().contains(findString)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"Oliverloo0909"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"Oliverloo0909"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"            TaskList searchResults \u003d new TaskList(foundTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"            return \"Here are the tasks I found!\\n\" + searchResults.displayTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"Oliverloo0909"},"content":"            // make displayTasks return a String","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"Oliverloo0909"},"content":"        } else if (s.contains(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"Oliverloo0909"},"content":"            return \"    Bye. Hope to see you soon!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"Oliverloo0909"},"content":"            //throw new duke.DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"Oliverloo0909"},"content":"            return \"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Oliverloo0909":119}},{"path":"src/main/java/duke/command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" * Enums to support all possible commands in duke package","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" * @author oliverloo","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":" * @version 1.0","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"public enum command {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"        TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, LIST, BYE","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":11}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import duke.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    private void print(String output) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"        System.out.println(output);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"    public void isDeleteTest1(){","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(true, duke.Parser.is_Delete(\"delete 1\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    public void isDeleteTest2(){","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(false, duke.Parser.is_Delete(\"delete\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    public void strToBoolTest1(){","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(true, duke.Storage.strToBool(\"1\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    public void strToBoolTest2(){","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(false, duke.Storage.strToBool(\"0\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    void givenSystemOutRedirection_whenInvokePrintln_thenOutputCaptorSuccess() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        print(\"Hello Readers!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(\"Hello Readers!\", outputStreamCaptor.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"                .trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"    String line \u003d \"      _____________________________________________________________________\";","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"    void displayClearTest1() {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"        Ui.displayClear();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(\"Got it. I have cleared the task-list.\\n\" + line, outputStreamCaptor.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"                .trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Oliverloo0909":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"todo eat lunch","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"deadline do HW /by 2023-10-10 14:00","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"event play tennis /from 2023-10-10 14:00 /to 2023-10-10 15:00","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"clear","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Oliverloo0909":1,"-":20}}]
