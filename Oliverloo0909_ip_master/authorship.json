[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"# duke.duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Oliverloo0909":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"plugins {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \"com.github.johnrengelman.shadow\" version \"5.1.0\"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027org.javamodularity.moduleplugin\u0027 version \u00271.8.12\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027org.beryx.jlink\u0027 version \u00272.25.0\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"group \u0027com.example\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"repositories {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ext {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    junitVersion \u003d \u00275.9.1\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"targetCompatibility \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"javafx {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    testImplementation(\"org.junit.jupiter:junit-jupiter-api:${junitVersion}\")","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:${junitVersion}\")","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"test {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"jlink {","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    imageZip \u003d project.file(\"${buildDir}/distributions/app-${javafx.platform.classifier}.zip\")","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    options \u003d [\u0027--strip-debug\u0027, \u0027--compress\u0027, \u00272\u0027, \u0027--no-header-files\u0027, \u0027--no-man-pages\u0027]","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d \u0027app\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"jlinkZip {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    group \u003d \u0027distribution\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Oliverloo0909":16,"-":57}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"@rem","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"@rem","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"@rem","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"@rem","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"@rem","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"@rem","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"@rem","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@rem This is normally unused","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"@rem Find java.exe","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"echo.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"echo.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"goto fail","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"echo.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"echo.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"goto fail","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":":execute","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"@rem Setup the command line","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":":end","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":":fail","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":":mainEnd","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":":omega","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Oliverloo0909":85,"-":7}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"rootProject.name \u003d \u0027duke-gradle-project\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Oliverloo0909":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Locale;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"// class Deadline - Type of task with description and a date to finish it by","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        DateTimeFormatter df \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"dd-MM-yyyy\")","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.by \u003d LocalDate.parse(by, df);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return \"D | \" + super.toSavedString() + \" | \" + this.by.format(df);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(df) + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":18,"-":17}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" * Exceptions specific to the duke package","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" * @author oliverloo","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":" * @version 1.0","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"     * DukeException constructor method","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"     * @param msg","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Locale;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// class Event - Type of task with description, a start date + time and an end time","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalTime to;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        DateTimeFormatter df \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"dd-MM-yyyy HH:mm\")","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        DateTimeFormatter df2 \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"HH:mm\")","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.from \u003d LocalDateTime.parse(from, df);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.to \u003d LocalTime.parse(to, df2);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        DateTimeFormatter df2 \u003d DateTimeFormatter.ofPattern(\"HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return \"E | \" + super.toSavedString() + \" | \" + this.from.format(df) + \" | \" + this.to.format(df2);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        DateTimeFormatter df2 \u003d DateTimeFormatter.ofPattern(\"HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(df) + \" to: \" + to.format(df2) + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":15,"-":24}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" * Handles the processing of inputs in the terminal through string processing","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" * @author oliverloo","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":" * @version 1.0","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    /* Takes in an input,","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"    1. looks at first word and checks if it is a task","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    2. if it is, splits words future","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"     * Given an event task string, parses and returns an Event object","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"     * @return event object, formatted with description and time period","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    public static Event parseEvent(String input) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"        String event \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"        String[] event_Arr \u003d event.split(\" /from\", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"        if (event_Arr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"            String content \u003d event_Arr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"            String[] period_Arr \u003d event_Arr[1].split(\" /to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"            if (period_Arr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"                String from \u003d period_Arr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"                String to \u003d period_Arr[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"                return new Event(content, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"                throw new DukeException(\"Invalid Input! You need to specify a /from and /to or content is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"            throw new DukeException(\"Invalid Input! You need to specify a /from and /to or content is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"     * Given a delete/marked/unmarked command returns the index of that command","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"     * @return returns the index of that command as an int type","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"    public static int getIndex(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"        String int_Str \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        int index \u003d Integer.parseInt(int_Str);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"        return index;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"     * Given a deadline task , parses and returns an Deadline object","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"     * @return deadline object, formatted with description and time period","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"    public static Deadline parseDeadline(String input) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        String deadline \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"        String[] deadline_Arr \u003d deadline.split(\" /by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"        if (deadline_Arr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"            String content \u003d deadline_Arr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"            String date \u003d deadline_Arr[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Oliverloo0909"},"content":"            return new Deadline(content, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Oliverloo0909"},"content":"            throw new DukeException(\"Duke.Deadline Input Error! You need to specify date or content is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Oliverloo0909"},"content":"     * Takes a line input extracts the todo task description","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Oliverloo0909"},"content":"     * @return description of the todo task","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Oliverloo0909"},"content":"    public static String getTodo(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Oliverloo0909"},"content":"        String todo \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Oliverloo0909"},"content":"        return todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is todo task command","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is todo task , else false","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_toDo(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is event command","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is event task, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Event(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is deadline command","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is deadline, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Deadline(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is mark command","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is mark, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Mark(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Find(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"Oliverloo0909"},"content":"    public static String get_Findable(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"Oliverloo0909"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Unmark(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is list command","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is list, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_List(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"Oliverloo0909"},"content":"        return input.equalsIgnoreCase(\"list\");","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is bye command","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is bye, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Bye(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"Oliverloo0909"},"content":"        return input.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is delete command","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is delete, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Delete(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"Oliverloo0909"},"content":"        String[] firstword_Arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"Oliverloo0909"},"content":"        if (firstword_Arr.length \u003d\u003d 2 ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"Oliverloo0909"},"content":"            if (firstword_Arr[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"Oliverloo0909"},"content":"                return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"Oliverloo0909"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"Oliverloo0909"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"Oliverloo0909"},"content":"     * Checks if input is clear command","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"Oliverloo0909"},"content":"     * @param input","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"Oliverloo0909"},"content":"     * @return true if input is clear, else false","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"Oliverloo0909"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"Oliverloo0909"},"content":"    public static boolean is_Clear(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":202,"author":{"gitId":"Oliverloo0909"},"content":"        return input.equalsIgnoreCase(\"clear\");","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":204}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// class Storage - handles the loading of data when duke is run and","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// saving of data when duke is closed","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Storage {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private String filePath;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Storage(String s) {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.filePath \u003d s;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        System.out.println(\"    . . . Loading . . . \");","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        File dir \u003d new File(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"            dir.mkdir();","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            Scanner saveFile \u003d new Scanner(file);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            System.out.println(\"    Saved data found, welcome back!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            while (saveFile.hasNextLine()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                loadSaved(saveFile.nextLine(), tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            System.out.println(\"    No saved data not found, new file will be created\");","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static void loadSaved(String s, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (s.substring(0, 1).equals(\"T\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Todo newTodo \u003d new Todo(s.substring(8));","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            if (s.substring(4, 5).equals(\"1\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                newTodo.toggleMarked();","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } else if (s.substring(0, 1).equals(\"D\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            String marked \u003d s.substring(4, 5);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            String task \u003d s.substring(8);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Deadline newDeadline \u003d new Deadline(task.substring(0, task.indexOf(\"|\") - 1),","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    task.substring(task.indexOf(\"|\") + 2));","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (marked.equals(\"1\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                newDeadline.toggleMarked();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Oliverloo0909"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            String marked \u003d s.substring(4, 5);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            String task \u003d s.substring(8);","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            String desc \u003d task.substring(0, task.indexOf(\"|\") - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            task \u003d task.substring(task.indexOf(\"|\") + 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Event newEvent \u003d new Event(desc, task.substring(0, task.indexOf(\"|\") - 1),","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    task.substring(task.indexOf(\"|\") + 2));","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveData(TaskList t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            FileWriter fWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                fWriter.write(task.toSavedString());","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    fWriter.write(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            fWriter.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Oliverloo0909":27,"-":69}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// custom duke.Task class to store individual tasks that the user enters","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void toggleMarked() {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return description;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return this.isDone ? \"1 | \" + this.description : \"0 | \" + this.description;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Oliverloo0909":17,"-":18}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// class Ui - handles all the lines to be printed and all the user inputs (commands)","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public Ui() {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // prints out welcome greeting to user when Duke is run","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        return \"    Hi! I\u0027m Duke\\n    How can I help?\";","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/*    public void takeCommands(TaskList t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String s \u003d sc.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        int taskCounter \u003d tasks.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        while (!s.equals(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                // method handleCommand handles current command, returns updated taskCounter variable","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                taskCounter \u003d handleCommand(s, tasks, taskCounter);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            // take in next command","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            s \u003d sc.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        System.out.println(\"    Bye. Hope to see you soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }*/","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String handleCommand(String s, TaskList t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // user enters list command","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (s.contains(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            TaskList taskListing \u003d new TaskList(tasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return taskListing.displayTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            // return string of tasks -\u003e make displayTasks() return string first","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            // user enters mark or unmark command","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } else if (s.contains(\"mark\") || s.contains(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            int taskNumber \u003d Integer.parseInt(s.substring(s.length() - 1)) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            tasks.get(taskNumber).toggleMarked();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            String output \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            if (s.contains(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                output +\u003d \"    OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                output +\u003d \"    Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return output + \"  \" + tasks.get(taskNumber).toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            // user enters a new task","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } else if (s.contains(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (s.substring(4).isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                return \"    OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Todo(s.substring(5));","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                return \"    added: \" + newTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } else if (s.contains(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (s.substring(8).isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                return \"    OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                String by \u003d s.substring(s.indexOf(\"/\") + 4);","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Deadline(s.substring(9, s.indexOf(\"/\") - 1), by);","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                return \"    added: \" + newTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } else if (s.contains(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            if (s.substring(5).isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                return \"    OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                String from \u003d s.substring(s.indexOf(\"/\") + 6, s.lastIndexOf(\"/\") - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                String to \u003d s.substring(s.lastIndexOf(\"/\") + 4);","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Event(s.substring(6, s.indexOf(\"/\") - 1), from, to);","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                return \"    added: \" + newTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } else if (s.contains(\"delete\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (s.substring(6).isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                return \"    OOPS!!! You have not entered anything to delete.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                int taskNumber \u003d Integer.parseInt(s.substring(s.length() - 1)) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Task deletedTask \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                tasks.remove(taskNumber);","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                return \"    Noted. I\u0027ve removed this task:\\n      \" + deletedTask +","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        \"\\n    Now you have \" + tasks.size()+ \" tasks in the list\";","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"Oliverloo0909"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } else if (s.contains(\"find\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            String findString \u003d s.substring(5);","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                if (task.toString().contains(findString)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            TaskList searchResults \u003d new TaskList(foundTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return \"Here are the tasks I found!\\n\" + searchResults.displayTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            // make displayTasks return a String","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } else if (s.contains(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return \"    Bye. Hope to see you soon!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            //throw new duke.DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return \"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"Oliverloo0909"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Oliverloo0909":26,"-":93}},{"path":"src/main/java/duke/command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":" * Enums to support all possible commands in duke package","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":" * @author oliverloo","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":" * @version 1.0","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":" *","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"public enum command {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"        TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, LIST, BYE","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":11}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"import duke.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"    private void print(String output) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"        System.out.println(output);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Oliverloo0909"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Oliverloo0909"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Oliverloo0909"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Oliverloo0909"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Oliverloo0909"},"content":"    public void isDeleteTest1(){","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(true, duke.Parser.is_Delete(\"delete 1\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Oliverloo0909"},"content":"    public void isDeleteTest2(){","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(false, duke.Parser.is_Delete(\"delete\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Oliverloo0909"},"content":"    public void strToBoolTest1(){","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(true, duke.Storage.strToBool(\"1\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Oliverloo0909"},"content":"    public void strToBoolTest2(){","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(false, duke.Storage.strToBool(\"0\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Oliverloo0909"},"content":"    void givenSystemOutRedirection_whenInvokePrintln_thenOutputCaptorSuccess() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Oliverloo0909"},"content":"        print(\"Hello Readers!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(\"Hello Readers!\", outputStreamCaptor.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Oliverloo0909"},"content":"                .trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Oliverloo0909"},"content":"    String line \u003d \"      _____________________________________________________________________\";","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Oliverloo0909"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Oliverloo0909"},"content":"    void displayClearTest1() {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Oliverloo0909"},"content":"        Ui.displayClear();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Oliverloo0909"},"content":"        assertEquals(\"Got it. I have cleared the task-list.\\n\" + line, outputStreamCaptor.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Oliverloo0909"},"content":"                .trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Oliverloo0909"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Oliverloo0909"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Oliverloo0909"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Oliverloo0909":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Oliverloo0909"},"content":"todo eat lunch","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Oliverloo0909"},"content":"deadline do HW /by 2023-10-10 14:00","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Oliverloo0909"},"content":"event play tennis /from 2023-10-10 14:00 /to 2023-10-10 15:00","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Oliverloo0909"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Oliverloo0909"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Oliverloo0909"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Oliverloo0909"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Oliverloo0909"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Oliverloo0909"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Oliverloo0909"},"content":"clear","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Oliverloo0909"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Oliverloo0909":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Oliverloo0909"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Oliverloo0909":1,"-":20}}]
