[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"E | 0 | hi | 3 to 5","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"T | 1 | h","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"D | 0 | say hi | 1","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"PROGRAMMERHAO":3}},{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"public enum Commands {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"    UNMARK, MARK, TODO, DEADLINE, EVENT, DELETE, LIST","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PROGRAMMERHAO":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected String eventDetail;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected String timeDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected LocalDate time;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Constructor","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param description a string description of the entire description of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Deadline(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String detail \u003d description.split(\"/\")[0].split(\" \", 2)[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.eventDetail \u003d detail;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String timeDescription \u003d description.split(\"/\")[1].split(\" \")[0] + \": \" + description.split(\"/\")[1].split(\" \",2)[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.timeDescription \u003d timeDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.time \u003d LocalDate.parse(timeDescription.split(\": \",2)[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * String representation of the task details","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a string including the task name and time","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + eventDetail + \"(\" + timeDescription + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the type of task","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a string \"deadline\"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getType() {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"D\";","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the type of task","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a String representing event detail","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getDetail() {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.eventDetail;","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the time of task","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a String representing time","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PROGRAMMERHAO":56}},{"path":"src/main/java/DirectoryNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class DirectoryNotFoundException extends Exception{","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"    DirectoryNotFoundException() {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"PROGRAMMERHAO":10}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.io.*;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.nio.file.NotDirectoryException;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static void main(String[] args) throws IOException{","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Scanner sc\u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String cur \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"        while (!cur.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"                String command \u003d cur.split(\" \")[0].toUpperCase();","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"                Commands input \u003d Enum.valueOf(Commands.class, command);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"                switch (input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    case LIST :","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            int k \u003d j + 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            System.out.println(k + \".\" + tasks.get(j).toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    case MARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        int index \u003d Integer.valueOf(cur.split(\" \")[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        tasks.get(index-1).markAsDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"  \" + tasks.get(index - 1).toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Path directory \u003d Paths.get(\"data\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Path file \u003d Paths.get(\"data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        boolean FileExists \u003d java.nio.file.Files.exists(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        boolean directoryExists \u003d java.nio.file.Files.exists(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!directoryExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!FileExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        FileWriter Writer \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        String output \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            String status \u003d tasks.get(j).getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            if (!tasks.get(j).getType().equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"| \" + tasks.get(j).getTime()+ \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            else {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.write(output);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    case UNMARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        index \u003d Integer.valueOf(cur.split(\" \")[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        tasks.get(index - 1).markAsUnDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"  \" + tasks.get(index - 1).toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directory \u003d Paths.get(\"data\");","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        file \u003d Paths.get(\"data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        FileExists \u003d java.nio.file.Files.exists(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directoryExists \u003d java.nio.file.Files.exists(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!directoryExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!FileExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        output \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            String status \u003d tasks.get(j).getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            if (!tasks.get(j).getType().equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"| \" + tasks.get(j).getTime()+ \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            else {","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.write(output);","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    case EVENT:","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        tasks.add(new Event(cur));","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"  \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Now you have \" + Task.counter + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directory \u003d Paths.get(\"data\");","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        file \u003d Paths.get(\"data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        FileExists \u003d java.nio.file.Files.exists(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directoryExists \u003d java.nio.file.Files.exists(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!directoryExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!FileExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        output \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            String status \u003d tasks.get(j).getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            if (!tasks.get(j).getType().equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"| \" + tasks.get(j).getTime()+ \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            else {","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.write(output);","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        tasks.add(new Deadline(cur));","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"  \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Now you have \" + Task.counter + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directory \u003d Paths.get(\"data\");","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        file \u003d Paths.get(\"data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        FileExists \u003d java.nio.file.Files.exists(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directoryExists \u003d java.nio.file.Files.exists(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!directoryExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!FileExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        output \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            String status \u003d tasks.get(j).getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            if (!tasks.get(j).getType().equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"| \" + tasks.get(j).getTime()+ \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":157,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            else {","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.write(output);","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    case DELETE:","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"  \" + tasks.get(Integer.valueOf(cur.split(\" \")[1]) - 1).toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Task.decreaseCounter();","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Now you have \" + Task.counter + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        tasks.remove(Integer.valueOf(cur.split(\" \")[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directory \u003d Paths.get(\"data\");","lastModifiedDate":"2023-01-28"},{"lineNumber":176,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        file \u003d Paths.get(\"data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        FileExists \u003d java.nio.file.Files.exists(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directoryExists \u003d java.nio.file.Files.exists(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!directoryExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":180,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":182,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!FileExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":183,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":184,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":185,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":186,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        output \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            String status \u003d tasks.get(j).getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-28"},{"lineNumber":189,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            if (!tasks.get(j).getType().equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":190,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":191,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"| \" + tasks.get(j).getTime()+ \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":192,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            else {","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.write(output);","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    case TODO: {","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (cur.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new ToDoException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                    \"  ☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                    \"____________________________________________________________\");","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        tasks.add(new Todo(cur));","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"  \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"Now you have \" + Task.counter + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directory \u003d Paths.get(\"data\");","lastModifiedDate":"2023-01-28"},{"lineNumber":214,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        file \u003d Paths.get(\"data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":215,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        FileExists \u003d java.nio.file.Files.exists(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":216,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        directoryExists \u003d java.nio.file.Files.exists(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":217,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!directoryExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":218,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":219,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":220,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        if (!FileExists) {","lastModifiedDate":"2023-01-28"},{"lineNumber":221,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            throw new DirectoryNotFoundException();","lastModifiedDate":"2023-01-28"},{"lineNumber":222,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":223,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":224,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        output \u003d \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":225,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":226,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            String status \u003d tasks.get(j).getStatusIcon().equals(\"X\") ? \"1\" : \"0\";","lastModifiedDate":"2023-01-28"},{"lineNumber":227,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            if (!tasks.get(j).getType().equals(\"T\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":228,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":229,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"| \" + tasks.get(j).getTime()+ \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":230,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":231,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            else {","lastModifiedDate":"2023-01-28"},{"lineNumber":232,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                output \u003d output + (tasks.get(j).getType() + \" | \" + status + \" | \"","lastModifiedDate":"2023-01-28"},{"lineNumber":233,"author":{"gitId":"PROGRAMMERHAO"},"content":"                                        + tasks.get(j).getDetail() + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":234,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":235,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        }","lastModifiedDate":"2023-01-28"},{"lineNumber":236,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.write(output);","lastModifiedDate":"2023-01-28"},{"lineNumber":237,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        Writer.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":238,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":239,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":240,"author":{"gitId":"PROGRAMMERHAO"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":241,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":242,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":243,"author":{"gitId":"PROGRAMMERHAO"},"content":"            catch(ToDoException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":244,"author":{"gitId":"PROGRAMMERHAO"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":245,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":246,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":247,"author":{"gitId":"PROGRAMMERHAO"},"content":"            catch(IllegalArgumentException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":248,"author":{"gitId":"PROGRAMMERHAO"},"content":"                System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":249,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        \"  ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":250,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        \"____________________________________________________________\");","lastModifiedDate":"2023-01-20"},{"lineNumber":251,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":252,"author":{"gitId":"PROGRAMMERHAO"},"content":"            catch(DirectoryNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":253,"author":{"gitId":"PROGRAMMERHAO"},"content":"                System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":254,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        \"  ☹ OOPS!!! Directory not found, please create the directory \\\"data\\\" first\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":255,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        \"____________________________________________________________\");","lastModifiedDate":"2023-01-28"},{"lineNumber":256,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":257,"author":{"gitId":"PROGRAMMERHAO"},"content":"            catch(FileNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":258,"author":{"gitId":"PROGRAMMERHAO"},"content":"                System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":259,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        \"  ☹ OOPS!!! File not found, please create the text file first\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":260,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        \"____________________________________________________________\");","lastModifiedDate":"2023-01-28"},{"lineNumber":261,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":262,"author":{"gitId":"PROGRAMMERHAO"},"content":"            catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":263,"author":{"gitId":"PROGRAMMERHAO"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-28"},{"lineNumber":264,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":265,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":266,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":267,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":268,"author":{"gitId":"PROGRAMMERHAO"},"content":"            finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":269,"author":{"gitId":"PROGRAMMERHAO"},"content":"                cur \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":270,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":271,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":272,"author":{"gitId":"PROGRAMMERHAO"},"content":"        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":273,"author":{"gitId":"PROGRAMMERHAO"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":274,"author":{"gitId":"PROGRAMMERHAO"},"content":"        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"PROGRAMMERHAO":273,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected String eventDetail;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected String time;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected String timeDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Constructor","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param description the entire description including task name and time of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Event(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String detail \u003d description.split(\"/\")[0].split(\" \", 2)[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.eventDetail \u003d detail;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String timeDescription \u003d description.split(\"/\")[1].split(\" \")[0] + \": \" + description.split(\"/\")[1].split(\" \",2)[1] +","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"                description.split(\"/\")[2].split(\" \")[0] + \": \" + description.split(\"/\")[2].split(\" \",2)[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.timeDescription \u003d timeDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.time \u003d timeDescription.split(\": \",2)[1].split(\":\", 2)[0] + timeDescription.split(\":\",2)[1].split(\":\", 2)[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * String representation of the task details","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a string including the task name and duration","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + eventDetail + \"(\" + timeDescription +  \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Get the type of task","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a string \"event\"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getType() {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"E\";","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the type of task","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a String representing event detail","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getDetail() {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.eventDetail;","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the time of task","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a String representing time","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.time;","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PROGRAMMERHAO":57}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static int counter \u003d 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Constructor","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param description the entire description of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"        counter +\u003d 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Decrease the counter by 1","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static void decreaseCounter() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"        counter -\u003d 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the type of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a string \"task\"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getType() {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"task\";","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the status of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a String representing whether task is done","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Method to get the details of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a string description of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.description; // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Marks the task as finished","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Marks the task as unfinished","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the type of task","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a String representing event detail","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getDetail() {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * String representation of the type of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a string of task details","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the time of task","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a String representing time","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"PROGRAMMERHAO":90}},{"path":"src/main/java/ToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class ToDoException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"    String message;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"    ToDoException(String str) {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"        message \u003d str;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return message;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PROGRAMMERHAO":9}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String todo;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Constructor","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param description the string description of task","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.todo \u003d description.split(\" \",2)[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * String representation of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return string with task details","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon()+ \"] \" + this.todo;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Get the type of task","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a string \"todo\"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getType() {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"T\";","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the type of task","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return a String representing event detail","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getDetail() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.todo;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"PROGRAMMERHAO":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"deadline finish homework /by 1st Feb","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"event meet my friend /from 2pm /to 1pm","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"todo clean house","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PROGRAMMERHAO":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"PROGRAMMERHAO":1,"-":21}}]
