[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"   ","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"Acknolwedgements:","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"Code for GUI was taken from SE-EDU.","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"PeanutButters93":4,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"plugins {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"repositories {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"dependencies {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"    implementation \u0027org.jetbrains:annotations:23.0.0\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"test {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"PeanutButters93":31,"-":26}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"rootProject.name \u003d \u0027ipGradle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"PeanutButters93":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.LogFileLoadException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.UnrecognisedCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"import duke.gui.Gui;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"import duke.gui.Main;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"    private static final String BYE_MSG \u003d \"To exit, click the X button on the top right of the UI\";","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"    private static final String CMD_NOT_FOUND_MSG \u003d \"Command not recognised. Please try again.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"    private static final String WRONG_DT_FORMAT_MSG \u003d \"Wrong date time format, it should be yyyy-MM-dd\";","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"    private final Parser parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"    public Duke() throws IOException, LogFileLoadException {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"        parser \u003d new Parser(\"yyyy-MM-dd\", \"dd-MMM-yyyy (EEE)\");","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"        tasks \u003d new TaskList(","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"                parser,","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"                new Storage(\"data\", \"duke.txt\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"        tasks.loadFromStorage();","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"    public void run(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"        Gui.setDuke(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"        assert userInput !\u003d null : \"userInput cannot be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"        String[] inputFragments \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"            switch (inputFragments[0]) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"                return BYE_MSG;","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"            case \"list\":","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"                return tasks.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"                if (inputFragments.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"PeanutButters93"},"content":"                    throw new InvalidFormatException(\"mark index\");","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"PeanutButters93"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"PeanutButters93"},"content":"                    return tasks.setDone(","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"PeanutButters93"},"content":"                            Integer.parseInt(inputFragments[1]));","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"PeanutButters93"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"PeanutButters93"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"PeanutButters93"},"content":"                if (inputFragments.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"PeanutButters93"},"content":"                    throw new InvalidFormatException(\"unmark index\");","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"PeanutButters93"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"PeanutButters93"},"content":"                    return tasks.setNotDone(","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"PeanutButters93"},"content":"                            Integer.parseInt(inputFragments[1]));","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"PeanutButters93"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"PeanutButters93"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"PeanutButters93"},"content":"                if (inputFragments.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"PeanutButters93"},"content":"                    throw new InvalidFormatException(\"delete index\");","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"PeanutButters93"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"PeanutButters93"},"content":"                    return tasks.delete(","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"PeanutButters93"},"content":"                            Integer.parseInt(inputFragments[1]));","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"PeanutButters93"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"PeanutButters93"},"content":"            case \"find\":","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"PeanutButters93"},"content":"                if (inputFragments.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"PeanutButters93"},"content":"                    throw new InvalidFormatException();","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"PeanutButters93"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"PeanutButters93"},"content":"                return tasks.find(inputFragments[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"PeanutButters93"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"PeanutButters93"},"content":"                if (inputFragments.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"PeanutButters93"},"content":"                    throw Todo.getInvalidFormatException();","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"PeanutButters93"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"PeanutButters93"},"content":"                    return tasks.add(new Todo(inputFragments[1]));","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"PeanutButters93"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"PeanutButters93"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"PeanutButters93"},"content":"                if (inputFragments.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"PeanutButters93"},"content":"                    throw Deadline.getInvalidFormatException();","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"PeanutButters93"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"PeanutButters93"},"content":"                    return tasks.add(","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"PeanutButters93"},"content":"                            Deadline.factoryMethod(inputFragments[1], parser, false)","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"PeanutButters93"},"content":"                    );","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"PeanutButters93"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"PeanutButters93"},"content":"            case \"event\":","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"PeanutButters93"},"content":"                if (inputFragments.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"PeanutButters93"},"content":"                    throw Event.getInvalidFormatException();","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"PeanutButters93"},"content":"                } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"PeanutButters93"},"content":"                    return tasks.add(","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"PeanutButters93"},"content":"                            Event.factoryMethod(inputFragments[1], parser, false)","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"PeanutButters93"},"content":"                    );","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"PeanutButters93"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"PeanutButters93"},"content":"            default:","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"PeanutButters93"},"content":"                throw new UnrecognisedCommandException();","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"PeanutButters93"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"PeanutButters93"},"content":"        } catch (InvalidFormatException exception) {","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"PeanutButters93"},"content":"            return exception.getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"PeanutButters93"},"content":"        } catch (UnrecognisedCommandException exception) {","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"PeanutButters93"},"content":"            return CMD_NOT_FOUND_MSG;","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"PeanutButters93"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"PeanutButters93"},"content":"            return WRONG_DT_FORMAT_MSG;","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"PeanutButters93"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"PeanutButters93"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"PeanutButters93"},"content":"            new Duke().run(args);","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"PeanutButters93"},"content":"        } catch (IOException | LogFileLoadException exception) {","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"PeanutButters93"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PeanutButters93":114,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"    protected final DateTimeFormatter inputFormat;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"    protected final DateTimeFormatter outputFormat;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"     * Constructs a parser that can decipher Strings for Duke","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"     * @param inputFormat a DateTimeFormatter pattern to process inputs","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"     * @param outputFormat a DateTimeFormatter pattern to format date outputs to users","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"    public Parser(String inputFormat, String outputFormat) {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"        this.inputFormat \u003d DateTimeFormatter.ofPattern(inputFormat);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"        this.outputFormat \u003d DateTimeFormatter.ofPattern(outputFormat);","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"     * Parses a string into a date that has the output format","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"     * @param text text to parse","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"     * @return LocalDate in the output format","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"    public LocalDate parseDate(String text) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"        LocalDate dateInInputFormat \u003d LocalDate.parse(text, inputFormat);","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"        String dateInOutputFormat \u003d dateInInputFormat.format(outputFormat);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"        return LocalDate.parse(dateInOutputFormat, outputFormat);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"     * Converts a date into a string of the input format","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"     * @param date to be converted","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"     * @return string in input format","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"    public String dateToLogFormat(LocalDate date) {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"        return date.format(inputFormat);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"PeanutButters93":42}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"    private final File logFile;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"     * Creates an IOException","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"     * The message informs the user that the log file could neither be detected nor created","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"     * @return IOException with a message","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"    private static IOException getIOException(){","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"        return new IOException(\"Unable to detect or create log file\");","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"     * Constructs a wrapper for the log file","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"     * @param parent location of the directory of the log file","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"     * @param child filename of log file","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"     * @throws IOException if unable to detect or create log file","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"    public Storage (String parent, String child) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"        File parentFolder \u003d new File(parent);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"        logFile \u003d new File(parent, child);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"        if (!parentFolder.exists()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"            if (!parentFolder.mkdirs()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"                throw getIOException();","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"        if (!logFile.exists()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"            if (logFile.createNewFile()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"                throw getIOException();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"PeanutButters93"},"content":"     * Retrieves the contents of the log file","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"PeanutButters93"},"content":"     * @return linked list containing the contents of the log file","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"PeanutButters93"},"content":"     * @throws FileNotFoundException if unable to detect log file","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"PeanutButters93"},"content":"    public LinkedList\u003cString\u003e retrieveContents() throws FileNotFoundException {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"PeanutButters93"},"content":"        LinkedList\u003cString\u003e contents \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"PeanutButters93"},"content":"        Scanner sc \u003d new Scanner(logFile);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"PeanutButters93"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"PeanutButters93"},"content":"            contents.add(sc.nextLine());","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"PeanutButters93"},"content":"        return contents;","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"PeanutButters93"},"content":"     * Rewrite the contents of the log file to match a given linked list","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"PeanutButters93"},"content":"     * @param texts linked list of strings that will overwrite the log file","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"PeanutButters93"},"content":"     * @throws IOException if unable to detect log file","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"PeanutButters93"},"content":"    public void update(LinkedList\u003cString\u003e texts) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"PeanutButters93"},"content":"        PrintWriter pw \u003d new PrintWriter(logFile);","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"PeanutButters93"},"content":"        for (String row : texts) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"PeanutButters93"},"content":"            pw.println(row);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"PeanutButters93"},"content":"        pw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"PeanutButters93":78}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.LogFileLoadException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"    private static final String ADD_MSG \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"    private static final String DELETE_MSG \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"    private static final String MARK_T_MSG \u003d \"Nice, I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"    private static final String MARK_F_MSG \u003d \"Ok, I\u0027ve marked this task as not done:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"    private static final String FIND_SUCCESS_MSG \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"    private static final String FIND_FAILURE_MSG \u003d \"There were no tasks with that keyword\";","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"    private static final String LIST_HEADER_MSG \u003d \"Here are all your tasks:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"    private final LinkedList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"    private final Parser parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"     * Constructs an empty Task List.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"     * @param storage a permanent storage that TaskList maintains","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"    public TaskList (Parser parser, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"        tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"     * Adds tasks from the storage","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"     * @throws FileNotFoundException log file cannot found","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"     * @throws InvalidFormatException log file cannot be understood","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"    public void loadFromStorage() throws FileNotFoundException, LogFileLoadException {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"        storage.retrieveContents()","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"                .stream()","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"                .map(x -\u003e createTask(x))","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"                .forEach(x -\u003e tasks.add(x));","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"PeanutButters93"},"content":"    public Task createTask(String row) throws LogFileLoadException {","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"PeanutButters93"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"PeanutButters93"},"content":"            Task output \u003d  Task.factoryMethod(","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"PeanutButters93"},"content":"                    row.charAt(1),","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"PeanutButters93"},"content":"                    row.charAt(4),","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"PeanutButters93"},"content":"                    row.substring(7),","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"PeanutButters93"},"content":"                    parser);","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"PeanutButters93"},"content":"            return output;","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"PeanutButters93"},"content":"        } catch (InvalidFormatException exception) {","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"PeanutButters93"},"content":"            throw new LogFileLoadException(\"error\");","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"PeanutButters93"},"content":"     * Add a task to the task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"PeanutButters93"},"content":"     * @param t task to be added","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"PeanutButters93"},"content":"     * @return an update of the task list","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"PeanutButters93"},"content":"    public String add(Task t) {","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"PeanutButters93"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"PeanutButters93"},"content":"        return getStatus(ADD_MSG, t);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"PeanutButters93"},"content":"     * Delete a chosen task from the task list","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"PeanutButters93"},"content":"     * @param index the index of the chosen task","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"PeanutButters93"},"content":"     * @return An update of the changes to the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"PeanutButters93"},"content":"    public String delete(int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"PeanutButters93"},"content":"        Task t \u003d tasks.remove(index - 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"PeanutButters93"},"content":"        return getStatus(DELETE_MSG, t);","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"PeanutButters93"},"content":"     * Call the setter method of a task in the task list","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"PeanutButters93"},"content":"     * @param index the index of the chosen task","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"PeanutButters93"},"content":"     * @param done new done value of the task","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"PeanutButters93"},"content":"     * @param text string that prepends return the status message","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"PeanutButters93"},"content":"     * @return An update of the changes to the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"PeanutButters93"},"content":"    public String setDone(int index, boolean done, String text) {","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"PeanutButters93"},"content":"        Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"PeanutButters93"},"content":"        t.setDone(done);","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"PeanutButters93"},"content":"        return getStatus(text, t);","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"PeanutButters93"},"content":"     * Sets a task of given index to true","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"PeanutButters93"},"content":"     * @param index the index of the chosen task","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"PeanutButters93"},"content":"     * @return An update of the changes to the task list","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"PeanutButters93"},"content":"    public String setDone(int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"PeanutButters93"},"content":"        return setDone(index, true, MARK_T_MSG);","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"PeanutButters93"},"content":"     * Sets a task of given index to false","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"PeanutButters93"},"content":"     * @param index the index of the chosen task","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"PeanutButters93"},"content":"     * @return An update of the changes to the task list","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"PeanutButters93"},"content":"    public String setNotDone(int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"PeanutButters93"},"content":"        return setDone(index, false, MARK_F_MSG);","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"PeanutButters93"},"content":"     * Returns a string of tasks that contain a certain keyword","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"PeanutButters93"},"content":"     * @param regex String used to find matches","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"PeanutButters93"},"content":"     * @return String of matches","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"PeanutButters93"},"content":"    public String find(String regex) {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"PeanutButters93"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"PeanutButters93"},"content":"        LinkedList\u003cTask\u003e foundMatches \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"PeanutButters93"},"content":"        for (Task curr : tasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"PeanutButters93"},"content":"            Matcher m \u003d pattern.matcher(curr.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"PeanutButters93"},"content":"            if (m.find()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"PeanutButters93"},"content":"                foundMatches.add(curr);","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"PeanutButters93"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"PeanutButters93"},"content":"        if (foundMatches.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"PeanutButters93"},"content":"            return FIND_FAILURE_MSG;","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"PeanutButters93"},"content":"        StringBuilder output \u003d new StringBuilder(FIND_SUCCESS_MSG);","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"PeanutButters93"},"content":"        for (Task curr : foundMatches) {","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"PeanutButters93"},"content":"            output.append(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"PeanutButters93"},"content":"            output.append(curr.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"PeanutButters93"},"content":"        return output.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":149,"author":{"gitId":"PeanutButters93"},"content":"     * Returns a string representation of the Task List.","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"PeanutButters93"},"content":"     * Each task has its own line, and is shown with its index","lastModifiedDate":"2023-02-08"},{"lineNumber":151,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":152,"author":{"gitId":"PeanutButters93"},"content":"     * @return a string representation of the Task List","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":154,"author":{"gitId":"PeanutButters93"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":155,"author":{"gitId":"PeanutButters93"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"PeanutButters93"},"content":"        StringBuilder output \u003d new StringBuilder(LIST_HEADER_MSG);","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"PeanutButters93"},"content":"        int maxDigits \u003d 1 + (int) Math.floor(Math.log10(tasks.size()));","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"PeanutButters93"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"PeanutButters93"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-08"},{"lineNumber":160,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"PeanutButters93"},"content":"            output.append(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"PeanutButters93"},"content":"            output.append(String.format(\"%\" + maxDigits + \"d\", index + 1).replace(\u0027 \u0027, \u00270\u0027));","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"PeanutButters93"},"content":"            output.append(task.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"PeanutButters93"},"content":"            index++;","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":166,"author":{"gitId":"PeanutButters93"},"content":"        return output.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":168,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":169,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":170,"author":{"gitId":"PeanutButters93"},"content":"     * Returns a String showing the status of the Task List","lastModifiedDate":"2023-02-08"},{"lineNumber":171,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":172,"author":{"gitId":"PeanutButters93"},"content":"     * @param text a string that prepends the status message","lastModifiedDate":"2023-02-08"},{"lineNumber":173,"author":{"gitId":"PeanutButters93"},"content":"     * @param t Prints out the name of the task","lastModifiedDate":"2023-02-08"},{"lineNumber":174,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":175,"author":{"gitId":"PeanutButters93"},"content":"    private String getStatus(String text, Task t) {","lastModifiedDate":"2023-02-08"},{"lineNumber":176,"author":{"gitId":"PeanutButters93"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":177,"author":{"gitId":"PeanutButters93"},"content":"            updateLogFile();","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"PeanutButters93"},"content":"            return String.format(\"%s\\n%s\\nNow you have %d task(s) in the list.\", text, t.toString(), tasks.size());","lastModifiedDate":"2023-02-08"},{"lineNumber":179,"author":{"gitId":"PeanutButters93"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":180,"author":{"gitId":"PeanutButters93"},"content":"            return \"Warning: No permission to edit log file, changes will not persist between sessions\";","lastModifiedDate":"2023-02-09"},{"lineNumber":181,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":182,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":183,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":184,"author":{"gitId":"PeanutButters93"},"content":"    private void updateLogFile() throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":185,"author":{"gitId":"PeanutButters93"},"content":"        LinkedList\u003cString\u003e texts \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":186,"author":{"gitId":"PeanutButters93"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":187,"author":{"gitId":"PeanutButters93"},"content":"            texts.add(t.toString(parser));","lastModifiedDate":"2023-02-09"},{"lineNumber":188,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"PeanutButters93"},"content":"        storage.update(texts);","lastModifiedDate":"2023-02-09"},{"lineNumber":190,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":191,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"PeanutButters93":191}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"abstract class DukeException extends Exception{","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"    protected String message;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"    public String getMessage() {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"        return this.message;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PeanutButters93":9}},{"path":"src/main/java/duke/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"public class InvalidFormatException extends DukeException{","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"    public InvalidFormatException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"        this.message \u003d \"Wrong format. Please try again\";","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"        this.message \u003d \"Wrong format. The correct format is :\\n\" + message;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"PeanutButters93":12}},{"path":"src/main/java/duke/exception/LogFileLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"public class LogFileLoadException extends RuntimeException{","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"    public LogFileLoadException (String message) {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"PeanutButters93":9}},{"path":"src/main/java/duke/exception/UnrecognisedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"public class UnrecognisedCommandException extends DukeException{","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"    public UnrecognisedCommandException() {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"        this.message \u003d\"Command not recognised. Please try again.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"PeanutButters93":8}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"//@@Jeffry Lum {PeanutButters93}-reused","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"//From https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"package duke.gui;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"PeanutButters93"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"PeanutButters93"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"PeanutButters93"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"PeanutButters93"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"PeanutButters93"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"PeanutButters93"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"PeanutButters93"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"PeanutButters93"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"PeanutButters93"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"PeanutButters93"},"content":"//@@Jeffry Lum","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"PeanutButters93":65}},{"path":"src/main/java/duke/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"//@@Jeffry Lum {PeanutButters93}-reused","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"//From https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"package duke.gui;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"public class Gui extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"    private static Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"    public static void setDuke(Duke duke) {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"        Gui.duke \u003d duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"        assert duke !\u003d null : \"initialize duke with setDuke() first\";","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"PeanutButters93"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"PeanutButters93"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"PeanutButters93"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"PeanutButters93"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"PeanutButters93"},"content":"        stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"PeanutButters93"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"PeanutButters93"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"PeanutButters93"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"PeanutButters93"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"PeanutButters93"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"PeanutButters93"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"PeanutButters93"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"PeanutButters93"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"PeanutButters93"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"PeanutButters93"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"PeanutButters93"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"PeanutButters93"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"PeanutButters93"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"PeanutButters93"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"PeanutButters93"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"PeanutButters93"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"PeanutButters93"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"PeanutButters93"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"PeanutButters93"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"PeanutButters93"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"PeanutButters93"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"PeanutButters93"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"PeanutButters93"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"PeanutButters93"},"content":"        });","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"PeanutButters93"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"PeanutButters93"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"PeanutButters93"},"content":"        });","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"PeanutButters93"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"PeanutButters93"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"PeanutButters93"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"PeanutButters93"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"PeanutButters93"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"PeanutButters93"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"PeanutButters93"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"PeanutButters93"},"content":"                DialogBox.getUserDialog(userInput.getText(), userImage),","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"PeanutButters93"},"content":"                DialogBox.getDukeDialog(getResponse(userInput.getText()), dukeImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"PeanutButters93"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"PeanutButters93"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"PeanutButters93"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"PeanutButters93"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"PeanutButters93"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"PeanutButters93"},"content":"        return duke.getResponse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"PeanutButters93"},"content":"//@@Jeffry Lum","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"PeanutButters93":124}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"//@@Jeffry Lum {PeanutButters93}-reused","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"//From https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"package duke.gui;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"    private Gui gui \u003d new Gui();","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(gui);","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"            stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"//@@Jeffry Lum","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"PeanutButters93":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"//@@Jeffry Lum {PeanutButters93}-reused","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"//From https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"package duke.gui;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"    private Gui gui;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"    public void setDuke(Gui gui) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"        this.gui \u003d gui;","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"        String response \u003d gui.getResponse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"PeanutButters93"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"PeanutButters93"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"PeanutButters93"},"content":"//@@Jeffry Lum","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"PeanutButters93":54}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"    public static final Pattern PATTERN \u003d Pattern.compile(\"(.+) /by (.+)\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"    public static InvalidFormatException getInvalidFormatException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"        return new InvalidFormatException(\"deadline name /by yyyy-MM-dd\");","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"     * Creates a Deadline object using only 1 String argument","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"     * @param input String formatted in log file format","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"     * @param parser To read the date","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"     * @param isDone To mark if task is done","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"     * @return a Deadline object","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"     * @throws InvalidFormatException if the input cannot be parsed","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"    public static Deadline factoryMethod(String input, Parser parser, boolean isDone) throws InvalidFormatException{","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"        Matcher m \u003d Pattern.compile(\"(.+) (.+)\").matcher(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"        if (!m.find()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"            throw getInvalidFormatException();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"        return new Deadline(m.group(1), m.group(2), parser, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"    public Deadline(String description, String by, Parser parser, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"        this.by \u003d parser.parseDate(by);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"        classIcon \u003d \"D\";","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"        return String.format(\"%s By: %s\", super.toString(), by);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"    public String toString(Parser parser) {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"PeanutButters93"},"content":"        return String.format(\"%s %s\", super.toString(), parser.dateToLogFormat(by));","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PeanutButters93":52}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"    public static final Pattern PATTERN \u003d Pattern.compile(\"(.+) /from (.+) /to (.+)\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"    public static InvalidFormatException getInvalidFormatException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"        return new InvalidFormatException(\"event name /from yyyy-MM-dd /to yyyy-MM-dd\");","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"    public static Event factoryMethod(String input, Parser parser, boolean isDone) throws InvalidFormatException {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"        Matcher m \u003d Pattern.compile(\"(.+) (.+) (.+)\").matcher(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"        if (!m.find()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"            throw getInvalidFormatException();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"        return new Event(m.group(1), m.group(2), m.group(3), parser, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"    public Event(String description, String from, String to, Parser parser, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"        this.from \u003d parser.parseDate(from);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"        this.to \u003d parser.parseDate(to);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"        classIcon \u003d \"E\";","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"        return String.format(","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"                \"%s From: %s To: %s\", super.toString(), to, from);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"    public String toString(Parser parser) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"        return String.format(\"%s %s %s\",","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"                super.toString(),","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"                parser.dateToLogFormat(to),","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"                parser.dateToLogFormat(from));","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PeanutButters93":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"    protected String classIcon;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"     * A factory method that returns a Task based on logfile input","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"     * @param type of Task","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"     * @param done isDone boolean value","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"     * @param text Description [Date] [Date] as String","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"     * @param parser Parser required to create task","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"     * @return Todo, Event or Date","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"PeanutButters93"},"content":"     * @throws InvalidFormatException","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"    public static Task factoryMethod(char type, char done, String text, Parser parser) throws InvalidFormatException {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"        boolean isDone \u003d done \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"PeanutButters93"},"content":"        switch (type) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"PeanutButters93"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"PeanutButters93"},"content":"            return new Todo(text, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"PeanutButters93"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"PeanutButters93"},"content":"            return Deadline.factoryMethod(text, parser, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"PeanutButters93"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"PeanutButters93"},"content":"            return Event.factoryMethod(text, parser, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"PeanutButters93"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"PeanutButters93"},"content":"            throw getInvalidFormatException();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"PeanutButters93"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"PeanutButters93"},"content":"    public static InvalidFormatException getInvalidFormatException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"PeanutButters93"},"content":"        return new InvalidFormatException(","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"PeanutButters93"},"content":"                \"Contents in log file cannot be understood. Consider rewriting or deleting it.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"PeanutButters93"},"content":"     * Returns a task","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"PeanutButters93"},"content":"     * @param description of the task","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"PeanutButters93"},"content":"     * @param isDone if the task marked as done","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"PeanutButters93"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"PeanutButters93"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"PeanutButters93"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"PeanutButters93"},"content":"     * Setter method of the task\u0027s isDone field","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"PeanutButters93"},"content":"     * @param isDone boolean value to set to","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"PeanutButters93"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"PeanutButters93"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"PeanutButters93"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"PeanutButters93"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"PeanutButters93"},"content":"        return String.format(\"[%s][%s] %s\", classIcon, getStatusIcon(), description);","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"PeanutButters93"},"content":"     * The string representation of a task. Any dates are modified by the Parser","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"PeanutButters93"},"content":"     * @param parser to reformat dates","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"PeanutButters93"},"content":"     * @return String representation of Task","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"PeanutButters93"},"content":"    public String toString(Parser parser) {","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"PeanutButters93"},"content":"        return String.format(\"[%s][%s] %s\", classIcon, getStatusIcon(), description);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"PeanutButters93"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"PeanutButters93"},"content":"     * Returns a character to show if task is done.","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"PeanutButters93"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"PeanutButters93"},"content":"     * @return \"X\" if done, else \" \"","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"PeanutButters93"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"PeanutButters93"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"PeanutButters93"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"PeanutButters93":85}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"    public static InvalidFormatException getInvalidFormatException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"        return new InvalidFormatException(\"todo name\");","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"        classIcon \u003d \"T\";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"        this(description, false);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PeanutButters93":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"PeanutButters93":12}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"PeanutButters93"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"PeanutButters93"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"PeanutButters93"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"PeanutButters93"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"PeanutButters93":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PeanutButters93"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"PeanutButters93"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"PeanutButters93"},"content":"event project meeting /from Aug 6th /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"PeanutButters93"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"PeanutButters93"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"PeanutButters93"},"content":"todo join sports club","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"PeanutButters93"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"PeanutButters93"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"PeanutButters93"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"PeanutButters93"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"PeanutButters93"},"content":"test","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"PeanutButters93"},"content":"todo","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"PeanutButters93"},"content":"delete 4","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"PeanutButters93"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PeanutButters93":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"PeanutButters93"},"content":"javac  -cp ..\\src\\main\\Java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"PeanutButters93"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"PeanutButters93"},"content":"pause","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"PeanutButters93":3,"-":20}}]
