[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"QQH0828":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"    private Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"    public void start() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"        String logo \u003d \"\\t  ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"                + \"\\t |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"                + \"\\t | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"                + \"\\t | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"                + \"\\t |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"        System.out.println(\"\\t Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"        System.out.println(\"\\t What can I do for you?\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    public void display() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    public void mark(String command) throws DukeException{","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"        if (command.trim().equals(\"mark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a mark cannot be empty.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"            int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"            if (index + 1 \u003e tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! Please input a valid number.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"            tasks.get(index).mark();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"            System.out.println(\"\\t ☹ OOPS!!! Please input a valid number.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"    public void unmark(String command) throws DukeException{","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"        if (command.trim().equals(\"mark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a unmark cannot be empty.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"            int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"            if (index + 1 \u003e tasks.size() || index \u003c 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! Please input a valid number.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"            } else if (tasks.get(index).getStatusIcon().equals(\" \")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"                throw new DukeException(\"\\t ☹ OOPS!!! This task has not been marked yet.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"            tasks.get(index).unmark();","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"            System.out.println(\"\\t ☹ OOPS!!! Please input a valid number.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"    public void list() {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"            System.out.print(\"\\t \" + (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"QQH0828"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"QQH0828"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"QQH0828"},"content":"                + \"\\t\\t \"+ tasks.get(tasks.size() - 1).toString()","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"QQH0828"},"content":"                + \"\\n\\t Now you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"QQH0828"},"content":"    public void todo(String command) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"QQH0828"},"content":"        if (command.trim().equals(\"todo\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"QQH0828"},"content":"        String description \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"QQH0828"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"QQH0828"},"content":"        addTask(todo);","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"QQH0828"},"content":"    public void deadline(String command) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"QQH0828"},"content":"        if (command.trim().equals(\"deadline\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"QQH0828"},"content":"        } else if (command.trim().contains(\" /by \") \u003d\u003d false) {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! There is no deadline date or the wrong format\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"QQH0828"},"content":"        command \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"QQH0828"},"content":"        if (command.startsWith(\"/by\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"QQH0828"},"content":"        } else if (command.endsWith(\"/by\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException((\"☹ OOPS!!! The due date of a deadline cannot be empty.\\n\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"QQH0828"},"content":"        String info[] \u003d command.split(\" /by \");","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"QQH0828"},"content":"        String description \u003d info[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"QQH0828"},"content":"        String by \u003d info[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"QQH0828"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"QQH0828"},"content":"        addTask(deadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"QQH0828"},"content":"    public void event(String command) throws DukeException{","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"QQH0828"},"content":"        command \u003d command.trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"QQH0828"},"content":"        if (command.equals(\"event\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a event cannot be empty.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"QQH0828"},"content":"        } else if (command.contains(\" /from \") \u003d\u003d false || command.contains(\" /to \") \u003d\u003d false) {","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The from date or due date of a deadline cannot be empty.\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"QQH0828"},"content":"                    + \"\\t Or the format is wrong.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"QQH0828"},"content":"        command \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"QQH0828"},"content":"        if (command.startsWith(\"/from\") || command.endsWith(\"/to\") || command.contains(\"/from /to\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description, from date or due date of a event cannot be empty.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"QQH0828"},"content":"        String info[] \u003d command.split(\" /from \");","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"QQH0828"},"content":"        String description \u003d info[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"QQH0828"},"content":"        String dates[] \u003d info[1].split(\" /to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"QQH0828"},"content":"        String from \u003d dates[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"QQH0828"},"content":"        String to \u003d dates[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"QQH0828"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"QQH0828"},"content":"        addTask(event);","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"QQH0828"},"content":"    public void delete(String command) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"QQH0828"},"content":"        command \u003d command.trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"QQH0828"},"content":"        if (command.equals(\"delete\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a delete cannot be empty.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"QQH0828"},"content":"        int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"QQH0828"},"content":"            index \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"QQH0828"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! Please input a valid number.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"QQH0828"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The input is out of range.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"QQH0828"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"QQH0828"},"content":"                + \"\\t\\t \" + tasks.get(index - 1).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"QQH0828"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"QQH0828"},"content":"        System.out.println(\"\\t Now you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"QQH0828"},"content":"    public void run() {","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"QQH0828"},"content":"        start();","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"QQH0828"},"content":"        while (true) {","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"QQH0828"},"content":"            String command \u003d input.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"QQH0828"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"QQH0828"},"content":"                if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"QQH0828"},"content":"                    System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"QQH0828"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"QQH0828"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"QQH0828"},"content":"                    list();","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"QQH0828"},"content":"                } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"QQH0828"},"content":"                    mark(command);","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"QQH0828"},"content":"                } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"QQH0828"},"content":"                    unmark(command);","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"QQH0828"},"content":"                } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"QQH0828"},"content":"                    todo(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"QQH0828"},"content":"                } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"QQH0828"},"content":"                    deadline(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"QQH0828"},"content":"                } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"QQH0828"},"content":"                    event(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"QQH0828"},"content":"                } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"QQH0828"},"content":"                    delete(command);","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"QQH0828"},"content":"                } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"QQH0828"},"content":"                    display();","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"QQH0828"},"content":"                    System.out.println(\"\\t ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"QQH0828"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":177,"author":{"gitId":"QQH0828"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"QQH0828"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":183,"author":{"gitId":"QQH0828"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-30"},{"lineNumber":184,"author":{"gitId":"QQH0828"},"content":"        duke.run();","lastModifiedDate":"2023-01-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"QQH0828":181,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"        super(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"QQH0828":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"QQH0828":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"    protected String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"    public void mark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"                + \"\\t\\t [X] \" + this.description + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"        System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"                + \"\\t\\t [ ] \" + this.description + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"        return \" [\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"QQH0828":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"QQH0828":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"mark 2","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"mark 3","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"unmark 2","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"QQH0828":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"QQH0828":2,"-":21}}]
