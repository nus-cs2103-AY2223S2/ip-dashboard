[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"checkstyle {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"QQH0828":21,"-":40}},{"path":"src/main/java/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" * Command class for adding deadline tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"public class AddDeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    public AddDeadlineCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     * Creates a deadline task, adds it to the task list and saves it to the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Saves all tasks in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the String message about adding a deadline task.","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"        Deadline deadline \u003d Deadline.generate(this.getInput());","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"        return ui.printAddTaskMsg(taskList, deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":40}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" * Command class for adding event tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"public class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    public AddEventCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     * Creates a deadline task, adds it to the task list and saves it to the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Saves all tasks in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the String message about adding an event task.","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"        Event event \u003d Event.generate(this.getInput());","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"        taskList.addTask(event);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        return ui.printAddTaskMsg(taskList, event);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":38}},{"path":"src/main/java/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Abstract class for adding tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"abstract class AddTaskCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    public AddTaskCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"     * Creates a task, adds it to the task list and saves it to the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Saves all tasks in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the String message about adding a task.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"        return null;","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"     * Checks whether exit the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"     * @return Boolean Exit the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        return false;","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":44}},{"path":"src/main/java/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import task.Todo;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" * Command class for adding todo tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"public class AddTodoCommand extends AddTaskCommand {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    public AddTodoCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     * Creates a todo task, adds it to the task list and saves it to the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Saves all tasks in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the String message about adding a deadline task.","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"        Todo todo \u003d Todo.generate(this.getInput());","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"        return ui.printAddTaskMsg(taskList, todo);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":39}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Abstract class about users\u0027 commands.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    private final String input;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    public Command(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    public String getInput() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"        return input;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * Creates a todo task, adds it to the task list and saves it to the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Saves all tasks in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the String message.","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"    public abstract String process(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"     * Checks whether exit the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"     * @return Boolean Exit the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":43}},{"path":"src/main/java/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Command class for adding deadline tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    public DeleteTaskCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"     * Deletes a task, both of task list and file.","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Deletes a task in a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the String message about deleting a task.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"        return taskList.deleteTask(this.getInput(), ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"     * Checks whether exit the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"     * @return Boolean Exit the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        return false;","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":44}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Command class for exiting the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"     * Exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Deletes a task in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the Bye message.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"        return ui.printByeMsg();","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        return true;","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":38}},{"path":"src/main/java/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Command class for finding some tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    public FindTaskCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"     * Finds any tasks that contain the description.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Deletes a task in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @return Returns a list of tasks that contains the input.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"        return taskList.findTask(this.getInput(), ui);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"     * Checks whether exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"     * @return Boolean Exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        return false;","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":44}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Command class for listing all the available commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    public HelpCommand(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     * Lists all available commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Saves all tasks in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @return Returns a list of available commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"        return ui.printHelpMsg(storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"     * Checks whether exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"     * @return Boolean Exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"        return false;","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"QQH0828":45}},{"path":"src/main/java/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Command class for showing invalid command.","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    public InvalidCommand(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"     * Deletes a task, both of task list and file.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Deletes a task in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the invalid input message.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"        return ui.printWrongMsg();","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"     * Checks whether exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"     * @return Boolean Exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        return false;","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"QQH0828":44}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Command class for listing tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     * Lists all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Saves all tasks in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @return Returns a list of tasks are stored.","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"        return taskList.listTask(this.getInput());","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"     * Checks whether exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"     * @return Boolean Exit the program.","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"        return false;","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":45}},{"path":"src/main/java/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":" * Command class for marking or unmarking tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    private final boolean isMarked;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"     * @param input String from a user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"     * @param isMarked Boolean to mark or unmark the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    public MarkTaskCommand(String input, boolean isMarked) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"        super(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * Marks or unmarks a task.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     * @param ui       The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"     * @param storage  Saves all tasks in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"     * @return Returns String message about marking or unmarking message.","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"    public String process(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"        return taskList.markTask(isMarked, this.getInput(), ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"     * Checks whether exit the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"     * @return Boolean Exit the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"        return false;","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":49}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"    private void flip() {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"        db.flip();","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"        return db;","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"QQH0828":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import command.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":" * The main class of the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"public class Duke {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"    private static final String FILE_PATH \u003d \".\\\\src\\\\data\\\\duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"    private static final String HELP_FILEPATH \u003d \".\\\\src\\\\main\\\\resources\\\\explanation\\\\help.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    public Duke() {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"        storage \u003d new Storage(FILE_PATH, HELP_FILEPATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"        taskList \u003d storage.loadData();","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"     * Runs the whole program.","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    public void run() {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"                if (command !\u003d null) {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"                    command.process(taskList, ui, storage);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"                    isExit \u003d command.isExit();","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"            return command.process(taskList, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"        return ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"     * Main method of the Duke.","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"QQH0828"},"content":"     * @param args String array argument","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"QQH0828"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"QQH0828"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"QQH0828"},"content":"        duke.run();","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":72}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":" * Launcher for the chatbot.","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"public class Launcher {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"QQH0828":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"            stage.show();","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"QQH0828":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"                duke.getUi().printWelcomeMsg(), dukeImage)","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"        if (response.equals(duke.getUi().printByeMsg())) {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"                Thread.sleep(100);","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"QQH0828":63}},{"path":"src/main/java/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package dukeexception;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":" * Exception class.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"     * @param message Error message is to be printed.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"        super(message);","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":16}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import task.Todo;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"import java.util.List;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":" * Storage class to deal with the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"public class Storage {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    private final String helpFilePath;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"     * @param filePath The path of a file to be stored.","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"    public Storage(String filePath, String helpFilePath) {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        this.helpFilePath \u003d helpFilePath;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        checkFileExit();","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"     * Checks whether the file exits.","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"    public void checkFileExit() {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"            Path file \u003d Paths.get(\".\", filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"            if (!Files.exists(file)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"                Files.createDirectories(file.getParent());","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"                Files.createFile(file);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"            System.out.println(\"\\t Invalid Path.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"     * Reads the tasks from the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"     * @return Tasklist which is stored in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"    public TaskList loadData() {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"        Path file \u003d Paths.get(\".\", filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"QQH0828"},"content":"            List\u003cString\u003e taskLine \u003d Files.readAllLines(file);","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"QQH0828"},"content":"            for (int i \u003d 0; i \u003c taskLine.size(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"QQH0828"},"content":"                String[] content \u003d taskLine.get(i).split(\" \\\\| \");","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"QQH0828"},"content":"                switch (content[0]) {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"QQH0828"},"content":"                case \"T\":","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"QQH0828"},"content":"                    arrayList.add(Todo.generateTask(content));","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"QQH0828"},"content":"                    break;","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"QQH0828"},"content":"                case \"E\":","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"QQH0828"},"content":"                    arrayList.add(Event.generateTask(content));","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"QQH0828"},"content":"                    break;","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"QQH0828"},"content":"                case \"D\":","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"QQH0828"},"content":"                    arrayList.add(Deadline.generateTask(content));","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"QQH0828"},"content":"                    break;","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"QQH0828"},"content":"                default:","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"QQH0828"},"content":"                    throw new DukeException(\"\\t Invalid data!\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"QQH0828"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"QQH0828"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"QQH0828"},"content":"            System.out.println(\"\\t File not found.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"QQH0828"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"QQH0828"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"QQH0828"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"QQH0828"},"content":"            System.out.println(\"\\t Invalid Path.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"QQH0828"},"content":"        return new TaskList(arrayList);","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"QQH0828"},"content":"     * Saves tasks into the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"QQH0828"},"content":"     * @param tasks Tasks are stored in the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"QQH0828"},"content":"    public void saveData(TaskList tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"QQH0828"},"content":"        Path file \u003d Paths.get(\".\", filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"QQH0828"},"content":"        ArrayList\u003cTask\u003e arrayList \u003d tasks.getTasks();","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"QQH0828"},"content":"        String data \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"QQH0828"},"content":"            for (Task task : arrayList) {","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"QQH0828"},"content":"                data +\u003d task.storeTaskString() + \"\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"QQH0828"},"content":"            Files.writeString(file, data);","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"QQH0828"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"QQH0828"},"content":"            System.out.println(\"\\t Invalid Path.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"QQH0828"},"content":"     * Load all commands from help.txt.","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"QQH0828"},"content":"     * @return Returns all available commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"QQH0828"},"content":"    public String loadHelpExplanationFile() {","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"QQH0828"},"content":"        Path file \u003d Paths.get(\".\", helpFilePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"QQH0828"},"content":"        String explanation \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"QQH0828"},"content":"            byte[] bs \u003d Files.readAllBytes(file);","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"QQH0828"},"content":"            explanation \u003d new String(bs);","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"QQH0828"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"QQH0828"},"content":"            System.out.println(\"\\t File not found.\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"QQH0828"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"QQH0828"},"content":"            System.out.println(\"\\t Invalid Path.\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"QQH0828"},"content":"        return explanation;","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":130}},{"path":"src/main/java/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import userinteraction.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" * Task list class which stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"public class TaskList {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"     * @param tasks Arraylist that stores all tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"        return tasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"     * List all the tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"     * @param input User input.","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"     * @return Returns a list of tasks are stored.","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"    public String listTask(String input) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"        String[] inputLine \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"        if (inputLine.length \u003e 1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The format is invalid!\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"        assert inputLine.length \u003d\u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"            str +\u003d \"\\t \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"     * Adds a task into task list.","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"     * @param task A task.","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"     * Deletes a task in the task list.","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"     * @param input User input","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"QQH0828"},"content":"     * @param ui    The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"QQH0828"},"content":"     * @param storage Deletes a task in a file.","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"QQH0828"},"content":"     * @return Returns delete message of specific task.","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"QQH0828"},"content":"    public String deleteTask(String input, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"QQH0828"},"content":"        if (input.trim().equals(\"delete\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a delete cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"QQH0828"},"content":"        String[] inputLine \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"QQH0828"},"content":"        if (inputLine.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The format is invalid, please give numbers.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"QQH0828"},"content":"        assert inputLine.length \u003d\u003d 2;","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"QQH0828"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"QQH0828"},"content":"            taskIndex \u003d Integer.parseInt(inputLine[1]);","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"QQH0828"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! Please input a valid number.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"QQH0828"},"content":"        int taskListSize \u003d this.getSize();","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"QQH0828"},"content":"        if (taskIndex \u003c 1 || taskIndex \u003e taskListSize) {","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The index is out of range.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"QQH0828"},"content":"        Task task \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"QQH0828"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"QQH0828"},"content":"        storage.saveData(this);","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"QQH0828"},"content":"        return ui.printDeleteTaskMsg(task, tasks.size());","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"QQH0828"},"content":"     * Marks or unmarks a task.","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"QQH0828"},"content":"     * @param isDone Boolean to mark or unmark a task.","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"QQH0828"},"content":"     * @param input  User Input.","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"QQH0828"},"content":"     * @param ui     The Ui to be used for printing messages.","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"QQH0828"},"content":"     * @return Returns mark or unmark task message.","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"QQH0828"},"content":"    public String markTask(boolean isDone, String input, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"QQH0828"},"content":"        if (input.trim().equals(\"mark\") || input.trim().equals(\"unmark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! Please input a number.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"QQH0828"},"content":"        String[] inputLine \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"QQH0828"},"content":"        if (inputLine.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The format is invalid, please give numbers.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"QQH0828"},"content":"        assert inputLine.length \u003d\u003d 2;","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"QQH0828"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"QQH0828"},"content":"            taskIndex \u003d Integer.parseInt(inputLine[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"QQH0828"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! Please input a valid number.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"QQH0828"},"content":"        int taskListSize \u003d tasks.size();","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"QQH0828"},"content":"        if (taskIndex + 1 \u003e taskListSize || taskIndex \u003c 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The index is out of range.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"QQH0828"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"QQH0828"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"QQH0828"},"content":"        storage.saveData(this);","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"QQH0828"},"content":"        return ui.printMarkTaskMsg(isDone, task);","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"QQH0828"},"content":"     * Finds the tasks which contains the same input descriptions.","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"QQH0828"},"content":"     * @param input User input","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"QQH0828"},"content":"     * @param ui    The Ui to be used for printing messages.","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"QQH0828"},"content":"     * @return Returns a list of tasks whose contain the input.","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"QQH0828"},"content":"    public String findTask(String input, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"QQH0828"},"content":"        if (input.trim().equals(\"find\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a find cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"QQH0828"},"content":"        String[] inputLine \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"QQH0828"},"content":"        if (inputLine.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The format is invalid, please give a search information.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"QQH0828"},"content":"        assert inputLine.length \u003d\u003d 2;","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"QQH0828"},"content":"        ui.printFindTaskMsg();","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"QQH0828"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"QQH0828"},"content":"            if (tasks.get(i).getDescription().contains(inputLine[1])) {","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"QQH0828"},"content":"                str +\u003d \"\\t \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"QQH0828"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":154}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import utils.DateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":" * Deadline class to deal with deadline tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    private String dateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * @param isDone      Marks or unmarks the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     * @param dateTime    Deadline date time.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    private Deadline(String description, boolean isDone, String dateTime) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * Returns deadline task based on the user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     * @param input User Input.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * @return Deadline task.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    public static Deadline generate(String input) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"        if (input.trim().equals(\"deadline\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        String[] inputLine \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        if (inputLine.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"        String[] descriptions \u003d inputLine[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"        if (descriptions.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The date time of a deadline cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"        return new Deadline(descriptions[0], false,","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"                DateTime.dateFormatter(descriptions[1]));","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"     * Returns a deadline task from the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"     * @param taskLine Each line from the input file.","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"     * @return Deadline task.","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"    public static Deadline generateTask(String[] taskLine) {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"        boolean check \u003d taskLine[1].equals(\"1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"        return new Deadline(taskLine[2], check, taskLine[3]);","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"        return dateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"        return \"D\";","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"QQH0828"},"content":"    public String storeTaskString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"QQH0828"},"content":"        String str \u003d this.getTaskType() + \" | \" + this.getMarkedString()","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"QQH0828"},"content":"                + \" | \" + this.getDescription() + \" | \" + this.getDateTime();","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"QQH0828"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"QQH0828"},"content":"        String discription \u003d this.getDescription();","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"QQH0828"},"content":"        boolean checked \u003d this.isDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"QQH0828"},"content":"        String dateTime \u003d this.getDateTime();","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"QQH0828"},"content":"        if (checked) {","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"QQH0828"},"content":"            str \u003d \"[D][X] \" + discription + \" (by: \" + dateTime + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"QQH0828"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"QQH0828"},"content":"            str \u003d \"[D][ ] \" + discription + \" (by: \" + dateTime + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":83}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import utils.DateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":" * Event class to deal with event tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    private final String start;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"    private final String end;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     * @param isDone      Marks or unmarks the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"     * @param start       Event start date time.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"     * @param start       Event end date time.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    private Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"     * Returns event task based on the user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     * @param input User Input.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"     * @return Event task.","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"    public static Event generate(String input) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        if (input.trim().equals(\"event\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a event cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"        String[] inputLine \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"        if (inputLine.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a event cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        String[] startEndTime \u003d inputLine[1].split(\" /from \");","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"        if (startEndTime.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The start time of a event cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"        String[] dateTime \u003d startEndTime[1].split(\" /to \");","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"        if (dateTime.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The end time of a event cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"        return new Event(startEndTime[0], false,","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"                DateTime.dateFormatter(dateTime[0]), DateTime.dateFormatter(dateTime[1]));","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"     * Returns a event task from the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"     * @param taskLine Each line from the input file.","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"     * @return Event task.","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"    public static Event generateTask(String[] taskLine) {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"        boolean isDone \u003d taskLine[1].equals(\"1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"        return new Event(taskLine[2], isDone, taskLine[3], taskLine[4]);","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"QQH0828"},"content":"    public String getStart() {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"QQH0828"},"content":"        return start;","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"QQH0828"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"QQH0828"},"content":"        return end;","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"QQH0828"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"QQH0828"},"content":"        return \"E\";","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"QQH0828"},"content":"    public String storeTaskString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"QQH0828"},"content":"        String str \u003d this.getTaskType() + \" | \"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"QQH0828"},"content":"                + this.getMarkedString() + \" | \"","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"QQH0828"},"content":"                + this.getDescription() + \" | \"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"QQH0828"},"content":"                + this.getStart() + \" | \" + this.getEnd();","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"QQH0828"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"QQH0828"},"content":"        String discription \u003d this.getDescription();","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"QQH0828"},"content":"        boolean checked \u003d this.isDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"QQH0828"},"content":"        String startTime \u003d this.getStart();","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"QQH0828"},"content":"        String endTime \u003d this.getEnd();","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"QQH0828"},"content":"        if (checked) {","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"QQH0828"},"content":"            str \u003d \"[E][X] \" + discription + \" (from: \" + startTime","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"QQH0828"},"content":"                    + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"QQH0828"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"QQH0828"},"content":"            str \u003d \"[E][ ] \" + discription + \" (from: \" + startTime","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"QQH0828"},"content":"                    + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":99}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":" * Abstract class for task.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"    private final String description;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     * @param isDone      Marks or unmarks the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"        return isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"    public String getMarkedString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"        return isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"        return description;","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"    public abstract String storeTaskString();","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":40}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":" * Todo class to deal with todo tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     * @param isDone      Marks or unmarks the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"    private Todo(String description, boolean isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"     * Returns todo task based on the user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"     * @param input User Input.","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"     * @return Todo task.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"    public static Todo generate(String input) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"        if (input.trim().equals(\"todo\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"        String[] inputLine \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"        if (inputLine.length \u003c 2) {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t ☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        return new Todo(inputLine[1], false);","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"     * Returns a todo task from the file.","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"     * @param taskLine Each line from the input file.","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"     * @return Todo task.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"    public static Todo generateTask(String[] taskLine) {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"        boolean isDone \u003d taskLine[1].equals(\"1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"        return new Todo(taskLine[2], isDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"        return \"T\";","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"    public String storeTaskString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"        String str \u003d this.getTaskType() + \" | \"","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"                + this.getMarkedString() + \" | \" + this.getDescription();","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"        boolean checked \u003d this.isDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"        String discription \u003d this.getDescription();","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"QQH0828"},"content":"        if (checked) {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"QQH0828"},"content":"            str \u003d \"[T][X] \" + discription;","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"QQH0828"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"QQH0828"},"content":"            str \u003d \"[T][ ] \" + discription;","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":71}},{"path":"src/main/java/userinteraction/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package userinteraction;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import command.*;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":" * Parses all the user input into corresponding commands to be executed.","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"public class Parser {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"     * Checks whether the commands are valid. If it is valid, return a corresponding","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"     * command.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * @return The corresponding command.","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"            return new ExitCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"            return new ListCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"            return new MarkTaskCommand(input, true);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"            return new MarkTaskCommand(input, false);","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"            return new AddTodoCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"            return new AddDeadlineCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"            return new AddEventCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"            return new DeleteTaskCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"            return new FindTaskCommand(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"        } else if (input.startsWith(\"help\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"            return new HelpCommand(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"            return new InvalidCommand(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":42}},{"path":"src/main/java/userinteraction/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package userinteraction;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import storage.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" * Ui that displays commands\u0027 message.","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"public class Ui {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    private final String LOGO \u003d \"\\t  ____        _        \\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"            + \"\\t |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"            + \"\\t | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"            + \"\\t | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"            + \"\\t |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    private final String BYE_MSG \u003d \"\\t Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    public Ui() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"     * Display the welcome message.","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"     * @return Returns the welcome message.","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"    public String printWelcomeMsg() {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"        String str \u003d LOGO + \"\\t Hello! I am Duke.\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"                + \"\\t What can I do for you?\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"     * Display adding task message.","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"     * @param taskList Stores all tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"     * @param task The specific task needs to be displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"     * @return The add task message being displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"    public String printAddTaskMsg(TaskList taskList, Task task) {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\\t Got it. I\u0027ve added this task:\\n  \" + \"\\t\\t \"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"QQH0828"},"content":"                + task.toString() + \"\\n\\t Now you have \"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"QQH0828"},"content":"                + taskList.getSize() + \" tasks in the list\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"QQH0828"},"content":"     * Display mark or unmark task message.","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"QQH0828"},"content":"     * @param isMarked Checks whether the task marked.","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"QQH0828"},"content":"     * @param task The specific task needs to be displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"QQH0828"},"content":"     * @return The mark or unmark message being displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"QQH0828"},"content":"    public String printMarkTaskMsg(boolean isMarked, Task task) {","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"QQH0828"},"content":"        if (isMarked) {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"QQH0828"},"content":"            str \u003d \"\\t Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"QQH0828"},"content":"                    + \"\\t\\t \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"QQH0828"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"QQH0828"},"content":"            str \u003d \"\\t OK, I\u0027ve marked this task as not done yet: \\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"QQH0828"},"content":"                    + \"\\t\\t \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"QQH0828"},"content":"     * Display delete task message.","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"QQH0828"},"content":"     * @param task The specific task needs to be displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"QQH0828"},"content":"     * @param size The size of the available tasks.","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"QQH0828"},"content":"     * @return The delete task message being displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"QQH0828"},"content":"    public String printDeleteTaskMsg(Task task, int size) {","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\\t Noted. I\u0027ve removed this task:\\n\" + \"\\t\\t \"","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"QQH0828"},"content":"                + task.toString() + \"\\n\\t Now you have \"","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"QQH0828"},"content":"                + size + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"QQH0828"},"content":"     * Display the find task message.","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"QQH0828"},"content":"     * @return The find task message being displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"QQH0828"},"content":"    public String printFindTaskMsg() {","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\\t Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"QQH0828"},"content":"     * Display the invalid command message.","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"QQH0828"},"content":"     * @return The invalid command message being displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"QQH0828"},"content":"    public String printWrongMsg() {","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"QQH0828"},"content":"        String str \u003d \"\\t ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"QQH0828"},"content":"        return str;","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"QQH0828"},"content":"     * Display the explanation of the commands.","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"QQH0828"},"content":"     * @param storage Saves explanation in a file.","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"QQH0828"},"content":"     * @return The explanation of all commands being displayed.","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"QQH0828"},"content":"    public String printHelpMsg(Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"QQH0828"},"content":"        return storage.loadHelpExplanationFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"QQH0828"},"content":"    public String printByeMsg() {","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"QQH0828"},"content":"        return BYE_MSG;","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":119}},{"path":"src/main/java/utils/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package utils;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":" * Local date time formatting.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"public class DateTime {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"     * Returns the localDateTime type of the date and time.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"     * @param date Date which is the string type.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"     * @return LocalDateTime type of the date and time.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    public static LocalDateTime getDateTime(String date) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"            LocalDateTime localDateTime \u003d LocalDateTime.parse(date, dateTimeFormatter);","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"            return localDateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t Wrong Date Format, please write in yyyy-MM-dd HHmm.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"QQH0828"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"QQH0828"},"content":"     * Formats the date time input.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"QQH0828"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"QQH0828"},"content":"     * @param date Date which is the string type.","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"QQH0828"},"content":"     * @return String type of date time.","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"QQH0828"},"content":"     * @throws DukeException Checks the validation of input.","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"QQH0828"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"QQH0828"},"content":"    public static String dateFormatter(String date) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"QQH0828"},"content":"            LocalDateTime localDateTime \u003d getDateTime(date);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"QQH0828"},"content":"            return localDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"QQH0828"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"QQH0828"},"content":"            throw new DukeException(\"\\t Wrong Date Format, please write in yyyy-MM-dd HHmm.\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"QQH0828":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"QQH0828":19}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"    private String input \u003d \"deadline buy book /by 2018-09-08 1800\";","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"    public void storeTaskString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"            Deadline deadline \u003d Deadline.generate(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"            assertEquals(deadline.storeTaskString(), \"D | 0 | buy book | Sep 08 2018 18:00\");","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"QQH0828"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"QQH0828"},"content":"    public void getTaskTypeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"QQH0828"},"content":"            Deadline deadline \u003d Deadline.generate(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"QQH0828"},"content":"            assertEquals(deadline.getTaskType(), \"D\");","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"QQH0828"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"QQH0828"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":30}},{"path":"src/test/java/utils/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"package utils;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"public class DateTimeTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"QQH0828"},"content":"    public void getDateTimeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"            assertEquals(DateTime.dateFormatter(\"2018-08-05 1800\"), \"Aug 05 2018 18:00\");","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"QQH0828"},"content":"            assertEquals(DateTime.dateFormatter(\"2022-02-02 0937\"),\"Feb 02 2022 09:37\");","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"QQH0828"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"QQH0828"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"QQH0828"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"QQH0828"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"QQH0828"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"QQH0828":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"QQH0828"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"QQH0828"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"QQH0828"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"QQH0828"},"content":"mark 2","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"QQH0828"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"QQH0828"},"content":"mark 3","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"QQH0828"},"content":"unmark 2","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"QQH0828"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"QQH0828"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"QQH0828":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"QQH0828"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"QQH0828":2,"-":21}}]
