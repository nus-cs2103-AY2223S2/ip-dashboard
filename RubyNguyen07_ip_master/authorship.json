[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"RubyNguyen07":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"RubyNguyen07":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import duke.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":" * A class that represents a duke.Deadline with deadline time","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    /** Deadline of the task */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Deadline object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"     * @param name The name of the deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"     * @param deadline The deadline time of the task","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A deadline instance","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws InvalidDateFormatException If the deadline passed as String is not of format \"YYYY-MM-DD\"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    public Deadline(String name, String deadline) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        super(name);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"            this.deadline \u003d Parser.getDate(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Deadline object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"     * @param name The name of the deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"     * @param deadline The deadline time of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"     * @param isDone The status of the task, whether it is done or not","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A deadline instance","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws InvalidDateFormatException If the deadline passed as String is not of format \"YYYY-MM-DD\"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"    public Deadline(String name, String deadline, boolean isDone) throws InvalidDateFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"            this.deadline \u003d Parser.getDate(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the string representation of the Deadline task, including","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"     * whether the task is done or not.","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"        return \"D | \" + super.toString() + \" | \" + Parser.getString(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RubyNguyen07":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import duke.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"/** A class that represents a Personal Assistant Chatbot","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":" * that helps keep track of various things.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    /** Storage that handles hard-disk saving */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    /** TaskList that keeps track of all the tasks added */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    /** Ui that handles user interface jobs */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Duke object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"     * @param filePath The name of the file where you keep list of tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A Duke instance","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    public Duke(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"        tasks \u003d new TaskList(storage.initialize());","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"     * Starts running the Duke","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"        ui.greet();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        String str;","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"        while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"            str \u003d ui.getLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"            if (str.equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"                ui.goodBye();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"                tasks.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"            if (str.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"                ui.listCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"            } else if (str.length() \u003e\u003d 5 \u0026\u0026 str.toLowerCase().startsWith(\"mark \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"                ui.markCommand(str, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"            } else if (str.length() \u003e\u003d 6 \u0026\u0026 str.toLowerCase().startsWith(\"unmark \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"                ui.unmarkCommand(str, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"            } else if (str.length() \u003e\u003d 5 \u0026\u0026 str.toLowerCase().startsWith(\"todo \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"                ui.todoCommand(str, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"            } else if (str.length() \u003e\u003d 6 \u0026\u0026 str.toLowerCase().startsWith(\"event \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"                ui.eventCommand(str, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"            } else if (str.length() \u003e\u003d 9 \u0026\u0026 str.toLowerCase().startsWith(\"deadline \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"                ui.deadlineCommand(str, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"            } else if (str.length() \u003e\u003d 7 \u0026\u0026 str.toLowerCase().startsWith(\"delete \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"                ui.deleteCommand(str, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"            } else if (str.length() \u003e\u003d 5 \u0026\u0026 str.toLowerCase().startsWith(\"find \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"                ui.findCommand(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"                System.out.println(new InvalidCommandException().getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"        ui.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"RubyNguyen07":75}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"* A class that represents an event with starting and ending time","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"*/","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"    /** The start time of the event */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"    private String start;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    /** The end time of the event */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"    private String end;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"    * Initializes an Event object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    *","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    * @param name The name of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    * @param start The starting time of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    * @param end The ending time of the event","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    * @return An event instance","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"    */","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"        super(name);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Event object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"     * @param name The name of the event","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"     * @param start The starting time of the event","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"     * @param end The ending time of the event","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"     * @param isDone The status of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"     * @return An event instance","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"    public Event(String name, String start, String end, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the string representation of the duke.Event task, including","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"     * whether the task is done or not.","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"        return \"E | \" + super.toString() + \" | \" + start + \" - \" + end;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RubyNguyen07":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"/** A class Parser that deals with making sense of the user command */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns an array that contains the name of the task and the rest of the command after parsing","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"     * @param line The command","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws MissingTimeException If there is not a time element in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws MissingNameException If the name of the task is blank","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"     * @returns Array of string with name and the rest of the command","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    public static String[] separate(String line) throws MissingTimeException, MissingNameException {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"            int i;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"            for (i \u003d 0; i \u003c line.length(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"                if (line.charAt(i) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"                sb.append(line.charAt(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"            String name \u003d sb.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"            if (name.isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"                throw new MissingNameException();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"            String theRest \u003d line.substring(i + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"            return new String[] {name, theRest};","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"            throw new MissingTimeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the deadline in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"     * @param line The command","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws MissingTimeException If there is not a time element in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws InvalidSyntaxException If the command does not start with \"by\" keyword","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"     * @returns The deadline as string","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    public static String getDeadline(String line) throws MissingTimeException, InvalidSyntaxException {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"            String toReturn \u003d line.substring(3);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"            if (toReturn.isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"                throw new MissingTimeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"            if (!line.startsWith(\"by \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"                throw new InvalidSyntaxException();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"            return toReturn;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"            throw new MissingTimeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the task number in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"     * @param str The string passed","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"     * @param from The starting index to start searching for task number","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws MissingArgumentsException If there is no number detected","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws InvalidTaskNumberException If the task number is invalid: smaller or equal to","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"     *                                    0 or larger than list size","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"     * @returns The task number","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"    public static int getTaskNumber(String str, int from) throws MissingArgumentsException, InvalidTaskNumberException {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"        int numOfTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"            numOfTask \u003d Integer.parseInt(str.substring(from));","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"            throw new MissingArgumentsException();","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"        // Handle when the index is out of bound -\u003e create a separate function","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"        if (numOfTask \u003c\u003d 0 || numOfTask \u003e TaskList.getList().size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"        return numOfTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the array that contains starting and ending time in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"RubyNguyen07"},"content":"     * @param line The string passed","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws MissingArgumentsException If there is not either starting or ending time","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws InvalidSyntaxException If the syntax of the command is not correct","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws MissingTimeException If either of the starting or ending time is blank","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"RubyNguyen07"},"content":"     * @returns The task number","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"RubyNguyen07"},"content":"    public static String[] getDuration(String line) throws MissingArgumentsException, MissingTimeException, InvalidSyntaxException {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"            String[] arr \u003d line.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"RubyNguyen07"},"content":"            if (!arr[0].startsWith(\"from \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"RubyNguyen07"},"content":"                throw new InvalidSyntaxException();","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"RubyNguyen07"},"content":"            arr[0] \u003d arr[0].substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"RubyNguyen07"},"content":"            if (!arr[1].startsWith(\"to \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"RubyNguyen07"},"content":"                throw new InvalidSyntaxException();","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"RubyNguyen07"},"content":"            arr[1] \u003d arr[1].substring(3);","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"RubyNguyen07"},"content":"            if (arr[0].isBlank() || arr[1].isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"RubyNguyen07"},"content":"                throw new MissingTimeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"RubyNguyen07"},"content":"            return arr;","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"RubyNguyen07"},"content":"            throw new MissingArgumentsException();","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the array that contains starting and ending time in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"RubyNguyen07"},"content":"     * @param str The string passed","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"RubyNguyen07"},"content":"     * @param from The index that starts searching from","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws MissingNameException If name found is blank","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws MissingArgumentsException If there is no name detected","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"RubyNguyen07"},"content":"     * @returns The name in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"RubyNguyen07"},"content":"    public static String getName(String str, int from) throws MissingNameException, MissingArgumentsException {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"RubyNguyen07"},"content":"            String name \u003d str.substring(from);","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"RubyNguyen07"},"content":"            if (name.isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"RubyNguyen07"},"content":"                throw new MissingNameException();","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"RubyNguyen07"},"content":"            return name;","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"RubyNguyen07"},"content":"        }  catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"RubyNguyen07"},"content":"            throw new MissingArgumentsException();","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the date as string in format of \"MMM dd YYYY\"","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"RubyNguyen07"},"content":"     * @param d LocalDate object","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"RubyNguyen07"},"content":"     * @returns The date parsed","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"RubyNguyen07"},"content":"    public static String getString(LocalDate d) {","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"RubyNguyen07"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd YYYY\");","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"RubyNguyen07"},"content":"        return d.format(formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the date as a LocalDate object","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"RubyNguyen07"},"content":"     * @param str The string","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"RubyNguyen07"},"content":"     * @returns The LocalDate object","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"RubyNguyen07"},"content":"    public static LocalDate getDate(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"RubyNguyen07"},"content":"        // Solve the exception here","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"RubyNguyen07"},"content":"        return LocalDate.parse(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the string of form \"YYYY-MM-DD\" that contains date","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"RubyNguyen07"},"content":"     * @param str The string of form \"MMM dd YYYY\"","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"RubyNguyen07"},"content":"     * @returns The string of form \"YYYY-MM-DD\"","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"RubyNguyen07"},"content":"    public static String getDateMMM(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"RubyNguyen07"},"content":"        // Solve the exception here","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"RubyNguyen07"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd YYYY\");","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"RubyNguyen07"},"content":"        return getString(LocalDate.parse(str, formatter));","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RubyNguyen07":175}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import duke.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"/** A class Storage that deals with loading tasks from the file and saving tasks in the file */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"    /** The file path */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    private String path;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Storage object with the given path.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"     * @param relativePath The relative path","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A Storage instance","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    public Storage(String relativePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        path \u003d relativePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes and loads tasks from file indicated when Duke is started.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws FileNotFoundException If file is not found","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A list of tasks saved in file","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"    public ArrayList\u003cTask\u003e initialize() throws FileNotFoundException {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"        ArrayList\u003cTask\u003e og \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"                String[] keywords \u003d splitString(str);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"                String type \u003d keywords[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"                String doneStatus \u003d keywords[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"                boolean isDone \u003d doneStatus \u003d\u003d \"X\" ? true : false;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"                Task toInsert \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"                switch (type) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"                case \"T\":","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"                    toInsert \u003d new ToDo(keywords[2], isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"                case \"D\":","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"                        toInsert \u003d new Deadline(keywords[2], Parser.getDateMMM(keywords[3]), isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"                    } catch (InvalidDateFormatException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"                        System.out.println(err.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"                case \"E\":","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"                    String[] duration \u003d keywords[3].split(\" - \");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"                    toInsert \u003d new Event(keywords[2], duration[0], duration[1], isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"                og.add(toInsert);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"            sc.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        return og;","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"    private String[] splitString(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"        return str.split(\" \\\\| \");","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"     * Load tasks from another place into the file","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws IOException If there is a problem with the writer class","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"    public void load() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"            f.delete();","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"        f.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"        ArrayList\u003cTask\u003e changed \u003d TaskList.getList();","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"        for (int i \u003d 0; i \u003c changed.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"            fw.write(changed.get(i).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"            fw.write(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"RubyNguyen07"},"content":"        fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RubyNguyen07":95}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":" * A class that represents a Task","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"    /** Name of the task */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"    private String taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    /** Status of the class */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Task object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A task instance","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Task object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"     * @param isDone The status of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A task instance","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"     * Mark the task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"     * Mark the task as undone","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"     * Get the status of the task, whether it is done or not","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A string representation of the task\u0027s status","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"        return isDone ? \"X\" : \"O\";","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"     * Get the name of the task","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A string representation of the task\u0027s name","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the string representation of the task, including","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"     * whether the task is done or not.","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"        return getStatus() + \" | \" + this.taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RubyNguyen07":78}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"/** A class TaskList that contains the task list e.g., it has operations to add/delete tasks in the list */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"    /** The array that stores the list */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an TaskList object.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an TaskList object with the given array.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"     * @param tasks The given array that contains tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    public static ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"     * Mark the task is done with the number of task given","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"     * @param index The number of task given","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The name of the task marked","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"    public static String markDone(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        tasks.get(index).markDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        return tasks.get(index).getTaskName();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"     * Unmark the task with the number of task given","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"     * @param index The number of task given","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The name of the task unmarked","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"    public static String markUndone(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        tasks.get(index).markUndone();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"        return tasks.get(index).getTaskName();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     * Add the task into the array","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"     * @param task The task","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"     * Remove the task with the number of task given","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"     * @param index The number of task given","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The task removed","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"    public static Task remove(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"    public static ArrayList\u003cTask\u003e findMatch(String keyword) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"            Task temp \u003d tasks.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"            if (temp.getTaskName().contains(keyword)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"                matchedTasks.add(temp);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"        return matchedTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"     * Destroy the TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"    public static void close() {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"        tasks \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RubyNguyen07":90}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":" * A class that represents a todo task","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Todo object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"     * @param name The name of the todo","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A todo instance","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"        super(name);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"     * Initializes an Todo object with the given values.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"     * @param name The name of the todo","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"     * @param isDone The status of the todo","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A todo instance","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the string representation of the Todo task, including","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"     * whether the task is done or not.","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"        return \"T | \" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RubyNguyen07":38}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String GREETING \u003d \"Hello from\\n\" + LOGO;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String LIST \u003d \"Duke presents tasks in your list: \";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String BYE \u003d \"Duke says bye bye ~~\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String MATCHING \u003d \"Duke finds these items containg your keyword: \";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    private BufferedReader bf;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        bf \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    public String getLine() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"            return bf.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Error in analyzing inputs\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"            return \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"    public void close() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        bf.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"    public void greet() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"    public void goodBye() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        System.out.println(BYE);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"        lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    public void listCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"        ArrayList\u003cTask\u003e arr \u003d TaskList.getList();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"        if (arr.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Duke sees no tasks in your list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"        listTasks(arr);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"     static void todoCommand(String str, Storage storage) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"            Task toDo \u003d new ToDo(Parser.getName(str, 5));","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"            TaskList.addTask(toDo);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"            storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(toDo);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Now you have \" + TaskList.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (MissingArgumentsException | MissingNameException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"     static void eventCommand(String str, Storage storage) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"            String[] foo;","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"                foo \u003d Parser.separate(str.substring(6));","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"            } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"                throw new MissingArgumentsException();","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"            String[] bar \u003d Parser.getDuration(foo[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"            Task toAdd \u003d new Event(foo[0], bar[0], bar[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"            TaskList.addTask(toAdd);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"            storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(toAdd);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Now you have \" + TaskList.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (MissingArgumentsException | MissingNameException | MissingTimeException | InvalidSyntaxException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"RubyNguyen07"},"content":"     static void deadlineCommand(String str, Storage storage) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"RubyNguyen07"},"content":"            String[] foo;","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"RubyNguyen07"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"RubyNguyen07"},"content":"                foo \u003d Parser.separate(str.substring(9));","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"            } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"RubyNguyen07"},"content":"                throw new MissingArgumentsException();","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"RubyNguyen07"},"content":"            Task toAdd \u003d new Deadline(foo[0], Parser.getDeadline(foo[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"RubyNguyen07"},"content":"            TaskList.addTask(toAdd);","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"RubyNguyen07"},"content":"            storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(toAdd);","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Now you have \" + TaskList.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (MissingArgumentsException | MissingTimeException | MissingNameException | InvalidSyntaxException |","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"RubyNguyen07"},"content":"                 InvalidDateFormatException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"RubyNguyen07"},"content":"     static void deleteCommand(String str, Storage storage) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"RubyNguyen07"},"content":"            int num \u003d Parser.getTaskNumber(str, 7);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"RubyNguyen07"},"content":"            Task removed \u003d TaskList.remove(num - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"RubyNguyen07"},"content":"            storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(removed.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Now you have \" + TaskList.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (MissingArgumentsException | InvalidTaskNumberException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"RubyNguyen07"},"content":"     void markCommand(String str, Storage storage) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"RubyNguyen07"},"content":"            int index \u003d Parser.getTaskNumber(str,5) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"RubyNguyen07"},"content":"            String name \u003d TaskList.markDone(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"RubyNguyen07"},"content":"            storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"Nice! duke.Duke has marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"[X] \" + name);","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (MissingArgumentsException | InvalidTaskNumberException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"RubyNguyen07"},"content":"     void unmarkCommand(String str, Storage storage) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"RubyNguyen07"},"content":"            int index \u003d Parser.getTaskNumber(str,7) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"RubyNguyen07"},"content":"            String name \u003d TaskList.markUndone(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"RubyNguyen07"},"content":"            storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"OK, duke.Duke has marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(\"[O] \" + name);","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"RubyNguyen07"},"content":"            lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (MissingArgumentsException | InvalidTaskNumberException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"RubyNguyen07"},"content":"    void findCommand(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"RubyNguyen07"},"content":"            String keyword \u003d Parser.getName(str, 5);","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"RubyNguyen07"},"content":"            ArrayList\u003cTask\u003e matchedTasks \u003d TaskList.findMatch(keyword);","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"RubyNguyen07"},"content":"            if (matchedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"RubyNguyen07"},"content":"                System.out.println(\"Duke finds no tasks containing the keyword given\");","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"RubyNguyen07"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"RubyNguyen07"},"content":"                lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"RubyNguyen07"},"content":"                System.out.println(MATCHING);","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"RubyNguyen07"},"content":"                listTasks(matchedTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"RubyNguyen07"},"content":"                lineUI();","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (MissingNameException | MissingArgumentsException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"RubyNguyen07"},"content":"    void listTasks(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"RubyNguyen07"},"content":"        int cnt \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"RubyNguyen07"},"content":"        while (cnt \u003c\u003d arr.size()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"RubyNguyen07"},"content":"            Task item \u003d arr.get(cnt - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"RubyNguyen07"},"content":"            System.out.println(cnt + \".\" + item.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"RubyNguyen07"},"content":"            cnt++;","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"RubyNguyen07"},"content":"     static void lineUI() {","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"RubyNguyen07"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RubyNguyen07":194}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RubyNguyen07":7}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"     * Initialize an duke.exceptions.InvalidCommandException exception, which represents","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"     * the error that the command is not valid.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A duke.exceptions.InvalidCommandException exception","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( Double check your spellings or spaces\");","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RubyNguyen07":13}},{"path":"src/main/java/duke/exceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"        super(\"OOPS! Invalid date and time format. Please change to YYYY-MM-DD\");","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RubyNguyen07":8}},{"path":"src/main/java/duke/exceptions/InvalidSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"public class InvalidSyntaxException extends DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"     * Initialize an duke.exceptions.InvalidSyntaxException exception, which represents","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"     * the error that the syntax is not correct.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A duke.exceptions.InvalidSyntaxException exception","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    public InvalidSyntaxException() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"        super(\"OOPS! Invalid syntax here, double check your spelling\");","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RubyNguyen07":13}},{"path":"src/main/java/duke/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"     * Initialize an InvalidTaskNumber exception, which represents","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"     * the error that the task number entered is not valid.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A InvalidTaskNumber exception","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    public InvalidTaskNumberException() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"        super(\"OOOPS! The task number is not available. Try another number!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RubyNguyen07":13}},{"path":"src/main/java/duke/exceptions/MissingArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"public class MissingArgumentsException extends DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"     * Initialize a MissingArguments exception, which represents","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"     * the error that there are not enough arguments to a command","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A MissingArguments exception","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    public MissingArgumentsException() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"        super(\"OOPS! Missing arguments to the command.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RubyNguyen07":13}},{"path":"src/main/java/duke/exceptions/MissingNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"public class MissingNameException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"     * Initialize a duke.exceptions.MissingNameException exception, which represents","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"     * the error that the name of the task is missing","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A duke.exceptions.MissingNameException exception","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    public MissingNameException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"        super(\"OOPS! The task name is missing.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RubyNguyen07":13}},{"path":"src/main/java/duke/exceptions/MissingTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"public class MissingTimeException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"     * Initialize a duke.exceptions.MissingTimeException exception, which represents","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"     * the error that the time field is missing","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"     * @return A duke.exceptions.MissingTimeException exception","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    public MissingTimeException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"        super(\"OOPS! The time element is missing.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RubyNguyen07":13}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import duke.exceptions.InvalidDateFormatException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    public void testAttributesSuccess() throws InvalidDateFormatException {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"        Deadline dl \u003d new Deadline(\"meeting\", \"2022-05-06\");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(dl.getTaskName(), \"meeting\");","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(dl.getStatus(), \"O\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"    public void testAttributesInvalidDate() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        InvalidDateFormatException thrown \u003d assertThrows(InvalidDateFormatException.class, () -\u003e {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"            Deadline dl \u003d new Deadline(\"meeting\", \"2pm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        });","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"        Assertions.assertEquals(\"OOPS! Invalid date and time format. Please change to YYYY-MM-DD\", thrown.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RubyNguyen07":27}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"    public void testGetString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(\"Feb 19 2022\", Parser.getString(Parser.getDate(\"2022-02-19\")));","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RubyNguyen07":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"deadline return book /by 2022-05-06","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"todo join sports club","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"event project meeting /fromm Mon 2pm /too 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"event project meeting /from /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"deadline return book /deadline Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"mark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"unmark -1","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"byeeee","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"helloooo","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"deadline /by this day","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"delete 11","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"bye","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RubyNguyen07":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"RubyNguyen07":1}}]
