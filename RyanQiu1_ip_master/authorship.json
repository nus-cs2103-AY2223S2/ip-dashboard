[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"javafx {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"    version \u003d \"11\"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanQiu1":27,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"[T][ ] eat #bz","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"[E][ ] finish hw #ok","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"[D][X] finish code   (by: Dec 1 2023 09:00 PM)          ","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"[T][ ] finish        ","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"[T][ ] eat       ","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"[D][ ] do ip   (by: Feb 17 2023 11:59 PM) #done","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"[D][ ] do hw   (by: Dec 1 2023 07:00 PM) ","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"[T][ ] done ","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"RyanQiu1":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"## Introduction","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"The Task Mechanic is here to help you with managing all your tasks!","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"## Contents","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"1. [Features](#features)","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"2. [Usage](#usage)","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"3. [Commands](#commands)","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"4. [Command Summary](#command-summary)","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"### Add Tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"1. Todo Task","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"2. Event Task","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"3. Deadline Task","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"### Delete Tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"Allows deletion of tasks from your storage","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"### Mark and UnMarking Tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"Completed your tasks? ","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"Use the mark feature to indicate done!","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"### Tag your tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"Diffcult tasks? Tag them! ","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"### Quick Start","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"1. Ensure that you have Java 11 installed.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"2. Download the jar file of this application [here](https://github.com/RyanQiu1/ip/releases).","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"3. Copy the file to the folder you want to use as your home folder for The Task Mechanic.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"4. Navigate to that folder through CLI.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"5. Run `java -jar (name of the jar file).jar` in terminal.","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"6. The GUI in [UI](https://github.com/RyanQiu1/ip/blob/master/docs/Ui.png) should appear! Use Away!","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"## Commands","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"`todo {description}` ","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"- Fill in the description of the task with the keyword todo.","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"![img.png](img.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"`deadline {description} /by YYYY-MM-DD HH:MM` ","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"- Fill in the description, date and time in the following format for the deadline task.","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"![img_1.png](img_1.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"`event {description} /from {anything} /to {anything}`","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"- Fill in the description in the following format for event task.","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"![img_2.png](img_2.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"`delete {task number}`","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"- Fill in the task number with the following format for deleting task.","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"![img_3.png](img_3.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"`mark {task number}`","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"- Fill in the task number with the following format for marking task.","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"![img_4.png](img_4.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"`unmark {task number}`","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"- Fill in the task number with the following format for unmarking task.","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"RyanQiu1"},"content":"![img_5.png](img_5.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"`find {description matching text}`","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"RyanQiu1"},"content":"- Fill in the description that you want to find in the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"RyanQiu1"},"content":"![img_6.png](img_6.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"RyanQiu1"},"content":"`tag {task number} {description}`","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"RyanQiu1"},"content":"- Fill in the task number and description with the following format for tagging tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"RyanQiu1"},"content":"![img_7.png](img_7.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"RyanQiu1"},"content":"`list`","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"RyanQiu1"},"content":"- Shows all the tasks you currently have.","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"RyanQiu1"},"content":"![img_8.png](img_8.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"RyanQiu1"},"content":"`bye`","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"RyanQiu1"},"content":"- To end the program.","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"RyanQiu1"},"content":"![img_9.png](img_9.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"RyanQiu1"},"content":"## Command Summary","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"RyanQiu1"},"content":"|                     Command                     |                              Description                               |","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"RyanQiu1"},"content":"|:-----------------------------------------------:|:----------------------------------------------------------------------:|","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"RyanQiu1"},"content":"|               todo `description`                |              Creates a todo with the given `description`               |","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"RyanQiu1"},"content":"| deadline `description` /by `YYYY-MM-DD` `HH:MM` | Creates a deadline with the given `description` set by the given time. |","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"RyanQiu1"},"content":"|   event `description` /from `when` /to `when`   |  Creates an event with the given `description` set at the given time.  |","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"RyanQiu1"},"content":"|                      list                       |                    Lists all currently saved tasks.                    |","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"RyanQiu1"},"content":"|                  mark `number`                  |               Marks task `number` from list as complete.               |","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"RyanQiu1"},"content":"|                 unmark `number`                 |              Marks task `number` from list as incomplete.              |","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"RyanQiu1"},"content":"|                 delete `number`                 |              Deletes task `number` from list permanently.              |","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"RyanQiu1"},"content":"|               find `description`                |      Returns all tasks whose `description` match the exact text.       |","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"RyanQiu1"},"content":"|              tag `number` `phrase`              |                   Tag task `number` with a `phrase`.                   |","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"RyanQiu1"},"content":"|                       bye                       |              Saves all tasks to storage and ends program.              |","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"RyanQiu1":87,"-":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" * Main Class which runs the whole chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    private StorageList storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for class Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"     * @param filePath Directory of the text file to be used for the saved commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        storage \u003d new StorageList(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"     * Method which starts the program to output the various messages and checks the commands.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"     * @param userInput The input command of the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"     * @return String The output of the command from the input.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"    public String run(String userInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"            assert tasks !\u003d null : \"Task List should always be initiated before \"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"                    + \"execution commences.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"            return \"Sorry i did not understood that command!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"            return \"Pls fill in the command accordingly\";","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"        } finally {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"            storage.updateStorage();","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RyanQiu1":58,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RyanQiu1":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    private Image iconImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/retro-robot.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"     * This method runs the ui and scene for the bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     * @param stage Sets the ui for the bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"            stage.getIcons().add(iconImage);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"            stage.setTitle(\"The Task Mechanic\");","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sendStart();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RyanQiu1":43}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":" * Implementation of Bye Command","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" **/","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"     * Method for Bye Command to display message.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Display bye message when done.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        return \"See you soon!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"     * Method that check if program is to be exited upon bye command.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean - true or false according to command.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Abstract class to allow the other commands to utilise the common methods like execute and exit.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"     * Abstract method to be used by the various commands inheriting class of command.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean - true or false when the prog fails.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public abstract String execute(TaskList tasks, StorageList storage) throws DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":21}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":" * Deadline command for the tasks with deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    private String description;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    private String targetDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    private String targetTiming;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    private LocalDate unformattedTargetDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    private LocalTime unformattedTargetTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    private LocalDate currentDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    private LocalTime currentTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    private boolean haveFormatErr;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for deadline command","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"     * @param fullCommand Command for the deadline task","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    public DeadlineCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"        String[] deadlineCommand \u003d fullCommand.split(\"/by \");","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"        String[] deadlineMessage \u003d deadlineCommand[0].split(\"deadline \");","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"        this.description \u003d deadlineMessage[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"        formatDeadlineCommand(deadlineCommand[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"     * Method that formats the deadline command string to return required target date and time.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"     * @param unformattedTiming Unformatted date and time.","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"    public void formatDeadlineCommand(String unformattedTiming) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"            String[] targetDateArray \u003d unformattedTiming.split(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"            this.haveFormatErr \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"            Pattern datePattern \u003d Pattern.compile(\"(\\\\d{4})\\\\-(\\\\d{2})\\\\-(\\\\d{2})\");","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"            Pattern timePattern \u003d Pattern.compile(\"(\\\\d{2})\\\\:(\\\\d{2})\");","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"            Matcher dateMatcher \u003d datePattern.matcher(targetDateArray[0].trim());","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"            Matcher timeMatcher \u003d timePattern.matcher(targetDateArray[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"            if (dateMatcher.matches() \u0026\u0026 timeMatcher.matches()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"                this.unformattedTargetDate \u003d LocalDate.parse(targetDateArray[0]);","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"                this.unformattedTargetTime \u003d LocalTime.parse(targetDateArray[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"                this.targetDate \u003d unformattedTargetDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"                this.targetTiming \u003d unformattedTargetTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"                this.haveFormatErr \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"            throw new DukeException(\"Invalid date and time\");","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"     * Checks if the input deadline is over the current date.","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean State of deadline being over.","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"    public boolean isDeadlineOver() {","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"        currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"RyanQiu1"},"content":"        currentTime \u003d LocalTime.now();","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"        int compareDate \u003d currentDate.compareTo(unformattedTargetDate);","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"        int compareTime \u003d currentTime.compareTo(unformattedTargetTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"RyanQiu1"},"content":"        if (compareDate \u003e 0 \u0026\u0026 compareTime \u003e 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"RyanQiu1"},"content":"            return true;","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"RyanQiu1"},"content":"        } else if (compareDate \u003e 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"RyanQiu1"},"content":"            return true;","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"RyanQiu1"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"RyanQiu1"},"content":"            return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"RyanQiu1"},"content":"     * Checks if the input has an incorrect date and time format.","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean - true or false if there is a formatting error.","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"RyanQiu1"},"content":"    public boolean isFormatCorrect() {","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"RyanQiu1"},"content":"        return !(this.haveFormatErr);","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"RyanQiu1"},"content":"     * Execute method for deadline command to display message for deadline and warn users","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"RyanQiu1"},"content":"     * of formatting.","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"RyanQiu1"},"content":"     * @return String","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"RyanQiu1"},"content":"        Deadline deadlineTask \u003d new Deadline(description, targetDate, targetTiming);","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"RyanQiu1"},"content":"        if (isFormatCorrect() \u0026\u0026 !isDeadlineOver()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"RyanQiu1"},"content":"            tasks.addToList(deadlineTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"RyanQiu1"},"content":"            return \"Got it, I\u0027ve added this task:\\n\" + deadlineTask + tasks.getLengthMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"RyanQiu1"},"content":"        } else if (isFormatCorrect() \u0026\u0026 isDeadlineOver()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"RyanQiu1"},"content":"            return \"Deadline is over, please insert another deadline.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"RyanQiu1"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"RyanQiu1"},"content":"            return \"Wrong Format, Please fill in with the following format: YYYY-MM-DD HH:MM\";","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"RyanQiu1":117}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Delete Command to remove the tasks users do not want, according to its number on the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    private int listNum;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for the delete command.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * @param input The task that the user wants to delete.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        int taskNumberMark \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        this.listNum \u003d taskNumberMark;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     * Execute method which displays the message number that has been deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     * @return String displays the task number and message which is deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"        tasks.deleteTask(listNum);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        return \"Task \" + (listNum + 1) + \" has been deleted from the list\\n\" + tasks.getLengthMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":35}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Event command with event and from and to timing.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    private String message;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private String from;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    private String to;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for the event command.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"     * @param input","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        String[] eventCommand \u003d input.split(\"/\");","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        String[] eventMessage \u003d eventCommand[0].split(\"event \");","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        String[] fromTiming \u003d eventCommand[1].split(\"from \");","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        String[] toTiming \u003d eventCommand[2].split(\"to \");","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"        this.message \u003d eventMessage[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"        this.from \u003d fromTiming[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        this.to \u003d toTiming[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"     * Method to execute the event task, which marks the from and to timings.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output when the event command is executed.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"        Event t \u003d new Event(message, from, to);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"        tasks.addToList(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"        return \"Got it, I\u0027ve added this task:\" + t + tasks.getLengthMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":43}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" * This class builds a find command object to allow string to be matched.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    private String message;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for find command.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"     * @param fullCommand Input for command to be found in task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        String[] findCommand \u003d fullCommand.split(\"find \");","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        this.message \u003d findCommand[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * Method to execute the finding of tasks in the task list.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"     * @return String","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d tasks.findStringInTask(message);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"        String stringOutputOfTask \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"        for (Task t : tasksList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"            stringOutputOfTask +\u003d t + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"        return \"Here are the matching tasks in your list: \" + \"\\n\" + stringOutputOfTask;","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RyanQiu1":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":" * List command to show the current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"     * Method to execute the list command.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output of list stored in the textfile.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        return tasks.printList();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"RyanQiu1":23}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Mark Command to make any task on the list to be done.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for mark command.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * @param input Task to be marked as completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        int taskNumber \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        this.taskNum \u003d taskNumber;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     * Method to execute the marking the task as completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output when the task is marked complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"        tasks.markTask(taskNum);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        return \"Task \" + (taskNum + 1) + \" has been marked as done.\\n\" + tasks.getLengthMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":34}},{"path":"src/main/java/duke/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Tag Command to tag task with a name.","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    private String tagName;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for tag command.","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     * @param taskNo Task to be tagged.","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"     * @param input Name of tag.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    public TagCommand(String taskNo, String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        this.tagName \u003d input;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        this.taskNum \u003d Integer.valueOf(taskNo);","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * Method to execute the tagging of the task.","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output when the task is tagged.","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"        tasks.tagTask(taskNum, tagName);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"        return \"Task \" + (taskNum) + \" has been tagged as \" + \"#\" + tagName","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"                + \"\\n\" + tasks.getLengthMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"RyanQiu1":37}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Todoclass to indicate a task needed to be completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    private String message;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for the todo command.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * @param fullCommand","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public TodoCommand(String fullCommand) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        String[] todoCommand \u003d fullCommand.split(\"todo \");","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        this.message \u003d todoCommand[1];","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     * Method to execute the todo command.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output of the todo command when executed.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"        Todo todoTask \u003d new Todo(message);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        tasks.addToList(todoTask);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"        return \"Got it, I\u0027ve added this task:\\n\" + todoTask + \"\\n\" + tasks.getLengthMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"RyanQiu1":37}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" * Unmark command to indicate task as incomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private int taskNum;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for the unmark command.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     * @param input Input for which task to be unmarked.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        int taskNumber \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        this.taskNum \u003d taskNumber;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * Method to execute the task of marking task as undone.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output when the command is unmarked.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    public String execute(TaskList tasks, StorageList storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"        tasks.unmarkTask(taskNum);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"        return \"Task \" + (taskNum + 1) + \" has been marked as not done.\\n\" + tasks.getLengthMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":37}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.controller;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    public static final String START \u003d \"I am The Task Mechanic!\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"            + \"How can I help you today?\\n\" + \"\\nHere are the commands:\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"            + \"1. Add task - todo {description}\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"            + \"2. Add event - event {description} /from {date} /to {date}\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"            + \"3. Add deadline - deadline {description} /by {YYYY-MM-DD} HH:MM\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"            + \"4. Mark task as done - mark {task no}\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"            + \"5. Mark task as not done - unmark {task no}\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"            + \"6. Find tasks in list which matches - find {word/phrase}\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"            + \"7. Tag task with description - tag {task no} {tag description}\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"            + \"8. Show all tasks - list\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"            + \"9. Remove task - delete {task no}\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"            + \"10. End Program - bye\";","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"     * Initialise and starts the ui for the bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"     * Method to set the local variable d as the intended duke object.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"     * @param d duke object to be set.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"     * Method to display welcome message to user.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"    public void sendStart() {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(START, dukeImage));","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"RyanQiu1"},"content":"        String response \u003d duke.run(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"        assert !response.equals(\"\") : \"Execution output should not be empty.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"RyanQiu1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"RyanQiu1"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"RyanQiu1"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"RyanQiu1"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RyanQiu1":82}},{"path":"src/main/java/duke/enums/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.enums;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" * Enum for the different commands.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"public enum CommandType {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    todo,","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    deadline,","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    mark,","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    unmark,","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    list,","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    bye,","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    delete,","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    find,","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    event,","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    tag;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"RyanQiu1":20}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":" * Custom Exception for duke chatbot to display custom error messages.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RyanQiu1":12}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.TagCommand;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":" * This class allows commands to be stored and checked, whether they are in the system","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":" * and its operations can be carried out.","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     * This method parses the string input and breaks it down to its respective inputs, messages, dates.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * @param input String input, where they can indicate \"todo work\" etc, which is considered an input.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     * @return Command - A command object of the indicated type will be returned","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     * @throws IllegalArgumentException - Error that the command does not exists.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"        String[] commandSeparated \u003d input.split(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        CommandType typeOfCommand \u003d CommandType.valueOf(commandSeparated[0].toLowerCase());","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"        switch (typeOfCommand) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"        case todo:","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"        case deadline:","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"        case mark:","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"            return new MarkCommand(commandSeparated[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"        case unmark:","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"            return new UnmarkCommand(commandSeparated[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"        case list:","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"        case bye:","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"        case delete:","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"            return new DeleteCommand(commandSeparated[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"        case event:","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"            return new EventCommand(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"        case find:","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"            return new FindCommand(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"        case tag:","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"            return new TagCommand(commandSeparated[1], commandSeparated[2]);","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"        default:","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"            throw new DukeException(\"Error has Occured.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":69}},{"path":"src/main/java/duke/storage/StorageList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":" * This class loads the path of the stored commands and updates it when the bot is closed.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"public class StorageList {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    private String path;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for the storagelist class.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     * @param path url for the storage list text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    public StorageList(String path) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"     * This method loads the data of the previous commands from a textfile.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"     * @return ArrayList - Returns the arraylist that is loaded from the stored textfile.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"     * @throws DukeException - File not found error will cause this exception to be thrown.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"            File file \u003d new File(this.path);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"            String tag;","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"                String[] descriptionAndCommandArray \u003d line.split(\"\\\\] \");","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"                String[] commandType \u003d descriptionAndCommandArray[0].split(\"\\\\]\");","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"                String[] tags \u003d descriptionAndCommandArray[1].split(\"#\");","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"                if (tags.length \u003e 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"                    tag \u003d tags[1];","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"                    this.list.add(new Task(tags[0].strip(),","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"                            commandType[0].substring(1), commandType[1].substring(1), tag));","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"                } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"                    tag \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"                    this.list.add(new Task(descriptionAndCommandArray[1],","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"                            commandType[0].substring(1), commandType[1].substring(1), tag));","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"            scanner.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"            return this.list;","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"            throw new DukeException(\"The file is not found in the directory\");","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"     * This method will allow the text file to be updated according to the current arraylist and ensure that textfile","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"     * will contain the most updated data.","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"RyanQiu1"},"content":"    public void updateStorage() {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"RyanQiu1"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"RyanQiu1"},"content":"                dir.mkdirs();","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"RyanQiu1"},"content":"            assert dir.exists() : \"Command file should be created\";","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"RyanQiu1"},"content":"            java.nio.file.Path path \u003d java.nio.file.Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"RyanQiu1"},"content":"            FileWriter writer \u003d new FileWriter(String.valueOf(path));","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"RyanQiu1"},"content":"            for (Task str : list) {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"RyanQiu1"},"content":"                assert str !\u003d null : \"Empty tasks should not exist in itemList.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"RyanQiu1"},"content":"                assert !str.toString().equals(\"\") : \"Storage string should never be empty.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"RyanQiu1"},"content":"                writer.write(str.toString() + System.lineSeparator());","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"RyanQiu1"},"content":"            writer.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"RyanQiu1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":92}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":" * This class is a task object, when it breaks down the deadline into the respective alphanumeric form.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    protected String targetDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    protected String targetTiming;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for the deadline class.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * @param description task description in string.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     * @param date deadline of the task to be completed.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    public Deadline(String description, String date, String timing) {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        this.targetDate \u003d date;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        this.targetTiming \u003d timing;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     * Method that returns a string of the formmated deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output of the date line object formatted.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.targetDate + \" \" + targetTiming + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":32}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":" * This class creates an event with a from and to date.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    protected String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor of the event class.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * @param description Event description.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     * @param from Date or time of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * @param to Date or time of the end of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     * Method that outputs in formatted event string.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output of the event object.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" \" + \"to: \" + to + \")\";","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":33}},{"path":"src/main/java/duke/task/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":" * Class for the tag object, to allow tagging of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"public class Tag {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"    private String tagName \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for tag.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"     * @param tagDescription Tag Description.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    public Tag(String tagDescription) {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        this.tagName \u003d tagDescription;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"     * Converts Tag object to string output.","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"     * @return String output of tag object.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"        if (this.tagName.equals(\"\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"            return this.tagName;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"            return \"#\" + this.tagName;","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"     * Sets the tag description to the tag object.","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"     * @param tagDescription Tag Description.","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"    public void putTag(String tagDescription) {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"        this.tagName \u003d tagDescription;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"RyanQiu1":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"//Reference from the partial solution provided on CS2103 module website","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" * A task class which contains description, whether it is completed, type.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    protected String typeofTask \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    protected String doneString;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private String tag \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    private Tag tagObj;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for the task class with description,","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     * type of task and done indicator.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"     * @param description String representing the task and its instructions.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"     * @param typeOfTask  Type of task indicated.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"     * @param doneStr     Tasks is marked complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    public Task(String description, String typeOfTask, String doneStr, String tagName) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"        this.doneString \u003d doneStr;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"        this.typeofTask \u003d typeOfTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        this.tag \u003d tagName;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        this.tagObj \u003d new Tag(tagName);","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"        isTaskDone();","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for task class with description only.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"     * @param description String representing the task and its instructions.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"        this.tagObj \u003d new Tag(\"\");","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"     * Checks if the string input or the task is done according to its string.","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean - Returns true if contains \"X\" else will return false.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"        if (this.doneString.equals(\"X\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"     * @return String - Returns \"X\" if the isDone variable is true, else \" \".","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"     * Marks the task as completed with the variable.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"RyanQiu1"},"content":"     * Marks the task as incomplete with the variable.","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"RyanQiu1"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"RyanQiu1"},"content":"     * Methods which outputs the task object to a string.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Description with type of task and done indicator and task description.","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"RyanQiu1"},"content":"        if (typeofTask.equals(\"\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"RyanQiu1"},"content":"            return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description + \" \" + getTagStatus();","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"RyanQiu1"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"RyanQiu1"},"content":"            return \"[\" + typeofTask + \"]\" + \"[\" + this.getStatusIcon() + \"]\" + \" \"","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"RyanQiu1"},"content":"                    + this.description + \" \" + getTagStatus();","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"RyanQiu1"},"content":"     * Adds the tag to the task object.","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"RyanQiu1"},"content":"     * @param tagDescription The tag name.","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"RyanQiu1"},"content":"    public void addTag(String tagDescription) {","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"RyanQiu1"},"content":"        this.tagObj.putTag(tagDescription);","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"RyanQiu1"},"content":"    public String getTagStatus() {","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"RyanQiu1"},"content":"        return tagObj.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":109}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" * Keeps the list of tasks using an arraylist.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public TaskList(ArrayList\u003cTask\u003e a) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        this.list \u003d a;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"     * Identify the task from its number and mark it as complete.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     * @param taskno - Number for the task on the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    public void markTask(int taskno) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"            list.get(taskno).markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"            throw new DukeException(\"Task number not in list, please fill again\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"     * Identify the task from its number and mark it as incomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"     * @param taskno Number for the task on the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"    public void unmarkTask(int taskno) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"            list.get(taskno).markAsUndone();","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"            throw new DukeException(\"Task number not in list, please fill again\");","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"    public String printList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"        for (int x \u003d 0; x \u003c list.size(); x++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"            output +\u003d String.valueOf(x + 1) + \".\" + list.get(x) + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"        return \"Here are the tasks in your list:\\n\" + output + getLengthMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"     * Add the input task object to the current object list.","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"     * @param t Task object to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"    public void addToList(Task t) {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"        list.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"RyanQiu1"},"content":"     * Identify the task from its number and remove it from the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"     * @param taskno Number for the task on the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"RyanQiu1"},"content":"    public void deleteTask(int taskno) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"RyanQiu1"},"content":"            list.remove(taskno);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"RyanQiu1"},"content":"            throw new DukeException(\"Task number not in list, please fill again\");","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"RyanQiu1"},"content":"     * Shows how many tasks is in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"RyanQiu1"},"content":"     * @return Integer - Number of elements in list.","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"RyanQiu1"},"content":"    private int getLengthOfList() {","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"RyanQiu1"},"content":"        return list.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"RyanQiu1"},"content":"     * Output the statement for the number of tasks in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"RyanQiu1"},"content":"    public String getLengthMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"RyanQiu1"},"content":"        return \"\\nNow you have \" + this.getLengthOfList() + \" tasks in your list.\" + \"\\n\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"RyanQiu1"},"content":"     * Method which finds the tasks which matches the inputted string.","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"RyanQiu1"},"content":"     * @param message String that the user wants to find.","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"RyanQiu1"},"content":"     * @return List List of tasks which matches the input string.","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"RyanQiu1"},"content":"    public ArrayList\u003cTask\u003e findStringInTask(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"RyanQiu1"},"content":"        ArrayList\u003cTask\u003e arrStr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"RyanQiu1"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"RyanQiu1"},"content":"            if (t.toString().contains(message)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"RyanQiu1"},"content":"                arrStr.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"RyanQiu1"},"content":"        return arrStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"RyanQiu1"},"content":"     * Tag the indicated task with the input tag name.","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"RyanQiu1"},"content":"     * @param taskNum Task number to add tag to.","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"RyanQiu1"},"content":"     * @param tagName Tag task with name.","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"RyanQiu1"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"RyanQiu1"},"content":"    public void tagTask(int taskNum, String tagName) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"RyanQiu1"},"content":"            list.get(taskNum - 1).addTag(tagName);","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"RyanQiu1"},"content":"            throw new DukeException(\"Task number not in list, please fill again\");","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":132}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":" * Task which needs to be done.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor for the todo class.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"     * @param description Description of the todo class.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"     * Method that outputs the string of the formatted string of todo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"     * @return String Output of the formatted Todo event object.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":26}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"     * Constructor of the dialog box class.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"     * @param text Starting message of the chat bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"     * @param img  Starting image of the chat bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"     * Method which gets the user input and outputs to a UI.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"     * @param text Input from the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"     * @param img  Image of the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"     * @return DialogBox Dialog Ui of what the user inputted.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"     * Method which outputs the duke bot message into a UI.","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"     * @param text Output from the duke bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"     * @param img  Image of the duke bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"RyanQiu1"},"content":"     * @return DialogBox Dialog Ui of what Duke output.","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"RyanQiu1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"RyanQiu1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"RyanQiu1"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"RyanQiu1"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RyanQiu1":83}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"2.0\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-padding: 10px; -fx-background-color: lightblue; -fx-background-radius: 14px;\" text\u003d\"Label\" textFill\u003d\"#073349\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"                \u003cFont name\u003d\"Yu Gothic Medium\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"90.0\" fitWidth\u003d\"90.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RyanQiu1":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"CENTER\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type your message here\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"RyanQiu1":26}},{"path":"src/test/java/duke/task/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    public void deadlinePassedTest() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        DeadlineCommand t \u003d new DeadlineCommand(\"deadline do hw /by 2010-12-01 18:00\");","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"        assertEquals(true, t.isDeadlineOver());","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    public void formatCorrectTest() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        DeadlineCommand t \u003d new DeadlineCommand(\"deadline do hw /by 20101201 18:00\");","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        assertEquals(false, t.isFormatCorrect());","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"RyanQiu1":25}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        Task t \u003d new Deadline(\"return book\", \"2019-10-15\", \"1800\");","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"        assertEquals(\"[D][ ] return book  (by: 2019-10-15 1800)\", t.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"RyanQiu1":14}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"public class EventTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"        Task t \u003d new Event(\"project meeting\", \"Aug 6th 2pm\", \"4pm\");","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        assertEquals(\"[E][ ] project meeting (from: Aug 6th 2pm to: 4pm)\", t.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"RyanQiu1":13}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    public void isDoneTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"        Task t \u003d new Task(\"do work\", \"T\", \"X\", \"\");","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        assertEquals(true, t.isTaskDone());","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":13}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"        Todo t \u003d new Todo(\"do work\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        assertEquals(\"[T][ ] do work \", t.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanQiu1":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanQiu1":1,"-":33}}]
