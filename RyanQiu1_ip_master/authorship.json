[{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"public enum Commands {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"    todo,","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"    deadline,","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"    mark,","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"    unmark,","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"    list,","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"    bye,","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    delete,","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    event;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RyanQiu1":10}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"    protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"        super(description, \"deadline\");","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"I am Duke the Chatbot!\\nHow may i help you today?\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        StorageList s \u003d new StorageList();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"            String[] checker \u003d line.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"            String type \u003d checker[0].toLowerCase().trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"                System.out.println(type);","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"                Commands command \u003d Commands.valueOf(type);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"                switch (command) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"                    case bye:","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"                        System.out.println(\"See you soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"                        return;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"                    case list:","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"                        s.printList();","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"                    case mark:","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"                        int tasknumbermark \u003d Integer.valueOf(checker[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"                        s.markTask(tasknumbermark);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"                    case unmark:","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"                        int tasknumberunmark \u003d Integer.valueOf(checker[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"                        s.unmarkTask(tasknumberunmark);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"                    case todo:","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"                        String[] checker2 \u003d line.split(\"todo \");","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"                        s.addTodo(checker2[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"                    case deadline:","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"                        String[] checkerby \u003d line.split(\"/by \");","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"                        String[] checkerdeadline \u003d checkerby[0].split(\"deadline \");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"                        s.addDeadline(checkerdeadline[1], checkerby[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"                    case event:","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"                        String[] checkerslash \u003d line.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"                        String[] checkerevent \u003d checkerslash[0].split(\"event \");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"                        String[] checker4 \u003d checkerslash[1].split(\"from \");","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"                        String[] checker5 \u003d checkerslash[2].split(\"to \");","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"                        s.addEvent(checkerevent[1], checker4[1], checker5[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"                    case delete:","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"                        int tasknumberdel \u003d Integer.valueOf(checker[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"                        s.deleteTask(tasknumberdel);","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"            } finally {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"                System.out.println(\"Now you have \" + s.lengthOflist() + \" tasks in your list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":66,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RyanQiu1":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"    protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"    protected String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"        super(description, \"event\");","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":16}},{"path":"src/main/java/StorageList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"public class StorageList {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"    public StorageList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    public void markTask(int taskno) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        list.get(taskno).markAsDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(list.get(taskno));","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    public void unmarkTask(int taskno) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        list.get(taskno).markAsUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(list.get(taskno));","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    public void printList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        for (int x \u003d 0; x \u003c list.size(); x++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"            System.out.println((x + 1) + \".\" + list.get(x));","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    public void addTodo(String sentence) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"        Todo t \u003d new Todo(sentence);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"        list.add(t);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"    public void addDeadline(String sentence, String by) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"        Deadline t \u003d new Deadline(sentence, by);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"        list.add(t);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"    public void addEvent(String sentence, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"        Event t \u003d new Event(sentence, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"        list.add(t);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"    public void deleteTask(int taskno) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(list.get(taskno));","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"        list.remove(taskno);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"    public int lengthOflist() {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"        return list.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":59}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"//Reference from the partial solution provided on CS2103 module website","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"    protected String typeofTask;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    public Task(String description, String typeofTask) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        this.typeofTask \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"        super(description, \"todo\");","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanQiu1":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanQiu1":1,"-":33}}]
