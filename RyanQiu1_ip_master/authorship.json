[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanQiu1":15,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"[T][ ] bye","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"[T][ ] eat and sleep","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"[T][ ] bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RyanQiu1":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":" * Main Class which runs the whole chatbot.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    private StorageList storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        storage \u003d new StorageList(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"            ui.showLoadingError(String.valueOf(e));","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"     * Method which starts the program to output the various messages and checks the commands.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    public void run() {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"                ui.showLoadingError(\"Sorry i did not understand that command!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"                ui.showLoadingError(\"Pls fill in the command\");","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"            } finally {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"                storage.updateStorage();","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":61,"-":2}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Implementation of Bye Command","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" **/","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"See you soon!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":21}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Abstract class to allow the other commands to utilise the common methods like execute and exit.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"     * Abstract method to be used by the various commands inheriting class of command.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"     * @param tasks   - task list of the current tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"     * @param ui      - interface of the command.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"     * @param storage - database of the history of commands.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean - true or false when the prog fails.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    public abstract boolean execute(TaskList tasks, Ui ui, StorageList storage);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"     * Check if program is to be exited upon bye command.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean - true or false according to command.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":29}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" * Deadline command for the tasks with deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private String message;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    private String timing;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        String[] checker \u003d fullCommand.split(\"/by \");","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"        String[] checkerDeadline \u003d checker[0].split(\"deadline \");","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"        this.message \u003d checkerDeadline[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        this.timing \u003d checker[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        Deadline taskDeadline \u003d new Deadline(message, timing);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        if (!taskDeadline.checkFormat()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"            tasks.addToList(taskDeadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"            System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"            System.out.println(taskDeadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"            System.out.println(\"Wrong Format, Please fill in with the following format: YYYY-MM-DD h:mm\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"        tasks.statement();","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":34}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Delete Command to remove the tasks users do not want, according to its number on the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    private int listNum;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        int taskNumberMark \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        this.listNum \u003d taskNumberMark;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        tasks.deleteTask(listNum);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":22}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" * Event command with event and from and to timing.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    private String message;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    private String from;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    private String to;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"        String[] checkerSlash \u003d input.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        String[] checkerEvent \u003d checkerSlash[0].split(\"event \");","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        String[] checkerFrom \u003d checkerSlash[1].split(\"from \");","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        String[] checkerTo \u003d checkerSlash[2].split(\"to \");","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        this.message \u003d checkerEvent[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        this.from \u003d checkerFrom[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        this.to \u003d checkerTo[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        Event t \u003d new Event(message, from, to);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"        tasks.addToList(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        tasks.statement();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    private String message;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        String[] checker \u003d fullCommand.split(\"find \");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        this.message \u003d checker[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        ArrayList\u003cTask\u003e arrList \u003d tasks.find(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        for (Task t : arrList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"            System.out.println(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"RyanQiu1":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":" * List command to show the current task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        tasks.printList();","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":19}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" * Mark Command to make any task on the list to be done.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private int listNum;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        int taskNumberMark \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        this.listNum \u003d taskNumberMark;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        tasks.markTask(listNum);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":23}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" * Todoclass to indicate a task needed to be completed.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private String message;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    public TodoCommand(String fullCommand) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        String[] checker \u003d fullCommand.split(\"todo \");","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        this.message \u003d checker[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        Todo t \u003d new Todo(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        tasks.addToList(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        tasks.statement();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":27}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.storage.StorageList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" * Unmark command to indicate task as incomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    private int listNum;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        int taskNumberMark \u003d Integer.valueOf(input) - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        this.listNum \u003d taskNumberMark;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageList storage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"        tasks.unmarkTask(listNum);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":23}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":" * Custom Excception for duke chatbot to display custom error messages.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"RyanQiu1":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":" * This class allows commands to be stored and checked, whether they are in the system","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":" * and its operations can be carried out.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    private enum Type {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        todo,","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"        deadline,","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"        mark,","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        unmark,","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        list,","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        bye,","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"        delete,","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"        find,","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        event;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"     * This method parses the string input and breaks it down to its respective inputs, messages, dates.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     * @param input String input, where they can indicate \"todo work\" etc, which is considered an input.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     * @return Command - A command object of the indicated type will be returned","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     * @throws IllegalArgumentException - Error that the command does not exists.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"    public static Command parse(String input) throws IllegalArgumentException {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"        String[] input2 \u003d input.split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"        Type t \u003d Type.valueOf(input2[0].toLowerCase());","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        switch (t) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"            case todo:","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"                return new TodoCommand(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"            case deadline:","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"                return new DeadlineCommand(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"            case mark:","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"                return new MarkCommand(input2[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"            case unmark:","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"                return new UnmarkCommand(input2[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"            case list:","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"            case bye:","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"            case delete:","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"                return new DeleteCommand(input2[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"            case event:","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"                return new EventCommand(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"            case find:","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"                return new FindCommand(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":64}},{"path":"src/main/java/duke/storage/StorageList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":" * This class loads the path of the stored commands and updates it when the bot is closed.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"public class StorageList {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    private String path;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    public StorageList(String path) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     * This method loads the data of the previous commands from a textfile.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"     * @return ArrayList\u003cTask\u003e - Returns the arraylist that is loaded from the stored textfile.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"     * @throws DukeException - File not found error will cause this exception to be thrown.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"            File file \u003d new File(this.path);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"                String[] lineArr \u003d line.split(\"\\\\] \");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"                String[] lineType \u003d lineArr[0].split(\"\\\\]\");","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"                this.list.add(new Task(lineArr[1], lineType[0].substring(1), lineType[1].substring(1)));","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"            scanner.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"            return this.list;","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"            throw new DukeException(\"The file is not found in the directory\");","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"     * This method will allow the textfile to be updated according to the current arraylist and ensure that textfile","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"     * will contain the most updated data.","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"    public void updateStorage() {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"            if (!dir.exists()) dir.mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"            java.nio.file.Path path \u003d java.nio.file.Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"            FileWriter writer \u003d new FileWriter(String.valueOf(path));","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"            for (Task str : list) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"                writer.write(str.toString() + System.lineSeparator());","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"            writer.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":72}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":" * This class is a task object, when it breaks down the deadline into the respective alphanumeric form.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    protected String bydate;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    protected String result;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    protected LocalDate d1;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    protected boolean haveFormatErr;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        String[] byarr \u003d by.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        this.haveFormatErr \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"        Pattern pattern \u003d Pattern.compile(\"(\\\\d{4})\\\\-(\\\\d{2})\\\\-(\\\\d{2})\");","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"        Pattern pattern2 \u003d Pattern.compile(\"(\\\\d{2})\\\\:(\\\\d{2})\");","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"        Matcher matcher \u003d pattern.matcher(byarr[0].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        Matcher matcher2 \u003d pattern2.matcher(byarr[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        if (matcher.matches() \u0026\u0026 matcher2.matches()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"            this.d1 \u003d LocalDate.parse(byarr[0]);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"            this.bydate \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"            this.result \u003d LocalTime.parse(byarr[1], DateTimeFormatter.ofPattern(\"HH:mm\")).format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"            this.haveFormatErr \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"     * Checks if the input has an incorrect date and time format.","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean - true or false if there is a formatting error.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"    public boolean checkFormat() {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"        return this.haveFormatErr;","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.bydate + \" \" + result + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":" * This class creates an event with a from and to date.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    protected String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to:\" + to + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":21}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"//Reference from the partial solution provided on CS2103 module website","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" * A task class which contains description, whether it is completed, type.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    protected String typeofTask \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"    protected String doneStr;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    public Task(String description, String typeOfTask, String doneStr) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        this.doneStr \u003d doneStr;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"        checkisdonestr();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"        this.typeofTask \u003d typeOfTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"     * Checks if the string input or the task is done according to its string.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"     * @return boolean - Returns true if contains \"X\" else will return false.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"    public boolean checkisdonestr() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"        if (this.doneStr.equals(\"X\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"        } else this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"     * Gets the status of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"     * @return String - Returns \"X\" if the isDone variable is true, else \" \".","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"     * Marks the task as completed with the variable.","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"     * Marks the task as incomplete with the variable.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"        if (typeofTask.equals(\"\"))","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"            return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"        else {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"            return \"[\" + typeofTask + \"]\" + \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":71}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":" * Keeps the list of tasks using an arraylist.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"    public TaskList(ArrayList\u003cTask\u003e a) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"        this.list \u003d a;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"     * Identify the task from its number and mark it as complete.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"     * @param taskno - Number for the task on the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"    public void markTask(int taskno) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"        list.get(taskno).markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(list.get(taskno));","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"RyanQiu1"},"content":"        statement();","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"RyanQiu1"},"content":"     * Identify the task from its number and mark it as incomplete.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"RyanQiu1"},"content":"     * @param taskno Number for the task on the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"RyanQiu1"},"content":"    public void unmarkTask(int taskno) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"RyanQiu1"},"content":"        list.get(taskno).markAsUndone();","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(list.get(taskno));","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"RyanQiu1"},"content":"        statement();","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"RyanQiu1"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"RyanQiu1"},"content":"    public void printList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"RyanQiu1"},"content":"        for (int x \u003d 0; x \u003c list.size(); x++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"RyanQiu1"},"content":"            System.out.println((x + 1) + \".\" + list.get(x));","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"----------------------------------------------------\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"RyanQiu1"},"content":"        statement();","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"RyanQiu1"},"content":"     * Add the input task object to the current object list.","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"RyanQiu1"},"content":"     * @param t Task object to be added.","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"RyanQiu1"},"content":"    public void addToList(Task t) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"RyanQiu1"},"content":"        list.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"RyanQiu1"},"content":"     * Identify the task from its number and remove it from the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"RyanQiu1"},"content":"     * @param taskno Number for the task on the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"RyanQiu1"},"content":"    public void deleteTask(int taskno) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(list.get(taskno));","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"RyanQiu1"},"content":"        list.remove(taskno);","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"RyanQiu1"},"content":"        statement();","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"RyanQiu1"},"content":"     * Shows how many tasks is in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"RyanQiu1"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"RyanQiu1"},"content":"     * @return Integer - Number of elements in list.","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"RyanQiu1"},"content":"    public int lengthOflist() {","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"RyanQiu1"},"content":"        return list.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"RyanQiu1"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"RyanQiu1"},"content":"     * Output the statement for the number of tasks in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"RyanQiu1"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"RyanQiu1"},"content":"    public void statement() {","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"RyanQiu1"},"content":"        System.out.print(\"Now you have \" + this.lengthOflist() + \" tasks in your list.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"RyanQiu1"},"content":"    public ArrayList\u003cTask\u003e find(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"RyanQiu1"},"content":"        ArrayList\u003cTask\u003e arrStr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"RyanQiu1"},"content":"        for (Task t: list) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"RyanQiu1"},"content":"            if (t.toString().contains(message)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"RyanQiu1"},"content":"                arrStr.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"RyanQiu1"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"RyanQiu1"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"RyanQiu1"},"content":"        return arrStr;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":104}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":" * Task which needs to be done.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":16}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"I am Duke the Chatbot!\\nHow may i help you today?\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"RyanQiu1"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"----------------------------------------------------\");","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"RyanQiu1"},"content":"    public String readCommand(){","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"RyanQiu1"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"RyanQiu1"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"    public void showLoadingError(String e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"RyanQiu1"},"content":"        System.out.println(\"Cannot load data from storage due to: \" + e);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":29}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    public void isDoneTest(){","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"        Task t \u003d new Task(\"do work\", \"T\", \"X\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        assertEquals(true, t.checkisdonestr());","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":13}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"RyanQiu1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"RyanQiu1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"RyanQiu1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"RyanQiu1"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"RyanQiu1"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"RyanQiu1"},"content":"        Todo t \u003d new Todo(\"do work\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"RyanQiu1"},"content":"        assertEquals(\"[T][ ] do work\", t.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"RyanQiu1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"RyanQiu1"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"RyanQiu1":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RyanQiu1"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"RyanQiu1":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"RyanQiu1"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanQiu1":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"RyanQiu1"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"RyanQiu1":1,"-":33}}]
