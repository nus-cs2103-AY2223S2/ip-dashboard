[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"# VicBot","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"![Ui](docs/Ui.png)","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"VicBot is a simple  CLI tool that can help you manage your tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"Check out the [user guide](https://spwwj.github.io/ip/) to learn how to use VicBot!","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"## Acknowledgements","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"* The project is based on the Java project Duke, and created as part of CS2103T\u0027s (a module under NUS School of Computing) submissions.","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"SPWwj":6,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    mainClassName \u003d \"vic.Launcher\"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    archiveBaseName.set(\"ip\")","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    archiveClassifier.set(\"0.3\")","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SPWwj":26,"-":37}},{"path":"data/jtest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"[T]  /content: [ ] x","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"[D] /by: 1575280800000 /content: [X] return book","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"[E] /from: 1575280800000 /to: 1575291600000 /content: [ ] buy burger","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"SPWwj":3}},{"path":"data/jtestexpectsave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"[T]  /content: [ ] x","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"[D] /by: 1575280800000 /content: [X] return book","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"[E] /from: 1575280800000 /to: 1575291600000 /content: [ ] buy burger","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"SPWwj":3}},{"path":"data/jtestsave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"[T]  /content: [ ] x","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"[D] /by: 1575280800000 /content: [X] return book","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"[E] /from: 1575280800000 /to: 1575291600000 /content: [ ] buy burger","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"SPWwj":3}},{"path":"data/vic.tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"[T]  /content: [ ] watch avatar 2","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"[D] /by: 1735812000000 /content: [X] submit assignment","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"[E] /from: 1676271600000 /to: 1676278800000 /content: [X] career fair","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"[T]  /content: [ ] buy buger","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"SPWwj":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"## Usage","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"### Commands Available","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"- `bye`: Exit the program","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"- `list`: Show all recorded tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"- `todo \u003cdescription\u003e`: Add a new todo task","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    - Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"      todo Read books","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"- `deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e`: Add a new deadline task with a deadline time","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    - Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"      deadline submit assignment /by 25/12/2023 1800","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"- `event \u003cdescription\u003e /from \u003cdate\u003e \u003ctime\u003e /to \u003cdate\u003e \u003ctime\u003e`: Add a new event task with the start and end datetime","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    - Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"      event career fair /from 13/02/2023 1500 to 13/02/2023 1700","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        ```","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"- `mark/unmark \u003ctask number from \u0027list\u0027\u003e`: Mark or unmark a task as done","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    - Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"      mark 1","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"      unmark 2","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        ```","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"- `delete \u003ctask number from \u0027list\u0027\u003e`: Delete a task from recorded tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    - Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"      delete 1","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"- `undo \u003ctask number from \u0027list\u0027\u003e`: undo last operation performed","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    - Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"      delete 1","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"      undo","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"      ```","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"- `find \u003ckeyword\u003e`: Show all tasks that has descriptions that matches the `keyword`","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    - Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"      find books","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"SPWwj":48,"-":17}},{"path":"src/main/java/vic/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SPWwj":12}},{"path":"src/main/java/vic/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    private final Vic vic \u003d new Vic(\"data/vic.tasks.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"            URL fxmlLocation \u003d getClass().getResource(\"/view/MainWindow.fxml\");","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(fxmlLocation);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setVic(vic);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"            stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SPWwj":37}},{"path":"src/main/java/vic/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import vic.gui.DialogBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    private Vic vic;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"            .getResourceAsStream(\"/images/user.png\")));","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private final Image vicImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"            .getResourceAsStream(\"/images/vicbot.png\")));","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     * Initializes the MainWindow stage and print the greeting to user","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        String greeting \u003d \"\\\"Hello I am Vic!\\nHow can I help you\\\"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"                DialogBox.getVicDialog(greeting, vicImage)","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        );","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    public void setVic(Vic vic) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        this.vic \u003d vic;","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"     * Creates two dialog boxes, one echoing user input","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"     * and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        String response \u003d vic.getResponse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"                DialogBox.getVicDialog(response, vicImage)","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SPWwj":65}},{"path":"src/main/java/vic/Vic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.commands.ICommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.TaskManager;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.UserInterface;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * Main class represents Duke chatbot","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"public class Vic {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    private TaskManager taskManger;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    private final UserInterface ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     * @param filePath the path to save and load the tasks from disk","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    public Vic(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        ui \u003d new UserInterface();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"            taskManger \u003d new TaskManager(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"            taskManger.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"            taskManger \u003d new TaskManager(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     * Runs and starts the Duke bot","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    public void run() {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        while (!isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"            try {","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"                ICommand cmd \u003d ui.readCommand(taskManger);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"                isDone \u003d cmd.run();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"                ui.speak(cmd.getMsg());","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            } finally {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"                ui.getCommand(\"Enter new command to continue: \");","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        new Vic(\"data/vic.tasks.txt\").run();","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"            assert !input.isEmpty() : \"Please type something!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"            ICommand cmd \u003d ui.readCommand(taskManger, input);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"            cmd.run();","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"            return cmd.getMsg();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"SPWwj":64,"-":2}},{"path":"src/main/java/vic/commands/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * Represents AddDeadline action command. A \u003ccode\u003eAddDeadline\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * the action adding a Deadline task to task list","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class AddDeadline extends ICommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public AddDeadline(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        getParser().forDeadline();","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d new Deadline(getParser().getDescription(), getParser().getBy());","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        getParser().getTaskManager().add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        setMsg(task + \"\\nAdded\" + \"\\nNow you have \" + getParser()","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"                .getTaskManager().size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"SPWwj":28}},{"path":"src/main/java/vic/commands/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * Represents Event action command. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * the action adding an Event task to task list","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class AddEvent extends ICommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public AddEvent(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"        getParser().forEvent();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d new Event(getParser().getDescription(),","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"                getParser().getFrom(), getParser().getTo());","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        getParser().getTaskManager().add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        setMsg(task + \"\\nAdded\" + \"\\nNow you have \" + getParser()","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"                .getTaskManager().size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"SPWwj":28}},{"path":"src/main/java/vic/commands/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Todo;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * Represents AddTodo action command. A \u003ccode\u003eAddTodo\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * the action adding a todos task to task list","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class AddTodo extends ICommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public AddTodo(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        getParser().forTodo();","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d new Todo(getParser().getDescription());","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        getParser().getTaskManager().add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        setMsg(task + \"\\nAdded\" + \"\\nNow you have \" + getParser()","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"                .getTaskManager().size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"SPWwj":28}},{"path":"src/main/java/vic/commands/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Represents delete action command.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * A \u003ccode\u003eDelete\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * the action delete a task from task list","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"public class Delete extends ICommand {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public Delete(Parser parser) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        ITask t \u003d getParser().getTaskManager().remove(getParser().getIndex());","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        setMsg(\"Noted. I\u0027ve removed this task:\\n\" + t + \"\\nNow you have \"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"                + getParser().getTaskManager().size() + \" in the list.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":25}},{"path":"src/main/java/vic/commands/Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" * Represents exit action command. A \u003ccode\u003eExit\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * the action exit from program","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"public class Exit extends ICommand {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    public Exit(Parser parser) {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    public boolean run() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        setMsg(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"        return true;","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":19}},{"path":"src/main/java/vic/commands/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Represents Find action command.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * A \u003ccode\u003eFind\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * the action find from a task","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"public class Find extends ICommand {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public Find(Parser parser) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"        getParser().forFind();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        Object[] tasks \u003d getParser().getTaskManager().find(getParser().getDescription());","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        for (Object task : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"            result.append(getParser().getTaskManager().getObjectIndex(task) + 1)","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"                    .append(\".\").append(task.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        setMsg(result.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"SPWwj":29}},{"path":"src/main/java/vic/commands/ICommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Represents action command. A \u003ccode\u003eICommand\u003c/code\u003e abstract class corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * the action to execute","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"public abstract class ICommand {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"     * Represents type of actions","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    public enum Type {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"        EVENT {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"                return new AddEvent(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        DEADLINE {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"                return new AddDeadline(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        TODO {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"                return new AddTodo(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        DELETE {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"                return new Delete(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        BYE {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"                return new Exit(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        FIND {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"                return new Find(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        LIST {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"                return new ListTasks(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        MARK {","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"                return new Mark(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        UNMARK {","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"                return new Unmark(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        },","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        UNDO {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"            @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            public ICommand createCommand(Parser parser) {","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"                return new Undo(parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        };","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"        /**","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"         * Converts String command type into Enum type","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"         *","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"         * @param type string representation of Enum type","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"         * @throws InvalidCommandException IF enum type not found","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"         */","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        public static Type valueOfOrElse(String type) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"            try {","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"                return Type.valueOf(type);","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"                throw new InvalidCommandException(type);","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"        public abstract ICommand createCommand(Parser parser);","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"    private String msg \u003d \"Starting Command\";","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"     * Creates a ICommand object which manipulate the task","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"     * @param parser in-charge to convert user input to valid program input command","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"    public ICommand(Parser parser) {","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"    public Parser getParser() {","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"        return parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"     * Sets the task message once the task is done","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"     * @return true if exit","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur during execution of task.","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"    public abstract boolean run() throws DukeException;","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"    public String getMsg() {","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"        return msg;","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"    public void setMsg(String msg) {","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":126}},{"path":"src/main/java/vic/commands/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Represents list tasks action command. A \u003ccode\u003eListTasks\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * the action to list all task in the program","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"public class ListTasks extends ICommand {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public ListTasks(Parser parser) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        StringBuilder sentence \u003d new StringBuilder(\"You have total \");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        sentence.append(getParser()","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"                .getTaskManager().size()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        for (ITask item : getParser().getTaskManager().getTasks()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"            sentence.append(i).append(\".\").append(item).append(\"\\n\");","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"            i++;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        setMsg(sentence.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":33}},{"path":"src/main/java/vic/commands/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Represents mark action command. A \u003ccode\u003eMark\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * the action to mark a task in the program","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"public class Mark extends ICommand {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public Mark(Parser parser) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        ITask t \u003d getParser().getTaskManager().mark(getParser().getIndex());","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        setMsg(\"Nice! I\u0027ve marked this task as done:\\n\" + t);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":24}},{"path":"src/main/java/vic/commands/Undo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" * Represents Undo tasks action command. A \u003ccode\u003eUndo\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * the action to Undo an action in the program","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"public class Undo extends ICommand {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    public Undo(Parser parser) {","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"        String result \u003d getParser().getTaskManager().undo();","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        setMsg(result);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"SPWwj":23}},{"path":"src/main/java/vic/commands/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Represents unmark action command. A \u003ccode\u003eUnmark\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * the action to unmark a task in the program","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"public class Unmark extends ICommand {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public Unmark(Parser parser) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        super(parser);","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    public boolean run() throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        ITask t \u003d getParser().getTaskManager().unmark(getParser().getIndex());","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        setMsg(\"OK, I\u0027ve marked this task as not done yet:\\n\" + t);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        return false;","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":23}},{"path":"src/main/java/vic/exceptions/ContentEmpty.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * A DukeException to check if content is empty","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public class ContentEmpty extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     * Constructor for ContentEmpty","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the content is missing","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public ContentEmpty(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        super(\"Try to type something in your \" + errorMessage + \".\");","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SPWwj":15}},{"path":"src/main/java/vic/exceptions/DateParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * A DukeException to check if Date input by user is valid","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public class DateParseException extends DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     * Constructor for DateParseException","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the error date format","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public DateParseException(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        super(\"☹ OOPS!!! Invalid Date format! Please use this \"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"                + \"format: dd/MM/yyyy HHmm! not your own format:\" + errorMessage + \"!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"SPWwj":16}},{"path":"src/main/java/vic/exceptions/DukeCloneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * A DukeException to check if task can be cloned","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public class DukeCloneException extends DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     * Constructor for CloneException","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the object to be cloned","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public DukeCloneException(String errorMessage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        super(\"Apologies unable to clone object\" + errorMessage + \".\");","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"SPWwj":15}},{"path":"src/main/java/vic/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":" * An abstract exception class which is super","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * class for all check exception for duke program","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     * Constructor for DukeException","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the error message for exception","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":15}},{"path":"src/main/java/vic/exceptions/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":" * A DukeException to check if command is complete","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"public class IncompleteCommandException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"     * Constructor for IncompleteCommandException","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the incomplete command","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    public IncompleteCommandException(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"        super(\"☹ OOPS!!! The \" + errorMessage + \" cannot be empty from your command\");","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SPWwj":15}},{"path":"src/main/java/vic/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":" * A DukeException to check if command is valid","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"     * Constructor for InvalidCommandException","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the invalid command","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \u0027\" + errorMessage + \"\u0027 means :-(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":14}},{"path":"src/main/java/vic/exceptions/InvalidMarkInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":" * A DukeException to check if index for mark or unmark action is valid","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"public class InvalidMarkInput extends DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"     * Constructor for InvalidMarkInput","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the invalid index","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    public InvalidMarkInput(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, you have enter invalid task index \" + errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":14}},{"path":"src/main/java/vic/exceptions/LoadFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":" * A DukeException to check the error during loading of local file","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"public class LoadFileException extends DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"     * Constructor for LoadFileException","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     * @param file         the file that cause the error","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public LoadFileException(String file, String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        super(\"☹ OOPS!!! Fail to load file: \" + file + \"\\n\" + errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"SPWwj":15}},{"path":"src/main/java/vic/exceptions/SaveFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.exceptions;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":" * A DukeException to check the error during save the tasks to local file","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"public class SaveFileException extends DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"     * Constructor for SaveFileException","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"     * @param file         the file that cause the error","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public SaveFileException(String file, String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        super(\"☹ OOPS!!! Fail to save file: \" + file + \"\\n\" + errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"SPWwj":15}},{"path":"src/main/java/vic/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.gui;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"import vic.gui.model.DialogBoxInput;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":" * This control represents a dialog box consisting","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":" * of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    private static final int LINE_LIMIT \u003d 45;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    private static final int LINE_HEIGHT \u003d 30;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"            URL fxmlLocation \u003d getClass().getResource(\"/view/DialogBox.fxml\");","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(fxmlLocation);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        DialogBoxInput dialogBoxInput \u003d formatInput(text);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        dialog.setMinHeight(dialogBoxInput.getLineNumber() * LINE_HEIGHT);","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        dialog.setText(formatInput(text).getInput());","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    private static DialogBoxInput formatLine(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        int lineLimit \u003d LINE_LIMIT;","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        String output \u003d input;","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        int lines \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        while (lineLimit \u003c output.length()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"            output \u003d output.substring(0, lineLimit) + \"\\n   \"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"                    + output.substring(lineLimit);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"            lineLimit +\u003d lineLimit + 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"            lines++;","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"        return new DialogBoxInput(output, lines);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"    private static DialogBoxInput formatInput(String input) {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"        String[] lines \u003d input.split(\"\\n\");","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        int numberOfLines \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        for (String line: lines) {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"            DialogBoxInput dialogBoxInput \u003d formatLine(line);","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            result.append(dialogBoxInput.getInput());","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"            numberOfLines +\u003d dialogBoxInput.getLineNumber() + 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        return new DialogBoxInput(result.toString(), numberOfLines);","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"     * Flips the dialog box such that the ImageView","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"     * is on the left and text on the right.","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"                .observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"    public static DialogBox getVicDialog(String text, Image img) {","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SPWwj":101}},{"path":"src/main/java/vic/gui/model/DialogBoxInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.gui.model;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" * A Model Class use to model the attribute for DialogBox Input","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"public class DialogBoxInput {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    private final int lineNumber;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    private final String input;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"     * Constructor for DialogBoxInput","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"     * @param input the input to be print","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"     * @param lineNumber number of lines for the input","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    public DialogBoxInput(String input, int lineNumber) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        this.lineNumber \u003d lineNumber;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public String getInput() {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        return input;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public int getLineNumber() {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        return lineNumber;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"SPWwj":32}},{"path":"src/main/java/vic/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * Represents Deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e class corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * the deadline task","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class Deadline extends ITask {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    private final Date by;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     * @param description for task","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * @param by          date","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public Deadline(String description, Date by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"     * @param description for task","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     * @param by          date","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     * @param isDone      status","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    public Deadline(String description, Date by, boolean isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        return \"[D] \" + \"/by: \" + by.getTime() + \" /content: \" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        if (getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d (ITask) obj;","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        return task.getId() \u003d\u003d this.getId();","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"                + Parser.DATE_OUTPUT_FORMAT.format(this.by) + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":56}},{"path":"src/main/java/vic/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import vic.utilities.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * Represents Event task. A \u003ccode\u003eEvent\u003c/code\u003e class corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * the event task","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class Event extends ITask {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    private final Date from;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    private final Date to;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * @param description for task","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     * @param from        date","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     * @param to          date","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    public Event(String description, Date from, Date to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     * @param description for task","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     * @param from        date","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     * @param to          date","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     * @param isDone      status","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    public Event(String description, Date from, Date to, boolean isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        return \"[E] \" + \"/from: \" + from.getTime()","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"                + \" /to: \" + to.getTime() + \" /content: \" + super.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        if (getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d (ITask) obj;","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        return task.getId() \u003d\u003d this.getId();","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"                + Parser.DATE_OUTPUT_FORMAT.format(this.from) + \" to: \"","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"                + Parser.DATE_OUTPUT_FORMAT.format(this.to) + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":63}},{"path":"src/main/java/vic/tasks/ITask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.UUID;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" * Represents Task. A \u003ccode\u003eITask\u003c/code\u003e abstract class corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * the task","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"public abstract class ITask implements Cloneable {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    private final UUID id;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    private final String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * Constructor for ITask","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     * @param description the description of main task","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    public ITask(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        id \u003d UUID.randomUUID();","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"     * Constructor for ITask","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"     * @param description the description of main task","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     * @param isDone      the status of main task","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    public ITask(String description, boolean isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        id \u003d UUID.randomUUID();","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    public UUID getId() {","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        return id;","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"     * TaskTypes represent different type of task","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    public enum TaskTypes {","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        ToDos,","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        Deadlines,","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        Events,","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        Find,","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        Unknown","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    public boolean descriptionContain(String keyword) {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"     * Marks the task as done","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"     * Marks the task as undone","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"     * Converts the task into string for export the local file","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"     * Converts the task status to a String icon representation","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"     * Clones the object","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"    public Object clone() throws CloneNotSupportedException {","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"        return super.clone();","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        if (getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d (ITask) obj;","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"        return task.getId() \u003d\u003d this.getId();","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"SPWwj":106}},{"path":"src/main/java/vic/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * Represents todo task. A \u003ccode\u003eTodo\u003c/code\u003e class corresponds to","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" * the todo task","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"public class Todo extends ITask {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        return \"[T] \" + \" /content: \" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"SPWwj":26}},{"path":"src/main/java/vic/utilities/LastCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.utilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.commands.ICommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * LastCommand class to record last command performs","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class LastCommand {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    private final ICommand.Type type;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    private final ITask task;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * Constructor for LastCommand","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     * @param type type of command","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * @param task last task involve","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public LastCommand(ICommand.Type type, ITask task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"     * Undoes the last command to the tasks list","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"     * @param tasks reference to task list","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    public String undo(ArrayList\u003cITask\u003e tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        String action \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        if (type \u003d\u003d ICommand.Type.TODO) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"            action \u003d \"remove\";","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"            tasks.remove(task);","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        } else if (type \u003d\u003d ICommand.Type.DELETE) {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"            action \u003d \"add back\";","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        } else if (type \u003d\u003d ICommand.Type.MARK || type \u003d\u003d ICommand.Type.UNMARK) {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"            action \u003d \"undo\";","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"            int index \u003d tasks.indexOf(task);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            tasks.set(index, task);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        return \"I have \" + action + \" to your task: \\n\" + task;","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"SPWwj":49}},{"path":"src/main/java/vic/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.utilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.ContentEmpty;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DateParseException;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.IncompleteCommandException;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.InvalidMarkInput;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":" * Parser class to translate user input to valid program input","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"public class Parser {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     * Pre-define input date format","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public static final DateFormat DATE_IN_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     * Pre-define output date format","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    public static final DateFormat DATE_OUTPUT_FORMAT \u003d new SimpleDateFormat(\"MM-dd-yyyy HH:mm:ss aa\");","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private boolean isProcessed \u003d false;","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    private String input;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    private int index;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    private String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    private ITask.TaskTypes type;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    private Date by;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    private Date from;","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    private Date to;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Parser","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     * @param input input from user","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Parser","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"     * @param taskManager to handle to task","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    public Parser(TaskManager taskManager) {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Parser","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"     * @param input       input from user","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"     * @param taskManager to handle to task","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"    public Parser(String input, TaskManager taskManager) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Parser","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"     * @param input       input from user","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"     * @param taskManager to handle to task","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"     * @param type        of the command","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    public Parser(String input, TaskManager taskManager, ITask.TaskTypes type) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"     * Returns the \u0027by\u0027 date of deadline task","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"    public Date getBy() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"        assert isProcessed : \"Processed the Parser first\";","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        if (by \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"            throw new ContentEmpty(\"\u0027by\u0027\");","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"        return by;","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"     * Converts the user input to valid program input for a deadline","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"     * task","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"    public void forDeadline() throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"        if (!isProcessed) {","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"            if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"                throw new IncompleteCommandException(\"/by\");","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"            String[] temp \u003d input.split(\"/by\");","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"            if (temp.length \u003c 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"                throw new ContentEmpty(\"\u0027/by command\u0027\");","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"            description \u003d temp[0].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"                by \u003d DATE_IN_FORMAT.parse(temp[1].trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"                throw new DateParseException(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"SPWwj"},"content":"            isProcessed \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":128,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"SPWwj"},"content":"     * Returns the \u0027from\u0027 date of event task","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"SPWwj"},"content":"    public Date getFrom() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":135,"author":{"gitId":"SPWwj"},"content":"        assert isProcessed : \"Processed the Parser first\";","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":137,"author":{"gitId":"SPWwj"},"content":"        if (from \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"SPWwj"},"content":"            throw new ContentEmpty(\"\u0027from\u0027\");","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"SPWwj"},"content":"        return from;","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"SPWwj"},"content":"     * Returns the \u0027to\u0027 date of event task","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-23"},{"lineNumber":147,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":148,"author":{"gitId":"SPWwj"},"content":"    public Date getTo() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"SPWwj"},"content":"        assert isProcessed : \"Processed the Parser first\";","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":151,"author":{"gitId":"SPWwj"},"content":"        if (to \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"SPWwj"},"content":"            throw new ContentEmpty(\"\u0027to\u0027\");","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"SPWwj"},"content":"        return to;","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":159,"author":{"gitId":"SPWwj"},"content":"     * Returns the enum type of task","lastModifiedDate":"2023-02-06"},{"lineNumber":160,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":161,"author":{"gitId":"SPWwj"},"content":"    public ITask.TaskTypes getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"SPWwj"},"content":"        return type;","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"SPWwj"},"content":"     * Returns the task manager","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":168,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"SPWwj"},"content":"    public TaskManager getTaskManager() {","lastModifiedDate":"2023-01-22"},{"lineNumber":170,"author":{"gitId":"SPWwj"},"content":"        return taskManager;","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":174,"author":{"gitId":"SPWwj"},"content":"     * Returns the index of task for a mark or unmark task","lastModifiedDate":"2023-02-06"},{"lineNumber":175,"author":{"gitId":"SPWwj"},"content":"     * task","lastModifiedDate":"2023-01-23"},{"lineNumber":176,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":177,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-23"},{"lineNumber":178,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":179,"author":{"gitId":"SPWwj"},"content":"    public int getIndex() throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"SPWwj"},"content":"        if (!isProcessed) {","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"SPWwj"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"SPWwj"},"content":"                index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"SPWwj"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"SPWwj"},"content":"                throw new InvalidMarkInput(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":186,"author":{"gitId":"SPWwj"},"content":"            if (index \u003c 0 || index \u003e taskManager.size() - 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"SPWwj"},"content":"                throw new InvalidMarkInput(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":189,"author":{"gitId":"SPWwj"},"content":"            isProcessed \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":191,"author":{"gitId":"SPWwj"},"content":"        return index;","lastModifiedDate":"2023-01-31"},{"lineNumber":192,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":193,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":194,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":195,"author":{"gitId":"SPWwj"},"content":"     * Returns the description of task","lastModifiedDate":"2023-02-06"},{"lineNumber":196,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":197,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-23"},{"lineNumber":198,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":199,"author":{"gitId":"SPWwj"},"content":"    public String getDescription() throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":200,"author":{"gitId":"SPWwj"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":201,"author":{"gitId":"SPWwj"},"content":"            throw new ContentEmpty(\"\u0027description\u0027\");","lastModifiedDate":"2023-01-17"},{"lineNumber":202,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":203,"author":{"gitId":"SPWwj"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":204,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":205,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":206,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":207,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":208,"author":{"gitId":"SPWwj"},"content":"     * Converts the user input to valid program input for an event","lastModifiedDate":"2023-02-06"},{"lineNumber":209,"author":{"gitId":"SPWwj"},"content":"     * task","lastModifiedDate":"2023-01-23"},{"lineNumber":210,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":211,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-23"},{"lineNumber":212,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":213,"author":{"gitId":"SPWwj"},"content":"    public void forEvent() throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":215,"author":{"gitId":"SPWwj"},"content":"        if (!input.contains(\"/from\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":216,"author":{"gitId":"SPWwj"},"content":"            throw new IncompleteCommandException(\"/from\");","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"SPWwj"},"content":"        String[] result \u003d new String[3];","lastModifiedDate":"2023-01-17"},{"lineNumber":219,"author":{"gitId":"SPWwj"},"content":"        String[] temp \u003d input.split(\"/from\");","lastModifiedDate":"2023-01-31"},{"lineNumber":220,"author":{"gitId":"SPWwj"},"content":"        result[0] \u003d temp[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":221,"author":{"gitId":"SPWwj"},"content":"        String[] temp2 \u003d temp[1].split(\"/to\");","lastModifiedDate":"2023-01-17"},{"lineNumber":222,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":223,"author":{"gitId":"SPWwj"},"content":"        if (!input.contains(\"/to\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":224,"author":{"gitId":"SPWwj"},"content":"            throw new IncompleteCommandException(\"/to\");","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"SPWwj"},"content":"        result[1] \u003d temp2[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"SPWwj"},"content":"        result[2] \u003d temp2[1];","lastModifiedDate":"2023-01-17"},{"lineNumber":228,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":229,"author":{"gitId":"SPWwj"},"content":"            from \u003d DATE_IN_FORMAT.parse(result[1].trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":230,"author":{"gitId":"SPWwj"},"content":"            to \u003d DATE_IN_FORMAT.parse(result[2].trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":231,"author":{"gitId":"SPWwj"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":232,"author":{"gitId":"SPWwj"},"content":"            throw new DateParseException(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":233,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":234,"author":{"gitId":"SPWwj"},"content":"        description \u003d result[0].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":235,"author":{"gitId":"SPWwj"},"content":"        isProcessed \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":236,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":237,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":238,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":239,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":240,"author":{"gitId":"SPWwj"},"content":"     * Converts the user input to valid program input for a todos","lastModifiedDate":"2023-02-06"},{"lineNumber":241,"author":{"gitId":"SPWwj"},"content":"     * task","lastModifiedDate":"2023-01-23"},{"lineNumber":242,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":243,"author":{"gitId":"SPWwj"},"content":"    public void forTodo() {","lastModifiedDate":"2023-01-17"},{"lineNumber":244,"author":{"gitId":"SPWwj"},"content":"        description \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":245,"author":{"gitId":"SPWwj"},"content":"        isProcessed \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":246,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":247,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":248,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":249,"author":{"gitId":"SPWwj"},"content":"     * Converts the user input to valid program input for a Find","lastModifiedDate":"2023-02-06"},{"lineNumber":250,"author":{"gitId":"SPWwj"},"content":"     * task","lastModifiedDate":"2023-01-31"},{"lineNumber":251,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"SPWwj"},"content":"    public void forFind() {","lastModifiedDate":"2023-01-23"},{"lineNumber":253,"author":{"gitId":"SPWwj"},"content":"        description \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":254,"author":{"gitId":"SPWwj"},"content":"        isProcessed \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":255,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":256,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":257,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":258,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":259,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":260,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SPWwj":260}},{"path":"src/main/java/vic/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.utilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.LoadFileException;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.SaveFileException;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":" * Represents local storage. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to local","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":" * database","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    private final String path;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     * Constructor for Storage","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"     * @param path the path to local database file","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     * Loads the tasks from local database","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur during loading of task.","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    public ArrayList\u003cITask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"            ArrayList\u003cITask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"                int markIndex \u003d line.indexOf(\"[X]\") + 3;","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"                int unmarkIndex \u003d line.indexOf(\"[ ]\") + 3;","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"                if (line.contains(\"[T]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"                    if (line.contains(\"[X]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"                        result.add(new Todo(line.substring(markIndex).trim(),","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"                                true));","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"                        result.add(new Todo(line.substring(unmarkIndex).trim(),","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"                                false));","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"                } else if (line.contains(\"[D]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"                    String by \u003d line.substring(line.indexOf(\"/by:\") + 4,","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"                            line.indexOf(\"/content:\")).trim();","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"                    if (line.contains(\"[X]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"                        result.add(new Deadline(line.substring(markIndex).trim(),","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"                                new Date(Long.parseLong(by)), true));","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"                        result.add(new Deadline(line.substring(unmarkIndex).trim(),","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"                                new Date(Long.parseLong(by)), false));","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"                } else if (line.contains(\"[E]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"                    String from \u003d line.substring(line.indexOf(\"/from:\") + 6,","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"                            line.indexOf(\"/to:\")).trim();","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"                    String to \u003d line.substring(line.indexOf(\"/to:\") + 4,","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"                            line.indexOf(\"/content:\")).trim();","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"                    if (line.contains(\"[X]\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"                        result.add(new Event(line.substring(markIndex).trim(),","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"                                new Date(Long.parseLong(from)),","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"                                new Date(Long.parseLong(to)), true));","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"                        result.add(new Event(line.substring(unmarkIndex).trim(),","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"                                new Date(Long.parseLong(from)),","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"                                new Date(Long.parseLong(to)), false));","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"            return result;","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"            throw new LoadFileException(path, e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"     * Saves the tasks from local database","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"     * @param tasks task to save","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur during save of task.","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"    public void saveAll(ArrayList\u003cITask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"            File f \u003d new File(path);","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"            File dir \u003d new File(f.getParent());","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"                if (!dir.mkdir()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"                    throw new LoadFileException(path, \"Make dir fail\");","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"                if (!f.createNewFile()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"                    throw new LoadFileException(path, \"Create file fail\");","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"            for (ITask t : tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"                content.append(t.toSaveFormat()).append(\"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"            fw.write(content.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"            fw.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"SPWwj"},"content":"            throw new SaveFileException(path, e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"SPWwj":129}},{"path":"src/main/java/vic/utilities/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.utilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.commands.ICommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeCloneException;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * Represents a manager to handle all tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" * A \u003ccode\u003eTaskManager\u003c/code\u003e object corresponds to","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":" * a manager handle all task","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    private ArrayList\u003cITask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private LastCommand lastTask \u003d null;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     * Constructor for TaskManager","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     * @param filePath the path to local database file","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    public TaskManager(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    @SuppressWarnings(\"SuspiciousMethodCalls\")","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    public int getObjectIndex(Object obj) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        return tasks.indexOf(obj);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * Loads the tasks from database","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur during loading of task.","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    public void load() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     * Returns all tasks by using stream filter","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    public ArrayList\u003cITask\u003e getTasks() {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        return tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"     * Finds specific task from given keyword","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    public Object[] find(String keyword) {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        return tasks.stream()","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"                .filter(x -\u003e x.descriptionContain(keyword)).toArray();","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"     * Returns the size of task","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    public int size() {","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"     * Removes specific task at given index","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"     * @param index the index of task to be removed","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"    public ITask remove(int index) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d tasks.remove(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        updateLastTask(ICommand.Type.DELETE, task);","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"        storage.saveAll(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"        return task;","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"     * Undoes the last action to the task list","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"     * and returns the feedback result","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"    public String undo() throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"        String result;","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"        if (lastTask \u003d\u003d null) {","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"            result \u003d \"No command capture in history\";","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"            result \u003d lastTask.undo(tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"            lastTask \u003d null;","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        storage.saveAll(tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"     * Adds specific task","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"     * @param task the task to be added to the task list","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"    public void add(ITask task) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"        updateLastTask(ICommand.Type.TODO, task);","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"        storage.saveAll(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"     * Marks specific task","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"     * @param index  the index of task","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"    public ITask mark(int index) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d tasks.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"        updateLastTask(ICommand.Type.MARK, task);","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"        task.markAsDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"        return task;","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"     * Un-marks specific task","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"SPWwj"},"content":"     * @param index  the index of task","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"SPWwj"},"content":"    public ITask unmark(int index) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"SPWwj"},"content":"        ITask task \u003d tasks.get(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"SPWwj"},"content":"        updateLastTask(ICommand.Type.UNMARK, task);","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"SPWwj"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"SPWwj"},"content":"        storage.saveAll(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"SPWwj"},"content":"        return task;","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":138,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"SPWwj"},"content":"    private void updateLastTask(ICommand.Type type, ITask task) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":141,"author":{"gitId":"SPWwj"},"content":"            lastTask \u003d new LastCommand(type, (ITask) task.clone());","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"SPWwj"},"content":"        } catch (CloneNotSupportedException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"SPWwj"},"content":"            throw new DukeCloneException(e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":146,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":147,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"SPWwj":147}},{"path":"src/main/java/vic/utilities/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.utilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import vic.commands.ICommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * UserInterface class to interact with user","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * take in input from user and export output to user","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"public class UserInterface {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * Prints the content onto the display","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     * in pre-define format","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * @param sentences to print","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public void speak(String... sentences) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        for (String sentence : sentences) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"            System.out.println(sentence);","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        String dialogSeparator \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        System.out.println(dialogSeparator);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     * Asks user to input command","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     * @param sentence type of command to ask the user to input","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    public void getCommand(String sentence) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        System.out.println(sentence);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     * Prints the welcome message when first start up the Duke app","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        String logo \u003d \"              \\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"                + \"| | | | | |----  \\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"                + \"| | | | | | |-- \\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"                + \"| |_| | | | |--   \\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"                + \" \\\\___/|_| |____\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        speak(logo, \"Hello! I\u0027m Vic\", \"What can I do for you?\");","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"     * Shows to error loading msg","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"     * @param msg to be print","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    public void showLoadingError(String msg) {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        speak(msg);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"     * Shows to error msg","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"     * @param msg to be print","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    public void showError(String msg) {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        speak(msg);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"     * Reads the user command","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"     * @param taskManager hand over the command to task manager","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    public ICommand readCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"        String cmd \u003d sc.next().trim();","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"        String content \u003d sc.nextLine().trim();","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        return ICommand.Type.valueOfOrElse(cmd.toUpperCase())","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"                .createCommand(new Parser(content, taskManager));","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"     * Reads the user command","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"     * @param taskManager hand over the command to task manager","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"     * @param input       from Gui","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"     * @throws DukeException IF error occur","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"    public ICommand readCommand(TaskManager taskManager,","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"                                String input) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        String[] cmd \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        if (cmd.length \u003c 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"            throw new InvalidCommandException(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"        if (cmd.length \u003e 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"            content \u003d cmd[1].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"        return ICommand.Type.valueOfOrElse(cmd[0].toUpperCase())","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"                .createCommand(new Parser(content, taskManager));","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"SPWwj":105}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"99\" text\u003d\"Label\" prefHeight\u003d\"99.0\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"            \u003cInsets topRightBottomLeft\u003d\"5\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SPWwj":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"            fx:controller\u003d\"vic.MainWindow\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SPWwj":17}},{"path":"src/test/java/vic/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"        Assertions.assertEquals(2, 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"        Assertions.assertEquals(4, 4);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"SPWwj":16}},{"path":"src/test/java/vic/utilities/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.utilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"class ParserTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    void getBy() throws DukeException, ParseException {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        Parser parser \u003d new Parser(\"deadline return book /by 2/12/2019 1800\");","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"        parser.forDeadline();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"        Date actual \u003d parser.getBy();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"        Date expected;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        expected \u003d Parser.DATE_IN_FORMAT.parse(\"2/12/2019 1800\");","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    void getFrom() throws DukeException, ParseException {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        Parser parser \u003d new Parser(\"event buy burger /from 2/12/2019 1800 /to 2/12/2019 2100\");","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        parser.forEvent();","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        Date actual \u003d parser.getFrom();","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        Date expected \u003d Parser.DATE_IN_FORMAT.parse(\"2/12/2019 1800\");","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    void getTo() throws DukeException, ParseException {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        Parser parser \u003d new Parser(\"event buy burger /from 2/12/2019 1800 /to 2/12/2019 2100\");","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        parser.forEvent();","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        Date actual \u003d parser.getTo();","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        Date expected \u003d Parser.DATE_IN_FORMAT.parse(\"2/12/2019 2100\");","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"SPWwj":51}},{"path":"src/test/java/vic/utilities/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package vic.utilities;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import vic.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.ITask;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"import vic.tasks.Todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"class StorageTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    void load() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        Storage storage \u003d new Storage(\"data/jtest.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        ArrayList\u003cITask\u003e actual \u003d storage.load();","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        ArrayList\u003cITask\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        generateSampleTasks(expected);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        assertEquals(actual.toString(), expected.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    private void generateSampleTasks(ArrayList\u003cITask\u003e expected) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        ITask todo \u003d new Todo(\"x\", false);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        ITask deadline \u003d new Deadline(\"return book\",","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"                new Date(Long.parseLong(\"1575280800000\")), true);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        ITask event \u003d new Event(\"buy burger\", new Date(Long.parseLong(\"1575280800000\")),","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"                new Date(Long.parseLong(\"1575291600000\")), false);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        expected.add(todo);","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        expected.add(deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        expected.add(event);","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    void saveAll() throws DukeException, FileNotFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        ArrayList\u003cITask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        Storage storage \u003d new Storage(\"data/jtestsave.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        generateSampleTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        storage.saveAll(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        File actualFile \u003d new File(\"data/jtestsave.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        Scanner fileReader \u003d new Scanner(actualFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        String actual \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            actual \u003d fileReader.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        fileReader.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        File expectFile \u003d new File(\"data/jtestexpectsave.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        fileReader \u003d new Scanner(expectFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        String expected \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"            expected \u003d fileReader.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        fileReader.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        assertNotNull(actual);","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"SPWwj":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"todo x","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"deadline y /by a","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"event z /from b /to c","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"mark 2","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"list","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"SPWwj":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"REM run the program, feed vic.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SPWwj":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SPWwj":1,"-":37}}]
