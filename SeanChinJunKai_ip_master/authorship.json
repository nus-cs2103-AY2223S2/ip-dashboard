[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SeanChinJunKai":2,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"D | 1 | return book  | 2019-10-15","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"SeanChinJunKai":2}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * A collection of enums which represent possible commands given by user","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public enum Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    BYE,","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    FIND,","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    LIST,","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    MARK,","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    UNMARK,","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"    TODO,","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    EVENT,","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    DELETE","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":21}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a task which has a specific deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for creating a Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param description name of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param by deadline of this task.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Deadline object which users can see in the command line.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Deadline object to store in txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getText() {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"D \" + super.getText()","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"                + \" | \" + by;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":46}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a Command Line Application which acts as a Task Manager.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor to initialise the Task Manager.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param filePath the path of the file where we want to store the tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"     * Opens up the Task Manager to taking in input and executing commands.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        Task chosen;","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"        Task created;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"                String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"                Parser.parseUserResponse(userInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"                switch(Parser.getCommand()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"                case BYE: {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"                    storage.saveToFile(tasks.getTaskList());","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.showGoodbyeMessage();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"                    isExit \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"                case FIND: {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"                    String keyword \u003d Parser.getArgs()[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"                    ArrayList\u003cTask\u003e matchingTasks \u003d tasks.getMatchingTasks(keyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.showMatchingTasksMessage(matchingTasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"                case LIST: {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.showTasksMessage(tasks.getTaskList());","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"                case MARK: {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"                    int id \u003d Parser.parseTask(Parser.getArgs());","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"                    chosen \u003d tasks.getTask(id);","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"                    chosen.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.markTaskMessage(chosen);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"                case UNMARK: {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"                    int id \u003d Parser.parseTask(Parser.getArgs());","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"                    chosen \u003d tasks.getTask(id);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"                    chosen.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.unmarkTaskMessage(chosen);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"                case DELETE: {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"                    int id \u003d Parser.parseTask(Parser.getArgs());","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"                    chosen \u003d tasks.getTask(id);","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"                    tasks.deleteTask(chosen);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.deleteTaskMessage(chosen, tasks.getTaskList());","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"                case TODO: {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"                    created \u003d Parser.parseTodo(Parser.getArgs());","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"                    tasks.addTask(created);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.addedTaskMessage(created, tasks.getTaskList());","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"                case DEADLINE: {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"                    created \u003d Parser.parseDeadline(Parser.getArgs());","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"                    tasks.addTask(created);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.addedTaskMessage(created, tasks.getTaskList());","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"                case EVENT: {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"                    created \u003d Parser.parseEvent(Parser.getArgs());","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"                    tasks.addTask(created);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"                    ui.addedTaskMessage(created, tasks.getTaskList());","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"SeanChinJunKai"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"SeanChinJunKai"},"content":"        new Duke(\"/duke.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"SeanChinJunKai":112,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates exceptions specific to Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a task with a specific start and end date/time.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    protected String start;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    protected String end;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for creating an Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param description name of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param start start date/time of this task.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param end end date/time of this task.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of an Event object which users can see in the command line.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"                + \"(from: \" + this.start + \"to: \" + this.end + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of an Event object to store in txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getText() {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"E \" + super.getText()","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"                + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":46}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a parser which parses user commands and makes sense of it.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    private static String[] args;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    private static Command action;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the userInput to retrieve the main command and corresponding arguments.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param userInput String that user inputs.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException for invalid arguments.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    public static void parseUserResponse(String userInput) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"        switch (command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"bye\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length !\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Invalid number of arguments.Only require 1!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.BYE;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"list\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length !\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Invalid number of arguments.Only require 1!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.LIST;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"find\": {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Keyword missing!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.FIND;","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Task number missing!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.UNMARK;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"mark\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Task number missing!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.MARK;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"delete\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Task number missing!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.DELETE;","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"todo\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.TODO;","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.DEADLINE;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"event\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"The description of a event cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.EVENT;","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Invalid command entered!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the stored arguments and returns a Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param args arguments following the main command.","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return  Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if description of Todo is not present.","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Todo parseTodo(String[] args) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"SeanChinJunKai"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"SeanChinJunKai"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"SeanChinJunKai"},"content":"            String desc \u003d args[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"SeanChinJunKai"},"content":"            return new Todo(desc);","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the stored arguments and returns a Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param args arguments following the main command.","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return  Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if end date/time not present or wrong format of end date/time.","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Deadline parseDeadline(String[] args) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"SeanChinJunKai"},"content":"        String[] separated \u003d args[1].split(\"/by \");","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"SeanChinJunKai"},"content":"        if (separated.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Deadline needs to include a specific end date!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"SeanChinJunKai"},"content":"            LocalDate date \u003d LocalDate.parse(separated[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"SeanChinJunKai"},"content":"            return new Deadline(separated[0], date);","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Give deadline in YYYY-MM-DD format!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the stored arguments and returns an Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param args arguments following the main command.","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return  Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if start and end date/time not present.","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Event parseEvent(String[] args) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"SeanChinJunKai"},"content":"        String[] separated \u003d args[1].split(\"/from |/to \");","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"SeanChinJunKai"},"content":"        if (separated.length \u003c 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Event needs to include a start date/time and a end date/time!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"SeanChinJunKai"},"content":"        return new Event(separated[0], separated[1], separated[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the stored arguments to get referenced task ID.","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param args arguments following the main command.","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return  task ID.","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if task ID is of the wrong type.","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"SeanChinJunKai"},"content":"    public static int parseTask(String[] args) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"SeanChinJunKai"},"content":"            int chosenId \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"SeanChinJunKai"},"content":"            return chosenId;","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Given task number is invalid!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Command getCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"SeanChinJunKai"},"content":"        return action;","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"SeanChinJunKai"},"content":"    public static String[] getArgs() {","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"SeanChinJunKai"},"content":"        return args;","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":178}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a storage unit which handles loading tasks from the","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":" * file and saving tasks in the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String DIR_PATH \u003d System.getProperty(\"user.home\") + \"/ip/data\";","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    private String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     * Loads all saved tasks in txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return List of saved tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if there is an error with reading or creating the txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"            File dir \u003d new File(DIR_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"            File taskFile \u003d new File(DIR_PATH + filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"            if (!taskFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"            Scanner fileScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"            while(fileScanner.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"                String input \u003d fileScanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"                Task task \u003d readTaskString(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"     * Saves all tasks into txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param tasks List of current tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if there is an error writing to the txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e tasks) throws DukeException  {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"            FileWriter fw \u003d new FileWriter(DIR_PATH + filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"                fw.write(task.getText());","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"     * Formats tasks in txt file into corresponding Task objects.","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param input task in txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if there is an error reading the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Task readTaskString(String input) throws DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"        String[] parsed \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"        Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"        int len \u003d parsed.length;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"        switch (len) {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"            case 3: // this is a task","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"                Todo todo \u003d new Todo(parsed[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"                if (parsed[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"                    todo.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"                task \u003d todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"            case 4: // this is a deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"                LocalDate date \u003d LocalDate.parse(parsed[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"                Deadline deadline \u003d new Deadline(parsed[2], date);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"                if (parsed[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"                    deadline.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"                task \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"            case 5: // this is an event","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"                Event event \u003d new Event(parsed[2], parsed[3], parsed[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"                if (parsed[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"                    event.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"                task \u003d event;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"            default:","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Unable to read file contents!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"        return task;","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":109}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for creating a Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param description name of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of the status of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return status of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"     * Marks task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"     * Unmarks a task.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Task object which users can see in the command line.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a task object to store in txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getText() {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"        return String.format(\"| %s | %s\", this.getStatusIcon() \u003d\u003d \"X\" ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"SeanChinJunKai":67}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a container for the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for storing current TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for initialising new TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"     * Adds task to the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"     * Retrieves a task from the TaskList based on given ID.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param taskNumber ID of the task in the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return chosen Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if given ID does not exist in TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"    public Task getTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"            Task chosenTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"            return chosenTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Task does not exist!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"     * Removes task from TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param chosen task to be removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return deleted Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if Task does not exist in TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"    public Task deleteTask(Task chosen) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"        this.tasks.remove(chosen);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"        return chosen;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"     * Finds all matching tasks containing the keyword","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param keyword","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return list of tasks matching the keyword","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"    public ArrayList\u003cTask\u003e getMatchingTasks(String keyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"        ArrayList\u003cTask\u003e selected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"                selected.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"        return selected;","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"    public int size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":90}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a task to be completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for creating a Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param description name of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Todo object which users can see in the command line.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Todo.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Todo. object to store in txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Todo.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getText() {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"T \" + super.getText();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a User Interface that interacts with user inputs.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays welcome message to user when Duke is first booted.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays error message to user.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    public void showErrorMessage(String error) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.println(error);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays all tasks in TaskList to user.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"    public void showTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"        if (tasks.size() !\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"            int idx \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"                System.out.printf(\"%d.%s%n\", idx, task);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"                idx++;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"            System.out.println(\"There are no tasks currently!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays all matching tasks in TaskList to user.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"    public void showMatchingTasksMessage(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"        if (matchingTasks.size() !\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"            int idx \u003d 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"            for (Task task : matchingTasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"                System.out.printf(\"%d.%s%n\", idx, task);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"                idx++;","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"            System.out.println(\"There are no matching tasks currently!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays goodbye message to user upon bye command.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays message to user upon successfully adding the task to the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"    public void addedTaskMessage(Task task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays message to user upon successfully marking the task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"    public void markTaskMessage(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays message to user upon successfully unmarking the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"    public void unmarkTaskMessage(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"     * Displays message to user upon successfully deleting the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"    public void deleteTaskMessage(Task task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":107}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseDeadline_wrongFormat_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"            String[] input \u003d {\"deadline\", \"return book /by 15 Oct 2019\"};","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseDeadline(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"            assertEquals(\"Give deadline in YYYY-MM-DD format!\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":17}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseTask_wrongType_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"            String[] input \u003d {\"delete\", \"string\"};","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseTask(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"            assertEquals(\"Given task number is invalid!\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseUserResponse_unknownCommand_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseUserResponse(\"eat\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"            assertEquals(\"Invalid command entered!\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"todo","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"deadline","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"deadline return book /by","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"event","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"event project meeting /from","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"mark 2","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"mark 22","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"unmark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"unmark 5","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"delete 3","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"delete 44","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"blah","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SeanChinJunKai":3,"-":31}}]
