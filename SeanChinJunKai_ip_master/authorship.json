[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SeanChinJunKai":20,"-":40}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * A collection of enums which represent possible commands given by user.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public enum Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    BYE,","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    FIND,","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    LIST,","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    MARK,","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    UNMARK,","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"    TODO,","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    EVENT,","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    DELETE","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":21}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a Task which has a specific deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for creating a Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param description Name of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param by Deadline of this Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Deadline object which users can see in the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Deadline object to store in txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getText() {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"D \" + super.getText()","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"                + \" | \" + by;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"SeanChinJunKai":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a GUI Application which acts as a Task Manager.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor to initialise the Task Manager.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param filePath the path of the file where we want to store the tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"            ui.showErrorMessage(e);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns the result string to be shown to user in GUI","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"     * based on user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param input text that user enters into GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return string to be displayed to user.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"        Task chosen;","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        String response \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseUserResponse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"            switch (Parser.getCommand()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"            case BYE: {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"                storage.saveToFile(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d ui.showGoodbyeMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"            case FIND: {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"                String keyword \u003d Parser.getArgs()[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d tasks.getMatchingTasksString(keyword);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"            case LIST: {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d ui.showTasksMessage(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"            case MARK: {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"                int id \u003d Parser.parseTask();","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"                chosen \u003d tasks.getTask(id);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"                chosen.mark();","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d ui.markTaskMessage(chosen);","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"            case UNMARK: {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"                int id \u003d Parser.parseTask();","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"                chosen \u003d tasks.getTask(id);","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"                chosen.unmark();","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d ui.unmarkTaskMessage(chosen);","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"            case DELETE: {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"                int id \u003d Parser.parseTask();","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"                chosen \u003d tasks.getTask(id);","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"                tasks.deleteTask(chosen);","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d ui.deleteTaskMessage(chosen, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"            case TODO: {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"                chosen \u003d Parser.parseTodo();","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"                tasks.addTask(chosen);","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d ui.addedTaskMessage(chosen, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"            case DEADLINE: {","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"                chosen \u003d Parser.parseDeadline();","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"                tasks.addTask(chosen);","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d ui.addedTaskMessage(chosen, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"            case EVENT: {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"                chosen \u003d Parser.parseEvent();","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"                tasks.addTask(chosen);","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"                response \u003d ui.addedTaskMessage(chosen, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"                assert false;","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"            response \u003d ui.showErrorMessage(e);","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"        return response;","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"SeanChinJunKai":106}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates exceptions specific to Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a Task with a specific start and end date/time.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    protected String start;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    protected String end;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for creating an Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param description Name of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param start Start date/time of this Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param end End date/time of this Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of an Event object which users can see in the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"                + \"(from: \" + this.start + \"to: \" + this.end + \")\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of an Event object to store in txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getText() {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"E \" + super.getText()","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"                + \" | \" + start + \" | \" + end;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":46}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * Entry point into our GUI Duke application.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"SeanChinJunKai":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    private Duke duke \u003d new Duke(\"/duke.txt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"SeanChinJunKai":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"        dialogContainer.getChildren().add(DialogBox","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"                .getDukeDialog(\"Hello! I\u0027m Duke\\nWhat can I do for you?\", dukeImage));","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"SeanChinJunKai":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a parser which parses user commands and makes sense of it.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    private static String[] args;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    private static Command action;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the userInput to retrieve the main command and corresponding arguments.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param userInput String that user inputs.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException for invalid arguments.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    public static void parseUserResponse(String userInput) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"        switch (command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"bye\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length !\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Invalid number of arguments.Only require 1!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.BYE;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"list\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length !\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Invalid number of arguments.Only require 1!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.LIST;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"find\": {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Keyword missing!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.FIND;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Task number missing!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.UNMARK;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"mark\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Task number missing!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.MARK;","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"delete\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"Task number missing!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.DELETE;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"todo\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.TODO;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.DEADLINE;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"        case \"event\": {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"            if (tokens.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"                throw new DukeException(\"The description of a event cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"            action \u003d Command.EVENT;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"            args \u003d tokens;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Invalid command entered!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the stored arguments and returns a Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if description of Todo is not present.","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Todo parseTodo() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"SeanChinJunKai"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"SeanChinJunKai"},"content":"        assert args.length \u003d\u003d 2;","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"SeanChinJunKai"},"content":"        String desc \u003d args[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"SeanChinJunKai"},"content":"        return new Todo(desc);","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the stored arguments and returns a Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if end date/time not present or wrong format of end date/time.","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Deadline parseDeadline() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"SeanChinJunKai"},"content":"        String[] separated \u003d args[1].split(\"/by \");","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"SeanChinJunKai"},"content":"        if (separated.length \u003c 2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Deadline needs to include a specific end date!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"SeanChinJunKai"},"content":"            assert separated.length \u003d\u003d 2;","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"SeanChinJunKai"},"content":"            LocalDate date \u003d LocalDate.parse(separated[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"SeanChinJunKai"},"content":"            return new Deadline(separated[0], date);","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Give deadline in YYYY-MM-DD format!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the stored arguments and returns an Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if start and end date/time not present.","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Event parseEvent() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":147,"author":{"gitId":"SeanChinJunKai"},"content":"        String[] separated \u003d args[1].split(\"/from |/to \");","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":149,"author":{"gitId":"SeanChinJunKai"},"content":"        if (separated.length \u003c 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Event needs to include a start date/time and a end date/time!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"SeanChinJunKai"},"content":"        assert separated.length \u003d\u003d 3;","lastModifiedDate":"2023-02-07"},{"lineNumber":153,"author":{"gitId":"SeanChinJunKai"},"content":"        return new Event(separated[0], separated[1], separated[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the stored arguments to get referenced Task ID.","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return Task ID.","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if task ID is of the wrong type.","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"SeanChinJunKai"},"content":"    public static int parseTask() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":163,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"SeanChinJunKai"},"content":"            return Integer.parseInt(args[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Given task number is invalid!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Command getCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"SeanChinJunKai"},"content":"        return action;","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"SeanChinJunKai"},"content":"    public static String[] getArgs() {","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"SeanChinJunKai"},"content":"        return args;","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":177}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a storage unit which handles loading Tasks from the","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":" * file and saving Tasks in the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String DIR_PATH \u003d System.getProperty(\"user.home\") + \"/ip/data\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    private String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"     * Loads all saved Tasks in txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return List of saved Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if there is an error with reading or creating the txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"            // Create the file and directory for storing the tasks txt file.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"            File dir \u003d new File(DIR_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"            File taskFile \u003d new File(DIR_PATH + filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"            if (!taskFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"            // Read the current tasks txt file into the TaskList object.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"            Scanner fileScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"                String input \u003d fileScanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"                Task task \u003d readTaskString(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"                tasks.addTask(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"     * Saves all Tasks into txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param tasks List of current Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if there is an error writing to the txt file.","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"    public void saveToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"            FileWriter fw \u003d new FileWriter(DIR_PATH + filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"            fw.write(tasks.saveString());","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"     * Formats Tasks in txt file into corresponding Task objects.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param input Task in txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if there is an error reading the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Task readTaskString(String input) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"        String[] parsed \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"        Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"        int len \u003d parsed.length;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"        switch (len) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"        case 3: // this is a todo","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"            Todo todo \u003d new Todo(parsed[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"            if (parsed[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"                todo.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"            task \u003d todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"        case 4: // this is a deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"            LocalDate date \u003d LocalDate.parse(parsed[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"            Deadline deadline \u003d new Deadline(parsed[2], date);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"            if (parsed[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"                deadline.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"            task \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"        case 5: // this is an event","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"            Event event \u003d new Event(parsed[2], parsed[3], parsed[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"            if (parsed[1].equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"                event.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"            task \u003d event;","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Unable to read file contents!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"SeanChinJunKai"},"content":"        return task;","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":110}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a Task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for creating a Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param description Name of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of the status of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return Status of Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"     * Marks Task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"     * Unmarks a Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Task object which users can see in the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Task object to store in txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getText() {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"        return String.format(\"| %s | %s\", this.getStatusIcon().equals(\"X\") ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"SeanChinJunKai":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a container for Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for initialising new TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"     * Adds task to the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"     * Retrieves a task from the TaskList based on given ID.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param taskNumber ID of the task in the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return chosen Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if given ID does not exist in TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    public Task getTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"            return tasks.get(taskNumber - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new DukeException(\"Task does not exist!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"     * Removes Task from TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param chosen Task to be removed.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws DukeException if Task does not exist in TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"    public void deleteTask(Task chosen) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"        this.tasks.remove(chosen);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"     * Finds all matching Tasks containing the keyword.","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param keyword keyword passed in by user.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return string representation of list of Tasks matching the keyword.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getMatchingTasksString(String keyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"            if (isMatch(task, keyword)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"                int idx \u003d tasks.indexOf(task) + 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"                res.append(String.format(\"%d.%s\", idx, task));","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"        if (res.toString().equals(\"\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"            return \"There are no matching tasks currently!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"            return \"Here are the matching tasks in your list:\\n\" + res;","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"    public boolean isMatch(Task task, String keyword) {","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"        return task.toString().contains(keyword);","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"    public int size() {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"        int idx \u003d 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"            result.append(String.format(\"%d.%s\", idx, task));","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"            idx++;","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"        return result.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns representation of TaskList to be stored into txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return string representation of TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"    public String saveString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"            result.append(task.getText());","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"SeanChinJunKai"},"content":"        return result.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":110}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a Task to be completed.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructor for creating a Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param description name of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Todo object which users can see in the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Todo.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"[T]\" + super.toString() + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns string representation of a Todo object to store in txt file.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return String representation of Todo.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    public String getText() {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"T \" + super.getText();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":37}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":" * Encapsulates a User Interface that interacts with user inputs.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":" * @author Sean Chin Jun Kai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns error message to be displayed to user when error occurs while using Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param error exception caught.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return the message string of the thrown exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    public String showErrorMessage(Exception error) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"        return error.getMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns the string representation of TaskList to be shown to user.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param tasks TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return string representation of the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    public String showTasksMessage(TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"        if (tasks.size() !\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"            return \"Here are the tasks in your list:\\n\" + tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"            return \"There are no tasks currently!\";","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns the goodbye message when user triggers the bye command.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return goodbye message.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns the message when user successfully adds a task to the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param task Task added.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param tasks TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return added Task success message.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"    public String addedTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"        result +\u003d (\"Got it. I\u0027ve added this task\\n\" + task);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"        result +\u003d String.format(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"        return result;","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns the message when user successfully marks a Task in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param task Task marked.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return mark Task success message.","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"    public String markTaskMessage(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns the message when user successfully unmarks a Task in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param task Task unmarked.","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return unmark Task success message.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"    public String unmarkTaskMessage(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns the message when user successfully deletes a Task from the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param task Task deleted.","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param tasks TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"     * @return delete Task success message.","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"    public String deleteTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"        result +\u003d (\"Noted. I\u0027ve removed this task:\\n\" + task);","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"        result +\u003d String.format(\"Now you have %d tasks in the list.\\n\", tasks.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"        return result;","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":92}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"SeanChinJunKai":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"SeanChinJunKai":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseDeadline_wrongFormat_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseUserResponse(\"deadline return book /by 15 Oct 2019\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseDeadline();","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"            assertEquals(\"Give deadline in YYYY-MM-DD format!\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseTask_wrongType_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseUserResponse(\"delete string\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseTask();","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"            assertEquals(\"Given task number is invalid!\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseUserResponse_unknownCommand_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"            Parser.parseUserResponse(\"eat\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"            assertEquals(\"Invalid command entered!\", e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SeanChinJunKai":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"todo","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"deadline","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"deadline return book /by","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"event","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"event project meeting /from","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"mark 2","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"mark 22","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"unmark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"unmark 5","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"delete 3","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"delete 44","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"blah","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"SeanChinJunKai":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SeanChinJunKai":3,"-":31}}]
