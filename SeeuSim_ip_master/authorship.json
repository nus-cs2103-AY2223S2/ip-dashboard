[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"import DukeExceptions.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":" * The main class to run the Duke App.","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"    private static final String graphicMascot \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣧⠙⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣦⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠙⢿⣦⡀⠀⠀⠀⢀⣾⡿⠉⣿⡄⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠙⣿⣄⣠⣴⡿⠋⠀⠀⣿⡇⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠈⠿⠟⠉⠀⠀⠀⢀⣿⠇⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⣿⡿⠿⠿⠿⠷⣶⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣤⣤⣴⣶⣶⡀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠹⣿⡀⠀⠀⠀⠀⠀⠀⢀⡤⠖⠚⠉⠉⠉⠉⠛⠲⣄⠀⠈⠉⠉⠉⠁⣼⡟⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠹⣷⡀⠀⠀⠀⢀⡔⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⡄⠀⠀⢀⣼⡟⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⢹⣷⠀⠀⢀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡀⢠⣾⡏⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⢀⣠⣴⡾⠟⠋⠀⠀⣸⠀⠀⠀⣴⣒⣒⣛⣛⣛⣋⣉⣉⣉⣙⣛⣷⠀⠙⠿⣶⣤⡀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"            \"⣾⣿⡋⠁⠀⠀⠀⠀⠀⡏⠀⠀⡄⠉⠉⠁⠀⠈⢹⢨⠃⠀⠀⠀⠀⠙⡄⠀⠀⣨⣿⠟\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"            \"⠈⠛⠿⣷⣦⣀⠀⠀⠀⡇⠀⠸⡟⠛⠿⠛⠛⠛⢻⢿⠋⠹⠟⠉⠉⠙⡇⣠⣾⠟⠁⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⢀⣽⣿⠇⠀⠀⡇⠀⠀⠳⣄⣀⠀⣀⣠⠞⠈⢷⣄⣀⣀⣠⣾⠁⢿⣧⡀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⢠⣴⡿⠋⠁⠀⠀⢀⡧⠄⠀⠦⣀⣈⣉⠁⠀⠠⡀⠘⡆⠠⠤⠴⢿⣄⠀⠙⣿⣦⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠹⢿⣦⣤⣀⠀⢰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⣤⠇⠀⠀⠀⣼⢘⣷⡿⠟⠋⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠈⠉⣿⡇⠈⠣⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡿⠻⣿⡀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⢸⣿⣤⣤⣤⣤⢧⠀⢀⡆⣠⠴⠒⠋⢹⠋⠉⢹⠗⠒⠄⣷⣾⡿⠇⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠉⠉⠉⣿⣇⣈⣆⠀⠳⠤⠀⠀⠀⠈⣇⡖⡍⠀⠠⣾⣿⡿⠇⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠛⠛⠛⢻⣷⣄⠀⠀⠀⠀⠁⠉⠀⠀⣠⣾⠟⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣉⣿⣷⠲⠤⠤⠤⣤⣶⣿⣟⠁⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⢀⣴⣶⡿⠿⠛⠛⢋⢹⡦⣄⣀⡤⢿⢉⠛⠛⠿⣷⣦⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠀⣿⠏⠀⠀⠀⠀⢀⠇⠈⡇⠀⠀⠀⠘⡎⣆⠀⠀⠀⢻⣧⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"SeeuSim"},"content":"            \"⠀⠀⠀⠀⠀⠈⠿⣶⣶⣶⣶⣶⣾⣶⣾⣷⣶⣶⣶⣶⣷⣾⣷⣶⣶⣾⡿\";","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"SeeuSim"},"content":"    private static final String mascot \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"SeeuSim"},"content":"            \"RICKRICKRICKRICKRICKKKKK\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"SeeuSim"},"content":"        +   \"RICK    RICK    RICKKKKK\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"SeeuSim"},"content":"        +   \"RICKRICKRICKRICKRICKKKKK\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"SeeuSim"},"content":"        +   \"Get Schwifty :)\";","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"SeeuSim"},"content":"     * The main function that runs the Duke app.","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"SeeuSim"},"content":"     * @param args Not used as of now. Used mainly to add command line","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"SeeuSim"},"content":"     *             arguments to the initial app run command.","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"SeeuSim"},"content":"        System.out.println(\"Hello from\\n\" + mascot);","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"SeeuSim"},"content":"        greet();","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"SeeuSim"},"content":"        operate();","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"SeeuSim"},"content":"     * The configurable greeting message for the Duke app.","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"SeeuSim"},"content":"    private static void greet() {","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"SeeuSim"},"content":"        String name \u003d \"R-r-r-rickkk\";","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"SeeuSim"},"content":"        String greeting \u003d String.format(\"Hello, I\u0027m %s!\", name);","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"SeeuSim"},"content":"        String cta \u003d \"What\u0027s up?\";","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"SeeuSim"},"content":"        DukeFormatter.section(","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"SeeuSim"},"content":"                greeting + \"\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"SeeuSim"},"content":"                + cta +\"\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"SeeuSim"},"content":"        );","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"SeeuSim"},"content":"     * The cleanup function for the Duke app environment.","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"SeeuSim"},"content":"     * Closes the provided scanner object.","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"SeeuSim"},"content":"     * @param sc The command line scanner to close.","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"SeeuSim"},"content":"    private static void cleanup(Scanner sc) {","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"SeeuSim"},"content":"        sc.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"SeeuSim"},"content":"     * The main function for parsing commands given to the Duke app via the","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"SeeuSim"},"content":"     * command line.","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"SeeuSim"},"content":"     * @param cmd The command to be parsed.","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store any tasks provided via the","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"SeeuSim"},"content":"     *           command.","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"SeeuSim"},"content":"     * @param sc The scanner object to scan the command line for inputs.","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"SeeuSim"},"content":"    private static void parseCommand(String cmd, DukeStore ds, Scanner sc) {","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"SeeuSim"},"content":"        String[] tokens \u003d cmd.split(\" \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"SeeuSim"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"SeeuSim"},"content":"            operateSimpleCommand(tokens[0], ds, sc);","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"SeeuSim"},"content":"        twoArgCommand(tokens[0], tokens[1], ds);","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"SeeuSim"},"content":"     * The main function for parsing commands with one word.","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"SeeuSim"},"content":"     * @param cmd The command given.","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks.","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"SeeuSim"},"content":"     * @param sc The scanner object to scan the command line for inputs.","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"SeeuSim"},"content":"    private static void operateSimpleCommand(String cmd, DukeStore ds, Scanner sc) {","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"SeeuSim"},"content":"        switch (cmd) {","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"SeeuSim"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"SeeuSim"},"content":"            cleanup(sc);","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"SeeuSim"},"content":"            String message \u003d \"It was okay serving you. Might/might not see you again.\" + \"\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"SeeuSim"},"content":"                    + \"Exiting...\";","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.section(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"SeeuSim"},"content":"            System.exit(0);","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"SeeuSim"},"content":"        case \"list\":","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.section(ds.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"SeeuSim"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(new DukeEmptyTaskException(DukeEmptyTaskException.TaskType.Todo));","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"SeeuSim"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(new DukeEmptyTaskException(DukeEmptyTaskException.TaskType.Deadline));","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"SeeuSim"},"content":"        case \"event\":","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(new DukeEmptyTaskException(DukeEmptyTaskException.TaskType.Event));","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"SeeuSim"},"content":"        default:","lastModifiedDate":"2023-01-17"},{"lineNumber":130,"author":{"gitId":"SeeuSim"},"content":"            if (cmd.matches(\"(mark|unmark|delete)\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"SeeuSim"},"content":"                DukeFormatter.error(new DukeTaskIndexMissingException(cmd));","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"SeeuSim"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"SeeuSim"},"content":"                DukeFormatter.error(new DukeInvalidCommandException());","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":138,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"SeeuSim"},"content":"     * The main function for parsing commands of the following format: `\"{command} {param}\"`","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"SeeuSim"},"content":"     * @param cmd The command given.","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"SeeuSim"},"content":"     * @param param The parameter provided to the command.","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks.","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":145,"author":{"gitId":"SeeuSim"},"content":"    private static void twoArgCommand(String cmd, String param, DukeStore ds) {","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"SeeuSim"},"content":"        switch (cmd) {","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"SeeuSim"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"SeeuSim"},"content":"            todo(param, ds);","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"SeeuSim"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-17"},{"lineNumber":151,"author":{"gitId":"SeeuSim"},"content":"            deadline(param, ds);","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"SeeuSim"},"content":"        case \"event\":","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"SeeuSim"},"content":"            event(param, ds);","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"SeeuSim"},"content":"        case \"tasks\":","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"SeeuSim"},"content":"            filterByDate(param, ds);","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"SeeuSim"},"content":"        default:","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"SeeuSim"},"content":"            if (cmd.matches(\"(mark|unmark|delete)\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"SeeuSim"},"content":"                manipulateTask(cmd, param, ds);","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"SeeuSim"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(new DukeInvalidCommandException());","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"SeeuSim"},"content":"     * The main access point for manipulating tasks in the store.","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"SeeuSim"},"content":"     * @param cmd The manipulation command.","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"SeeuSim"},"content":"     * @param param The access index.","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance.","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"SeeuSim"},"content":"    private static void manipulateTask(String cmd, String param, DukeStore ds) {","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"SeeuSim"},"content":"            int idx \u003d Integer.parseInt(param);","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"SeeuSim"},"content":"            switch (cmd) {","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"SeeuSim"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"SeeuSim"},"content":"                mark(idx, ds);","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"SeeuSim"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"SeeuSim"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"SeeuSim"},"content":"                unMark(idx, ds);","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"SeeuSim"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"SeeuSim"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"SeeuSim"},"content":"                delete(idx, ds);","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"SeeuSim"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(new DukeException(","lastModifiedDate":"2023-01-18"},{"lineNumber":191,"author":{"gitId":"SeeuSim"},"content":"                    String.format(\"An invalid index was provided for the %s command.\"","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"SeeuSim"},"content":"                            + \" Ensure it is a number!\", cmd)","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"SeeuSim"},"content":"            ));","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":198,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":199,"author":{"gitId":"SeeuSim"},"content":"     * Given a valid index in the store, marks a task as done.","lastModifiedDate":"2023-01-17"},{"lineNumber":200,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":201,"author":{"gitId":"SeeuSim"},"content":"     * @param idx The index of the task in the store.","lastModifiedDate":"2023-01-17"},{"lineNumber":202,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks.","lastModifiedDate":"2023-01-17"},{"lineNumber":203,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":204,"author":{"gitId":"SeeuSim"},"content":"    private static void mark(int idx, DukeStore ds) {","lastModifiedDate":"2023-01-17"},{"lineNumber":205,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":206,"author":{"gitId":"SeeuSim"},"content":"            ds.mark(idx - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":207,"author":{"gitId":"SeeuSim"},"content":"        } catch (DukeStoreInvalidAccessException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":208,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":209,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":210,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":211,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":212,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":213,"author":{"gitId":"SeeuSim"},"content":"     * Given a valid index in the store, marks a task as undone.","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":215,"author":{"gitId":"SeeuSim"},"content":"     * @param idx The index of the task in the store.","lastModifiedDate":"2023-01-17"},{"lineNumber":216,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks.","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"SeeuSim"},"content":"    private static void unMark(int idx, DukeStore ds) {","lastModifiedDate":"2023-01-17"},{"lineNumber":219,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":220,"author":{"gitId":"SeeuSim"},"content":"            ds.unMark(idx - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":221,"author":{"gitId":"SeeuSim"},"content":"        } catch (DukeStoreInvalidAccessException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":222,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":223,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":224,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":227,"author":{"gitId":"SeeuSim"},"content":"     * Given a valid index in the store, deletes a task stored at that index.","lastModifiedDate":"2023-01-18"},{"lineNumber":228,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":229,"author":{"gitId":"SeeuSim"},"content":"     * @param idx The index of the task in the store.","lastModifiedDate":"2023-01-18"},{"lineNumber":230,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":231,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":232,"author":{"gitId":"SeeuSim"},"content":"    private static void delete(int idx, DukeStore ds) {","lastModifiedDate":"2023-01-18"},{"lineNumber":233,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":234,"author":{"gitId":"SeeuSim"},"content":"            ds.delete(idx - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":235,"author":{"gitId":"SeeuSim"},"content":"        } catch (DukeStoreInvalidAccessException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":236,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(e);","lastModifiedDate":"2023-01-18"},{"lineNumber":237,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":238,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":239,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":240,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":241,"author":{"gitId":"SeeuSim"},"content":"     * Given a {@code todo} task, adds it to the store.","lastModifiedDate":"2023-01-17"},{"lineNumber":242,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":243,"author":{"gitId":"SeeuSim"},"content":"     * @param task The {@code todo} task to be added.","lastModifiedDate":"2023-01-17"},{"lineNumber":244,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks.","lastModifiedDate":"2023-01-17"},{"lineNumber":245,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":246,"author":{"gitId":"SeeuSim"},"content":"    private static void todo(String task, DukeStore ds) {","lastModifiedDate":"2023-01-17"},{"lineNumber":247,"author":{"gitId":"SeeuSim"},"content":"        TaskTodo todo \u003d new TaskTodo(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":248,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":249,"author":{"gitId":"SeeuSim"},"content":"            ds.add(todo);","lastModifiedDate":"2023-01-17"},{"lineNumber":250,"author":{"gitId":"SeeuSim"},"content":"        } catch (DukeStoreFullException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":251,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":252,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":253,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":254,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":255,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":256,"author":{"gitId":"SeeuSim"},"content":"     * Given a deadline task command, adds the deadline task to the store.","lastModifiedDate":"2023-01-17"},{"lineNumber":257,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":258,"author":{"gitId":"SeeuSim"},"content":"     * @param command The deadline command.","lastModifiedDate":"2023-01-17"},{"lineNumber":259,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks.","lastModifiedDate":"2023-01-17"},{"lineNumber":260,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":261,"author":{"gitId":"SeeuSim"},"content":"    private static void deadline(String command, DukeStore ds) {","lastModifiedDate":"2023-01-17"},{"lineNumber":262,"author":{"gitId":"SeeuSim"},"content":"        String[] tokens \u003d command.split(\" /by \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":263,"author":{"gitId":"SeeuSim"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":264,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.guide(","lastModifiedDate":"2023-01-18"},{"lineNumber":265,"author":{"gitId":"SeeuSim"},"content":"                    \"Usage: deadline {task} /by {deadline}\"","lastModifiedDate":"2023-01-17"},{"lineNumber":266,"author":{"gitId":"SeeuSim"},"content":"            );","lastModifiedDate":"2023-01-18"},{"lineNumber":267,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":268,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":269,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":270,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":271,"author":{"gitId":"SeeuSim"},"content":"            TaskDeadline deadline \u003d new TaskDeadline(","lastModifiedDate":"2023-01-24"},{"lineNumber":272,"author":{"gitId":"SeeuSim"},"content":"                    tokens[0],","lastModifiedDate":"2023-01-24"},{"lineNumber":273,"author":{"gitId":"SeeuSim"},"content":"                    DukeUtils.parseDateTime(tokens[1]));","lastModifiedDate":"2023-01-24"},{"lineNumber":274,"author":{"gitId":"SeeuSim"},"content":"            ds.add(deadline);","lastModifiedDate":"2023-01-17"},{"lineNumber":275,"author":{"gitId":"SeeuSim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":276,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(","lastModifiedDate":"2023-01-24"},{"lineNumber":277,"author":{"gitId":"SeeuSim"},"content":"                    new DukeInvalidDateException()","lastModifiedDate":"2023-01-24"},{"lineNumber":278,"author":{"gitId":"SeeuSim"},"content":"            );","lastModifiedDate":"2023-01-24"},{"lineNumber":279,"author":{"gitId":"SeeuSim"},"content":"        } catch (DukeStoreFullException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":280,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":281,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":282,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":283,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":284,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":285,"author":{"gitId":"SeeuSim"},"content":"     * Given an event task command, adds the event task to the store.","lastModifiedDate":"2023-01-17"},{"lineNumber":286,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":287,"author":{"gitId":"SeeuSim"},"content":"     * @param command The event task command.","lastModifiedDate":"2023-01-17"},{"lineNumber":288,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks.","lastModifiedDate":"2023-01-17"},{"lineNumber":289,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":290,"author":{"gitId":"SeeuSim"},"content":"    private static void event(String command, DukeStore ds) {","lastModifiedDate":"2023-01-17"},{"lineNumber":291,"author":{"gitId":"SeeuSim"},"content":"        String[] tokens \u003d command.split(\" /from \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":292,"author":{"gitId":"SeeuSim"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":293,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.guide(","lastModifiedDate":"2023-01-18"},{"lineNumber":294,"author":{"gitId":"SeeuSim"},"content":"                    \"Usage: event {task} /from {start} /to {end}\"","lastModifiedDate":"2023-01-17"},{"lineNumber":295,"author":{"gitId":"SeeuSim"},"content":"            );","lastModifiedDate":"2023-01-18"},{"lineNumber":296,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":297,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":298,"author":{"gitId":"SeeuSim"},"content":"        String[] dates \u003d tokens[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":299,"author":{"gitId":"SeeuSim"},"content":"        if (dates.length !\u003d 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":300,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.guide(","lastModifiedDate":"2023-01-18"},{"lineNumber":301,"author":{"gitId":"SeeuSim"},"content":"                    \"Usage: event {task} /from {start} /to {end}\"","lastModifiedDate":"2023-01-17"},{"lineNumber":302,"author":{"gitId":"SeeuSim"},"content":"            );","lastModifiedDate":"2023-01-18"},{"lineNumber":303,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":304,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":305,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":306,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":307,"author":{"gitId":"SeeuSim"},"content":"            TaskEvent event \u003d new TaskEvent(tokens[0],","lastModifiedDate":"2023-01-24"},{"lineNumber":308,"author":{"gitId":"SeeuSim"},"content":"                    DukeUtils.parseDateTime(dates[0]),","lastModifiedDate":"2023-01-24"},{"lineNumber":309,"author":{"gitId":"SeeuSim"},"content":"                    DukeUtils.parseDateTime(dates[1]));","lastModifiedDate":"2023-01-24"},{"lineNumber":310,"author":{"gitId":"SeeuSim"},"content":"            ds.add(event);","lastModifiedDate":"2023-01-17"},{"lineNumber":311,"author":{"gitId":"SeeuSim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":312,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(","lastModifiedDate":"2023-01-24"},{"lineNumber":313,"author":{"gitId":"SeeuSim"},"content":"                 new DukeInvalidDateException()","lastModifiedDate":"2023-01-24"},{"lineNumber":314,"author":{"gitId":"SeeuSim"},"content":"            );","lastModifiedDate":"2023-01-24"},{"lineNumber":315,"author":{"gitId":"SeeuSim"},"content":"        } catch (DukeStoreFullException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":316,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(e);","lastModifiedDate":"2023-01-17"},{"lineNumber":317,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":318,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":319,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":320,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":321,"author":{"gitId":"SeeuSim"},"content":"     * Filters the DukeStore for tasks occurring on the provided date.","lastModifiedDate":"2023-01-24"},{"lineNumber":322,"author":{"gitId":"SeeuSim"},"content":"     * @param date The provided date to filter for.","lastModifiedDate":"2023-01-24"},{"lineNumber":323,"author":{"gitId":"SeeuSim"},"content":"     * @param ds The store instance to store tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":324,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":325,"author":{"gitId":"SeeuSim"},"content":"    private static void filterByDate(String date, DukeStore ds) {","lastModifiedDate":"2023-01-24"},{"lineNumber":326,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":327,"author":{"gitId":"SeeuSim"},"content":"        if (!date.matches(\"/on (.*)$\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":328,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(","lastModifiedDate":"2023-01-24"},{"lineNumber":329,"author":{"gitId":"SeeuSim"},"content":"                    new DukeException(\"Usage: tasks /on {day}/{month}/{year}\")","lastModifiedDate":"2023-01-24"},{"lineNumber":330,"author":{"gitId":"SeeuSim"},"content":"            );","lastModifiedDate":"2023-01-24"},{"lineNumber":331,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-24"},{"lineNumber":332,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":333,"author":{"gitId":"SeeuSim"},"content":"        String cleanedDate \u003d date.replace(\"/on \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":334,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":335,"author":{"gitId":"SeeuSim"},"content":"            LocalDate dt \u003d DukeUtils.parseDate(cleanedDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":336,"author":{"gitId":"SeeuSim"},"content":"            DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");","lastModifiedDate":"2023-01-24"},{"lineNumber":337,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.section(","lastModifiedDate":"2023-01-24"},{"lineNumber":338,"author":{"gitId":"SeeuSim"},"content":"                    \"Searching for a list of tasks occurring on \" + dt.format(df) + \":\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":339,"author":{"gitId":"SeeuSim"},"content":"                    ds.occurOnDate(dt)","lastModifiedDate":"2023-01-24"},{"lineNumber":340,"author":{"gitId":"SeeuSim"},"content":"            );","lastModifiedDate":"2023-01-24"},{"lineNumber":341,"author":{"gitId":"SeeuSim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":342,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(","lastModifiedDate":"2023-01-24"},{"lineNumber":343,"author":{"gitId":"SeeuSim"},"content":"                new DukeInvalidDateException()","lastModifiedDate":"2023-01-24"},{"lineNumber":344,"author":{"gitId":"SeeuSim"},"content":"            );","lastModifiedDate":"2023-01-24"},{"lineNumber":345,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":346,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":347,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":348,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":349,"author":{"gitId":"SeeuSim"},"content":"     * The main method by which this store operates","lastModifiedDate":"2023-01-24"},{"lineNumber":350,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":351,"author":{"gitId":"SeeuSim"},"content":"    private static void operate() {","lastModifiedDate":"2023-01-17"},{"lineNumber":352,"author":{"gitId":"SeeuSim"},"content":"        DukeStore store \u003d DukeStore.create();","lastModifiedDate":"2023-01-17"},{"lineNumber":353,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":354,"author":{"gitId":"SeeuSim"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":355,"author":{"gitId":"SeeuSim"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":356,"author":{"gitId":"SeeuSim"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":357,"author":{"gitId":"SeeuSim"},"content":"                String command \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":358,"author":{"gitId":"SeeuSim"},"content":"                parseCommand(command, store, sc);","lastModifiedDate":"2023-01-17"},{"lineNumber":359,"author":{"gitId":"SeeuSim"},"content":"            } catch (IllegalStateException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":360,"author":{"gitId":"SeeuSim"},"content":"                System.exit(1);","lastModifiedDate":"2023-01-24"},{"lineNumber":361,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":362,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SeeuSim":360,"-":4}},{"path":"src/main/java/DukeExceptions/DukeEmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"public class DukeEmptyTaskException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"    public static enum TaskType {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"        Todo,","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"        Deadline,","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"        Event,","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"        Unknown","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"    public DukeEmptyTaskException(TaskType type) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"        super(String.format(\"The description of a %s cannot be empty.\", type));","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"SeeuSim":14}},{"path":"src/main/java/DukeExceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"import java.lang.Exception;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"SeeuSim":9}},{"path":"src/main/java/DukeExceptions/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"public class DukeInvalidCommandException extends DukeException{","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"    public DukeInvalidCommandException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"        super(\"I don\u0027t know that command yet. Give me another!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"SeeuSim":7}},{"path":"src/main/java/DukeExceptions/DukeInvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":" * The error class indicating that an invalid date format was entered.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"public class DukeInvalidDateException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"    public DukeInvalidDateException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"        super(","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"                \"An invalid date was entered. Please use this format:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"                        \"      {day}/{month}/{year} {hour}{minute}\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"                        \"      Example: 2/2/23 1200\"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"SeeuSim":14}},{"path":"src/main/java/DukeExceptions/DukeInvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"public class DukeInvalidTaskException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"    public DukeInvalidTaskException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"        super(\"I don\u0027t know what that means yet. Give me another task.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"SeeuSim":7}},{"path":"src/main/java/DukeExceptions/DukeStoreFullException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":" * The exception class that indicates the Duke Store instance is full.","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"public class DukeStoreFullException extends DukeException{","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"    public DukeStoreFullException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"        super(\"Rick is busy and can\u0027t take any more tasks\");","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SeeuSim":13}},{"path":"src/main/java/DukeExceptions/DukeStoreInvalidAccessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":" * The exception class that indicates that an invalid index request was made to","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":" * a DukeStore instance.","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"public class DukeStoreInvalidAccessException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"    public DukeStoreInvalidAccessException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"        super(\"An invalid index was entered. Please try again.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SeeuSim":14}},{"path":"src/main/java/DukeExceptions/DukeTaskIndexMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"public class DukeTaskIndexMissingException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"    public DukeTaskIndexMissingException(String type) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"        super(String.format(","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"                \"An index was not provided for the %s action. Usage: %s {index}\",","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"                type, type","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"        ));","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"SeeuSim":11}},{"path":"src/main/java/DukeFileWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":" * A utility class that either accesses existing storage,","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":" * or creates a new .txt file in storage to store the","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":" * task data.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"public class DukeFileWriter {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"    private static final String folderPath \u003d \"data\";","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"    private static final String filePath \u003d \"data/DUKEDB.TXT\";","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"    private final File store;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"     * Private constructor that initialises the file and folder structure.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"    private DukeFileWriter() {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"SeeuSim"},"content":"        //Create directory if it does not yet exist","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"SeeuSim"},"content":"        Path parentDir \u003d Paths.get(folderPath);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"SeeuSim"},"content":"            Files.createDirectory(parentDir);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"SeeuSim"},"content":"        } catch (FileAlreadyExistsException fe) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"SeeuSim"},"content":"            //Already exists, no action required","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"SeeuSim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"SeeuSim"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"SeeuSim"},"content":"            System.exit(1);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"SeeuSim"},"content":"        //Create file if it does not yet exist.","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"SeeuSim"},"content":"        File store \u003d new File(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"SeeuSim"},"content":"        if (!store.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"SeeuSim"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"SeeuSim"},"content":"                store.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"SeeuSim"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"SeeuSim"},"content":"                System.exit(1);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"SeeuSim"},"content":"        this.store \u003d store;","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"SeeuSim"},"content":"     * Factory method that creates a DukeFileWriter instance.","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"SeeuSim"},"content":"     * @return The created DukeFileWriter.","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"SeeuSim"},"content":"    public static DukeFileWriter create() {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"SeeuSim"},"content":"        return new DukeFileWriter();","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"SeeuSim"},"content":"     * Appends a new record to the end of the file.","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"SeeuSim"},"content":"     * @param s The record to be appended.","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"SeeuSim"},"content":"     * @return The count of records in the store.","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"SeeuSim"},"content":"    public long write(String s) {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"SeeuSim"},"content":"        this.store.setWritable(true);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"SeeuSim"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"SeeuSim"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"SeeuSim"},"content":"            bw.write(s);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"SeeuSim"},"content":"            bw.newLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"SeeuSim"},"content":"            bw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"SeeuSim"},"content":"            fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"SeeuSim"},"content":"            this.store.setWritable(false);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"SeeuSim"},"content":"            return Files.lines(Paths.get(filePath)).count();","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"SeeuSim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"SeeuSim"},"content":"            return 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"SeeuSim"},"content":"     * Modifies a task in the store.","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"SeeuSim"},"content":"     * @param index The index of the task in the store.","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"SeeuSim"},"content":"     * @param done The status of the task in the store.","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"SeeuSim"},"content":"     * @return The modified task.","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"SeeuSim"},"content":"    public DukeTask setDone(int index, boolean done) {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"SeeuSim"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"SeeuSim"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"SeeuSim"},"content":"            DukeTask task \u003d Objects.requireNonNull(DukeTask.fromDBSchema(lines.get(index)));","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"SeeuSim"},"content":"            if (done) {","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"SeeuSim"},"content":"                task.setDone();","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"SeeuSim"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"SeeuSim"},"content":"                task.markUndone();","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"SeeuSim"},"content":"            lines.set(index, task.toDBSchema());","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"SeeuSim"},"content":"            this.store.setWritable(true);","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"SeeuSim"},"content":"            Files.write(path, lines, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"SeeuSim"},"content":"            this.store.setWritable(false);","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"SeeuSim"},"content":"            return task;","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"SeeuSim"},"content":"        } catch (IOException | NullPointerException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"SeeuSim"},"content":"            return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"SeeuSim"},"content":"     * Deletes a task in the store.","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"SeeuSim"},"content":"     * @param index The index of the task in the store.","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"SeeuSim"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"SeeuSim"},"content":"    public DukeTask delete(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"SeeuSim"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"SeeuSim"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"SeeuSim"},"content":"            DukeTask task \u003d DukeTask.fromDBSchema(lines.remove(index));","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"SeeuSim"},"content":"            this.store.setWritable(true);","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"SeeuSim"},"content":"            Files.write(path, lines, StandardCharsets.UTF_8);","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"SeeuSim"},"content":"            this.store.setWritable(false);","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"SeeuSim"},"content":"            return task;","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"SeeuSim"},"content":"        } catch (IOException | NullPointerException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"SeeuSim"},"content":"            return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"SeeuSim"},"content":"     * Prints the store\u0027s contents as a list, line by line.","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"SeeuSim"},"content":"     * @return The store\u0027s contents as a String list.","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"SeeuSim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"SeeuSim"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"SeeuSim"},"content":"        long lines \u003d 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"SeeuSim"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"SeeuSim"},"content":"            Stream\u003cString\u003e fileStream \u003d Files.lines(path);","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"SeeuSim"},"content":"            lines \u003d Files.lines(path).count();","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"SeeuSim"},"content":"            Object[] output \u003d fileStream.toArray();","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"SeeuSim"},"content":"            for (int i \u003d 0; i \u003c output.length; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"SeeuSim"},"content":"                out.append(String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"SeeuSim"},"content":"                        \"%s. %s\\n\",","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"SeeuSim"},"content":"                        i + 1,","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"SeeuSim"},"content":"                        DukeTask.fromDBSchema(output[i])","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"SeeuSim"},"content":"                ));","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"SeeuSim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"SeeuSim"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"SeeuSim"},"content":"            System.exit(1);","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"SeeuSim"},"content":"        if (lines \u003d\u003d 0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"SeeuSim"},"content":"            return \"No records are added yet. Add some by typing them!\";","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"SeeuSim"},"content":"        return out.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"SeeuSim"},"content":"    public List\u003cDukeTask\u003e toList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"SeeuSim"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"SeeuSim"},"content":"            Stream\u003cString\u003e fileStream \u003d Files.lines(path);","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"SeeuSim"},"content":"            return fileStream","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"SeeuSim"},"content":"                    .map(task -\u003e DukeTask.fromDBSchema(task))","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"SeeuSim"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"SeeuSim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"SeeuSim"},"content":"            return List.of();","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"SeeuSim"},"content":"     * Calculates the number of records currently stored in the store.","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"SeeuSim"},"content":"     * @return The number of records stored.","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":180,"author":{"gitId":"SeeuSim"},"content":"    public long size() {","lastModifiedDate":"2023-01-24"},{"lineNumber":181,"author":{"gitId":"SeeuSim"},"content":"        try (Stream\u003cString\u003e lines \u003d Files.lines(Paths.get(filePath))) {","lastModifiedDate":"2023-01-24"},{"lineNumber":182,"author":{"gitId":"SeeuSim"},"content":"            return lines.count();","lastModifiedDate":"2023-01-24"},{"lineNumber":183,"author":{"gitId":"SeeuSim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"SeeuSim"},"content":"            return 0L;","lastModifiedDate":"2023-01-24"},{"lineNumber":185,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":186,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":187,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"SeeuSim":187}},{"path":"src/main/java/DukeFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":" * Main Formatter class to format the UI for the Duke chat-bot in the terminal.","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"abstract public class DukeFormatter {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"    private static String MASCOT \u003d \"Rick: \";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"    private static String INDENT \u003d \"      \";","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"    private static String LINE \u003d","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"    private static void line() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"     * Main Formatting function to format any UI returned to the user after a","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"     * command. Prints out the UI to the console for viewing by the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"     * @param inputs The UI to be formatted","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"    public static void section(String inputs) {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"        //Start","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"        String[] lines \u003d inputs.split(\"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"        System.out.println(MASCOT + lines[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"        for (String line: Arrays.copyOfRange(lines, 1, lines.length)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"            System.out.println(INDENT + line);","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"SeeuSim"},"content":"        //End","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"SeeuSim"},"content":"        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"SeeuSim"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"SeeuSim"},"content":"     * Given an exception that occurred, formats the UI to indicate the error","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"SeeuSim"},"content":"     * to the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"SeeuSim"},"content":"     * @param error The error that occurred.","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"SeeuSim"},"content":"    public static void error(Exception error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"SeeuSim"},"content":"        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"SeeuSim"},"content":"        System.out.println(MASCOT + error.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"SeeuSim"},"content":"        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"SeeuSim"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"SeeuSim"},"content":"     * Produces a user guide for incorrect command usages.","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"SeeuSim"},"content":"    public static void guide(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"SeeuSim"},"content":"        line();","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"SeeuSim"},"content":"        System.out.println(MASCOT + message);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"SeeuSim"},"content":"        line();","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"SeeuSim"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SeeuSim":60}},{"path":"src/main/java/DukeStore.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"import DukeExceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"import DukeExceptions.DukeStoreFullException;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"import DukeExceptions.DukeStoreInvalidAccessException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":" * The main store class to store user input into the Duke system.","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"public class DukeStore {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"    private static final int recordSize \u003d 100;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"    private static int ID \u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"    //The store instance that writes to storage","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"    private DukeFileWriter dfw;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"    //The unique ID of this store","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"    private int id;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"    private DukeStore() {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"        this.id \u003d DukeStore.ID + 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"        DukeStore.ID +\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"        this.dfw \u003d DukeFileWriter.create();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"SeeuSim"},"content":"     * Factory method to create DukeStore instances.","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"SeeuSim"},"content":"     * @return The created DukeStore instance with a unique serializable ID.","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"SeeuSim"},"content":"    public static DukeStore create() {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"SeeuSim"},"content":"        return new DukeStore();","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"SeeuSim"},"content":"     * Given a DukeTask, attempts to add it to the store.","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"SeeuSim"},"content":"     * @param input The task to be input.","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"SeeuSim"},"content":"     * @throws DukeStoreFullException The exception indicating that the store","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"SeeuSim"},"content":"     * can no longer accept any more tasks.","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"SeeuSim"},"content":"    public void add(DukeTask input) throws DukeStoreFullException {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"SeeuSim"},"content":"        long count;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"SeeuSim"},"content":"        if (this.dfw.size() \u003e\u003d recordSize) {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"SeeuSim"},"content":"            throw new DukeStoreFullException();","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"SeeuSim"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"SeeuSim"},"content":"            count \u003d this.dfw.write(input.toDBSchema());","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"SeeuSim"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"SeeuSim"},"content":"            DukeFormatter.error(new DukeException(\"An internal system error occurred\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"SeeuSim"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"SeeuSim"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"SeeuSim"},"content":"                + \"  \" + input","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"SeeuSim"},"content":"                + String.format(\"\\nNow you have %s task%s in the list.\",","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"SeeuSim"},"content":"                            count,","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"SeeuSim"},"content":"                            count \u003d\u003d 1L ? \"\" : \"s\"","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"SeeuSim"},"content":"                    );","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"SeeuSim"},"content":"        DukeFormatter.section(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"SeeuSim"},"content":"     * Given the index of a task in the Store, attempts to mark it as done.","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"SeeuSim"},"content":"     * @param i The index of the task within the Store.","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"SeeuSim"},"content":"     * @throws DukeStoreInvalidAccessException The exception indicating that an","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"SeeuSim"},"content":"     * invalid index was provided.","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"SeeuSim"},"content":"    public void mark(int i) throws DukeStoreInvalidAccessException {","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"SeeuSim"},"content":"        if (i \u003c 0 || i \u003e\u003d this.dfw.size()) { //Unassigned, invalid index","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"SeeuSim"},"content":"            throw new DukeStoreInvalidAccessException();","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"SeeuSim"},"content":"        DukeTask task \u003d this.dfw.setDone(i, true);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"SeeuSim"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + task;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"SeeuSim"},"content":"        DukeFormatter.section(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"SeeuSim"},"content":"     * Given the index of a task in the Store, attempts to mark it as not done.","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"SeeuSim"},"content":"     * @param i The index of the task within the Store.","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"SeeuSim"},"content":"     * @throws DukeStoreInvalidAccessException The exception indicating that an","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"SeeuSim"},"content":"     * invalid index was provided.","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"SeeuSim"},"content":"    public void unMark(int i) throws DukeStoreInvalidAccessException {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"SeeuSim"},"content":"        if (i \u003c 0 || i \u003e\u003d this.dfw.size()) { //Unassigned, invalid index","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"SeeuSim"},"content":"            throw new DukeStoreInvalidAccessException();","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"SeeuSim"},"content":"        DukeTask task \u003d this.dfw.setDone(i, false);","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"SeeuSim"},"content":"        String message \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + \"  \" + task;","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"SeeuSim"},"content":"        DukeFormatter.section(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"SeeuSim"},"content":"     * Given the index of a task in the Store, attempts to delete it.","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"SeeuSim"},"content":"     * @param i The index of the task in the Store","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"SeeuSim"},"content":"     * @throws DukeStoreInvalidAccessException The exception indicating that an","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"SeeuSim"},"content":"     * invalid index was provided.","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"SeeuSim"},"content":"    public void delete(int i) throws DukeStoreInvalidAccessException {","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"SeeuSim"},"content":"        long size \u003d this.dfw.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"SeeuSim"},"content":"        if (i \u003c 0 || i \u003e\u003d size) {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"SeeuSim"},"content":"            throw new DukeStoreInvalidAccessException();","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"SeeuSim"},"content":"        DukeTask task \u003d this.dfw.delete(i);","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"SeeuSim"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + task","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"SeeuSim"},"content":"                + String.format(\"\\nNow you have %s task%s in the list.\", size - 1,","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"SeeuSim"},"content":"                size - 1 \u003d\u003d 1L? \"\": \"s\");","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"SeeuSim"},"content":"        DukeFormatter.section(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"SeeuSim"},"content":"    public String occurOnDate(LocalDate dt) {","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"SeeuSim"},"content":"        List\u003cDukeTask\u003e filtered \u003d this.dfw.toList()","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"SeeuSim"},"content":"                .stream()","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"SeeuSim"},"content":"                .filter(dukeTask -\u003e dukeTask.isOnDate(dt))","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"SeeuSim"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"SeeuSim"},"content":"        if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"SeeuSim"},"content":"            return \"Hooray. No tasks occur on this date.\";","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"SeeuSim"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"SeeuSim"},"content":"        filtered.forEach(dukeTask -\u003e out.append(\"- \" + dukeTask + \"\\n\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"SeeuSim"},"content":"        return out.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"SeeuSim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"SeeuSim"},"content":"        return this.dfw.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SeeuSim":137}},{"path":"src/main/java/DukeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":" * The abstraction behind the tasks stored by the Duke chat-bot.","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"public abstract class DukeTask {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"    private final String value;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"     * Provides a base constructor common to all task implementations that","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"     * stores a task and if it is done.","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"     * @param val The task to be completed.","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"    public DukeTask(String val) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"        this.value \u003d val;","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"     * Indicate that this task is done.","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"     * Indicate that this task is not done.","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"SeeuSim"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"SeeuSim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"SeeuSim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"SeeuSim"},"content":"        return String.format(","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"SeeuSim"},"content":"                \"[%s] %s\", (this.isDone ? \"X\": \" \"), this.value","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"SeeuSim"},"content":"        );","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"SeeuSim"},"content":"     * Formats this task as a \"|\" separated string to be stored","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"SeeuSim"},"content":"     * in a file storage.","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"SeeuSim"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"SeeuSim"},"content":"    public String toDBSchema() {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"SeeuSim"},"content":"        return String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"SeeuSim"},"content":"                \"%s|%s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"SeeuSim"},"content":"                this.isDone? 1 : 0,","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"SeeuSim"},"content":"                this.value","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"SeeuSim"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"SeeuSim"},"content":"     * Given an object read from the file storage, parses it","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"SeeuSim"},"content":"     * and returns the appropriate task.","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"SeeuSim"},"content":"     * @param o The object read from file storage.","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"SeeuSim"},"content":"     * @return The corresponding task record.","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"SeeuSim"},"content":"    public static DukeTask fromDBSchema(Object o) {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"SeeuSim"},"content":"        String[] s \u003d o.toString().split(\"\\\\|\");","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"SeeuSim"},"content":"        boolean isDone \u003d s[1].equals(\"1\");","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"SeeuSim"},"content":"        switch (s[0]) {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"SeeuSim"},"content":"        case \"E\":","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"SeeuSim"},"content":"            DukeTask event \u003d new TaskEvent(","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"SeeuSim"},"content":"                    s[2],","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"SeeuSim"},"content":"                    DukeUtils.parseDateTime(s[3]),","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"SeeuSim"},"content":"                    DukeUtils.parseDateTime(s[4]));","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"SeeuSim"},"content":"            if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"SeeuSim"},"content":"                event.setDone();","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"SeeuSim"},"content":"            return event;","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"SeeuSim"},"content":"        case \"D\":","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"SeeuSim"},"content":"            DukeTask deadline \u003d new TaskDeadline(s[2],","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"SeeuSim"},"content":"                    DukeUtils.parseDateTime(s[3]));","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"SeeuSim"},"content":"            if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"SeeuSim"},"content":"                deadline.setDone();","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"SeeuSim"},"content":"            return deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"SeeuSim"},"content":"        case \"T\":","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"SeeuSim"},"content":"            DukeTask todo \u003d new TaskTodo(s[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"SeeuSim"},"content":"            if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"SeeuSim"},"content":"                todo.setDone();","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"SeeuSim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"SeeuSim"},"content":"            return todo;","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"SeeuSim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"SeeuSim"},"content":"        return null;","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"SeeuSim"},"content":"    public abstract boolean isOnDate(LocalDate dt);","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SeeuSim":97}},{"path":"src/main/java/DukeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"public class DukeUtils {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"     * A Utility method to parse datetime strings passed to the DukeTask","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"     * subclass constructors.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"     * @param s The datetime string to be parsed.","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"     * @return The formatted datetime object.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"     * @throws DateTimeParseException The error arising from an incorrectly","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"     * formatted string.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"    public static LocalDateTime parseDateTime(String s) throws DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"d/M/yy HHmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"        return LocalDateTime.parse(s, df);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"     * A Utility method to parse date strings passed to the Duke command console.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"     * @param dte The date string to be parsed.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"     * @return The formatted date object.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"     * @throws DateTimeParseException The error arising from an incorrectly","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"     * formatted string.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"    public static LocalDate parseDate(String dte) throws DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"d/M/yy\");","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"        return LocalDate.parse(dte, df);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"SeeuSim":33}},{"path":"src/main/java/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":" * The class representing a Deadline task.","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"public class TaskDeadline extends DukeTask{","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"     * Given a task and a deadline, constructs a Deadline task.","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"     * @param task The task to be completed.","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"     * @param deadline The task\u0027s deadline.","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"    public TaskDeadline(String task, LocalDateTime deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"                + String.format(\" (by: %s)\", this.deadline.format(df));","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"SeeuSim"},"content":"    public boolean isOnDate(LocalDate dtParsed) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"SeeuSim"},"content":"        return dtParsed.equals(this.deadline.toLocalDate());","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"SeeuSim"},"content":"    public String toDBSchema() {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"SeeuSim"},"content":"        return String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"SeeuSim"},"content":"                \"%s|%s|%s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"SeeuSim"},"content":"                \"D\",","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"SeeuSim"},"content":"                super.toDBSchema(),","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"SeeuSim"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"d/M/yy HHmm\"))","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"SeeuSim"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SeeuSim":46}},{"path":"src/main/java/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":" * The class representing an Event task.","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"public class TaskEvent extends DukeTask{","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"    public TaskEvent(String task, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"        super(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\");","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"                + String.format(\" (from: %s to: %s)\",","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"                this.from.format(df), this.to.format(df));","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"    public boolean isOnDate(LocalDate dtParsed) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"        return dtParsed.isAfter(this.from.toLocalDate()) \u0026\u0026 dtParsed.isBefore(this.to.toLocalDate()) ||","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"                dtParsed.equals(this.from.toLocalDate()) ||","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"                dtParsed.equals(this.to.toLocalDate());","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"SeeuSim"},"content":"    public String toDBSchema() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"SeeuSim"},"content":"        return String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"SeeuSim"},"content":"                \"%s|%s|%s|%s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"SeeuSim"},"content":"                \"E\",","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"SeeuSim"},"content":"                super.toDBSchema(),","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"SeeuSim"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"d/M/yy HHmm\")),","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"SeeuSim"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"d/M/yy HHmm\"))","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"SeeuSim"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SeeuSim":45}},{"path":"src/main/java/TaskTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":" * The class representing a {@code Todo} task.","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":" * @author SeeuSim","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"public class TaskTodo extends DukeTask{","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"    public TaskTodo(String s) {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"        super(s);","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"    public String toDBSchema() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"        return String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"                \"%s|%s\",","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"                \"T\",","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"                super.toDBSchema()","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"        );","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"    public boolean isOnDate(LocalDate dt) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"SeeuSim"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"SeeuSim":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SeeuSim"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"SeeuSim"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"SeeuSim"},"content":"deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"SeeuSim"},"content":"event","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"SeeuSim"},"content":"todo 1","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"SeeuSim"},"content":"todo test","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"SeeuSim"},"content":"todo test script","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"SeeuSim"},"content":"deadline 1","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"deadline 1 /by now","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"deadline 1 /by 2/2/23 1234","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"deadline 2 /by 02/2/23 1234","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"SeeuSim"},"content":"deadline 3 /by 02/03/23 1234","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"SeeuSim"},"content":"deadline 4 /by 12/04/2023 1234","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"SeeuSim"},"content":"deadline 5 /by 2/3/23 12345","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"event greet","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"event greet and meet /from now /to later","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"event greet /from 2/2/23 0001 /to 2/2/23 0005","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"SeeuSim"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"SeeuSim"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"SeeuSim"},"content":"mark 6","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"SeeuSim"},"content":"mark test","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"SeeuSim"},"content":"delete 4","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"SeeuSim"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"SeeuSim"},"content":"tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"SeeuSim"},"content":"tasks /on","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"SeeuSim"},"content":"tasks /on 2/2/23","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"SeeuSim"},"content":"tasks /on 2/13/2023","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"SeeuSim"},"content":"tasks /on 1/2/23","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"SeeuSim"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"SeeuSim":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"SeeuSim"},"content":"REM delete storage from previous run","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"SeeuSim"},"content":"if exist data\\DUKEDB.TXT del /q data\\DUKEDB.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SeeuSim":3,"-":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"SeeuSim"},"content":"if [ -e \"./data/DUKEDB.TXT\" ]","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"SeeuSim"},"content":"then","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"SeeuSim"},"content":"  rm -rf ./data","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"SeeuSim"},"content":"fi","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"SeeuSim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SeeuSim":5,"-":38}}]
