[{"path":"src/main/java/Babe.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShanHng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"import item.Deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"import item.Event;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"import item.Item;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"import item.ToDo;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":" * \u003ch1\u003e Hi Babe! \u003c/h1\u003e","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":" * Babe is a chat bot created as part of the individual project (iP) under the course CS2109T.","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":" * It is a duplicate of Duke with some personal flair.","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":" *","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":" * @author Shan Hern Hng","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":" * @version 1.0","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":" * @since 17 January 2023","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"public class Babe {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"     * A string input from user.","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"    private ArrayList\u003cString\u003e userInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"     * Length of user input.","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"    private int userInputLen \u003d 0;","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"     * List of Items Babe received from the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"    private Item[] memory \u003d new Item[100];","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"     * Number of Items currently stored in this Babe.","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"    private int memoryCount \u003d 0;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"     * Draws a horizontal line.","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"     * Draws a line for cosmetic purposes.","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"    private static void drawLine() {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"        System.out.println(\"--------------------------------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"     * Welcome users of Babe.","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"     * Greets user and prompts for help. This method does not expect a response.","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"    private void welcome() {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"        System.out.println(\"HELLO! Greetings from Babe.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"        System.out.println(\"How may I help you?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"ShanHng"},"content":"     * Receives user\u0027s input.","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"ShanHng"},"content":"     * Receives input from the user and stores it in input field.","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"ShanHng"},"content":"    private void listen() {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"ShanHng"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"ShanHng"},"content":"        userInput \u003d new ArrayList\u003c\u003e(Arrays.asList(scanner.nextLine().split(\" \")));","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ShanHng"},"content":"        userInputLen \u003d userInput.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ShanHng"},"content":"     * Rebuilds a string from ArrayList from the starting index to the ending index (not inclusive).","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ShanHng"},"content":"     * A helper function to recover the original user input from userInput starting from the startingIndex","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"ShanHng"},"content":"     * to the ending index (not inclusive).","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ShanHng"},"content":"    private String rebuildUserInput(int startingIndex, int endingIndex) {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ShanHng"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ShanHng"},"content":"        for (int i \u003d startingIndex; i \u003c endingIndex; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ShanHng"},"content":"            result +\u003d userInput.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ShanHng"},"content":"            result +\u003d \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ShanHng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"ShanHng"},"content":"        return result.stripTrailing();","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"ShanHng"},"content":"     * Returns the index of the dates in a Deadline or Event instruction","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ShanHng"},"content":"     * Traverses through userInput array to find the index by locating \"/by\", \"/from\" or \"/to\".","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"ShanHng"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"ShanHng"},"content":"     * @return An integer that is the index of the date of deadline, start date of event or end date of event .","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ShanHng"},"content":"    private int determineDate(String type) {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ShanHng"},"content":"       int date \u003d -1;","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ShanHng"},"content":"        for (int i \u003d 1; i \u003c userInputLen; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ShanHng"},"content":"            String currentString \u003d userInput.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ShanHng"},"content":"            if (currentString.equals(type)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ShanHng"},"content":"                date \u003d i + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ShanHng"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ShanHng"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"ShanHng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"ShanHng"},"content":"        return date;","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"ShanHng"},"content":"     * Adds a ToDo to memory.","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"ShanHng"},"content":"     * Calls the ToDo constructor and inserts created ToDo into this Babe\u0027s memory.","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"ShanHng"},"content":"     * @param content The content of the ToDo item.","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"ShanHng"},"content":"    private void addToDo(String content) {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"ShanHng"},"content":"        ToDo item \u003d new ToDo(content);","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"ShanHng"},"content":"        this.memory[memoryCount++] \u003d item;","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"ShanHng"},"content":"        System.out.println(\"Got it, babe. Added this for you:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"ShanHng"},"content":"        System.out.println(item.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"ShanHng"},"content":"        System.out.printf(\"Now you have %d task in the list.\\n\", memoryCount);","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"ShanHng"},"content":"     * Adds a Deadline to memory.","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"ShanHng"},"content":"     * Calls the Deadline constructor and inserts created Deadline into this Babe\u0027s memory.","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"ShanHng"},"content":"     * @param content The content of the Deadline item.","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"ShanHng"},"content":"     * @param date The date of the deadline. May include time too.","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"ShanHng"},"content":"    private void addDeadline(String content, String date) {","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"ShanHng"},"content":"        Deadline item \u003d new Deadline(content, date);","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"ShanHng"},"content":"        this.memory[memoryCount++] \u003d item;","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"ShanHng"},"content":"        System.out.println(\"Got it, babe. Added this for you:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"ShanHng"},"content":"        System.out.println(item.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"ShanHng"},"content":"        System.out.printf(\"Now you have %d task in the list.\\n\", memoryCount);","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":138,"author":{"gitId":"ShanHng"},"content":"     * Adds an Event to memory.","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"ShanHng"},"content":"     * Calls the Event constructor and inserts created Event into this Babe\u0027s memory.","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"ShanHng"},"content":"     * @param content The content of the Event item.","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"ShanHng"},"content":"     * @param startDate The start date of the Event. May include time too.","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"ShanHng"},"content":"     * @param endDate The end date of the Event. May include time too.","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"ShanHng"},"content":"    private void addEvent(String content, String startDate, String endDate) {","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"ShanHng"},"content":"        Event item \u003d new Event(content, startDate, endDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"ShanHng"},"content":"        this.memory[memoryCount++] \u003d item;","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"ShanHng"},"content":"        System.out.println(\"Got it, babe. Added this for you:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"ShanHng"},"content":"        System.out.println(item.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"ShanHng"},"content":"        System.out.printf(\"Now you have %d task in the list.\\n\", memoryCount);","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"ShanHng"},"content":"     * Prints list of Items stored in this Babe.","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"ShanHng"},"content":"     * Prints a numbered list of Items stored in memory.","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"ShanHng"},"content":"    private void printList() {","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"ShanHng"},"content":"        if (memoryCount \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"ShanHng"},"content":"            System.out.println(\"Nothing added yet. Add something babygorl.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"ShanHng"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"ShanHng"},"content":"        for (int i \u003d 0; i \u003c this.memoryCount; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"ShanHng"},"content":"            System.out.printf(\"%d. \", i + 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"ShanHng"},"content":"            System.out.println(memory[i].toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"ShanHng"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":170,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":171,"author":{"gitId":"ShanHng"},"content":"     * Bids farewell to the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"ShanHng"},"content":"     * Prints a line of farewell before ending the program.","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"ShanHng"},"content":"    private void sayBye() {","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"ShanHng"},"content":"        System.out.println(\"Bye, babyboo. Can\u0027t wait to meet you again!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"ShanHng"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"ShanHng"},"content":"     * Marks/Unmarks the item of given index in Babe\u0027s list as Done/Undone.","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"ShanHng"},"content":"     * If user keys in \"mark\", this function will extract the index to be marked and sets the index to True in","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"ShanHng"},"content":"     * doneStatus. Sets the index to False if \"unmark\"is keyed in.","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"ShanHng"},"content":"    private void changeStatus(boolean toMark) {","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"ShanHng"},"content":"        String userInputString \u003d rebuildUserInput(1, userInputLen);","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"ShanHng"},"content":"        int index \u003d Integer.parseInt(userInputString);","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"ShanHng"},"content":"        Item itemAtIndex \u003d memory[index - 1];","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"ShanHng"},"content":"        if (toMark) {","lastModifiedDate":"2023-01-18"},{"lineNumber":191,"author":{"gitId":"ShanHng"},"content":"            itemAtIndex.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"ShanHng"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"ShanHng"},"content":"            itemAtIndex.unmark();","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"ShanHng"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"ShanHng"},"content":"        System.out.println(toMark ? \"Okay, babygorl. I\u0027ve marked this as Done:\" : \"We have un-Done this for you:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"ShanHng"},"content":"        System.out.println(itemAtIndex.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":198,"author":{"gitId":"ShanHng"},"content":"        Babe.drawLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":199,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":201,"author":{"gitId":"ShanHng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":202,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":203,"author":{"gitId":"ShanHng"},"content":"        Babe chatBot \u003d new Babe();","lastModifiedDate":"2023-01-17"},{"lineNumber":204,"author":{"gitId":"ShanHng"},"content":"        chatBot.welcome();","lastModifiedDate":"2023-01-17"},{"lineNumber":205,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":206,"author":{"gitId":"ShanHng"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":207,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"ShanHng"},"content":"            chatBot.listen();","lastModifiedDate":"2023-01-17"},{"lineNumber":209,"author":{"gitId":"ShanHng"},"content":"            String instruction \u003d chatBot.userInput.get(0);","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"ShanHng"},"content":"            int inputLength \u003d chatBot.userInput.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":212,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":213,"author":{"gitId":"ShanHng"},"content":"            if (instruction.equalsIgnoreCase(\"bye\") \u0026\u0026 inputLength \u003d\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"ShanHng"},"content":"                chatBot.sayBye();","lastModifiedDate":"2023-01-17"},{"lineNumber":215,"author":{"gitId":"ShanHng"},"content":"            } else if (instruction.equalsIgnoreCase(\"list\") \u0026\u0026 inputLength \u003d\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":216,"author":{"gitId":"ShanHng"},"content":"                chatBot.printList();","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"ShanHng"},"content":"            } else if (instruction.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":218,"author":{"gitId":"ShanHng"},"content":"                chatBot.changeStatus(true);","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"ShanHng"},"content":"            } else if (instruction.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":220,"author":{"gitId":"ShanHng"},"content":"                chatBot.changeStatus(false);","lastModifiedDate":"2023-01-18"},{"lineNumber":221,"author":{"gitId":"ShanHng"},"content":"            } else if (instruction.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":222,"author":{"gitId":"ShanHng"},"content":"                chatBot.addToDo(chatBot.rebuildUserInput(1, inputLength));","lastModifiedDate":"2023-01-18"},{"lineNumber":223,"author":{"gitId":"ShanHng"},"content":"            } else if (instruction.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":224,"author":{"gitId":"ShanHng"},"content":"                int deadline \u003d chatBot.determineDate(\"/by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":225,"author":{"gitId":"ShanHng"},"content":"                chatBot.addDeadline(chatBot.rebuildUserInput(1, deadline - 1),","lastModifiedDate":"2023-01-18"},{"lineNumber":226,"author":{"gitId":"ShanHng"},"content":"                        chatBot.rebuildUserInput(deadline, inputLength));","lastModifiedDate":"2023-01-18"},{"lineNumber":227,"author":{"gitId":"ShanHng"},"content":"            } else if (instruction.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":228,"author":{"gitId":"ShanHng"},"content":"                int startDate \u003d chatBot.determineDate(\"/from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":229,"author":{"gitId":"ShanHng"},"content":"                int endDate \u003d chatBot.determineDate(\"/to\");","lastModifiedDate":"2023-01-18"},{"lineNumber":230,"author":{"gitId":"ShanHng"},"content":"                chatBot.addEvent(chatBot.rebuildUserInput(1, startDate - 1),","lastModifiedDate":"2023-01-18"},{"lineNumber":231,"author":{"gitId":"ShanHng"},"content":"                        chatBot.rebuildUserInput(startDate, endDate - 1),","lastModifiedDate":"2023-01-18"},{"lineNumber":232,"author":{"gitId":"ShanHng"},"content":"                        chatBot.rebuildUserInput(endDate, inputLength));","lastModifiedDate":"2023-01-18"},{"lineNumber":233,"author":{"gitId":"ShanHng"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":234,"author":{"gitId":"ShanHng"},"content":"                // any text without instructions will be added as ToDo","lastModifiedDate":"2023-01-18"},{"lineNumber":235,"author":{"gitId":"ShanHng"},"content":"                chatBot.addToDo(chatBot.rebuildUserInput(0, inputLength));","lastModifiedDate":"2023-01-18"},{"lineNumber":236,"author":{"gitId":"ShanHng"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":237,"author":{"gitId":"ShanHng"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":238,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":239,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":240,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":241,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ShanHng":241}},{"path":"src/main/java/item/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShanHng"},"content":"package item;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"public class Deadline extends Item {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"    /** A date/time for this Deadline */","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"    private String deadline \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"     * Constructor for Deadline item.","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"     * @param content","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"     * @param deadline","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"    public Deadline(String content, String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"        super(content);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"        return (this.isDone ? this.MARKED : this.UNMARKED) + \" \" + this.content","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"                + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShanHng":23}},{"path":"src/main/java/item/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShanHng"},"content":"package item;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"public class Event extends Item {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":"    /** The start date/time for this Event. */","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"    private String fromDate \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"    /** The end date/time for this Event. */","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"    private String toDate \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"     * Constructor for Event object.","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"     * @param content Content of this Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"     * @param fromDate The start date/time for this Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"     * @param toDate The end date/time for this Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"    public Event(String content, String fromDate, String toDate) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"        super(content);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"        return (this.isDone ? this.MARKED : this.UNMARKED) + \" \" + this.content","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"                + \" (from: \" + this.fromDate + \", to: \" + this.toDate + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShanHng":28}},{"path":"src/main/java/item/Item.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShanHng"},"content":"package item;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":" * Interface for list items in Babe,","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":"public abstract class Item {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"     * String icon for marked.","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"    static String MARKED \u003d \"[X]\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"     * String icon for unmarked.","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"    static String UNMARKED \u003d \"[ ]\";","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"     * Done status for this list item.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"    boolean isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"     * Contents of this item.","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"    String content \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ShanHng"},"content":"     * Constructor for Items","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ShanHng"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ShanHng"},"content":"     * @param content A String that is the content of this item.","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ShanHng"},"content":"    public Item( String content ) {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ShanHng"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ShanHng"},"content":"     * Prints the item with its corresponding format.","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ShanHng"},"content":"     * Each subclass of Item will have a designated String format.","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ShanHng"},"content":"    public abstract String toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ShanHng"},"content":"     * Mark the item as Done.","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ShanHng"},"content":"     * Assign truth value to isDone.","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"ShanHng"},"content":"    public void mark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ShanHng"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ShanHng"},"content":"     * Mark the item as Undone.","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ShanHng"},"content":"     * Assign false value to isDone.","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ShanHng"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ShanHng"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShanHng":59}},{"path":"src/main/java/item/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShanHng"},"content":"package item;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShanHng"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShanHng"},"content":" * ToDo class for Babe\u0027s list.","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShanHng"},"content":" * Extends abstract class Item.","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShanHng"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShanHng"},"content":"public class ToDo extends Item {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShanHng"},"content":"     * Constructor for ToDos","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShanHng"},"content":"     * @param content A String representing the content of this item.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ShanHng"},"content":"    public ToDo(String content) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ShanHng"},"content":"        super(content);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShanHng"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ShanHng"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ShanHng"},"content":"     * Prints a ToDo item in its specified format.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ShanHng"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ShanHng"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShanHng"},"content":"        return (this.isDone ? this.MARKED : this.UNMARKED) + \" \" + this.content;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShanHng"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ShanHng"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ShanHng"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShanHng":25}}]
