[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"## Task List","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible todo exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible deadline exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible event exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Update automated test","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Finish JavaDocs","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ShawnYip-Au":7,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"javafx {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    version \u003d \"11\"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"checkstyle {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"jar {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    manifest {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        attributes(","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"                \u0027Class-Path\u0027: configurations.compile.collect { it.getName() }.join(\u0027 \u0027),","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"                \u0027Main-Class\u0027: \u0027duke.Launcher\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"        )","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShawnYip-Au":22,"-":34}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"rootProject.name \u003d \u0027duke\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"include(\u0027src\u0027)","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ShawnYip-Au":2}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * Base class of all commands that duke recognises.","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return A string confirmation.","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"     * @throws DukeException Throws what went wrong.","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    public abstract String execute() throws DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":17}},{"path":"src/main/java/command/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to terminate duke.","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getGoodbyeMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":13}},{"path":"src/main/java/command/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to add deadline task.","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandDeadline extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandDeadline.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDetails Details of deadline type task to be added.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandDeadline(TaskList taskList, String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        Task taskAdded \u003d this.addIntoList(this.taskDetails);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getConfirmationMessageOf(taskAdded);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    private Task addIntoList(String taskDetails) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] s \u003d taskDetails.split(\"/by\");","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskInfo \u003d s[0].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDateLine \u003d s[1].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"            Task newTask \u003d new Deadline(taskInfo, taskDateLine);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"            this.taskList.addTask(newTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"            return newTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.getEmptyDetailsForDeadlineMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getConfirmationMessageOf(Task taskAdded) {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getAddTaskConfirmationWithAttitudeOf(taskAdded);","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":51}},{"path":"src/main/java/command/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to delete a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String index;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandDelete.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param index Index of task, starting from 1.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandDelete(TaskList taskList, String index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        Task taskRemoved \u003d this.removeTaskAt(this.index);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getConfirmationMessageOf(taskRemoved);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"    private Task removeTaskAt(String index) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        int i \u003d this.getIndex(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.taskList.removeTaskAt(i);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    private int getIndex(String index) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"            return Integer.parseInt(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getConfirmationMessageOf(Task taskRemoved) {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getDeleteMessageWithAttitudeOf(taskRemoved);","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":49}},{"path":"src/main/java/command/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to add event task.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandEvent extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandEvent.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDetails Details of event type task to be added.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandEvent(TaskList taskList, String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        Task taskAdded \u003d this.addIntoList(this.taskDetails);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getConfirmationMessageOf(taskAdded);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    private Task addIntoList(String taskDetails) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"        this.checkIfBlank(taskDetails);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] s \u003d taskDetails.split(\"/from\");","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] ss \u003d s[1].split(\"/to\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskName \u003d s[0].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskStartDate \u003d ss[0].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskEndDate \u003d ss[1].trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"            Task newTask \u003d new Event(taskName, taskStartDate, taskEndDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"            this.taskList.addTask(newTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"            return newTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.getEventTaskFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.getSupportedDateFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"    private void checkIfBlank(String taskDetails) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"        if (taskDetails.isBlank()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.getEmptyDetailsForEventMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getConfirmationMessageOf(Task taskAdded) {","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getAddTaskConfirmationWithAttitudeOf(taskAdded);","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":68}},{"path":"src/main/java/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to find all tasks that matches a phrase.","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String phrase;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandFind.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param phrase Phrase use to find task.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandFind(TaskList taskList, String phrase) {","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        this.phrase \u003d phrase;","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        String foundTasks \u003d this.findAllTaskContaining(this.phrase);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.format(foundTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    private String findAllTaskContaining(String phrase) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.taskList.findTaskWith(phrase);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"    private String format(String foundTasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getAllTaskFoundMessageWithAttitude(foundTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":38}},{"path":"src/main/java/command/CommandInvalid.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" * Command for invalid inputs.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandInvalid extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getNoKeywordMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"ShawnYip-Au":15}},{"path":"src/main/java/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to see everything in the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandList extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandList.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandList(TaskList taskList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getAllItemIn(this.taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getAllItemIn(TaskList taskList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        return taskList.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":28}},{"path":"src/main/java/command/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to mark a task as done.","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String index;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandMark.","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param index Index of task to mark, starting from 1.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandMark(TaskList taskList, String index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        Task markedTask \u003d this.markTaskAt(this.index);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getConfirmationMessageOf(markedTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"    private Task markTaskAt(String index) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        int i \u003d this.getIndex(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.taskList.getTaskAt(i).markIsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    private int getIndex(String index) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"            return Integer.parseInt(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getConfirmationMessageOf(Task markedTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getMarkMessageWithAttitude(markedTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":49}},{"path":"src/main/java/command/CommandToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to add todo task.","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandToDo extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandToDo.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDetails Details of todo type task to be added.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandToDo(TaskList taskList, String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        Task taskAdded \u003d this.addIntoList(this.taskDetails);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getConfirmationMessageOf(taskAdded);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"    private Task addIntoList(String taskDetails) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        this.checkIfBlank(taskDetails);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        Task newTask \u003d new ToDo(taskDetails.trim());","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList.addTask(newTask);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        return newTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"    private void checkIfBlank(String taskDetails) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        if (taskDetails.isBlank()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.getEmptyDetailsForToDoMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getConfirmationMessageOf(Task taskAdded) {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getAddTaskConfirmationWithAttitudeOf(taskAdded);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":50}},{"path":"src/main/java/command/CommandUnMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to unmark task.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandUnMark extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String index;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandUnMark","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param index Index of task to be unmark, starting from 1.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandUnMark(TaskList taskList, String index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        Task unmarkedTask \u003d this.unmarkTaskAt(this.index);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getConfirmationMessageOf(unmarkedTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"    private Task unmarkTaskAt(String index) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        int i \u003d this.getIndex(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.taskList.getTaskAt(i).markNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    private int getIndex(String index) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"            return Integer.parseInt(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getConfirmationMessageOf(Task unmarkedTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getUnMarkMessageWithAttitude(unmarkedTask);","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":49}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import command.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":" * A class containing Duke logical sequence.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param filePath Path of file that stores the TaskList data.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d this.storage.loadFile();","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"     * Execute user input and get the appropriate confirmation message.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInput Input of user.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return Confirmation message.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        Command c \u003d interpretInput(userInput);","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        return executeCommand(c);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    private Command interpretInput(String userInput) {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        Parser parser \u003d new Parser(this.taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        return parser.decode(userInput);","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    private String executeCommand(Command c) {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"            return c.execute();","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"            return e.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ShawnYip-Au":48,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Consists of custom run-time exceptions for Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ShawnYip-Au":20,"-":1}},{"path":"src/main/java/duke/DukeKeyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Class consisting for keyword that Duke recognise.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class DukeKeyword {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String EXIT \u003d \"bye\";","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String VIEW_LIST \u003d \"list\";","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String ADD_DEADLINE_TASK \u003d \"deadline\";","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String DELETE_TASK \u003d \"delete\";","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String ADD_EVENT_TASK \u003d \"event\";","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String MARK_TASK \u003d \"mark\";","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String ADD_TODO_TASK \u003d \"todo\";","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String UNMARK_TASK \u003d \"unmark\";","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"ShawnYip-Au":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * A launcher class for duke.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ShawnYip-Au":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    private final Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.\u003cgui.MainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.\u003cgui.MainWindow\u003egetController().printTitle();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ShawnYip-Au":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import command.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandBye;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandDeadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandDelete;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandEvent;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandFind;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandInvalid;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandList;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandMark;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"import command.CommandUnMark;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":" * Class use for decoding user input.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for Parser.","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all task.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"     * Match user input to a command.","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInput Input of user.","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return Command interpreted.","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    public Command decode(String userInput) {","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.EXIT)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandBye();","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.VIEW_LIST)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandList(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.MARK_TASK)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"            String index \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandMark(taskList, index);","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.UNMARK_TASK)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"            String index \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandUnMark(taskList, index);","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.DELETE_TASK)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"            String index \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandDelete(taskList, index);","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.ADD_TODO_TASK)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDetails \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandToDo(taskList, taskDetails);","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.ADD_DEADLINE_TASK)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDetails \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandDeadline(taskList, taskDetails);","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.ADD_EVENT_TASK)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDetails \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandEvent(taskList, taskDetails);","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(DukeKeyword.FIND)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"            String phrase \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandFind(taskList, phrase);","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"        return new CommandInvalid();","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":78}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * Class that consist of all Duke user interaction with the user.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getNoKeywordMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getGoodbyeMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"Good Riddance!!!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getEmptyDetailsForToDoMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"EXCUSE ME!!!, \u0027ToDo\u0027 details cannot be empty\";","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getEmptyDetailsForDeadlineMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"EXCUSE ME!!!, \u0027Deadline\u0027 details cannot be empty\";","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getEventTaskFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"EXCUSE ME!!!, please follow the format\"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"\\nevent \u003cdetails\u003e /from dd/mm/yyyy /to dd/mm/yyyy\";","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getSupportedDateFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"EXCUSE ME!!!, \"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"please use the correct date format\\n dd/mm/yyyy\";","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getIntegerOutOfBoundsMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"Are you blind? That\u0027s not an option!!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getFileCorruptedMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"Too bad, file was corrupted\";","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getDeleteMessageWithAttitudeOf(Task taskRemoved) {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nNoted. I\u0027ve purged this task:\\n  \" + taskRemoved.getTaskDetails();","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getMarkMessageWithAttitude(Task markedTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nOK, I\u0027ve marked this task as done:\\n  \" + markedTask + \"\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getUnMarkMessageWithAttitude(Task unmarkedTask) {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nOK, I\u0027ve marked this task as undone:\\n  \" + unmarkedTask.getName() + \"\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getAddTaskConfirmationWithAttitudeOf(Task taskAdded) {","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nOkay... I\u0027ve added this task:\\n  \" + taskAdded.getTaskDetails();","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getAllTaskFoundMessageWithAttitude(String allTaskFound) {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"        if (allTaskFound.isBlank()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"DOES NOT EXIST\";","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nHere you go:\\n\" + allTaskFound;","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getEmptyDetailsForEventMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"EXCUSE ME!!!, \u0027Deadline\u0027 details cannot be empty\";","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":70}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ShawnYip-Au":61}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"    private Label title;","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        if (response \u003d\u003d Ui.getGoodbyeMessage()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printTitle() {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"        title.setText(\"DUKE\");","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ShawnYip-Au":67}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"import task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":" * Handles file operations.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"public class Storage {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for storage.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param filePath Path of file starting from the home directory in Unix.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        this.filePath \u003d this.formatFilePath(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"        assert filePath.contains(\".txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"            this.createDirectoriesIfNeeded(this.filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"            this.createFileIfNeeded(this.filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException ignore) {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"            // TODO: find better alternative to ignoring","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"    private Path formatFilePath(String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] pathComponents \u003d filePath.split(\"/\");","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"        // Build path","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"        Path path \u003d Paths.get(home);","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        for (String component : pathComponents) {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"            path \u003d Paths.get(String.valueOf(path), component);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"        return path;","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"    private void createDirectoriesIfNeeded(Path filePath) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"            Path directoryPath \u003d filePath.getParent();","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"            Files.createDirectories(directoryPath);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(ex.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"    private void createFileIfNeeded(Path filePath) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(ex.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"     * Load all task saved in files into current session.","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return TaskList containing all saved tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"    public TaskList loadFile() {","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] allTasks \u003d this.readAllTaskFromFile(this.filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"            return this.loadIntoTaskList(allTasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"            return new TaskList(new LinkedList\u003c\u003e());","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"    private String[] readAllTaskFromFile(Path filePath) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"            return Files.readString(filePath).split(\"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"    private TaskList loadIntoTaskList(String[] allTasks) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"        LinkedList\u003cTask\u003e list \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"        for (String task : allTasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"            switch (task.charAt(0)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"                list.add(new ToDo(this.getTaskName(task),","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"ShawnYip-Au"},"content":"                        this.getIsTaskDone(task)));","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"ShawnYip-Au"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"ShawnYip-Au"},"content":"                list.add(new Deadline(this.getTaskName(task),","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"ShawnYip-Au"},"content":"                        this.getTaskEndDate(task), this.getIsTaskDone(task)));","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"ShawnYip-Au"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"ShawnYip-Au"},"content":"                list.add(new Event(this.getTaskName(task),","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"ShawnYip-Au"},"content":"                        this.getTaskStartDate(task), this.getTaskEndDate(task),","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"ShawnYip-Au"},"content":"                        this.getIsTaskDone(task)));","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"ShawnYip-Au"},"content":"            default:","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"ShawnYip-Au"},"content":"                throw new DukeException(Ui.getFileCorruptedMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"ShawnYip-Au"},"content":"        return new TaskList(list);","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getTaskName(String task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"ShawnYip-Au"},"content":"        String firstIsStatus \u003d task.substring(task.indexOf(\"|\") + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"ShawnYip-Au"},"content":"        String firstIsName \u003d firstIsStatus.substring(firstIsStatus.indexOf(\"|\") + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!firstIsName.contains(\"|\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"ShawnYip-Au"},"content":"            return firstIsName;","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"ShawnYip-Au"},"content":"        return firstIsName.substring(0, firstIsName.indexOf(\"|\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getTaskStartDate(String task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"ShawnYip-Au"},"content":"        String firstIsStatus \u003d task.substring(task.indexOf(\"|\") + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":130,"author":{"gitId":"ShawnYip-Au"},"content":"        String firstIsName \u003d firstIsStatus.substring(firstIsStatus.indexOf(\"|\") + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":131,"author":{"gitId":"ShawnYip-Au"},"content":"        String firstIsDate \u003d firstIsName.substring(firstIsName.indexOf(\"|\") + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":132,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!firstIsDate.contains(\"|\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"ShawnYip-Au"},"content":"            return firstIsDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"ShawnYip-Au"},"content":"        return firstIsDate.substring(0, firstIsDate.indexOf(\"|\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getTaskEndDate(String task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"ShawnYip-Au"},"content":"        return task.substring(task.lastIndexOf(\u0027|\u0027) + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"ShawnYip-Au"},"content":"    private Boolean getIsTaskDone(String task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":145,"author":{"gitId":"ShawnYip-Au"},"content":"        String firstIsStatus \u003d task.substring(task.indexOf(\"|\") + 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"ShawnYip-Au"},"content":"        return firstIsStatus.substring(0, firstIsStatus.indexOf(\"|\")).equals(\"X\");","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"ShawnYip-Au"},"content":"     * Overwrites the entire file with the current list of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList Current list of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"ShawnYip-Au"},"content":"    public void overwriteFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"ShawnYip-Au"},"content":"            Files.writeString(this.filePath, taskList.writeToFile());","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":159,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"ShawnYip-Au":161}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" * Deadline is a task which includes the name and end date.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for Deadline with default isTaskDone.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param endDate End date of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    public Deadline(String taskName, String endDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endDate \u003d LocalDate.parse(endDate, DateTimeFormatter.ofPattern(this.getDateFormatA()));","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param endDate End date of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param isTaskDone Status of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    public Deadline(String taskName, String endDate, Boolean isTaskDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskName, isTaskDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endDate \u003d LocalDate.parse(endDate, DateTimeFormatter.ofPattern(this.getDateFormatA()));","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.formatForWriteToFile(this.isDone(), this.getName(), this.endDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"    private String formatForWriteToFile(Boolean isDone, String taskName, LocalDate endDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"D|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\"X\");","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(endDate.format(DateTimeFormatter.ofPattern(this.getDateFormatA())));","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.formatForUserToSee(this.isDone(), this.getName(), this.endDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"    private String formatForUserToSee(Boolean isDone, String taskName, LocalDate endDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"[E][\");","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\"X\");","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"] \");","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\" (by: \");","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(endDate.format(DateTimeFormatter.ofPattern(this.getDateFormatB())));","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\")\");","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":79}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" * Event is a type of task which includes the name, start date and end date.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for event type of task with default isTaskDone.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param startDate Start date of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param endDate End date of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    public Event(String taskName, String startDate, String endDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        this.startDate \u003d LocalDate.parse(startDate, DateTimeFormatter.ofPattern(this.getDateFormatA()));","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endDate \u003d LocalDate.parse(endDate, DateTimeFormatter.ofPattern(this.getDateFormatA()));","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for event type of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param startDate Start date of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param endDate End date of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param isTaskDone Status of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    public Event(String taskName, String startDate, String endDate, Boolean isTaskDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskName, isTaskDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        this.startDate \u003d LocalDate.parse(startDate, DateTimeFormatter.ofPattern(this.getDateFormatA()));","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endDate \u003d LocalDate.parse(endDate, DateTimeFormatter.ofPattern(this.getDateFormatA()));","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.formatForWriteToFile(this.isDone(), this.getName(), this.startDate, this.endDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"    private String formatForWriteToFile(Boolean isDone, String taskName,","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"                                        LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"E|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\"X\");","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(startDate.format(DateTimeFormatter.ofPattern(this.getDateFormatA())));","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(endDate.format(DateTimeFormatter.ofPattern(this.getDateFormatA())));","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.formatForUserToSee(this.isDone(), this.getName(), this.startDate, this.endDate);","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"    private String formatForUserToSee(Boolean isDone, String taskName,","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"                                      LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"[E][\");","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\"X\");","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"] \");","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\" (from: \");","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(startDate.format(DateTimeFormatter.ofPattern(this.getDateFormatB())));","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\" to: \");","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(endDate.format(DateTimeFormatter.ofPattern(this.getDateFormatB())));","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\")\");","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":91}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Base class for all types of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String taskName;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    private Boolean isTaskDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    private final Boolean isTaskDoneDefault \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String dateFormatA \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String dateFormatB \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param isTaskDone Status of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    protected Task(String taskName, Boolean isTaskDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        this.isTaskDone \u003d isTaskDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for Task with default value for isTaskDone","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    protected Task(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        this.isTaskDone \u003d this.isTaskDoneDefault;","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"     * Method to write all task into file","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return String denoting the new task.","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"    public abstract String writeToFile();","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"     * Mark task as done.","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return Task that was marked done.","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"    public Task markIsDone() {","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        return this;","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"     * Mark task as not done.","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return Task that was marked not done.","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"    public Task markNotDone() {","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"        return this;","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"     * Return task status.","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return True if task is done.","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"    public Boolean isDone() {","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.isTaskDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isTaskDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[ ] \" + this.taskName;","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getName() {","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.taskName;","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getDateFormatA() {","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.dateFormatA;","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getDateFormatB() {","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.dateFormatB;","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":98}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":" * List of all task.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private final List\u003cTask\u003e storedTasks;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param storedTasks List of all tasks stored in file.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    public TaskList(List\u003cTask\u003e storedTasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        this.storedTasks \u003d new LinkedList\u003c\u003e(storedTasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"     * Get a task in TaskList.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return Task at specified index.","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"     * @throws DukeException If task is not in the list.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    public Task getTaskAt(int index) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"            return this.storedTasks.get(this.offSetIndex(index));","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.getIntegerOutOfBoundsMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"     * Remove a task from TaskList.","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return Task removed.","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"     * @throws DukeException If task is not in list.","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"    public Task removeTaskAt(int index) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"            return this.storedTasks.remove(this.offSetIndex(index));","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.getIntegerOutOfBoundsMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"     * Add a task into TaskList.","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"        storedTasks.add(task);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"     * Find all task that contains the given phrase.","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param phrase Phrase use for finding.","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return String of all task found.","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"    public String findTaskWith(String phrase) {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"  \");","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"        for (Task currentTask : this.storedTasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"            if (currentTask.getName().contains(phrase)) {","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"                s.append(taskIndex).append(\".\").append(currentTask).append(\"\\n  \");","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"                taskIndex +\u003d 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getAllTaskInListWithNumbering();","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getAllTaskInListWithNumbering() {","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"        for (int i \u003d 1; i \u003c\u003d storedTasks.size(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(i).append(\". \").append(storedTasks.get(this.offSetIndex(i))).append(\"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"     * Format task list for file write.","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return String of all task in file write format.","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"ShawnYip-Au"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"ShawnYip-Au"},"content":"        for (Task task : this.storedTasks) {","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(task.writeToFile());","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\"\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"ShawnYip-Au"},"content":"    private int offSetIndex(int indexStartingFromOne) {","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"ShawnYip-Au"},"content":"        return indexStartingFromOne - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":114}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * ToDo is a task which includes the name.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for ToDo with default isTaskDone.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for Todo.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param isTaskDone Status of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public ToDo(String taskName, Boolean isTaskDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskName, isTaskDone);","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.formatForWriteToFile(this.isDone(), this.getName());","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    private String formatForWriteToFile(Boolean isDone, String taskName) {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"T|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\"X\");","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.formatForUserToSee(this.isDone(), this.getName());","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"    private String formatForUserToSee(Boolean isDone, String taskName) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"[T][\");","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\"X\");","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        } else {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(\"] \");","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"        s.append(taskName);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"      \u003cLabel fx:id\u003d\"title\" alignment\u003d\"CENTER\" prefHeight\u003d\"51.0\" prefWidth\u003d\"400.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"            \u003cFont name\u003d\"System Bold Italic\" size\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"49.0\" prefHeight\u003d\"508.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":25}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":24}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"public class StorageTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    public void getTaskName_name() {","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        String input \u003d \"E|X|buy stuff|21/04/1990|29/09/2090\";","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        String expected \u003d \"buy stuff\";","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"        String actual \u003d \"buy stuff\";","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"ShawnYip-Au":15}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class EventTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    public void formatForWriteToFile_taskIsDone() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        String expected \u003d \"E|X|buy stuff|21/04/1990|29/09/2090\";","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        Event event \u003d new Event(\"buy stuff\", \"21/04/1990\", \"29/09/2090\",","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"                true);","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"        assertEquals(event.writeToFile(), expected);","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    public void formatForWriteToFile_taskIsNotDone() {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"        String expected \u003d \"E| |buy stuff|21/04/1990|29/09/2090\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"        Event event \u003d new Event(\"buy stuff\", \"21/04/1990\", \"29/09/2090\",","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"                false);","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        assertEquals(event.writeToFile(), expected);","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"ShawnYip-Au":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"todo math","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"deadline englist /by 9pm Today","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"event volunteer /from 8am /to 10pm on Sat","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"unmark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":8}},{"path":"text-ui-test/own_test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"todo math","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"mark 2","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"unmark 2","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"bye","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ShawnYip-Au":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"java -classpath ../bin Duke \u003c own_test.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShawnYip-Au":1,"-":37}}]
