[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"## Task List","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible todo exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible deadline exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible event exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Update automated test","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Finish JavaDocs","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ShawnYip-Au":7,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"javafx {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    version \u003d \"11\"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"checkstyle {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"jar {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    manifest {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        attributes(","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"                \u0027Class-Path\u0027: configurations.compile.collect { it.getName() }.join(\u0027 \u0027),","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"                \u0027Main-Class\u0027: \u0027duke.Launcher\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"        )","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShawnYip-Au":22,"-":34}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"rootProject.name \u003d \u0027duke\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"include(\u0027src\u0027)","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ShawnYip-Au":2}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Base class of all commands that the bot recognise.","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return A string confirmation.","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     * @throws DukeException Throws what went wrong.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public abstract String execute() throws DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":15}},{"path":"src/main/java/duke/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to terminate bot.","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        //TODO: find a way to terminate duke","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.goodbyeMessage;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":12}},{"path":"src/main/java/duke/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandDeadline extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandDeadline(TaskList taskList, String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getAddTaskConfirmationWithAttitude(this.taskList.addDeadlineTask(this.taskDetails));","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":17}},{"path":"src/main/java/duke/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String index;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandDelete(TaskList taskList, String index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getDeleteMessageWithAttitude(this.taskList.deleteTask(this.index));","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":17}},{"path":"src/main/java/duke/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandEvent extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandEvent(TaskList taskList, String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getAddTaskConfirmationWithAttitude(this.taskList.addEventTask(this.taskDetails));","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":16}},{"path":"src/main/java/duke/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String phrase;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandFind(TaskList taskList, String phrase) {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        this.phrase \u003d phrase;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getAllTaskFoundMessageWithAttitude(this.taskList.findTaskWith(this.phrase));","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":17}},{"path":"src/main/java/duke/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to see everything in the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandList extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandList.","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param tasklist List of all tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandList(TaskList tasklist) {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"        return taskList.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":22}},{"path":"src/main/java/duke/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Command to mark a task as done.","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String index;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     * Constructor for CommandMark.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of all tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param index Index to mark.","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandMark(TaskList taskList, String index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getMarkMessageWithAttitude(this.taskList.markTask(this.index));","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":26}},{"path":"src/main/java/duke/CommandToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandToDo extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandToDo(TaskList taskList, String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getAddTaskConfirmationWithAttitude(this.taskList.addToDoTask(this.taskDetails));","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":15}},{"path":"src/main/java/duke/CommandUnMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"public class CommandUnMark extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    private final String index;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    public CommandUnMark(TaskList taskList, String index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public String execute() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"        return Ui.getUnMarkMessageWithAttitude(this.taskList.unMarkTask(this.index));","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":17}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" * Deadline is a task which consist of the details and due date.","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Due date for this task */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    private LocalDate endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"     * Returns an instance of Deadline object mark undone.","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDetails Task details.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param endTime Task due date.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    public Deadline(String taskDetails, String endTime) {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskDetails);","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endTime \u003d LocalDate.parse(endTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"     * Returns an instance of Deadline object.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param isTaskDone Task done status.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDetails Task details.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDate Task due date.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    public Deadline(Boolean isTaskDone, String taskDetails, String taskDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskDetails);","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isTaskDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"            this.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endTime \u003d LocalDate.parse(taskDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!isTaskDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"D| |\"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"                    + this.taskName","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"                    + \"|\"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"                    + this.endTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"D|X|\"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"                + this.taskName","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"|\"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"                + this.endTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!isTaskDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[D][ ] \" + this.taskName","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"                    + \" (by: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[D][X] \" + this.taskName","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"                + \" (by: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * The sequence of events for the chat-bot duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Scanner object use to receive user inputs */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    private Scanner getInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    /** UiOld object to handle interactions with user */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    private UiOld uiOld;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Storage object to deal with file operations */","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    /** List to store all task */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    Duke(String filePath) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        this.getInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        this.uiOld \u003d new UiOld();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"        taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printIntro();","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printList(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    private String askForInput() {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        return getInput.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"    private void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"        // Execute inputs","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        String userInput;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        DukeKeyword curEvent;","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        loop: while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"            // Get inputs","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"            userInput \u003d askForInput();","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"            // Check if valid","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"                curEvent \u003d Parser.parse(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"                continue; // skip the rest of the code and go to next iteration","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"            // If valid keyword, execute input","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"            switch (curEvent) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"                case BYE:","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"                    break loop;","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"                case LIST:","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"                    uiOld.printListWithAttitude(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"                case MARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskList.markEvent(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"                    storage.overwriteFile(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskList.unmarkEvent(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"                    storage.overwriteFile(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"                case DELETE:","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskList.deleteEvent(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"                    storage.overwriteFile(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"                case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskList.addToDoEvent(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"                    storage.overwriteFile(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskList.addDeadlineEvent(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"                    storage.overwriteFile(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"                case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskList.addEventEvent(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"                    storage.overwriteFile(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"                case FIND:","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskList.find(userInput);","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printOutro();","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"ShawnYip-Au"},"content":"        return decodeInput(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"ShawnYip-Au"},"content":"    public String decodeInput(String userInput) {","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"ShawnYip-Au"},"content":"        Parser parser \u003d new Parser(this.taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"ShawnYip-Au"},"content":"            return parser.decode(userInput).execute();","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"ShawnYip-Au"},"content":"            return e.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ShawnYip-Au":108,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Consists of custom run-time exceptions for Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates a duke exception.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ShawnYip-Au":21}},{"path":"src/main/java/duke/DukeKeyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Consists of keywords that the chat-bot recognise.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public enum DukeKeyword {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, FIND","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" * Event is a type of task which includes the details, start date and end date.","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Start date of this task */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    private LocalDate startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    /** End date of this task */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    private LocalDate endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates an Event object.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param s Details of event.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param startTime Start date of event.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param endTime End date of event.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    public Event(String s, String startTime, String endTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        super(s);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        this.startTime \u003d LocalDate.parse(startTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endTime \u003d LocalDate.parse(endTime, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates an Event object.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"     * Use when reading from file.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param isTaskDone Status of event.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDetails Details of event.","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDate Start and end date of event.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    public Event(Boolean isTaskDone, String taskDetails, String taskDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskDetails);","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isTaskDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"            this.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        String from \u003d taskDate.substring(0, taskDate.indexOf(\"|\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"        String to \u003d taskDate.substring(taskDate.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"        this.startTime \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endTime \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!isTaskDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"E| |\"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"                    + this.taskName","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"                    + \"|\"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"                    + this.startTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"                    + \"|\"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"                    + this.endTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"E|X|\"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"                + this.taskName","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"|\"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"                + this.startTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"|\"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"                + this.endTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!isTaskDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[E][ ] \" + this.taskName","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"                + \" (from: \" + this.startTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"                + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[E][X] \" + this.taskName","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"                + \" (from: \" + this.startTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"                + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":80}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ShawnYip-Au":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.\u003cgui.MainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.\u003cgui.MainWindow\u003egetController().printTitle();","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ShawnYip-Au":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Decodes the input base on the keyword the user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"     * Returns the event type associated to the user input","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param input User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return DukeKeyword","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * @throws DukeException If keyword is not recognised.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    protected static DukeKeyword parse(String input) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d input.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.BYE;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.LIST;","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.MARK;","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.UNMARK;","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.DELETE;","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.TODO;","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.DEADLINE;","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"event\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.EVENT;","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"find\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"            return DukeKeyword.FIND;","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"    public Command decode(String userInput) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandBye();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"list\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandList(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"mark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"            String index \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandMark(taskList, index);","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"            String index \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandUnMark(taskList, index);","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"delete\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"            String index \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandDelete(taskList, index);","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDetails \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandToDo(taskList, taskDetails);","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDetails \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandDeadline(taskList, taskDetails);","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"event\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDetails \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandEvent(taskList, taskDetails);","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"find\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"            String phrase \u003d arr[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"            return new CommandFind(taskList, phrase);","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"        throw new DukeException(Ui.noKeywordMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":93}},{"path":"src/main/java/duke/Phrase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.List;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * Handles the UI elements of chat-bot Duke.","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"public class Phrase {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Name of chat-bot */","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String botName \u003d \"DUKE\";","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"     * Intro of chat-bot.","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return Intro string.","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getIntro() {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"Hello! I\u0027m\\n\" + Phrase.botName + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"     * Outro of chat-bot.","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return Outro string.","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getOutro() {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"Good Riddance!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"     * Get all tasks currently in the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return All tasks in the list string.","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getList(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        return taskList.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getListWithAttitude(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nTsk... here is your list:\\n\" + this.getList(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print list with duke personality.","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of task.","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printListWithAttitude(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nTsk... here is your list:\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"     //   this.printList(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print too much input message.","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printIndexOutOfBoundMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"Are you blind? That\u0027s not an option!!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print confirmation message for add task.","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param t Task added.","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printAddTaskSuccessfulMessage(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nOkay... I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints confirmation message for unmarking task.","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param t Task unmarked.","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printUnMarkMessage(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nOK, I\u0027ve marked this task as not done yet:\\n  \" + t + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints confirmation message for marking task.","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param t Task marked.","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printMarkMessage(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nOK, I\u0027ve marked this task as done yet:\\n  \" + t + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints confirmation message for deleting task.","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param t Task deleted.","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printDeleteSuccessfulMessage(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nNoted. I\u0027ve purged this task:\\n  \" + t);","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints empty details message.","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskType Task type.","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printEmptyDetailsMessage(String taskType) {","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"EXCUSE ME!!!, \u0027\" + taskType + \"\u0027  + details cannot be empty\");","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints proper format for deadline.","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printDeadlineFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"EXCUSE ME!!!, please follow the format\\ndeadline \u003cdetail\u003e /by dd/mm/yyyy\");","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints proper format for event.","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printEventFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"EXCUSE ME!!!, please follow the format\\nevent \u003cdetails\u003e /from dd/mm/yyyy /to dd/mm/yyyy\");","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints proper format for date.","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printDateFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"EXCUSE ME!!!, please use the correct date format\\n dd/mm/yyyy\");","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints total task stored.","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param storedInputs List of task.","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printTotalTask(List\u003cTask\u003e storedInputs) {","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"You currently have \" + storedInputs.size()  + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints found task message.","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param allTaskFound String to print.","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printFoundTasks(String allTaskFound) {","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"ShawnYip-Au"},"content":"        if (allTaskFound.isBlank()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(\"DOES NOT EXIST\");","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"ShawnYip-Au"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(\"\\nHere you go:\\n\" + allTaskFound);","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":158,"-":1}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":" * Handles file operations.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Stores filePath */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    private Path filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates an instance of Storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param filePath Path of file from the home directory in Unix format.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        String home \u003d System.getProperty(\"user.home\"); // Get home directory","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] s \u003d filePath.split(\"/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        // Create directories","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"        this.filePath \u003d Paths.get(home);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        for (int i \u003d 0; i \u003c s.length - 1; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"            this.filePath \u003d Paths.get(String.valueOf(this.filePath), s[i]);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"                Files.createDirectories(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"                System.exit(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        // Create file","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        this.filePath \u003d Paths.get(String.valueOf(this.filePath), s[s.length-1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"            Files.createFile(this.filePath); // Create empty file if it does not exist","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"        catch (FileAlreadyExistsException ignored) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"            System.exit(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"     * Returns a list of all task stored in the file.","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return List of all task stored in the file","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"    public LinkedList\u003cTask\u003e loadFile() {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"        LinkedList\u003cTask\u003e savedInputs \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"            Boolean isTaskDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDetails, taskDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] savedTasks \u003d Files.readString(filePath).split(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"            if (savedTasks[0].isBlank()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"                return savedInputs; // blank file","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"            for (String task : savedTasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"                switch (task.charAt(0)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"                        isTaskDone \u003d this.getIsTaskDone(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"                        taskDetails \u003d this.getTaskDetails(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"                        savedInputs.add(new ToDo(isTaskDone, taskDetails));","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"                        isTaskDone \u003d this.getIsTaskDone(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"                        taskDetails \u003d this.getTaskDetails(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"                        taskDate \u003d this.getTaskDate(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"                        savedInputs.add(new Deadline(isTaskDone, taskDetails, taskDate));","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"                        isTaskDone \u003d this.getIsTaskDone(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"                        taskDetails \u003d this.getTaskDetails(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"                        taskDate \u003d this.getTaskDate(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"                        savedInputs.add(new Event(isTaskDone, taskDetails, taskDate));","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(e.getMessage()); // file creation unsuccessful","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"        return savedInputs;","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"ShawnYip-Au"},"content":"    private Boolean getIsTaskDone(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"ShawnYip-Au"},"content":"        String line \u003d s.substring(s.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"ShawnYip-Au"},"content":"        return line.substring(0, line.indexOf(\"|\")).equals(\"X\");","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getTaskDetails(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"ShawnYip-Au"},"content":"        String line \u003d s.substring(s.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"ShawnYip-Au"},"content":"        line \u003d line.substring(line.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!line.contains(\"|\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"ShawnYip-Au"},"content":"            return line;","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"ShawnYip-Au"},"content":"        return line.substring(0, line.indexOf(\"|\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"ShawnYip-Au"},"content":"    private String getTaskDate(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"ShawnYip-Au"},"content":"        String line \u003d s.substring(s.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"ShawnYip-Au"},"content":"        line \u003d line.substring(line.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"ShawnYip-Au"},"content":"        line \u003d line.substring(line.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"ShawnYip-Au"},"content":"        return line;","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"ShawnYip-Au"},"content":"     * Overwrites the entire file with the current list of task.","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList Current list of task.","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"ShawnYip-Au"},"content":"    public void overwriteFile(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"ShawnYip-Au"},"content":"        for (Task storedInput : taskList.getList()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(storedInput.writeToFile());","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"ShawnYip-Au"},"content":"            Files.writeString(filePath, s);","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":141}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * Base class for all tasks consisting of task details and status.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Count total Tasks created */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    //public static Integer count \u003d 0;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Name of task */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Task status */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    protected Boolean isTaskDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates an instance of Task.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    protected Task(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        //Task.count++;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"     * Mark this task as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"    public Task markDone() {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        return this;","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"     * Mark this task as not done.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    public Task markUnDone() {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"        return this;","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"     * Use for overriding for child classes.","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\";","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!isTaskDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[X] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getDetails() {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.taskName;","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"        return this.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":" * List to store Task objects.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Stores all task */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    private List\u003cTask\u003e storedInputs;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    /** Handles interaction with user */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    private UiOld uiOld \u003d new UiOld();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates an instance of TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param savedInputs List of task.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public TaskList(LinkedList\u003cTask\u003e savedInputs) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        this.storedInputs \u003d new LinkedList\u003c\u003e(savedInputs);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        for (int i \u003d 1; i \u003c\u003d storedInputs.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(i).append(\". \").append(storedInputs.get(i - 1)).append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"        return storedInputs;","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"     * Mark a task a done.","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"    public void markEvent(String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        Task t;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"            t \u003d storedInputs.get(num-1);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printIndexOutOfBoundMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"        t.markDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printMarkMessage(t);","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"     * Mark a task as not done.","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"    public void unmarkEvent(String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"        int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"        Task t;","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"            t \u003d storedInputs.get(num-1);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printIndexOutOfBoundMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"        t.markUnDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printUnMarkMessage(t);","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"     * Delete an event.","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"    public void deleteEvent(String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"        int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"        Task t;","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"            t \u003d storedInputs.remove(num-1);","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printIndexOutOfBoundMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printDeleteSuccessfulMessage(t);","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printTotalTask(storedInputs);","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"ShawnYip-Au"},"content":"     * Filter out keywords from user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"ShawnYip-Au"},"content":"     * Use for processing task information.","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param s User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"ShawnYip-Au"},"content":"     * @return User input without keywords.","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"ShawnYip-Au"},"content":"     * @throws DukeException If keyword is the only input.","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"ShawnYip-Au"},"content":"    public String removeKeyword(String s) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"ShawnYip-Au"},"content":"            s \u003d s.substring(s.indexOf(\" \")).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(\"details cannot be empty\");","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"ShawnYip-Au"},"content":"        if (s.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(\"details cannot be empty\");","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"ShawnYip-Au"},"content":"        return s;","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"ShawnYip-Au"},"content":"     * Add a ToDo task.","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"ShawnYip-Au"},"content":"    public void addToDoEvent(String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"ShawnYip-Au"},"content":"            userInput \u003d removeKeyword(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printEmptyDetailsMessage(\"todo\");","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"ShawnYip-Au"},"content":"        Task newTask \u003d new ToDo(userInput.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"ShawnYip-Au"},"content":"        storedInputs.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printAddTaskSuccessfulMessage(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printTotalTask(storedInputs);","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"ShawnYip-Au"},"content":"     * Add a Deadline task.","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"ShawnYip-Au"},"content":"    public void addDeadlineEvent(String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"ShawnYip-Au"},"content":"            userInput \u003d removeKeyword(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printEmptyDetailsMessage(\"deadline\");","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"ShawnYip-Au"},"content":"        Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] info \u003d userInput.split(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"ShawnYip-Au"},"content":"            if (info[0].trim().isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"ShawnYip-Au"},"content":"                uiOld.printEmptyDetailsMessage(\"deadline\");","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"ShawnYip-Au"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"ShawnYip-Au"},"content":"            newTask \u003d new Deadline(info[0].trim(), info[1].trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"ShawnYip-Au"},"content":"            storedInputs.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printDeadlineFormat();","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"ShawnYip-Au"},"content":"        catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printDateFormat();","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printAddTaskSuccessfulMessage(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printTotalTask(storedInputs);","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"ShawnYip-Au"},"content":"     * Add an Event task.","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":180,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"ShawnYip-Au"},"content":"    public void addEventEvent(String userInput) {","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"ShawnYip-Au"},"content":"            userInput \u003d removeKeyword(userInput);","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printEmptyDetailsMessage(\"event\");","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"ShawnYip-Au"},"content":"        Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] infoA \u003d userInput.split(\"/from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] infoB \u003d infoA[1].split(\"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"ShawnYip-Au"},"content":"            if (infoA[0].trim().isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"ShawnYip-Au"},"content":"                uiOld.printEmptyDetailsMessage(\"event\");","lastModifiedDate":"2023-02-10"},{"lineNumber":195,"author":{"gitId":"ShawnYip-Au"},"content":"                return;","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"ShawnYip-Au"},"content":"            newTask \u003d new Event(infoA[0].trim(), infoB[0].trim(), infoB[1].trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"ShawnYip-Au"},"content":"            storedInputs.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printEventFormat();","lastModifiedDate":"2023-02-10"},{"lineNumber":201,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printDateFormat();","lastModifiedDate":"2023-02-10"},{"lineNumber":204,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":205,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printAddTaskSuccessfulMessage(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":208,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printTotalTask(storedInputs);","lastModifiedDate":"2023-02-10"},{"lineNumber":209,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":211,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":212,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints all task that stores the given phrase.","lastModifiedDate":"2023-02-03"},{"lineNumber":213,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":214,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param userInputRaw Unmodified user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":215,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":216,"author":{"gitId":"ShawnYip-Au"},"content":"    public void find(String userInputRaw) {","lastModifiedDate":"2023-02-03"},{"lineNumber":217,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":218,"author":{"gitId":"ShawnYip-Au"},"content":"        String givenPhrase \u003d userInputRaw;","lastModifiedDate":"2023-02-03"},{"lineNumber":219,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":220,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":221,"author":{"gitId":"ShawnYip-Au"},"content":"            givenPhrase \u003d removeKeyword(givenPhrase);","lastModifiedDate":"2023-02-03"},{"lineNumber":222,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":223,"author":{"gitId":"ShawnYip-Au"},"content":"            uiOld.printEmptyDetailsMessage(\"event\");","lastModifiedDate":"2023-02-10"},{"lineNumber":224,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-02-03"},{"lineNumber":225,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":226,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":227,"author":{"gitId":"ShawnYip-Au"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":228,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"  \");","lastModifiedDate":"2023-02-03"},{"lineNumber":229,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":230,"author":{"gitId":"ShawnYip-Au"},"content":"        for (int i \u003d 0; i \u003c this.storedInputs.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":231,"author":{"gitId":"ShawnYip-Au"},"content":"            Task currentTask \u003d this.storedInputs.get(i);","lastModifiedDate":"2023-02-03"},{"lineNumber":232,"author":{"gitId":"ShawnYip-Au"},"content":"            if (currentTask.getDetails().contains(givenPhrase)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":233,"author":{"gitId":"ShawnYip-Au"},"content":"                s.append(count).append(\".\").append(currentTask).append(\"\\n  \");","lastModifiedDate":"2023-02-03"},{"lineNumber":234,"author":{"gitId":"ShawnYip-Au"},"content":"                count +\u003d 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":235,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":236,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":237,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":238,"author":{"gitId":"ShawnYip-Au"},"content":"        uiOld.printFoundTasks(s.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":239,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":240,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":241,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":242,"author":{"gitId":"ShawnYip-Au"},"content":"    public String markTask(String index) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":243,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":244,"author":{"gitId":"ShawnYip-Au"},"content":"            //TODO: ignore index 0 of storedInputs","lastModifiedDate":"2023-02-10"},{"lineNumber":245,"author":{"gitId":"ShawnYip-Au"},"content":"            return storedInputs.get(Integer.parseInt(index)).markDone().getTaskDetails();","lastModifiedDate":"2023-02-10"},{"lineNumber":246,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":247,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":248,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":249,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":250,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":251,"author":{"gitId":"ShawnYip-Au"},"content":"    public String unMarkTask(String index) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":252,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":253,"author":{"gitId":"ShawnYip-Au"},"content":"            //TODO: ignore index 0 of storedInputs","lastModifiedDate":"2023-02-10"},{"lineNumber":254,"author":{"gitId":"ShawnYip-Au"},"content":"            return storedInputs.get(Integer.parseInt(index)).markUnDone().getTaskDetails();","lastModifiedDate":"2023-02-10"},{"lineNumber":255,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":256,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":257,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":258,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":259,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":260,"author":{"gitId":"ShawnYip-Au"},"content":"    public String deleteTask(String index) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":261,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":262,"author":{"gitId":"ShawnYip-Au"},"content":"            return storedInputs.remove(Integer.parseInt(index)).getTaskDetails();","lastModifiedDate":"2023-02-10"},{"lineNumber":263,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":264,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":265,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":266,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":267,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":268,"author":{"gitId":"ShawnYip-Au"},"content":"    public String addToDoTask(String taskDetails) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":269,"author":{"gitId":"ShawnYip-Au"},"content":"        if (taskDetails.isBlank()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":270,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.emptyDetailsForToDoMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":271,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":272,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":273,"author":{"gitId":"ShawnYip-Au"},"content":"        Task newTask \u003d new ToDo(taskDetails.trim());","lastModifiedDate":"2023-02-10"},{"lineNumber":274,"author":{"gitId":"ShawnYip-Au"},"content":"        storedInputs.add(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":275,"author":{"gitId":"ShawnYip-Au"},"content":"        return newTask.getTaskDetails();","lastModifiedDate":"2023-02-10"},{"lineNumber":276,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":277,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":278,"author":{"gitId":"ShawnYip-Au"},"content":"    public String addDeadlineTask(String taskDetails) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":279,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":280,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] s \u003d taskDetails.split(\"/by\");","lastModifiedDate":"2023-02-10"},{"lineNumber":281,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskInfo \u003d s[0].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":282,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskDateLine \u003d s[1].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":283,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":284,"author":{"gitId":"ShawnYip-Au"},"content":"            Task newTask \u003d new Deadline(taskInfo, taskDateLine);","lastModifiedDate":"2023-02-10"},{"lineNumber":285,"author":{"gitId":"ShawnYip-Au"},"content":"            storedInputs.add(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":286,"author":{"gitId":"ShawnYip-Au"},"content":"            return newTask.getTaskDetails();","lastModifiedDate":"2023-02-10"},{"lineNumber":287,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":288,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.emptyDetailsForDeadlineMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":289,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":290,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":291,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":292,"author":{"gitId":"ShawnYip-Au"},"content":"    public String addEventTask(String taskDetails) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":293,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":294,"author":{"gitId":"ShawnYip-Au"},"content":"        if (taskDetails.isBlank()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":295,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.emptyDetailsForEventMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":296,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":297,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":298,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":299,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] s \u003d taskDetails.split(\"/from\");","lastModifiedDate":"2023-02-10"},{"lineNumber":300,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] ss \u003d s[1].split(\"/to\");","lastModifiedDate":"2023-02-10"},{"lineNumber":301,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":302,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskInfo \u003d s[0].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":303,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskStartDate \u003d ss[0].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":304,"author":{"gitId":"ShawnYip-Au"},"content":"            String taskEndDate \u003d ss[1].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":305,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":306,"author":{"gitId":"ShawnYip-Au"},"content":"            Task newTask \u003d new Event(taskInfo, taskStartDate, taskEndDate);","lastModifiedDate":"2023-02-10"},{"lineNumber":307,"author":{"gitId":"ShawnYip-Au"},"content":"            storedInputs.add(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":308,"author":{"gitId":"ShawnYip-Au"},"content":"            return newTask.getTaskDetails();","lastModifiedDate":"2023-02-10"},{"lineNumber":309,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":310,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.eventTaskFormat);","lastModifiedDate":"2023-02-10"},{"lineNumber":311,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":312,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(Ui.supportedDateFormat);","lastModifiedDate":"2023-02-10"},{"lineNumber":313,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":314,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":315,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":316,"author":{"gitId":"ShawnYip-Au"},"content":"    public String findTaskWith(String phrase) {","lastModifiedDate":"2023-02-10"},{"lineNumber":317,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":318,"author":{"gitId":"ShawnYip-Au"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":319,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder(\"  \");","lastModifiedDate":"2023-02-10"},{"lineNumber":320,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":321,"author":{"gitId":"ShawnYip-Au"},"content":"        for (Task currentTask : this.storedInputs) {","lastModifiedDate":"2023-02-10"},{"lineNumber":322,"author":{"gitId":"ShawnYip-Au"},"content":"            if (currentTask.getDetails().contains(phrase)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":323,"author":{"gitId":"ShawnYip-Au"},"content":"                s.append(taskIndex).append(\".\").append(currentTask).append(\"\\n  \");","lastModifiedDate":"2023-02-10"},{"lineNumber":324,"author":{"gitId":"ShawnYip-Au"},"content":"                taskIndex +\u003d 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":325,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":326,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":327,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":328,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":329,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":330,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":330}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":" * ToDo is a type of task which consist of the task details only.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"     * Create a undone ToDo task which consist task details only.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param s Task details.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    public ToDo(String s) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        super(s);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates an instance of ToDo that takes in task status.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param isTaskDone","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskDetails","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public ToDo(Boolean isTaskDone, String taskDetails) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskDetails);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isTaskDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"            this.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!isTaskDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"T| |\" + this.taskName;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"T|X|\" + this.taskName;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!isTaskDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[T][ ] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[T][X] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":45}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String noKeywordMessage \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String goodbyeMessage \u003d \"Good Riddance!!!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String emptyDetailsForToDoMessage \u003d \"EXCUSE ME!!!, \u0027ToDo\u0027 details cannot be empty\";","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String emptyDetailsForDeadlineMessage \u003d \"EXCUSE ME!!!, \" +","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"            \"\u0027Deadline\u0027 details cannot be empty\";","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String emptyDetailsForEventMessage \u003d \"EXCUSE ME!!!, \u0027Event\u0027 details cannot be empty\";","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String eventTaskFormat \u003d \"EXCUSE ME!!!, please follow the format\" +","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"            \"\\nevent \u003cdetails\u003e /from dd/mm/yyyy /to dd/mm/yyyy\";","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    public static final String supportedDateFormat \u003d \"EXCUSE ME!!!, \" +","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"            \"please use the correct date format\\n dd/mm/yyyy\";","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getDeleteMessageWithAttitude(String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nNoted. I\u0027ve purged this task:\\n  \" + taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getMarkMessageWithAttitude(String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nOK, I\u0027ve marked this task as done:\\n  \" + taskDetails + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getUnMarkMessageWithAttitude(String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nOK, I\u0027ve marked this task as undone:\\n  \" + taskDetails + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getAddTaskConfirmationWithAttitude(String taskDetails) {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nOkay... I\u0027ve added this task:\\n  \" + taskDetails;","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    public static String getAllTaskFoundMessageWithAttitude(String allTaskFound) {","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        if (allTaskFound.isBlank()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"DOES NOT EXIST\";","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"\\nHere you go:\\n\" + allTaskFound;","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":36,"-":1}},{"path":"src/main/java/duke/UiOld.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.List;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":" * Handles the UI elements of chat-bot Duke.","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"public class UiOld {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    public String logo() {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        return \" ____        _        \\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print introduction.","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printIntro() {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"Hello! I\u0027m\\n\" + logo() + \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print goodbye message.","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printOutro() {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"Good Riddance!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print current list.","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of task.","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printList(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print list with duke personality.","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskList List of task.","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printListWithAttitude(TaskList taskList) {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nTsk... here is your list:\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        this.printList(taskList);","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print too much input message.","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printIndexOutOfBoundMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"Are you blind? That\u0027s not an option!!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"     * Print confirmation message for add task.","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param t Task added.","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printAddTaskSuccessfulMessage(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nOkay... I\u0027ve added this task:\\n  \" + t);","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints confirmation message for unmarking task.","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param t Task unmarked.","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printUnMarkMessage(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nOK, I\u0027ve marked this task as not done yet:\\n  \" + t + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints confirmation message for marking task.","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param t Task marked.","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printMarkMessage(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nOK, I\u0027ve marked this task as done yet:\\n  \" + t + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints confirmation message for deleting task.","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param t Task deleted.","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printDeleteSuccessfulMessage(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nNoted. I\u0027ve purged this task:\\n  \" + t);","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints empty details message.","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param taskType Task type.","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printEmptyDetailsMessage(String taskType) {","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"EXCUSE ME!!!, \u0027\" + taskType + \"\u0027  + details cannot be empty\");","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints proper format for deadline.","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printDeadlineFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"EXCUSE ME!!!, please follow the format\\ndeadline \u003cdetail\u003e /by dd/mm/yyyy\");","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints proper format for event.","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printEventFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"EXCUSE ME!!!, please follow the format\\nevent \u003cdetails\u003e /from dd/mm/yyyy /to dd/mm/yyyy\");","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints proper format for date.","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printDateFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"EXCUSE ME!!!, please use the correct date format\\n dd/mm/yyyy\");","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints total task stored.","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param storedInputs List of task.","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printTotalTask(List\u003cTask\u003e storedInputs) {","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"You currently have \" + storedInputs.size()  + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"ShawnYip-Au"},"content":"     * Prints found task message.","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"ShawnYip-Au"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"ShawnYip-Au"},"content":"     * @param allTaskFound String to print.","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printFoundTasks(String allTaskFound) {","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"ShawnYip-Au"},"content":"        if (allTaskFound.isBlank()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(\"DOES NOT EXIST\");","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"ShawnYip-Au"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(\"\\nHere you go:\\n\" + allTaskFound);","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":150}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ShawnYip-Au":61}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"    private Label title;","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"        if (response \u003d\u003d Ui.goodbyeMessage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"    public void printTitle() {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"        title.setText(\"DUKE\");","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ShawnYip-Au":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"      \u003cLabel fx:id\u003d\"title\" alignment\u003d\"CENTER\" prefHeight\u003d\"51.0\" prefWidth\u003d\"400.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"            \u003cFont name\u003d\"System Bold Italic\" size\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"49.0\" prefHeight\u003d\"508.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ShawnYip-Au":25}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    public void test1() throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        TaskList taskList \u003d new TaskList(new LinkedList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        assertEquals(\"you\", taskList.removeKeyword(\"Hello you\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    public void test2() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"        TaskList taskList \u003d new TaskList(new LinkedList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"        assertThrows(DukeException.class, ()-\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"            taskList.removeKeyword(\"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ShawnYip-Au":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"todo math","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"deadline englist /by 9pm Today","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"event volunteer /from 8am /to 10pm on Sat","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"unmark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":8}},{"path":"text-ui-test/own_test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"todo math","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"mark 2","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"unmark 2","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"bye","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ShawnYip-Au":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"java -classpath ../bin Duke \u003c own_test.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShawnYip-Au":1,"-":37}}]
