[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"## Task List","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible todo exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible deadline exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Implement all possible event exceptions","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Update automated test","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"- [ ] Finish JavaDocs","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ShawnYip-Au":7,"-":24}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"    private String endTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    public Deadline(String s, String endTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"        super(s);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    public Deadline(Boolean isTaskDone, String taskDetails, String taskDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskDetails);","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isTaskDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"            this.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endTime \u003d taskDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!taskDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[D][ ] \" + this.taskName + \" (by: \" + this.endTime + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[D][X] \" + this.taskName + \" (by: \" + this.endTime + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.List; // Import List class","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.LinkedList; // Import LinkedList class","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"import java.util.Scanner;  // Import the Scanner class","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"    private static Scanner getInput \u003d new Scanner(System.in); // Create a static Scanner object","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"    private static List\u003cTask\u003e storedInputs \u003d new LinkedList\u003c\u003e(); // List to store inputs","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(intro());","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"        ","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"        String userInput;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        EventType curEvent;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"        String home \u003d System.getProperty(\"user.home\"); //home directory OS independent","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"        Files.createDirectories(Paths.get(home,\"data\")); //create directory if it does not exist","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        Path filePath \u003d Paths.get(home,\"data\", \"duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] savedTask \u003d Files.readString(filePath).split(\"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        Boolean isTaskDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        String taskDetails, taskDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"        for (String s : savedTask) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"            switch (decodeTaskType(s)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"                    isTaskDone \u003d getIsTaskDone(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskDetails \u003d getTaskDetails(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"ShawnYip-Au"},"content":"                    storedInputs.add(new ToDo(isTaskDone, taskDetails));","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ShawnYip-Au"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ShawnYip-Au"},"content":"                    isTaskDone \u003d getIsTaskDone(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskDetails \u003d getTaskDetails(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskDate \u003d getTaskDate(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ShawnYip-Au"},"content":"                    storedInputs.add(new Deadline(isTaskDone, taskDetails, taskDate));","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"ShawnYip-Au"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"ShawnYip-Au"},"content":"                    isTaskDone \u003d getIsTaskDone(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskDetails \u003d getTaskDetails(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ShawnYip-Au"},"content":"                    taskDate \u003d getTaskDate(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ShawnYip-Au"},"content":"                    storedInputs.add(new Event(isTaskDone, taskDetails, taskDate));","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"ShawnYip-Au"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"ShawnYip-Au"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(printList());","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"ShawnYip-Au"},"content":"        loop: while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"ShawnYip-Au"},"content":"            userInput \u003d askForInput();","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"ShawnYip-Au"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"ShawnYip-Au"},"content":"                curEvent \u003d decodeInput(userInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"ShawnYip-Au"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"ShawnYip-Au"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"ShawnYip-Au"},"content":"                continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"ShawnYip-Au"},"content":"            switch (curEvent) {","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ShawnYip-Au"},"content":"            case BYE:","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"ShawnYip-Au"},"content":"                break loop;","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ShawnYip-Au"},"content":"            case LIST:","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ShawnYip-Au"},"content":"                System.out.println(\"\\nHere are the tasks in your list:\\n\" + printList());","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ShawnYip-Au"},"content":"            case MARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ShawnYip-Au"},"content":"                markEvent(userInput);","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ShawnYip-Au"},"content":"                replaceFileContents(filePath,saveList());","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"ShawnYip-Au"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ShawnYip-Au"},"content":"                unmarkEvent(userInput);","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ShawnYip-Au"},"content":"                replaceFileContents(filePath,saveList());","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ShawnYip-Au"},"content":"            case DELETE:","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"ShawnYip-Au"},"content":"                deleteEvent(userInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"ShawnYip-Au"},"content":"                replaceFileContents(filePath,saveList());","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"ShawnYip-Au"},"content":"            case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"ShawnYip-Au"},"content":"                todoEvent(userInput);","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"ShawnYip-Au"},"content":"                replaceFileContents(filePath,saveList());","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ShawnYip-Au"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ShawnYip-Au"},"content":"                deadlineEvent(userInput);","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"ShawnYip-Au"},"content":"                replaceFileContents(filePath,saveList());","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ShawnYip-Au"},"content":"            case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ShawnYip-Au"},"content":"                eventEvent(userInput);","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ShawnYip-Au"},"content":"                replaceFileContents(filePath,saveList());","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"ShawnYip-Au"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ShawnYip-Au"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(outro());","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ShawnYip-Au"},"content":"    private static char decodeTaskType(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.charAt(0);","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"ShawnYip-Au"},"content":"    private static Boolean getIsTaskDone(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"ShawnYip-Au"},"content":"        String line \u003d s.substring(s.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"ShawnYip-Au"},"content":"        return line.substring(0, line.indexOf(\"|\")).equals(\"X\");","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String getTaskDetails(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"ShawnYip-Au"},"content":"        String line \u003d s.substring(s.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"ShawnYip-Au"},"content":"        line \u003d line.substring(line.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!line.contains(\"|\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"ShawnYip-Au"},"content":"            return line;","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"ShawnYip-Au"},"content":"        return line.substring(0, line.indexOf(\"|\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String getTaskDate(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"ShawnYip-Au"},"content":"        String line \u003d s.substring(s.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"ShawnYip-Au"},"content":"        line \u003d line.substring(line.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"ShawnYip-Au"},"content":"        line \u003d line.substring(line.indexOf(\"|\") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"ShawnYip-Au"},"content":"        return line;","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String logo() {","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"ShawnYip-Au"},"content":"        return \" ____        _        \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String intro() {","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"Hello! I\u0027m\\n\" + logo() + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String outro() {","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"Good Riddance!\";","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String askForInput() {","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"ShawnYip-Au"},"content":"        return getInput.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"ShawnYip-Au"},"content":"    private static EventType decodeInput(String input) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d input.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"ShawnYip-Au"},"content":"        ","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"ShawnYip-Au"},"content":"            return EventType.BYE;","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"ShawnYip-Au"},"content":"            return EventType.LIST;","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"ShawnYip-Au"},"content":"            return EventType.MARK;","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"ShawnYip-Au"},"content":"            return EventType.UNMARK;","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"ShawnYip-Au"},"content":"            return EventType.DELETE;","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"ShawnYip-Au"},"content":"            return EventType.TODO;","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"ShawnYip-Au"},"content":"            return EventType.DEADLINE;","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"ShawnYip-Au"},"content":"        if (arr[0].equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"ShawnYip-Au"},"content":"            return EventType.EVENT;","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"ShawnYip-Au"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"ShawnYip-Au"},"content":"    private static void markEvent(String userInput) {","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"ShawnYip-Au"},"content":"        int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"ShawnYip-Au"},"content":"        Task t \u003d storedInputs.get(num-1);","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"ShawnYip-Au"},"content":"        t.markDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nNice! I\u0027ve marked this task as done:\\n  \" + t + \"\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"ShawnYip-Au"},"content":"    private static void unmarkEvent(String userInput) {","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"ShawnYip-Au"},"content":"        int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":191,"author":{"gitId":"ShawnYip-Au"},"content":"        Task t \u003d storedInputs.get(num-1);","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"ShawnYip-Au"},"content":"        t.markUnDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nOK, I\u0027ve marked this task as not done yet:\\n  \" + t + \"\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"ShawnYip-Au"},"content":"    public static void deleteEvent(String userInput) {","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"ShawnYip-Au"},"content":"        String[] arr \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"ShawnYip-Au"},"content":"        int num \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"ShawnYip-Au"},"content":"        Task t \u003d storedInputs.remove(num-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nNoted. I\u0027ve removed this task:\\n  \" + t);","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"ShawnYip-Au"},"content":"        printTotalTasks();","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":205,"author":{"gitId":"ShawnYip-Au"},"content":"   /**","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"ShawnYip-Au"},"content":"    * Remove the first word of the user input leaving only the decription ","lastModifiedDate":"2023-01-19"},{"lineNumber":207,"author":{"gitId":"ShawnYip-Au"},"content":"    * of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":208,"author":{"gitId":"ShawnYip-Au"},"content":"    *","lastModifiedDate":"2023-01-19"},{"lineNumber":209,"author":{"gitId":"ShawnYip-Au"},"content":"    * @param s a string that represent the user input","lastModifiedDate":"2023-01-19"},{"lineNumber":210,"author":{"gitId":"ShawnYip-Au"},"content":"    * @throws DukeException if there is only a single word","lastModifiedDate":"2023-01-19"},{"lineNumber":211,"author":{"gitId":"ShawnYip-Au"},"content":"    * @return the same string without the first word","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"ShawnYip-Au"},"content":"    */","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String removeFirstWord(String s) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"ShawnYip-Au"},"content":"            s \u003d s.substring(s.indexOf(\" \")).trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":216,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":218,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":219,"author":{"gitId":"ShawnYip-Au"},"content":"        return s;","lastModifiedDate":"2023-01-19"},{"lineNumber":220,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":221,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":222,"author":{"gitId":"ShawnYip-Au"},"content":"    private static void todoEvent(String userInput) {","lastModifiedDate":"2023-01-19"},{"lineNumber":223,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":224,"author":{"gitId":"ShawnYip-Au"},"content":"            userInput \u003d removeFirstWord(userInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":225,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":226,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":227,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":229,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":230,"author":{"gitId":"ShawnYip-Au"},"content":"        Task temp \u003d new ToDo(userInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":231,"author":{"gitId":"ShawnYip-Au"},"content":"        storedInputs.add(temp);","lastModifiedDate":"2023-01-19"},{"lineNumber":232,"author":{"gitId":"ShawnYip-Au"},"content":"        ","lastModifiedDate":"2023-01-19"},{"lineNumber":233,"author":{"gitId":"ShawnYip-Au"},"content":"        printConfirmation();","lastModifiedDate":"2023-01-19"},{"lineNumber":234,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"  \" + temp);","lastModifiedDate":"2023-01-19"},{"lineNumber":235,"author":{"gitId":"ShawnYip-Au"},"content":"        printTotalTasks();","lastModifiedDate":"2023-01-19"},{"lineNumber":236,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":237,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":238,"author":{"gitId":"ShawnYip-Au"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":239,"author":{"gitId":"ShawnYip-Au"},"content":"    * Remove the first word of every chunk and whitespaces ","lastModifiedDate":"2023-01-18"},{"lineNumber":240,"author":{"gitId":"ShawnYip-Au"},"content":"    * at the two ends of the String","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"ShawnYip-Au"},"content":"    *","lastModifiedDate":"2023-01-18"},{"lineNumber":242,"author":{"gitId":"ShawnYip-Au"},"content":"    * @param s An array of Strings","lastModifiedDate":"2023-01-18"},{"lineNumber":243,"author":{"gitId":"ShawnYip-Au"},"content":"    */","lastModifiedDate":"2023-01-18"},{"lineNumber":244,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String[] removeFirstWord(String[] s) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":245,"author":{"gitId":"ShawnYip-Au"},"content":"        // no arguments, guaranteed to have at least 1","lastModifiedDate":"2023-01-19"},{"lineNumber":246,"author":{"gitId":"ShawnYip-Au"},"content":"        if (s.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":247,"author":{"gitId":"ShawnYip-Au"},"content":"            throw new DukeException(\"Invalid!! Empty Input\");","lastModifiedDate":"2023-01-19"},{"lineNumber":248,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":249,"author":{"gitId":"ShawnYip-Au"},"content":"        for (int i \u003d 0; i \u003c s.length; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":250,"author":{"gitId":"ShawnYip-Au"},"content":"            s[i] \u003d s[i].substring(s[i].indexOf(\" \")).trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":251,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":252,"author":{"gitId":"ShawnYip-Au"},"content":"        return s;","lastModifiedDate":"2023-01-18"},{"lineNumber":253,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":254,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":255,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":256,"author":{"gitId":"ShawnYip-Au"},"content":"    private static void deadlineEvent(String userInput) {","lastModifiedDate":"2023-01-18"},{"lineNumber":257,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":258,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] s \u003d removeFirstWord(userInput.split(\"/\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":259,"author":{"gitId":"ShawnYip-Au"},"content":"            Task temp \u003d new Deadline(s[0], s[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":260,"author":{"gitId":"ShawnYip-Au"},"content":"            storedInputs.add(temp);","lastModifiedDate":"2023-01-18"},{"lineNumber":261,"author":{"gitId":"ShawnYip-Au"},"content":"            printConfirmation();","lastModifiedDate":"2023-01-18"},{"lineNumber":262,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(\"  \" + temp);","lastModifiedDate":"2023-01-18"},{"lineNumber":263,"author":{"gitId":"ShawnYip-Au"},"content":"            printTotalTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":264,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":265,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":266,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-19"},{"lineNumber":267,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":268,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":269,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":270,"author":{"gitId":"ShawnYip-Au"},"content":"    private static void eventEvent(String userInput) {","lastModifiedDate":"2023-01-18"},{"lineNumber":271,"author":{"gitId":"ShawnYip-Au"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":272,"author":{"gitId":"ShawnYip-Au"},"content":"            String[] s \u003d removeFirstWord(userInput.split(\"/\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":273,"author":{"gitId":"ShawnYip-Au"},"content":"            Task temp \u003d new Event(s[0], s[1], s[2]);","lastModifiedDate":"2023-01-18"},{"lineNumber":274,"author":{"gitId":"ShawnYip-Au"},"content":"            storedInputs.add(temp);","lastModifiedDate":"2023-01-18"},{"lineNumber":275,"author":{"gitId":"ShawnYip-Au"},"content":"            printConfirmation();","lastModifiedDate":"2023-01-18"},{"lineNumber":276,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(\"  \" + temp);","lastModifiedDate":"2023-01-18"},{"lineNumber":277,"author":{"gitId":"ShawnYip-Au"},"content":"            printTotalTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":278,"author":{"gitId":"ShawnYip-Au"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":279,"author":{"gitId":"ShawnYip-Au"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":280,"author":{"gitId":"ShawnYip-Au"},"content":"            return;","lastModifiedDate":"2023-01-19"},{"lineNumber":281,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":282,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":283,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":284,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String printList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":285,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":286,"author":{"gitId":"ShawnYip-Au"},"content":"        for (int i \u003d 1; i \u003c\u003d storedInputs.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":287,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(i).append(\". \").append(storedInputs.get(i - 1)).append(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":288,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":289,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":290,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":291,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":292,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String saveList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":293,"author":{"gitId":"ShawnYip-Au"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":294,"author":{"gitId":"ShawnYip-Au"},"content":"        for (int i \u003d 1; i \u003c\u003d storedInputs.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":295,"author":{"gitId":"ShawnYip-Au"},"content":"            s.append(convertStringToFileFormat(storedInputs.get(i - 1).toString())).append(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":296,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":297,"author":{"gitId":"ShawnYip-Au"},"content":"        return s.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":298,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":299,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":300,"author":{"gitId":"ShawnYip-Au"},"content":"    private static String convertStringToFileFormat(String line) {","lastModifiedDate":"2023-01-26"},{"lineNumber":301,"author":{"gitId":"ShawnYip-Au"},"content":"        String task, status, details;","lastModifiedDate":"2023-01-26"},{"lineNumber":302,"author":{"gitId":"ShawnYip-Au"},"content":"        line \u003d line.substring(line.indexOf(\"[\") + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":303,"author":{"gitId":"ShawnYip-Au"},"content":"        task \u003d line.substring(0, line.indexOf(\"]\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":304,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":305,"author":{"gitId":"ShawnYip-Au"},"content":"        line \u003d line.substring(line.indexOf(\"[\") + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":306,"author":{"gitId":"ShawnYip-Au"},"content":"        status \u003d line.substring(0, line.indexOf(\"]\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":307,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":308,"author":{"gitId":"ShawnYip-Au"},"content":"        details \u003d line.substring(line.indexOf(\"]\") + 1).trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":309,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":310,"author":{"gitId":"ShawnYip-Au"},"content":"        return task + \"|\" + status + \"|\" + details;","lastModifiedDate":"2023-01-26"},{"lineNumber":311,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":312,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":313,"author":{"gitId":"ShawnYip-Au"},"content":"    private static void printConfirmation() {","lastModifiedDate":"2023-01-18"},{"lineNumber":314,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"\\nYAY! Task Added:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":315,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":316,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":317,"author":{"gitId":"ShawnYip-Au"},"content":"    private static void printTotalTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":318,"author":{"gitId":"ShawnYip-Au"},"content":"        System.out.println(\"Now you have \" + Task.count  + \" tasks in the list.\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":319,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":320,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":321,"author":{"gitId":"ShawnYip-Au"},"content":"    private static void replaceFileContents(Path path, String newContents) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":322,"author":{"gitId":"ShawnYip-Au"},"content":"        Files.writeString(path, newContents);","lastModifiedDate":"2023-01-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ShawnYip-Au":316,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ShawnYip-Au":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"    private String startTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"    private String endTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    public Event(String s, String startTime, String endTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"        super(s);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    public Event(Boolean isTaskDone, String taskDetails, String taskDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskDetails);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isTaskDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"            this.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"        this.startTime \u003d taskDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"        this.endTime \u003d taskDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!taskDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[E][ ] \" + this.taskName","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"                + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[E][X] \" + this.taskName ","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"            + \" (from: \" + this.startTime + \" to: \" + this.endTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":31}},{"path":"src/main/java/EventType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"public enum EventType {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":3}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"    public static Integer count \u003d 0;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"    protected  Boolean taskDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"    protected Task(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        Task.count++;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"    public void markUnDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        this.taskDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!taskDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[X] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":30}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"    public ToDo(String s) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"        super(s);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"    public ToDo(Boolean isTaskDone, String taskDetails) {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"        super(taskDetails);","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ShawnYip-Au"},"content":"        if (isTaskDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ShawnYip-Au"},"content":"            this.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"ShawnYip-Au"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ShawnYip-Au"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ShawnYip-Au"},"content":"        if (!taskDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ShawnYip-Au"},"content":"            return \"[T][ ] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ShawnYip-Au"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ShawnYip-Au"},"content":"        return \"[T][X] \" + this.taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ShawnYip-Au"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ShawnYip-Au"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ShawnYip-Au"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShawnYip-Au"},"content":"todo math","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ShawnYip-Au"},"content":"deadline englist /by 9pm Today","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ShawnYip-Au"},"content":"event volunteer /from 8am /to 10pm on Sat","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ShawnYip-Au"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ShawnYip-Au"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ShawnYip-Au"},"content":"unmark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ShawnYip-Au"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ShawnYip-Au":8}}]
