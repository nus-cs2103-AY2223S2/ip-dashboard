[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sheemo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sheemo":1,"-":40}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 duke could be found in your PATH.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"@rem Get duke-line arguments, handling Windows variants","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"@rem Slurp the duke line arguments.","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"@rem Setup the duke line","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sheemo":4,"-":99}},{"path":"src/main/java/duke/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":" * Wrapper class that can store either a LocalDate object or","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":" * a LocalDateTime object but not both.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"public class Date {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    private LocalDate localDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    private LocalDateTime localDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Date object using a LocalDate.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     * @param localDate LocalDate object","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    public Date(LocalDate localDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Date object using a LocalDateTime.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     * @param localDateTime LocalDateTime object","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    public Date(LocalDateTime localDateTime) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"     * Returns whether Date object is storing a LocalDate object.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"     * @return True if instance is storing a LocalDate object and false otherwise","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    public boolean isDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"        return this.localDate !\u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"     * Returns whether Date object is storing a LocalDateTime object.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"     * @return True if instance is storing a LocalDateTime object and false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"    public boolean isDateTime() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"        return !isDate();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"     * Returns a formatted date string according to what the instance is storing.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"     * e.g. 2023-02-01 if it is storing a LocalDate object","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"     * e.g. 2023-02-01 17:00 if it is storing a LocalDateTime object.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"     * @return Formatted date string according to the above specifications","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"    public String asFileDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"        return this.isDate()","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"                ? this.localDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"                : this.localDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"     * Returns a String object that is formatted depending on what is being stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"     * e.g. If it is storing a LocalDate object with value 2023-02-01, it will return Feb 1 2023","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"     * e.g. If it is storing a LocalDateTime object with value 2023-02-01 17:00, it will return Feb 1 2023 17:00","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"     * @return A string representation of the Date object according to the above specifications.","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"        return this.isDate()","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"                ? this.localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"                : this.localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":77}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Class that can store a Deadline task, which has an additional \"by\" field.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    protected Date by;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Deadline object.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     * @param description Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     * @param by Task deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    public Deadline(String description, Date by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"     * @return A String object that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        return \"deadline|\" + super.getFileRepresentation() + \"|\" + this.by.asFileDate();","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task to be printed on the screen.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"     * @return String representation for a Deadline object.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":39}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":" * Driver code for the Duke project.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"public class Duke {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private static final String SAVE_PATH \u003d \"./tasklist.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     * Constructor for Duke object.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     * @param filePath Relative path to saved TaskList file.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTasklistFromFile());","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"            // ui.showLoadingError();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"        Duke duke \u003d new Duke(SAVE_PATH);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"        duke.run();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"     * Runs the Duke instance and begins the command loop.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"    public void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"        this.ui.greet();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"        commandLoop();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"     * Takes commands repeatedly and executes them until","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"     * \"bye\" is supplied.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"    public void commandLoop() {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"                // ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"                // ui.showError(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"            } finally {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"                // ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"        // printInBanner(\"Otsunakiri~\", \"Byebye!~\");","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":66}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Parent Exception to all custom exceptions for the Duke project.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a DukeException with an optional message.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        super(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":22}},{"path":"src/main/java/duke/EmptyBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception to be thrown when parts of a command are missing.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class EmptyBodyException extends DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an EmptyBodyException with optional message.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"     * @param message Exception message","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public EmptyBodyException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an EmptyBodyException.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    public EmptyBodyException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        super();","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Sheemo":22}},{"path":"src/main/java/duke/ErrorEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Enum to represent error types. To be deprecated.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public enum ErrorEnum {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    INVALID_INDEX, ILLEGAL_ARGUMENT, EMPTY_BODY, UNKNOWN_INPUT, FILE_SAVE_ERROR, FILE_LOAD_ERROR","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Sheemo":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Class that can store a Event task, which has additional \"from\" and \"to\" parameters.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    protected Date from;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    protected Date to;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an Event class.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     * @param description Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"     * @param from Task start time","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"     * @param to Task end time","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    public Event(String description, Date from, Date to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"     * @return A String object that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        return \"event|\" + super.getFileRepresentation()","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"                + \"|\" + this.from.asFileDate()","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"                + \"|\" + this.to.asFileDate();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task to be printed on the screen.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * @return String representation for an Event object.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"                + \" (from: \" + this.from","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"                + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":46}},{"path":"src/main/java/duke/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception that is similar in use to IndexOutOfBoundsException.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an InvalidIndexException with optional message.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an InvalidIndexException.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        super();","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Sheemo":22}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":" * Class containing methods to parse a Duke command.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    private static final Set\u003cString\u003e DELIMITERS \u003d new HashSet\u003c\u003e(Arrays.asList(\"/from\", \"/to\", \"/by\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     * Parses a String representing a Duke command.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     * @param fullCommand String representing a Duke command","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     * @return Command object if it was successfully parsed","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException If user has the file delimiter | in the input or if an invalid command was supplied","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"        if (fullCommand.contains(\"|\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"            System.out.println(\"Neeeee fuzakenjaNEYOO\\nDon\u0027t use the | character da yo\");","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"        Iterator\u003cString\u003e args \u003d Arrays.stream(fullCommand.split(\" \")).iterator();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"        if (!args.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"            return Command.none();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"        String cmdWord \u003d args.next();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"        switch (cmdWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"            case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"                if (!args.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"                    throw new DukeException(\"WAKANDEYO!!! \u003e:(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"                int idx;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"                    idx \u003d Integer.parseInt(args.next());","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"                    throw new DukeException(\"WAKANDEYO!!! \u003e:(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"                return new MarkCommand(cmdWord.equals(\"mark\"), idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"                String name \u003d copyUntilDelimiter(args);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"                return new AddCommand(new Todo(name));","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"                name \u003d copyUntilDelimiter(args, \"/by\");","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"                Date by;","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"                    by \u003d parseDate(copyUntilDelimiter(args));","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"                    throw new DukeException(\"WAKANDEYO!!!! \u003e:(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"                return new AddCommand(new Deadline(name, by));","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"            case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"                name \u003d copyUntilDelimiter(args, \"/from\");","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"                Date from;","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"                Date to;","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Sheemo"},"content":"                    from \u003d parseDate(copyUntilDelimiter(args, \"/to\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"                    to \u003d parseDate(copyUntilDelimiter(args));","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"                    throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"Sheemo"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"                return new AddCommand(new Event(name, from, to));","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"Sheemo"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"Sheemo"},"content":"                if (!args.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"Sheemo"},"content":"                    throw new DukeException(\"WAKANDEYO!!! \u003e:(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"Sheemo"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"Sheemo"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"Sheemo"},"content":"                    idx \u003d Integer.parseInt(args.next());","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"Sheemo"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"Sheemo"},"content":"                    throw new DukeException(\"WAKANDEYO!!! \u003e:(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"Sheemo"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"Sheemo"},"content":"                return new DeleteCommand(idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"Sheemo"},"content":"            case \"find\":","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"Sheemo"},"content":"                if (!args.hasNext()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"Sheemo"},"content":"                    throw new DukeException(\"WAKANDEYO!!! \u003e:(\");","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"Sheemo"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"Sheemo"},"content":"                String keyword \u003d args.next();","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"Sheemo"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"Sheemo"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"Sheemo"},"content":"                throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"Sheemo"},"content":"                // printErrorMessage(ErrorEnum.UNKNOWN_INPUT);","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"Sheemo"},"content":"     * Creates a space-separated String from an Iterator of Strings of all elements that come before a delimiter.","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"Sheemo"},"content":"     * e.g. For the Iterator {\"1\", \"2\", \"3\", \"4\"} and delimiter \"3\", the function returns \"1 2\"","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"Sheemo"},"content":"     * @param args Iterator on a List of Strings","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"Sheemo"},"content":"     * @param delimiter Delimiter to stop copying before","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"Sheemo"},"content":"     * @return String object containing space-separated values","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException If supplied delimiter isn\u0027t in the available list of delimiters","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"Sheemo"},"content":"    private static String copyUntilDelimiter(Iterator\u003cString\u003e args, String delimiter) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"Sheemo"},"content":"        if (!DELIMITERS.contains(delimiter)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"Sheemo"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"Sheemo"},"content":"        List\u003cString\u003e words \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"Sheemo"},"content":"        String curWord;","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"Sheemo"},"content":"        while (args.hasNext()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"Sheemo"},"content":"            curWord \u003d args.next();","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"Sheemo"},"content":"            if (curWord.equals(delimiter)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"Sheemo"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"Sheemo"},"content":"            words.add(curWord);","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"Sheemo"},"content":"        return String.join(\" \", words);","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"Sheemo"},"content":"     * Creates a space-separated String from an Iterator of Strings which contains all","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"Sheemo"},"content":"     * Strings after the Iterators current position.","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"Sheemo"},"content":"     * @param args Iterator on a list of Strings","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"Sheemo"},"content":"     * @return String object containing space-separated values","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"Sheemo"},"content":"    private static String copyUntilDelimiter(Iterator\u003cString\u003e args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"Sheemo"},"content":"        List\u003cString\u003e words \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"Sheemo"},"content":"        String curWord;","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"Sheemo"},"content":"        while (args.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"Sheemo"},"content":"            curWord \u003d args.next();","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"Sheemo"},"content":"            words.add(curWord);","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"Sheemo"},"content":"        return String.join(\" \", words);","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"Sheemo"},"content":"     * Determines if a String is parsable as a LocalDateTime object.","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"Sheemo"},"content":"     * @param args String maybe containing a LocalDateTime","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"Sheemo"},"content":"     * @return True if the String is parsable as a LocalDateTime object and false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"Sheemo"},"content":"    private static boolean isDateTime(String args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"Sheemo"},"content":"            LocalDateTime.parse(args, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"Sheemo"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"Sheemo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"Sheemo"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"Sheemo"},"content":"     * Determines if a String is parsable as a LocalDate object.","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"Sheemo"},"content":"     * @param args String maybe containing a LocalDate","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"Sheemo"},"content":"     * @return True if the String is parsable as a LocalDateTime object and false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"Sheemo"},"content":"    private static boolean isDate(String args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":182,"author":{"gitId":"Sheemo"},"content":"            LocalDate.parse(args, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"Sheemo"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":184,"author":{"gitId":"Sheemo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":185,"author":{"gitId":"Sheemo"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"Sheemo"},"content":"     * Parses a String maybe containing a LocalDate or LocalDateTime.","lastModifiedDate":"2023-02-01"},{"lineNumber":191,"author":{"gitId":"Sheemo"},"content":"     * The string is parsable as a LocalDate if it is of the format yyyy-MM-dd.","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"Sheemo"},"content":"     * The string is parsable as a LocalDateTime if it is of the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"Sheemo"},"content":"     * @param arg String maybe containing a LocalDate or LocalDateTime.","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"Sheemo"},"content":"     * @return Date object if successfully parsed.","lastModifiedDate":"2023-02-01"},{"lineNumber":196,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException If supplied String cannot be parsed according to the specifications above.","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":198,"author":{"gitId":"Sheemo"},"content":"    public static Date parseDate(String arg) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":199,"author":{"gitId":"Sheemo"},"content":"        if (isDateTime(arg)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":200,"author":{"gitId":"Sheemo"},"content":"            return new Date(LocalDateTime.parse(arg, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2023-02-01"},{"lineNumber":201,"author":{"gitId":"Sheemo"},"content":"        } else if (isDate(arg)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":202,"author":{"gitId":"Sheemo"},"content":"            return new Date(LocalDate.parse(arg, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"Sheemo"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":204,"author":{"gitId":"Sheemo"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":206,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":207,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":207}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":" * Class with utilities to save/load a Duke TaskList to/from a file","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    private String filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Storage object.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"     * @param filePath Relative path to saved TaskList file","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"     * Sets the filePath to a new filePath.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     * @param filePath Relative path to saved TaskList file","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    public void changeFilePath(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"     * Loads a TaskList from supplied file.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"     * @return ArrayList of Task objects that can be passed into a TaskList constructor.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException If the file was corrupted, or could not be read.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"    public ArrayList\u003cTask\u003e loadTasklistFromFile() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"            return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        List\u003cString\u003e lines;","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"            lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"            System.out.println(\"Something went wrong reading the file.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"            return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        // TODO: Exception Handling","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"            List\u003cString\u003e args \u003d List.of(line.split(\"\\\\|\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"            String type \u003d args.get(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"            String isDone \u003d args.get(1);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"            String description \u003d args.get(2);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"            Task task;","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"            switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"                    Date by \u003d Parser.parseDate(args.get(3));","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"                    task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"                case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"                    Date from \u003d Parser.parseDate(args.get(3));","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"                    Date to \u003d Parser.parseDate(args.get(4));","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"                    task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"                default:","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"                    System.out.println(\"Something went wrong\");","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"                    throw new DukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"            if (isDone.equals(\"true\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"                task.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Sheemo"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"        return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"     * Saves a TaskList to the supplied file.","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"Sheemo"},"content":"     * @param tasks TaskList to save.","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Sheemo"},"content":"    public void saveTasklistToFile(TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"Sheemo"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"Sheemo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"Sheemo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"Sheemo"},"content":"            sb.append(tasks.get(i).getFileRepresentation()).append(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"Sheemo"},"content":"            Files.write(path, sb.toString().getBytes());","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"Sheemo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"Sheemo"},"content":"            System.out.println(\"Something went wrong\");","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":107}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Abstract class representing a Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     * @param description Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"     * Marks a Task as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     * Marks a Task as not done.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * Returns a string representation of a Task that can be saved into a file.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     * Subclasses must override this to fulfil the format of the save file.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"     * @return A String representation of a Task taht can be saved into a file.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"        return this.isDone + \"|\" + this.description;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"     * Returns a string representation of a Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"     * @return String representation of a Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"     * Returns true if task description contains a certain keyword.","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"     * @param keyword Keyword to search for in task description","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"     * @return true if description contains keyword and false otherwise","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"    public boolean doesDescriptionContain(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Sheemo":66}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a TaskList object with an existing ArrayList.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     * @param existing Existing list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    public TaskList(ArrayList\u003cTask\u003e existing) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        this.taskList \u003d existing;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a new TaskList object.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     * Gets the i-th Task in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     * @param idx Index of the Task to retrieve","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     * @return Requested task","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     * @throws IndexOutOfBoundsException If supplied index is invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    public Task get(int idx) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        return taskList.get(idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     * @param task Task to add","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"     * Deletes a Task from the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"     * @param idx Index of the task to delete","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"     * @return The deleted Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"    public Task deleteTask(int idx) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"        if (idx \u003c 0 || idx \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"        return taskList.remove(idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"        // printInBanner(\"Don\u0027t need this trash anymore yo~\\n\" + task + getTasklistSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"     * Gets the size of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"     * @return An int representing the size of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"        // return \"\\nNow you have \" + taskList.size() + \" items on your list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"    public List\u003cTask\u003e findAllTasksWithKeyword(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"        return this.taskList.stream().filter(task -\u003e task.doesDescriptionContain(keyword)).collect(Collectors.toList());","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"     * Public getter for the ArrayList.","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"     * @return The ArrayList of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":83}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Class that can store a Todo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Todo object.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"     * @param description Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"     * @return A String object that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        return \"todo|\" + super.getFileRepresentation();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task to be printed on the screen.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     * @return String representation for a Deadline object.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Sheemo":35}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":" * Class that deals with printing messages to console.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private static final String BANNER_LINE \u003d \"_\".repeat(30);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    private static final String LOGO \u003d \" ,ggg, ,ggggggg,                                                               ,ggg,\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"                                     + \"dP\\\"\\\"Y8,8P\\\"\\\"\\\"\\\"\\\"Y8b              ,dPYb,                                         dP\\\"\\\"8I\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"                                     + \"Yb, `8dP\u0027     `88              IP\u0027`Yb                                        dP   8\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"                                     + \" `\\\"  88\u0027       88              I8  8I      gg               gg              dP    88\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"                                     + \"     88        88              I8  8bgg,   \\\"\\\"               \\\"\\\"             ,8\u0027    88\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"                                     + \"     88        88    ,gggg,gg  I8 dP\\\" \\\"8   gg    ,gggggg,   gg             d88888888   gg     gg    ,gggg,gg   ,ggg,,ggg,,ggg,    ,ggg,\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"                                     + \"     88        88   dP\\\"  \\\"Y8I  I8d8bggP\\\"   88    dP\\\"\\\"\\\"\\\"8I   88       __   ,8\\\"     88   I8     8I   dP\\\"  \\\"Y8I  ,8\\\" \\\"8P\\\" \\\"8P\\\" \\\"8,  i8\\\" \\\"8i\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"                                     + \"     88        88  i8\u0027    ,8I  I8P\u0027 \\\"Yb,   88   ,8\u0027    8I   88      dP\\\"  ,8P      Y8   I8,   ,8I  i8\u0027    ,8I  I8   8I   8I   8I  I8, ,8I\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"                                     + \"     88        Y8,,d8,   ,d8b,,d8    `Yb,_,88,_,dP     Y8,_,88,_    Yb,_,dP       `8b,,d8b, ,d8I ,d8,   ,d8b,,dP   8I   8I   Yb, `YbadP\u0027\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"                                     + \"     88        `Y8P\\\"Y8888P\\\"`Y888P      Y88P\\\"\\\"Y88P      `Y88P\\\"\\\"Y8     \\\"Y8P\\\"         `Y8P\\\"\\\"Y88P\\\"888P\\\"Y8888P\\\"`Y88P\u0027   8I   8I   `Y8888P\\\"Y888\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"                                     + \"                                                                                            ,d8I\u0027\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"                                     + \"                                                                                          ,dP\u00278I\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"                                     + \"                                                                                         ,8\\\"  8I\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"                                     + \"                                                                                         I8   8I\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"                                     + \"                                                                                         `8, ,8I\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"                                     + \"                                                                                          `Y8P\\\"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a UI object.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"     * Prints the logo.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"    public void printLogo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"     * Greets the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"    public void greet() {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"        printLogo();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"        printInBanner(\"Greetings humans~\", \"Tis I! Nakiri Ayame!\", \"What can I do for you?\");","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"     * Reads a command from the user and returns it.","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"     * @return A String object that is the command from the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        return input.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"     * Pretty prints some text.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"     * @param messages Strings to pretty print.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"    public void printInBanner(String... messages) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"        System.out.println(BANNER_LINE);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"        for (String m : messages) {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"            System.out.println(m);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"        System.out.println(BANNER_LINE);","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"    private void printErrorMessage(ErrorEnum e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"        switch (e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"            case INVALID_INDEX:","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"                printInBanner(\"Can\u0027t do that yo~\\nInvalid index supplied~\");","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"            case EMPTY_BODY:","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"                printInBanner(\"What do you wanna do yo~\");","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"            case FILE_SAVE_ERROR:","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"                printInBanner(\"Yabai! Could not save to file dayo...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"            case FILE_LOAD_ERROR:","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"                printInBanner(\"Yabai! Could not load from file dayo... dousyou...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Sheemo"},"content":"            case ILLEGAL_ARGUMENT:","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"                printInBanner(\"Wakandeyo!!! \u003e:(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":90}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private final Task task;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        storage.saveTasklistToFile(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":20}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":19}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    protected String cmdWord;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private static final Command NONE \u003d new NoCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    private static class NoCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        public NoCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    public static Command none() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        return NONE;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private final int idx;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        Task task \u003d tasks.deleteTask(this.idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        storage.saveTasklistToFile(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":20}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    String keyword;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        List\u003cTask\u003e filtered \u003d tasks.findAllTasksWithKeyword(this.keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        StringBuilder toPrint \u003d new StringBuilder();","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        for (int i \u003d 0; i \u003c filtered.size(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"            if (i !\u003d 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"                toPrint.append(\"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"            toPrint.append(i + 1).append(\": \").append(filtered.get(i));","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        ui.printInBanner(toPrint.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Sheemo":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        StringBuilder toPrint \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"            if (i !\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"                toPrint.append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"            toPrint.append(i + 1).append(\": \").append(tasks.get(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        ui.printInBanner(toPrint.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":22}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    private final boolean isMarked;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private final int idx;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    public MarkCommand(boolean isMarked, int idx) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        this.idx \u003d idx - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        if (this.isMarked) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"            tasks.get(this.idx).markAsDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"            ui.printInBanner(\"Yatta! You have done this task!\", tasks.get(this.idx).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"            tasks.get(this.idx).unmarkAsDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"            ui.printInBanner(\"Neee! Are you kidding me?\", tasks.get(this.idx).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"        storage.saveTasklistToFile(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":28}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    private static final String TEST \u003d \"test\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    private static final Date DATE \u003d new Date(LocalDate.now());","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    public void markAsDone_givenInstance_correctlySets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"        Task todo \u003d new Todo(TEST);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        Task deadline \u003d new Deadline(TEST, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        Task event \u003d new Event(TEST, DATE, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        event.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        assertTrue(event.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    public void markAsDone_givenDoneInstance_correctlySets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"        Task todo \u003d new Todo(TEST);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        Task deadline \u003d new Deadline(TEST, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"        Task event \u003d new Event(TEST, DATE, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        deadline.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"        event.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"        event.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        assertTrue(event.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    public void unmarkAsDone_givenInstance_correctlySets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        Task todo \u003d new Todo(TEST);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"        Task deadline \u003d new Deadline(TEST, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"        Task event \u003d new Event(TEST, DATE, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"        deadline.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"        event.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        todo.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"        deadline.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"        event.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"        assertFalse(event.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"    public void unmarkAsDone_givenUndoneInstance_correctlySets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"        Task todo \u003d new Todo(TEST);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"        Task deadline \u003d new Deadline(TEST, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"        Task event \u003d new Event(TEST, DATE, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"        todo.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"        deadline.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"        event.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"        assertFalse(event.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Sheemo":76}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    public void getFileRepresentation_givenInstance_correctlyGets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"        Todo todo \u003d new Todo(\"\");  // Empty description","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|false|\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|true|\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"        todo \u003d new Todo(\"oneword\"); // One word description","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|false|oneword\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|true|oneword\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        todo \u003d new Todo(\"this is many many many many many many many many words\"); // Many word description","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|false|this is many many many many many many many many words\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|true|this is many many many many many many many many words\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    public void toString_givenInstance_correctlyGets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        Todo todo \u003d new Todo(\"\");  // Empty description","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"[T][ ] \", todo.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Sheemo":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"todo sign up for dance lesson","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"todo","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"todo todo todo","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"deadline talk to management","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"deadline talk to management /by tuesday","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"deadline talk to management /by","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"deadline talk to management /by /by /by","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"deadline /by monday","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"event 3d live /from 2pm /to 4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"event 3d live /to 4pm /from 2pm","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"event 3d live /from 2pm","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"event 3d live /to 4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"event 3d live","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"event /from /from /from /from /from /to /to /to /to /to","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"mark 2","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"mark","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"unmark 2","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"list","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Sheemo":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sheemo":1,"-":20}}]
