[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sheemo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sheemo":16,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"# nAkIri 😈","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"nAkIri is a **simple app to keep track of tasks**.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"# Quick start","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"1. Download the jar file from [here](https://github.com/Sheemo/ip).","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"2. In the folder where the jar file is downloaded, open the terminal.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"   1. Alternatively, open the terminal and enter `cd [the folder where the jar file is]`.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"3. Enter `java -jar ip.jar`.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"4. Enjoy! 😀","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"# Features","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"💡 Notes about the command format","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"  e.g. in `todo NAME`, `NAME` is a parameter which can be used as `todo My homework`.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"- Parameters in square brackets are optional.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"  e.g. in `deadline NAME /by DATE [TIME]`, `TIME` is an optional parameter.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"Exits the program.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"Shows a list of the saved tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"### Adding a TODO task: `todo`","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"Adds a TODO task to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `todo NAME`","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"- `todo Have fun`","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"- `todo Watch Ayame\u0027s streams`","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"### Adding a task with deadline: `deadline`","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"Adds a task with deadline to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `deadline NAME /by DATE [TIME]`","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"- The date must be in the format `yyyy-MM-dd`.","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"- The time, if specified, must in the format `HH:mm`.","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"- `deadline CS2103T iP /by 2023-02-17`","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"- `deadline CS2103T iP /by 2023-02-17 23:59`","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"### Adding an event: `event`","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"Adds an event to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `event NAME /from DATE [TIME] /to DATE [TIME]`","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"- The dates must be in the format `yyyy-MM-dd`.","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"- The times, if specified, must in the format `HH:mm`.","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"- `event Nakiri Ayame 4th Anniversary Live /from 2022-09-03 20:00 /to 2022-09-03 21:30`","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"### Delete a task: `delete`","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `delete INDEX`","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"- The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"Sheemo"},"content":"- `list` followed by `delete 2` deletes the 2nd task in the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"### Find tasks by keyword: `find`","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"Sheemo"},"content":"Finds tasks that contain a specified keyword","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `find KEYWORD`","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"Sheemo"},"content":"- If multiple keywords are specified, it will try to search for the keywords exactly.","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"Sheemo"},"content":"  eg. `find bake cake` would return `bake cake with susan` but not `bake a cake`.","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"Sheemo"},"content":"### Mark task as completed: `mark`","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"Sheemo"},"content":"Marks a task/event as completed","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `mark INDEX`","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"Sheemo"},"content":"- Marks the task at the specified `INDEX` as completed.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"Sheemo"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"Sheemo"},"content":"- The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"Sheemo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"Sheemo"},"content":"- `list` followed by `mark 2` marks the 2nd task in the task list as completed.","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"Sheemo"},"content":"### Unmark task as completed: `unmark`","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"Sheemo"},"content":"Unmarks a task/event as completed","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"Sheemo"},"content":"\u003e Format: `unmark INDEX`","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"Sheemo"},"content":"- Unmarks the task at the specified `INDEX` as completed.","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"Sheemo"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"Sheemo"},"content":"- The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"Sheemo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"Sheemo"},"content":"- `list` followed by `unmark 2` unmarks the 2nd task in the task list as completed.","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"Sheemo"},"content":"### Saving the data","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"Sheemo"},"content":"nAkIri data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually 🙂","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"Sheemo"},"content":"### Editing the data file","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"Sheemo"},"content":"❗ **Caution:** If your changes to the data file makes its format invalid, nAkIri will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"Sheemo"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"Sheemo"},"content":"# Command summary","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"Sheemo"},"content":"| Action   | Format, Examples                                                                                      |","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"Sheemo"},"content":"|----------|-------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"Sheemo"},"content":"| Quit     | `bye`                                                                                                 |","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"Sheemo"},"content":"| Todo     | `todo NAME`\u003cbr\u003eeg. `todo homework`                                                                    |","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"Sheemo"},"content":"| Deadline | `deadline NAME /by DATE [TIME]`\u003cbr\u003eeg. `deadline homework /by 2023-02-17`                             |","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"Sheemo"},"content":"| Event    | `event NAME /from DATE [TIME] /to DATE [TIME]`\u003cbr\u003eeg. `event 4th Fes /from 2023-03-18 /to 2023-03-19` |","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"Sheemo"},"content":"| Delete   | `delete INDEX`\u003cbr\u003eeg. `delete 2`                                                                      |","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"Sheemo"},"content":"| Find     | `find KEYWORD`\u003cbr\u003eeg. `find CS2103T`                                                                  |","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"Sheemo"},"content":"| Mark     | `mark INDEX`\u003cbr\u003eeg. `mark 2`                                                                          |","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"Sheemo"},"content":"| Unmark   | `unmark INDEX`\u003cbr\u003eeg. `unmark 2`                                                                      |","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"Sheemo"},"content":"| List     | `list`                                                                                                |","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Sheemo":128,"-":14}},{"path":"src/main/java/duke/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":" * Wrapper class that can store either a LocalDate object or","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":" * a LocalDateTime object but not both.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"public class Date {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    private LocalDate localDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    private LocalDateTime localDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Date object using a LocalDate.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     * @param localDate LocalDate object","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    public Date(LocalDate localDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        this.localDate \u003d localDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Date object using a LocalDateTime.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     * @param localDateTime LocalDateTime object","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    public Date(LocalDateTime localDateTime) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"     * Returns whether Date object is storing a LocalDate object.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"     * @return True if instance is storing a LocalDate object and false otherwise","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    public boolean isDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"        return this.localDate !\u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"     * Returns whether Date object is storing a LocalDateTime object.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"     * @return True if instance is storing a LocalDateTime object and false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"    public boolean isDateTime() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"        return !isDate();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"     * Returns a formatted date string according to what the instance is storing.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"     * e.g. 2023-02-01 if it is storing a LocalDate object","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"     * e.g. 2023-02-01 17:00 if it is storing a LocalDateTime object.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"     * @return Formatted date string according to the above specifications","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"    public String asFileDate() {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"        return this.isDate()","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"                ? this.localDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"                : this.localDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"     * Returns a String object that is formatted depending on what is being stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"     * e.g. If it is storing a LocalDate object with value 2023-02-01, it will return Feb 1 2023","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"     * e.g. If it is storing a LocalDateTime object with value 2023-02-01 17:00, it will return Feb 1 2023 17:00","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"     * @return A string representation of the Date object according to the above specifications.","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"        return this.isDate()","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"                ? this.localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"                : this.localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":77}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Class that can store a Deadline task, which has an additional \"by\" field.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    protected Date by;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Deadline object.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     * @param description Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     * @param by Task deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    public Deadline(String description, Date by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"     * @return A String object that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        return \"deadline|\" + super.getFileRepresentation() + \"|\" + this.by.asFileDate();","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task to be printed on the screen.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"     * @return String representation for a Deadline object.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":39}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        dialog.setBackground(new Background(new BackgroundFill(Color.rgb(195, 177, 225),","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"                                            new CornerRadii(30), Insets.EMPTY)));","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"        displayPicture.setPickOnBounds(true);","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        displayPicture.setClip(new Circle(45.0, 45.0, 45.0));","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"    private void flip() {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"    public static DialogBox getPoyoyoDialog(String text, Image img) {","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"    public static DialogBox getNakiriDialog(String text, Image img) {","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"        db.flip();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"        return db;","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Sheemo":69}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class Duke {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    private static final String SAVE_PATH \u003d \"./tasklist.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public Duke() {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        this.storage \u003d new Storage(SAVE_PATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTasklistFromFile());","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"     * Returns a response to a command given by the user.","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"     * @param input Command given by the user.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"     * @return The output of running the command.","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"            c.execute(this.tasks, this.storage);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"            return c.getOutput();","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":36}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Class that can store an Event task, which has additional \"from\" and \"to\" parameters.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    protected Date from;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    protected Date to;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an Event class.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     * @param description Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"     * @param from Task start time","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"     * @param to Task end time","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    public Event(String description, Date from, Date to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"     * @return A String object that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        return \"event|\" + super.getFileRepresentation()","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"                + \"|\" + this.from.asFileDate()","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"                + \"|\" + this.to.asFileDate();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task to be printed on the screen.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * @return String representation for an Event object.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"                + \" (from: \" + this.from","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"                + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":46}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"public class Launcher {","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Sheemo":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"            ap.setId(\"background\");","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"            stage.setTitle(\"nAkIri\");","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"            stage.show();","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Sheemo":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Poyoyo.jpg\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Nakiri.jpg\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"                DialogBox.getPoyoyoDialog(input, userImage),","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"                DialogBox.getNakiriDialog(response, dukeImage)","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Sheemo":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.EmptyBodyException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.MissingIndexException;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.MissingKeywordException;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":" * Class containing methods to parse a Duke command.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    private static final Set\u003cString\u003e DELIMITERS \u003d new HashSet\u003c\u003e(Arrays.asList(\"/from\", \"/to\", \"/by\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"     * Parses a String representing a Duke command.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"     * @param fullCommand String representing a Duke command","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * @return Command object if it was successfully parsed","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException If user has the file delimiter | in the input or if an invalid command was supplied","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        if (fullCommand.contains(\"|\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"            throw new DukeException(\"Neeeee fuzakenjaNEYOO\\nDon\u0027t use the | character da yo!!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"        Iterator\u003cString\u003e args \u003d Arrays.stream(fullCommand.split(\" \")).iterator();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        if (!args.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"            return Command.none();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"        String cmdWord \u003d args.next();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"        switch (cmdWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"            case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"                return parseMark(args, cmdWord);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"                return parseTodo(args);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"                return parseDeadline(args);","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"            case \"event\":","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"                return parseEvent(args);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"                return parseDelete(args);","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"            case \"find\":","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"                return parseFind(args);","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"            default:","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"     * Parses the \"mark\" command and returns the corresponding Command object.","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"     * @param args Tokens of the command as strings","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"     * @param cmdWord The name of the command; determines if it is \"mark\" or \"unmark\"","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"     * @return The parsed Command object","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException if the command is unsuccessfully parsed.","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"    private static Command parseMark(Iterator\u003cString\u003e args, String cmdWord) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"Sheemo"},"content":"        if (!args.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"Sheemo"},"content":"        int idx;","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"            idx \u003d Integer.parseInt(args.next());","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"Sheemo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"Sheemo"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"Sheemo"},"content":"        return new MarkCommand(cmdWord.equals(\"mark\"), idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"Sheemo"},"content":"     * Parses the \"todo\" command and returns the corresponding Command object.","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"Sheemo"},"content":"     * @param args Tokens of the command as strings","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"Sheemo"},"content":"     * @return The parsed Command object","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException if the command is unsuccessfully parsed.","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"Sheemo"},"content":"    private static Command parseTodo(Iterator\u003cString\u003e args) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"Sheemo"},"content":"        String name \u003d copyUntilDelimiter(args);","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"Sheemo"},"content":"        if (name.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"Sheemo"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"Sheemo"},"content":"        return new AddCommand(new Todo(name));","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"Sheemo"},"content":"     * Parses the \"deadline\" command and returns the corresponding Command object.","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"Sheemo"},"content":"     * @param args Tokens of the command as strings","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"Sheemo"},"content":"     * @return The parsed Command object","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException if the command is unsuccessfully parsed.","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"Sheemo"},"content":"    private static Command parseDeadline(Iterator\u003cString\u003e args) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"Sheemo"},"content":"        String name \u003d copyUntilDelimiter(args, \"/by\");","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"Sheemo"},"content":"        if (name.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"Sheemo"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"Sheemo"},"content":"        Date by \u003d parseDate(copyUntilDelimiter(args));;","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"Sheemo"},"content":"        return new AddCommand(new Deadline(name, by));","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"Sheemo"},"content":"     * Parses the \"event\" command and returns the corresponding Command object.","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"Sheemo"},"content":"     * @param args Tokens of the command as strings","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"Sheemo"},"content":"     * @return The parsed Command object","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException if the command is unsuccessfully parsed.","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"Sheemo"},"content":"    private static Command parseEvent(Iterator\u003cString\u003e args) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"Sheemo"},"content":"        String name \u003d copyUntilDelimiter(args, \"/from\");","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"Sheemo"},"content":"        if (name.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"Sheemo"},"content":"            throw new EmptyBodyException();","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"Sheemo"},"content":"        Date from \u003d parseDate(copyUntilDelimiter(args, \"/to\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"Sheemo"},"content":"        Date to \u003d parseDate(copyUntilDelimiter(args));","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"Sheemo"},"content":"        return new AddCommand(new Event(name, from, to));","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"Sheemo"},"content":"     * Parses the \"delete\" command and returns the corresponding Command object.","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"Sheemo"},"content":"     * @param args Tokens of the command as strings","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"Sheemo"},"content":"     * @return The parsed Command object","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException if the command is unsuccessfully parsed.","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"Sheemo"},"content":"    private static Command parseDelete(Iterator\u003cString\u003e args) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"Sheemo"},"content":"        if (!args.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"Sheemo"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"Sheemo"},"content":"        int idx;","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"Sheemo"},"content":"            idx \u003d Integer.parseInt(args.next());","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"Sheemo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"Sheemo"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"Sheemo"},"content":"        return new DeleteCommand(idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"Sheemo"},"content":"     * Parses the \"find\" command and returns the corresponding Command object.","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"Sheemo"},"content":"     * @param args Tokens of the command as strings","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"Sheemo"},"content":"     * @return The parsed Command object","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException if the command is unsuccessfully parsed.","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"Sheemo"},"content":"    private static Command parseFind(Iterator\u003cString\u003e args) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"Sheemo"},"content":"        if (!args.hasNext()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":177,"author":{"gitId":"Sheemo"},"content":"            throw new MissingKeywordException();","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":179,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":180,"author":{"gitId":"Sheemo"},"content":"        String keyword \u003d args.next();","lastModifiedDate":"2023-02-07"},{"lineNumber":181,"author":{"gitId":"Sheemo"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":182,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":184,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"Sheemo"},"content":"     * Creates a space-separated String from an Iterator of Strings of all elements that come before a delimiter.","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"Sheemo"},"content":"     * e.g. For the Iterator {\"1\", \"2\", \"3\", \"4\"} and delimiter \"3\", the function returns \"1 2\"","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"Sheemo"},"content":"     * @param args Iterator on a List of Strings","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"Sheemo"},"content":"     * @param delimiter Delimiter to stop copying before","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"Sheemo"},"content":"     * @return String object containing space-separated values","lastModifiedDate":"2023-02-01"},{"lineNumber":191,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException If supplied delimiter isn\u0027t in the available list of delimiters","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"Sheemo"},"content":"    private static String copyUntilDelimiter(Iterator\u003cString\u003e args, String delimiter) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":194,"author":{"gitId":"Sheemo"},"content":"        if (!DELIMITERS.contains(delimiter)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":195,"author":{"gitId":"Sheemo"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":197,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"Sheemo"},"content":"        List\u003cString\u003e words \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":199,"author":{"gitId":"Sheemo"},"content":"        String curWord;","lastModifiedDate":"2023-02-01"},{"lineNumber":200,"author":{"gitId":"Sheemo"},"content":"        while (args.hasNext()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":201,"author":{"gitId":"Sheemo"},"content":"            curWord \u003d args.next();","lastModifiedDate":"2023-01-31"},{"lineNumber":202,"author":{"gitId":"Sheemo"},"content":"            if (curWord.equals(delimiter)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"Sheemo"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"Sheemo"},"content":"            words.add(curWord);","lastModifiedDate":"2023-01-31"},{"lineNumber":206,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":207,"author":{"gitId":"Sheemo"},"content":"        return String.join(\" \", words);","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":211,"author":{"gitId":"Sheemo"},"content":"     * Creates a space-separated String from an Iterator of Strings which contains all","lastModifiedDate":"2023-02-01"},{"lineNumber":212,"author":{"gitId":"Sheemo"},"content":"     * Strings after the Iterators current position.","lastModifiedDate":"2023-02-01"},{"lineNumber":213,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":214,"author":{"gitId":"Sheemo"},"content":"     * @param args Iterator on a list of Strings","lastModifiedDate":"2023-02-01"},{"lineNumber":215,"author":{"gitId":"Sheemo"},"content":"     * @return String object containing space-separated values","lastModifiedDate":"2023-02-01"},{"lineNumber":216,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":217,"author":{"gitId":"Sheemo"},"content":"    private static String copyUntilDelimiter(Iterator\u003cString\u003e args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":218,"author":{"gitId":"Sheemo"},"content":"        List\u003cString\u003e words \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":219,"author":{"gitId":"Sheemo"},"content":"        String curWord;","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"Sheemo"},"content":"        while (args.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":221,"author":{"gitId":"Sheemo"},"content":"            curWord \u003d args.next();","lastModifiedDate":"2023-01-31"},{"lineNumber":222,"author":{"gitId":"Sheemo"},"content":"            words.add(curWord);","lastModifiedDate":"2023-01-31"},{"lineNumber":223,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":224,"author":{"gitId":"Sheemo"},"content":"        return String.join(\" \", words);","lastModifiedDate":"2023-01-31"},{"lineNumber":225,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":226,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":227,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":228,"author":{"gitId":"Sheemo"},"content":"     * Determines if a String is parsable as a LocalDateTime object.","lastModifiedDate":"2023-02-01"},{"lineNumber":229,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":230,"author":{"gitId":"Sheemo"},"content":"     * @param args String maybe containing a LocalDateTime","lastModifiedDate":"2023-02-01"},{"lineNumber":231,"author":{"gitId":"Sheemo"},"content":"     * @return True if the String is parsable as a LocalDateTime object and false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":232,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":233,"author":{"gitId":"Sheemo"},"content":"    private static boolean isDateTime(String args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":235,"author":{"gitId":"Sheemo"},"content":"            LocalDateTime.parse(args, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":236,"author":{"gitId":"Sheemo"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":237,"author":{"gitId":"Sheemo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":238,"author":{"gitId":"Sheemo"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":239,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":240,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":241,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":242,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":243,"author":{"gitId":"Sheemo"},"content":"     * Determines if a String is parsable as a LocalDate object.","lastModifiedDate":"2023-02-01"},{"lineNumber":244,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":245,"author":{"gitId":"Sheemo"},"content":"     * @param args String maybe containing a LocalDate","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"Sheemo"},"content":"     * @return True if the String is parsable as a LocalDateTime object and false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":247,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":248,"author":{"gitId":"Sheemo"},"content":"    private static boolean isDate(String args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":249,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":250,"author":{"gitId":"Sheemo"},"content":"            LocalDate.parse(args, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":251,"author":{"gitId":"Sheemo"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"Sheemo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":253,"author":{"gitId":"Sheemo"},"content":"            return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":254,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":255,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":256,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":257,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":258,"author":{"gitId":"Sheemo"},"content":"     * Parses a String maybe containing a LocalDate or LocalDateTime.","lastModifiedDate":"2023-02-01"},{"lineNumber":259,"author":{"gitId":"Sheemo"},"content":"     * The string is parsable as a LocalDate if it is of the format yyyy-MM-dd.","lastModifiedDate":"2023-02-01"},{"lineNumber":260,"author":{"gitId":"Sheemo"},"content":"     * The string is parsable as a LocalDateTime if it is of the format yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-02-01"},{"lineNumber":261,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":262,"author":{"gitId":"Sheemo"},"content":"     * @param arg String maybe containing a LocalDate or LocalDateTime.","lastModifiedDate":"2023-02-01"},{"lineNumber":263,"author":{"gitId":"Sheemo"},"content":"     * @return Date object if successfully parsed.","lastModifiedDate":"2023-02-01"},{"lineNumber":264,"author":{"gitId":"Sheemo"},"content":"     * @throws InvalidDateException If supplied String cannot be parsed according to the specifications above.","lastModifiedDate":"2023-02-17"},{"lineNumber":265,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":266,"author":{"gitId":"Sheemo"},"content":"    public static Date parseDate(String arg) throws InvalidDateException {","lastModifiedDate":"2023-02-17"},{"lineNumber":267,"author":{"gitId":"Sheemo"},"content":"        if (isDateTime(arg)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":268,"author":{"gitId":"Sheemo"},"content":"            return new Date(LocalDateTime.parse(arg, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2023-02-01"},{"lineNumber":269,"author":{"gitId":"Sheemo"},"content":"        } else if (isDate(arg)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":270,"author":{"gitId":"Sheemo"},"content":"            return new Date(LocalDate.parse(arg, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2023-02-01"},{"lineNumber":271,"author":{"gitId":"Sheemo"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":272,"author":{"gitId":"Sheemo"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-02-17"},{"lineNumber":273,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":274,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":275,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":275}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.FileLoadFailedException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.FileSaveFailedException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":" * Class with utilities to save/load a Duke TaskList to/from a file","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    private String filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Storage object.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"     * @param filePath Relative path to saved TaskList file","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     * Sets the filePath to a new filePath.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     * @param filePath Relative path to saved TaskList file","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"    public void changeFilePath(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     * Loads a TaskList from supplied file.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"     * @return ArrayList of Task objects that can be passed into a TaskList constructor.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException If the file was corrupted, or could not be read.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"    public ArrayList\u003cTask\u003e loadTasklistFromFile() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"            return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"        List\u003cString\u003e lines;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"            lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"            throw new FileLoadFailedException();","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"            List\u003cString\u003e args \u003d List.of(line.split(\"\\\\|\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"            String type \u003d args.get(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"            String isDone \u003d args.get(1);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"            String description \u003d args.get(2);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"            Task task;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"            switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"                    Date by \u003d Parser.parseDate(args.get(3));","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"                    task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"                case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"                    Date from \u003d Parser.parseDate(args.get(3));","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"                    Date to \u003d Parser.parseDate(args.get(4));","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"                    task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"                default:","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"                    throw new FileLoadFailedException();","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"            if (isDone.equals(\"true\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"                task.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"        return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"Sheemo"},"content":"     * Saves a TaskList to the supplied file.","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"Sheemo"},"content":"     * @param tasks TaskList to save.","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Sheemo"},"content":"     * @throws DukeException if the tasklist failed to save to the file.","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"Sheemo"},"content":"    public void saveTasklistToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"Sheemo"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"Sheemo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"Sheemo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"Sheemo"},"content":"            sb.append(tasks.get(i).getFileRepresentation()).append(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"Sheemo"},"content":"            Files.write(path, sb.toString().getBytes());","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"Sheemo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"Sheemo"},"content":"            throw new FileSaveFailedException();","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":109}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Abstract class representing a Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     * @param description Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"     * Marks a Task as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     * Marks a Task as not done.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * Returns a string representation of a Task that can be saved into a file.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     * Subclasses must override this to fulfil the format of the save file.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"     * @return A String representation of a Task taht can be saved into a file.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"        return this.isDone + \"|\" + this.description;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"    };","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"     * Returns a string representation of a Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"     * @return String representation of a Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"     * Returns true if task description contains a certain keyword.","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"     * @param keyword Keyword to search for in task description","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"     * @return true if description contains keyword and false otherwise","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"    public boolean doesDescriptionContain(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Sheemo":66}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a TaskList object with an existing ArrayList.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     * @param existing Existing list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    public TaskList(ArrayList\u003cTask\u003e existing) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        this.taskList \u003d existing;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a new TaskList object.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     * Gets the i-th Task in the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     * @param idx Index of the Task to retrieve","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     * @return Requested task","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     * @throws IndexOutOfBoundsException If supplied index is invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    public Task get(int idx) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        return this.taskList.get(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     * @param task Task to add","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"     * Deletes a Task from the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"     * @param idx Index of the task to delete","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"     * @return The deleted Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"    public Task deleteTask(int idx) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"        if (idx \u003c 0 || idx \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"        return this.taskList.remove(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"     * Gets the size of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"     * @return An int representing the size of the TaskList.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"    public List\u003cTask\u003e findAllTasksWithKeyword(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"        return this.taskList.stream()","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"                            .filter(task -\u003e task.doesDescriptionContain(keyword))","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"     * Returns true if the tasklist is empty.","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"     * @return true if the tasklist is empty and false otherwise.","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"        return this.taskList.size() \u003d\u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"Sheemo"},"content":"     * Gets the underlying ArrayList for the TaskList.","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"     * @return The ArrayList of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"Sheemo"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"Sheemo"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":91}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Class that can store a Todo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a Todo object.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"     * @param description Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"     * @return A String object that is parsable by the Duke Storage parser.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        return \"todo|\" + super.getFileRepresentation();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     * Returns a String representation of the task to be printed on the screen.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     * @return String representation for a Deadline object.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Sheemo":35}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private final Task task;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        setOutput(\"Okay~ I\u0027ve added the task for you~\",","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"                  this.task.toString(),","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"                  \"Now you have \" + tasks.getSize() + \" tasks!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"            storage.saveTasklistToFile(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"            setOutput(getOutput(), e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":28}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import java.util.Timer;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    private static final int MILLISECONDS_TO_SECONDS \u003d 1000;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public static final int CLOSING_DELAY \u003d (int) (1.5 * MILLISECONDS_TO_SECONDS);","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"            @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"            public void run() {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"                System.exit(0);","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"        }, CLOSING_DELAY);","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"        this.cmdOutput \u003d \"Otsunakiri~ Byebye!~\";","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    private static final Command NONE \u003d new NoCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    protected String cmdOutput;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"     * Runs a command.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"     * @param tasks Tasklist","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"     * @param storage Storage","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    public abstract void execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    private static class NoCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        public NoCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     * Returns a pseudo-command that does nothing.","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     * @return The None pseudo-command","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    public static Command none() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        return NONE;","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"     * Gets the display output of a command;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     * @return String representing the display output of the command","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"    public String getOutput() {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"        return this.cmdOutput;","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"     * Sets the output of a command to be displayed.","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"     * @param output Strings to be displayed with newline characters in-between.","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"    public void setOutput(String... output) {","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"        this.cmdOutput \u003d String.join(\"\\n\", output);","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":54}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.*;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    private final int idx;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        this.idx \u003d idx - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"            Task task \u003d tasks.deleteTask(this.idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"            storage.saveTasklistToFile(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"            setOutput(\"Hah gomi~ Don\u0027t need this anymore~\",","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"                      task.toString(),","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"                      \"Now you have \" + tasks.getSize() + \" tasks!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":27}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        List\u003cTask\u003e filtered \u003d tasks.findAllTasksWithKeyword(this.keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        if (filtered.size() \u003d\u003d 0){","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"            this.setOutput(\"Can\u0027t find tasks with this keyword yo~\");","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"            return;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"        List\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"        for (int i \u003d 0; i \u003c filtered.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"            strings.add((i + 1) + \": \" + filtered.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"        this.setOutput(strings.toArray(new String[0]));","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Sheemo":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import java.util.List;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"            this.setOutput(\"Yatta! Nothing to do yo~\");","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"            return;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        List\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"            strings.add((i + 1) + \": \" + tasks.get(i));","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        this.setOutput(strings.toArray(new String[0]));","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    private final boolean isMarked;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    private final int idx;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public MarkCommand(boolean isMarked, int idx) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"        this.idx \u003d idx - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"            if (this.isMarked) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"                tasks.get(this.idx).markAsDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"                setOutput(\"Yatta! You have done this task!\", tasks.get(this.idx).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"                tasks.get(this.idx).unmarkAsDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"                setOutput(\"Neee! Are you kidding me?\", tasks.get(this.idx).toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"        storage.saveTasklistToFile(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":33}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Parent Exception to all custom exceptions for the Duke project.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a DukeException with an optional message.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     * @param message Exception message.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        super(message);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Sheemo":22}},{"path":"src/main/java/duke/exceptions/EmptyBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception to be thrown when parts of a command are missing.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class EmptyBodyException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an EmptyBodyException.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public EmptyBodyException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super(\"What do you wanna do yo~\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Sheemo":13}},{"path":"src/main/java/duke/exceptions/FileLoadFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception to be thrown when there are errors when loading from a file.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class FileLoadFailedException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a FileLoadFailedException.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public FileLoadFailedException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super(\"Yabai! Could not load from file dayo... dousyou...\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Sheemo":13}},{"path":"src/main/java/duke/exceptions/FileSaveFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception to be thrown when there are errors when writing to a file.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class FileSaveFailedException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an FileSaveFailedException.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public FileSaveFailedException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super(\"Yabai! Could not save to file dayo...\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Sheemo":13}},{"path":"src/main/java/duke/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception thrown when supplied date is invalid.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an InvalidDateException.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super(\"Not a valid date da yo~\\n\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"                \"I recognise YYYY-MM-DD [HH:mm] date formats~\");","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Sheemo":14}},{"path":"src/main/java/duke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception that is similar in use to IndexOutOfBoundsException.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an InvalidIndexException.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super(\"Not a valid index da yo~\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Sheemo":13}},{"path":"src/main/java/duke/exceptions/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception used when user does not specify indices where needed","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class MissingIndexException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a MissingIndexException.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public MissingIndexException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super(\"Need an index da yo~\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Sheemo":13}},{"path":"src/main/java/duke/exceptions/MissingKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception used when user does not specify keywords where needed","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class MissingKeywordException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for a MissingKeywordException.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public MissingKeywordException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super(\"Need a keyword to search for da yo~\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Sheemo":13}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":" * Exception to be thrown when command cannot be parsed","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"     * Constructor for an UnknownCommandException.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        super(\"WAKANDEYO!!! \u003e:(\"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"                + \"\\nAvailable commands are:\"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"                + \"\\n1. list\"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"                + \"\\n2. todo [name]\"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"                + \"\\n3. deadline [name] /by [date]\"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"                + \"\\n4. event [name] /from [date] /to [date]\"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"                + \"\\n5. delete [index]\"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"                + \"\\n6. find [keyword]\"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"                + \"\\n7. mark [index]\"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"                + \"\\n8. unmark [index]\"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"                + \"\\n9. bye\");","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Sheemo":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minWidth\u003d\"400.0\"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"                \u003cInsets topRightBottomLeft\u003d\"10\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Sheemo":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"            fx:controller\u003d\"duke.MainWindow\" stylesheets\u003d\"@../css/stylesheet.css\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"                prefWidth\u003d\"76.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"0.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"                    AnchorPane.bottomAnchor\u003d\"41.0\" fitToWidth\u003d\"true\" stylesheets\u003d\"@../css/ScrollPane.css\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"3\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"                        \u003cInsets top\u003d\"10\" bottom\u003d\"10\"/\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Sheemo":31}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"    private static final String TEST \u003d \"test\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    private static final Date DATE \u003d new Date(LocalDate.now());","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    public void markAsDone_givenInstance_correctlySets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"        Task todo \u003d new Todo(TEST);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        Task deadline \u003d new Deadline(TEST, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        Task event \u003d new Event(TEST, DATE, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        event.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        assertTrue(event.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    public void markAsDone_givenDoneInstance_correctlySets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"        Task todo \u003d new Todo(TEST);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        Task deadline \u003d new Deadline(TEST, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"        Task event \u003d new Event(TEST, DATE, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        deadline.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"        event.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"        event.markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        assertTrue(event.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    public void unmarkAsDone_givenInstance_correctlySets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        Task todo \u003d new Todo(TEST);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"        Task deadline \u003d new Deadline(TEST, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"        Task event \u003d new Event(TEST, DATE, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"        deadline.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"        event.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        todo.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"        deadline.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"        event.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"        assertFalse(event.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"    public void unmarkAsDone_givenUndoneInstance_correctlySets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"        Task todo \u003d new Todo(TEST);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"        Task deadline \u003d new Deadline(TEST, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Sheemo"},"content":"        Task event \u003d new Event(TEST, DATE, DATE);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"        todo.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"        deadline.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"        event.unmarkAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"        assertFalse(event.isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Sheemo":76}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"    public void getFileRepresentation_givenInstance_correctlyGets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"        Todo todo \u003d new Todo(\"\");  // Empty description","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|false|\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|true|\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"        todo \u003d new Todo(\"oneword\"); // One word description","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|false|oneword\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|true|oneword\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        todo \u003d new Todo(\"this is many many many many many many many many words\"); // Many word description","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|false|this is many many many many many many many many words\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        todo.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"todo|true|this is many many many many many many many many words\", todo.getFileRepresentation());","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    public void toString_givenInstance_correctlyGets() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        Todo todo \u003d new Todo(\"\");  // Empty description","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"        assertEquals(\"[T][ ] \", todo.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Sheemo":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"todo sign up for dance lesson","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"todo","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"todo todo todo","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"deadline talk to management","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"deadline talk to management /by tuesday","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"deadline talk to management /by","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"deadline talk to management /by /by /by","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"deadline /by monday","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"event 3d live /from 2pm /to 4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"event 3d live /to 4pm /from 2pm","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"event 3d live /from 2pm","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"event 3d live /to 4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"event 3d live","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"event /from /from /from /from /from /to /to /to /to /to","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"mark 2","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"mark","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"unmark 2","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"list","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Sheemo":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Sheemo":1,"-":20}}]
