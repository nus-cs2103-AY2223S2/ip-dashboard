[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"plugins {","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"repositories {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"    mavenCentral()","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"checkstyle {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"dependencies {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"test {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"D|0|go to perth|2019-11-01","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"E|1|play touch|2019-11-01|2019-12-02","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"D|0|finish proj|2023-01-01","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"E|1|book fair|2023-01-01|2023-01-02","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"T|0|read book","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"D|0|do homework|2023-01-02","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Shuggan":6}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"     * Creates a Duke object that references storage from the desired file path","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"     * @param filePath the file path to the storage txt file","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"     * Begins the Duke chat loop","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"    public void run() {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"        this.ui.welcomeUser();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"        while (true) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"            String textInput \u003d this.ui.readInput();","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"            String response;","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"            this.parser \u003d new Parser();","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"            this.parser.parse(textInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"            if (this.parser.action.equals(\"bye\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"                this.ui.goodbyeUser();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"                return;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"            } else if (this.parser.action.equals(\"list\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"                this.ui.listTasks(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"                continue;","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Shuggan"},"content":"            } else if (this.parser.action.equals(\"delete\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Shuggan"},"content":"                response \u003d this.tasks.delete(textInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"                this.storage.writeTxt(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"Shuggan"},"content":"            } else if (this.parser.action.equals(\"mark\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Shuggan"},"content":"                response \u003d this.tasks.mark(textInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"Shuggan"},"content":"                this.storage.writeTxt(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"Shuggan"},"content":"            } else if (this.parser.action.equals(\"unmark\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"                response \u003d this.tasks.unmark(textInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"                this.storage.writeTxt(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"            } else if (this.parser.action.equals(\"find\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"                try {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Shuggan"},"content":"                    String[] parts \u003d textInput.split(\" \", 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"Shuggan"},"content":"                    response \u003d this.tasks.find(parts);","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"Shuggan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Shuggan"},"content":"                    response \u003d e.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Shuggan"},"content":"                    this.ui.printResponse(response);","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Shuggan"},"content":"                    continue;","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Shuggan"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Shuggan"},"content":"            } else if (this.parser.action.equals(\"todo\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"                    String[] parts \u003d textInput.split(\" \", 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"                    response \u003d this.tasks.todo(parts);","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"                    this.storage.writeTxt(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Shuggan"},"content":"                    response \u003d e.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"                    this.ui.printResponse(response);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"                    continue;","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Shuggan"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Shuggan"},"content":"            } else if (this.parser.action.equals(\"deadline\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"Shuggan"},"content":"                String[] parts \u003d textInput.split(\"/\");","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"Shuggan"},"content":"                response \u003d this.tasks.deadline(parts);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"Shuggan"},"content":"                this.storage.writeTxt(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"Shuggan"},"content":"            } else if (this.parser.action.equals(\"event\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"Shuggan"},"content":"                String[] parts \u003d textInput.split(\"/\");","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"Shuggan"},"content":"                response \u003d this.tasks.event(textInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"Shuggan"},"content":"                this.storage.writeTxt(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"Shuggan"},"content":"            } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"Shuggan"},"content":"                response \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"Shuggan"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"Shuggan"},"content":"            this.ui.printResponse(response);","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"Shuggan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"Shuggan"},"content":"        new Duke(System.getProperty(\"user.dir\") + \"/data/duke.txt\").run();","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Shuggan":84,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":" * An exception for any errors in the Duke chat operation","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"  /**","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"   * Creates an exception for the Duke chat","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"   *","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"   * @param e description of the exception to be thrown","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"   */","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"  public DukeException(String e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"    super(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"  }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":" * A parser that helps to process user inputs into actions to follow up","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"public class Parser {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"    String action;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"     * Parses the user\u0027s input to determine the next action to take","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"     * @oaram textInput the input message from the user","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"    public void parse(String textInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"        if (textInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"bye\";","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"        } else if (textInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"list\";","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"        } else if (textInput.length() \u003e\u003d 8 \u0026\u0026","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"                textInput.substring(0, 6).equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"delete\";","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"        } else if (textInput.length() \u003e\u003d 6 \u0026\u0026","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"                textInput.substring(0, 4).equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"mark\";","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"        } else if (textInput.length() \u003e\u003d 8 \u0026\u0026","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"                textInput.substring(0, 6).equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"unmark\";","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"        } else if (textInput.length() \u003e\u003d 6 \u0026\u0026","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"                textInput.substring(0, 4).equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"find\";","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"        } else if (textInput.length() \u003e\u003d 4 \u0026\u0026","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"                textInput.substring(0, 4).equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"todo\";","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"        } else if (textInput.length() \u003e\u003d 10 \u0026\u0026","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"                textInput.substring(0, 8).equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"deadline\";","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"        } else if (textInput.length() \u003e\u003d 7 \u0026\u0026","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"                textInput.substring(0, 5).equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"event\";","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Shuggan"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Shuggan"},"content":"            this.action \u003d \"not found\";","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":44}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":" * A storage object that stores the file location of the txt file to be used to log tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"public class Storage {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"     * Creates a new Storage object","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"     * @param filePath the txt file to be referenced as storage","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"     * Loads the tasks as an ArrayList from a referenced Storage object\u0027s txt file","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"     * @return ArrayList of the referenced Storage object","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"            String line;","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"                if (parts[0].strip().equalsIgnoreCase(\"T\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"                    Task t \u003d new Task.Todo(parts[2]);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"                    taskList.add(t);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"                    if (parts[1].strip().equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Shuggan"},"content":"                        t.markDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Shuggan"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"                } else if (parts[0].strip().equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Shuggan"},"content":"                    Task t \u003d new Task.Deadline(parts[2], parts[3]);","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Shuggan"},"content":"                    taskList.add(t);","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Shuggan"},"content":"                    if (parts[1].strip().equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Shuggan"},"content":"                        t.markDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"                } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"                    Task t \u003d new Task.Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"                    taskList.add(t);","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Shuggan"},"content":"                    if (parts[1].strip().equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Shuggan"},"content":"                        t.markDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Shuggan"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Shuggan"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Shuggan"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Shuggan"},"content":"            return taskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Shuggan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Shuggan"},"content":"            System.out.println(\"An error occurred while reading the file: \" + e.getMessage());","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Shuggan"},"content":"     * Writes a TaskList into the Storage object\u0027s txt file","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"     * @param list the TaskList to be written into the referenced Storage object\u0027s txt file","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"Shuggan"},"content":"    public void writeTxt(TaskList list) {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"Shuggan"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"Shuggan"},"content":"            String toWrite \u003d list.toWrite();","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"Shuggan"},"content":"            writer.write(toWrite);","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"Shuggan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"Shuggan"},"content":"            System.out.println(\"An error occurred while writing to the file: \" + e.getMessage());","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":77}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":" * Contains all information for tasks in the task list","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"public class Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"    protected String description;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"     * Creates a task object with a specific description","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"     * @param description what the task is about","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"     * Returns the txt formatted version of the referenced tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"     * @return txt formatted String of the referenced task","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"    public String toData() {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"        return \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"         * Creates to-do object of the given description","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"         * @param description what the to-do object is about","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"        public Todo(String description) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Shuggan"},"content":"            super(description.strip());","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Shuggan"},"content":"         * Returns the txt formatted version of the referenced to-do task","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Shuggan"},"content":"         * @return the txt formatted version of the referenced to-do task","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"        @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"        public String toData() {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"            int isDoneData \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Shuggan"},"content":"            if (this.isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Shuggan"},"content":"                isDoneData \u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Shuggan"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Shuggan"},"content":"            return String.format(\"T|%d|%s\", isDoneData, this.description);","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Shuggan"},"content":"         * Returns the String of the referenced to-do task","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"         * @return the String of the referenced to-do task","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"        @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"        public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Shuggan"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"Shuggan"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"Shuggan"},"content":"        protected LocalDate by;","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"Shuggan"},"content":"         * Creates deadline object of the given description and finishing date","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"Shuggan"},"content":"         * @param description the description of the task","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"Shuggan"},"content":"         * @param by the deadline that the class is to be completed","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"Shuggan"},"content":"        public Deadline(String description, String by) {","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"Shuggan"},"content":"            super(description.strip());","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"Shuggan"},"content":"            this.by \u003d LocalDate.parse(by.strip());","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"Shuggan"},"content":"         * Returns the txt formatted version of the referenced deadline task","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"Shuggan"},"content":"         * @return the txt formatted version of the referenced deadline task","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"Shuggan"},"content":"        @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"Shuggan"},"content":"        public String toData() {","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"Shuggan"},"content":"            int isDoneData \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"Shuggan"},"content":"            if (this.isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"Shuggan"},"content":"                isDoneData \u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"Shuggan"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"Shuggan"},"content":"            return String.format(\"D|%d|%s|%s\", isDoneData, this.description, this.by);","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"Shuggan"},"content":"         * Returns the String of the referenced deadline task","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"Shuggan"},"content":"         * @return the String of the referenced deadline task","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"Shuggan"},"content":"        @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"Shuggan"},"content":"        public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"Shuggan"},"content":"            String byFormatted \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"Shuggan"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + byFormatted + \")\";","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"Shuggan"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"Shuggan"},"content":"        protected LocalDate from;","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"Shuggan"},"content":"        protected LocalDate to;","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"Shuggan"},"content":"         * Creates an event object of the given description and time period","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"Shuggan"},"content":"         * @param description the description of the task","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"Shuggan"},"content":"         * @param from the start of the event","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"Shuggan"},"content":"         * @param to the end of the event","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"Shuggan"},"content":"        public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"Shuggan"},"content":"            super(description.strip());","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"Shuggan"},"content":"            this.from \u003d LocalDate.parse(from.strip());","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"Shuggan"},"content":"            this.to \u003d LocalDate.parse(to.strip());","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"Shuggan"},"content":"         * Returns the txt formatted version of the referenced event task","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"Shuggan"},"content":"         * @return the txt formatted version of the referenced event task","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"Shuggan"},"content":"        @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"Shuggan"},"content":"        public String toData() {","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"Shuggan"},"content":"            int isDoneData \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"Shuggan"},"content":"            if (this.isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"Shuggan"},"content":"                isDoneData \u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"Shuggan"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"Shuggan"},"content":"            return String.format(\"E|%d|%s|%s|%s\", isDoneData, this.description, this.from, this.to);","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"Shuggan"},"content":"        /**","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"Shuggan"},"content":"         * Returns the String of the referenced event task","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"Shuggan"},"content":"         *","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"Shuggan"},"content":"         * @return the String of the referenced event task","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"Shuggan"},"content":"         */","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"Shuggan"},"content":"        @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"Shuggan"},"content":"        public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"Shuggan"},"content":"            String fromFormatted \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"Shuggan"},"content":"            String toFormatted \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"Shuggan"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + fromFormatted + \" to: \" + toFormatted + \")\";","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"Shuggan"},"content":"     * Returns the status of the referenced task","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"Shuggan"},"content":"     * @return String representation of the status of the referenced task","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"Shuggan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"Shuggan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"Shuggan"},"content":"     * Marks the current task as done","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"Shuggan"},"content":"    public void markDone() {","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"Shuggan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"Shuggan"},"content":"     * Marks the current task as undone","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"Shuggan"},"content":"    public void markUndone() {","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"Shuggan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":178,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":179,"author":{"gitId":"Shuggan"},"content":"     * Returns the String of the referenced task","lastModifiedDate":"2023-02-15"},{"lineNumber":180,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":181,"author":{"gitId":"Shuggan"},"content":"     * @return the String of the referenced task","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"Shuggan"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"Shuggan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"Shuggan"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":187}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":" * A task list that handles operations from the user to manage their tasks and interact with the storage","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"public class TaskList {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"     * Creates a new task list object to handle operations from the user","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"     * @param taskList the initialised task list from the storage txt file","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"     * Takes in a user text input, processes it to delete a record, and returns the response message","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"     * @param textInput the input message from the user","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"     * @return the response message to be printed","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"    public String delete(String textInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"        int i \u003d Integer.parseInt(textInput.substring(7));","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"        Task t \u003d taskList.get(i - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"        taskList.remove(i - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"        String removedText \u003d String.format(\"Got it. I\u0027ve removed this task: %s\\n\", t.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"        String listSize \u003d String.format(\"Now you have %d tasks in the list\", taskList.size());","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"        return removedText + listSize;","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"     * Takes in a user text input, processes it to mark a record as completed, and returns the response message","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"     * @param textInput the input message from the user","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"     * @return the response message to be printed","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Shuggan"},"content":"    public String mark(String textInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"        int i \u003d Integer.parseInt(textInput.substring(5));","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Shuggan"},"content":"        Task currTask \u003d taskList.get(i - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Shuggan"},"content":"        currTask.markDone();","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Shuggan"},"content":"        return \"Nice! I\u0027ve marked this task as done\\n\" + currTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"     * Takes in a user text input, processes it to mark a record as uncompleted, and returns the response message","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Shuggan"},"content":"     * @param textInput the input message from the user","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Shuggan"},"content":"     * @return the response message to be printed","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Shuggan"},"content":"    public String unmark(String textInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Shuggan"},"content":"        int i \u003d Integer.parseInt(textInput.substring(7));","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Shuggan"},"content":"        Task currTask \u003d taskList.get(i - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Shuggan"},"content":"        currTask.markUndone();","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Shuggan"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + currTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"     * Takes in a user text input, processes it to find matching records, and returns the response message","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Shuggan"},"content":"     * @param parts the input message from the user","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"     * @return the response message to be printed","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"     * @throws DukeException if no find keyword is given","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"Shuggan"},"content":"    public String find(String... parts) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"Shuggan"},"content":"        if (parts.length \u003d\u003d 1 || parts[1].equals(\"\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"Shuggan"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of find command cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"Shuggan"},"content":"        String keyword \u003d \"(.*)\" + parts[1] + \"(.*)\";","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"Shuggan"},"content":"        String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"Shuggan"},"content":"        boolean found \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"Shuggan"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"Shuggan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"Shuggan"},"content":"            String description \u003d taskList.get(i).toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"Shuggan"},"content":"            if (description.matches(keyword)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"Shuggan"},"content":"                found \u003d true;","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"Shuggan"},"content":"                String output \u003d String.format(\"%d. %s\", index, description + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"Shuggan"},"content":"                result +\u003d output;","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"Shuggan"},"content":"                index++;","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"Shuggan"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"Shuggan"},"content":"        return found ? result.trim() : \"Sorry, there are no matching tasks :-(\";","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"Shuggan"},"content":"     * Takes in a user text input, processes it add a to-do task, and returns the response message","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"Shuggan"},"content":"     * @param parts the input message from the user","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"Shuggan"},"content":"     * @return the response message to be printed","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"Shuggan"},"content":"     * @throws DukeException if the text input is invalid","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"Shuggan"},"content":"    public String todo(String... parts) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"Shuggan"},"content":"        if (parts.length \u003d\u003d 1 || parts[1].equals(\"\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"Shuggan"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"Shuggan"},"content":"        Task t \u003d new Task.Todo(parts[1].trim());","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"Shuggan"},"content":"        taskList.add(t);","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"Shuggan"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\", t, taskList.size());","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"Shuggan"},"content":"     * Takes in a user text input, processes it add a deadline task, and returns the response message","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"Shuggan"},"content":"     * @param textInput the input message from the user","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"Shuggan"},"content":"     * @return the response message to be printed","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"Shuggan"},"content":"    public String deadline(String... parts) {","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"Shuggan"},"content":"        Task t \u003d new Task.Deadline(parts[0].substring(9), parts[1].substring(3));","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"Shuggan"},"content":"        taskList.add(t);","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"Shuggan"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\", t, taskList.size());","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"Shuggan"},"content":"     * Takes in a user text input, processes it add an event task, and returns the response message","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"Shuggan"},"content":"     * @param textInput the input message from the user","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"Shuggan"},"content":"     * @return the response message to be printed","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"Shuggan"},"content":"    public String event(String... parts) {","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"Shuggan"},"content":"        Task t \u003d new Task.Event(parts[0].substring(6), parts[1].substring(5), parts[2].substring(3));","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"Shuggan"},"content":"        taskList.add(t);","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"Shuggan"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\", t, taskList.size());","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"Shuggan"},"content":"     * Processes the current TaskList object into a string formatted for txt storage","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"Shuggan"},"content":"     * @return the referenced TaskList object as a string formatted for txt storage","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"Shuggan"},"content":"    public String toWrite() {","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"Shuggan"},"content":"        int length \u003d this.taskList.size();","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"Shuggan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"Shuggan"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"Shuggan"},"content":"            String item \u003d taskList.get(i).toData();","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"Shuggan"},"content":"            result +\u003d item + \"\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"Shuggan"},"content":"        return result.trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"Shuggan"},"content":"     * Returns the String representation of the referenced TaskList","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"Shuggan"},"content":"     * @return the String representation of the TaskList","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"Shuggan"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"Shuggan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"Shuggan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"Shuggan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"Shuggan"},"content":"            String description \u003d taskList.get(i).toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"Shuggan"},"content":"            String output \u003d String.format(\"%d. %s\", i + 1, description + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"Shuggan"},"content":"            result +\u003d output;","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"Shuggan"},"content":"        return result.trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":158}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":" * Handles all interactions with the user","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"public class Ui {","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"    private final String WELCOME_MESSAGE \u003d \"Hey Buddy, I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"    private final String GOODBYE_MESSAGE \u003d \"Goodbye friend. Hope to see you again soon!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"     * Creates a new UI object to interact with the user","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"    public Ui() {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"     * Prints the welcome message to the user upon starting","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"    public void welcomeUser() {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"     * Reads the input from the user through the interface","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"     * @return the String input from the user","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"    public String readInput() {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003dME\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"        String textInput \u003d this.scanner.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"        return textInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"     * Prints the goodbye message to the user upon termination","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Shuggan"},"content":"    public void goodbyeUser() {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003dDUKE\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Shuggan"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Shuggan"},"content":"        this.scanner.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Shuggan"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"     * Prints all the tasks inside a TaskList object","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Shuggan"},"content":"     * @param taskList the TaskList object to be listed to the interface","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Shuggan"},"content":"    public void listTasks(TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Shuggan"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003dDUKE\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Shuggan"},"content":"        System.out.println(taskList.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"     * Reads an input and prints it as a response","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"     * @param response the response to be printed","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"    public void printResponse(String response) {","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Shuggan"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003dDUKE\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"        System.out.println(response);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":67}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"    @Test","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"    public void parseTodoTest(){","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"        String textInput \u003d \"todo read book\";","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"        p.parse(textInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"        assertEquals(p.action, \"todo\");","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"    @Test","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"    public void parseDeadlineTest(){","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"        String textInput \u003d \"deadline return book /by 2023-01-01\";","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"        p.parse(textInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"        assertEquals(p.action, \"deadline\");","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"    @Test","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"    public void parseEventTest(){","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"        String textInput \u003d \"event career fair /from 2023-01-01 /to 2023-01-02\";","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"        p.parse(textInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"        assertEquals(p.action, \"event\");","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":31}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"    @Test","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"    public void toStringTest(){","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"        Task t1 \u003d new Task(\"read book\");","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"        String result \u003d \"[ ] read book\";","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"        assertEquals(t1.toString(), result);","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Shuggan":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"Hello","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Shuggan":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"if ! javac -cp /Users/shane/Documents/NUS Y2S2/CS2103/ip/src/main/src/main/java -Xlint:none -d /Users/shane/Documents/NUS Y2S2/CS2103/ip/src/main/bin /Users/shane/Documents/NUS Y2S2/CS2103/ip/src/main/java/*.java","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"java -classpath /Users/shane/Documents/NUS Y2S2/CS2103/ip/src/main/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Shuggan":2,"-":36}}]
