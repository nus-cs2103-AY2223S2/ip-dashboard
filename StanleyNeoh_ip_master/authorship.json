[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"checkstyle {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"StanleyNeoh":21,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"description\u001eWrite unit tests\u001dcompleted\u001efalse\u001dcategory\u001eT\u001d","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"by\u001e26/1/2023 2303\u001ddescription\u001ecomplete unit tests\u001dcompleted\u001efalse\u001dcategory\u001eD\u001d","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"description\u001eunit test celebrations\u001dfrom\u001e26/1/2023 2303\u001dcompleted\u001efalse\u001dto\u001e26/1/2023 2359\u001dcategory\u001eE\u001d","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"StanleyNeoh":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import duke.core.Core;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import duke.gui.ChatPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":" * \u003ch1\u003eDuke Task Management Application\u003c/h1\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":" * Duke is an applications that allow the user to manage their task from the command line.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" * @author Stanley Neoh Jia Jun","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    private Core core;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    private ChatPane chatPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"        core \u003d new Core();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"        chatPane \u003d new ChatPane((String cmd) -\u003e {","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"            return core.respond(cmd);","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"        });","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"        chatPane.dukeSays(core.setup());","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        scene \u003d new Scene(chatPane);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":36}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" * Launcher is a helper class that holds the main method","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" * and is what starts Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"StanleyNeoh":13}},{"path":"src/main/java/duke/core/Core.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.core;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.DoAfter;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" * Core is the central class that processes and executes all commands.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"public class Core {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    private boolean isOnline;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises a Duke application","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    public Core() {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"        isOnline \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    private void handleCommand(String cmd) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        assert isOnline : \"Commands to be handled only when online\";","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        if (cmd.matches(\"^bye$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"            ui.bye();","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"            isOnline \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^list$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"            ui.listTasks(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^mark [0-9]*$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"            int index \u003d Integer.parseInt(cmd.substring(5)) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d tasks.mark(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"            ui.markTask(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^unmark [0-9]*$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"            int index \u003d Integer.parseInt(cmd.substring(5)) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d tasks.unmark(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"            ui.unmarkTask(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^todo .*$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"            String taskName \u003d cmd.substring(5);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new Todo(taskName, false);","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"            ui.addTask(task, tasks.length());","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^deadline .* /by .*$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"            int byStart \u003d cmd.indexOf(\"/by\");","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"            String taskName \u003d cmd.substring(9, byStart - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"            String by \u003d cmd.substring(byStart + 4);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d tasks.add(new Deadline(taskName, false, by));","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"            ui.addTask(task, tasks.length());","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^event .* /from .* /to .*$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"            int byStart \u003d cmd.indexOf(\"/from\");","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"            int toStart \u003d cmd.indexOf(\"/to\");","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"            String taskName \u003d cmd.substring(6, byStart - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"            String by \u003d cmd.substring(byStart + 6, toStart - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"            String to \u003d cmd.substring(toStart + 4);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d tasks.add(new Event(taskName, false, by, to));","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            ui.addTask(task, tasks.length());","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^delete [0-9]*$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"            int index \u003d Integer.parseInt(cmd.substring(7)) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d tasks.delete(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"            ui.deleteTask(task, tasks.length());","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^after .* /after .*$\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"            int afterStart \u003d cmd.indexOf(\"/after\");","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"            String taskName \u003d cmd.substring(6, afterStart - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"            String after \u003d cmd.substring(afterStart + 7);","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d tasks.add(new DoAfter(taskName, false, after));","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"            ui.addTask(task, tasks.length());","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (cmd.matches(\"^find .*$\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"            String pattern \u003d cmd.substring(5);","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"            TaskList filteredTasks \u003d tasks.matches(pattern);","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"            ui.listMatchingTasks(filteredTasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"    public String setup() {","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"        assert tasks !\u003d null : \"tasks have been initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"        assert ui !\u003d null : \"ui has been initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"            ui.introduce();","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"            ui.error(e);","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"        return ui.flush();","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns the output generated processing a command {@code cmd}","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"     * @param cmd Command to be processed.","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"     * @return Output generated from processing a command.","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"    public String respond(String cmd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"StanleyNeoh"},"content":"        if (isOnline) {","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"StanleyNeoh"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"                handleCommand(cmd);","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"StanleyNeoh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"StanleyNeoh"},"content":"                ui.error(e);","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"            ui.respond(\"The session has ended, you may close the window.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"        return ui.flush();","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"StanleyNeoh":112}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":" * DukeException is the base class for custom exceptions related to Duke","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"StanleyNeoh":10}},{"path":"src/main/java/duke/gui/ChatPane.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.gui;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import duke.gui.handler.MessageHandler;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":" * ChatPane is a javafx component that acts as the GUI interface for the user to interact with the underlying duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"public class ChatPane extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/niko.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/giga.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    private MessageHandler messageHandler;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises an instance of ChatPane.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"     * @param messageHandler handler that handles incoming messages from users.","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    public ChatPane(MessageHandler messageHandler) {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        initialise(messageHandler);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        style();","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        setupActions();","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"     * Displays a message from the user in the GUI.","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"     * @param message Message to be displayed on the GUI.","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    public void userSays(String message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"        Label userText \u003d new Label(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(userText, new ImageView(user)));","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"     * Displays a message from duke in the GUI.","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"     * @param message Message to be displayed on the GUI.","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    public void dukeSays(String message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"        Label dukeText \u003d new Label(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeText, new ImageView(duke)));","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"    private void initialise(MessageHandler messageHandler) {","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"        this.scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        this.dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"        this.scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        this.userInput \u003d new TextField();","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        this.sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        this.messageHandler \u003d messageHandler;","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    private void style() {","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"        assert scrollPane !\u003d null : \"scrollPane not yet initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"        assert dialogContainer !\u003d null : \"dialogContainer not yet initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"        assert userInput !\u003d null : \"userInput not yet initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"        assert sendButton !\u003d null : \"sendButton not yet initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        scrollPane.setPrefSize(400, 550);","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        userInput.setPrefWidth(400.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"    private void setupActions() {","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"        assert userInput !\u003d null : \"userInput not yet initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"        assert sendButton !\u003d null : \"sendButton not yet initialised\";","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"        });","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"        });","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"StanleyNeoh"},"content":"        String cmd \u003d userInput.getText();","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"StanleyNeoh"},"content":"        String resp \u003d messageHandler.handle(cmd);","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"        userSays(cmd);","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"StanleyNeoh"},"content":"        dukeSays(resp);","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"StanleyNeoh"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"StanleyNeoh":107}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.gui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a text bubble containing the message sent and the picture of the sender.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    private Label text;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises a DialogBox instance with","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"     * a message {@code l} and an ImageView {@code iv}.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     * @param l Message to be put into the instance.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * @param iv ImageView to be put into the instance.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        displayPicture.setFitWidth(50.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        displayPicture.setFitHeight(50.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        displayPicture.setSmooth(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"StanleyNeoh":54}},{"path":"src/main/java/duke/gui/handler/MessageHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.gui.handler;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":" * MessageHandler is a functional interface that is used to handle an incoming message from the GUI.","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"@FunctionalInterface","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"public interface MessageHandler {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"    String handle(String command);","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"StanleyNeoh":9}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskSerializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":" * The duke component that is responsible for saving and loading tasks from local storage.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String DATA_PATH \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     * Loads and returns a list of tasks stored locally.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * @return List of tasks that was stored locally.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    public static List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        File file \u003d new File(DATA_PATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"                TaskSerializer ts \u003d new TaskSerializer(sc.nextLine());","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"                tasks.add(ts.createTask());","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"No data file found\");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"            if (sc !\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"                sc.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"     * Saves a list of tasks locally.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"     * @param tasks The list of tasks to be saved","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"    public static void save(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        FileWriter fw \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"            fw \u003d new FileWriter(DATA_PATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"                sb.append(task.serialize());","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"                sb.append(\u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"Unable to write to file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":69}},{"path":"src/main/java/duke/storage/serializer/Serializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.storage.serializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":" * Serializer is the base class that handles serializing of instances.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"public class Serializer {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String GROUP_DELIMITER \u003d String.valueOf((char) 0x1d);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String RECORD_DELIMITER \u003d String.valueOf((char) 0x1e);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    private HashMap\u003cString, Object\u003e map;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    public Serializer() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"        map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises a Serializer with data extracted from serialized","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"     * @param serialized The string to be deserialized","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    public Serializer(String serialized) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"        this();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        String[] entries \u003d serialized.split(GROUP_DELIMITER);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"        for (String entry: entries) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"            String[] keyVal \u003d entry.split(RECORD_DELIMITER);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"            add(keyVal[0], keyVal[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    public void add(String key, Object value) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        map.put(key, value);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    public Object get(String key) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        return map.get(key);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"        for (String key: map.keySet()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"            sb.append(key);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"            sb.append(RECORD_DELIMITER);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"            sb.append(map.get(key).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            sb.append(GROUP_DELIMITER);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":50}},{"path":"src/main/java/duke/storage/serializer/TaskDeserializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.storage.serializer;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" * TaskDeserializer is a functional interface used to deserialize a TaskSerializer into a Task","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"@FunctionalInterface","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public interface TaskDeserializer {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    Task deserialize(TaskSerializer taskSerializer) throws DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"StanleyNeoh":12}},{"path":"src/main/java/duke/storage/serializer/TaskSerializer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.storage.serializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":" * TaskSerializer the serialization and deserialization of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"public class TaskSerializer extends Serializer {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    public TaskSerializer() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"        super();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    public TaskSerializer(String serialized) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"        super(serialized);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     * Creates and returns a task defined by instance","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     * @return Task defined by instance","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    public Task createTask() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        if (Deadline.canDeserialize(this)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"            return Deadline.getDeserializer().deserialize(this);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        if (Event.canDeserialize(this)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"            return Event.getDeserializer().deserialize(this);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        if (Todo.canDeserialize(this)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"            return Todo.getDeserializer().deserialize(this);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        throw new DukeException(\"Unable to create task from Serializer\");","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":39}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.Serializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskDeserializer;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskSerializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a Task with a deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String ICON \u003d \"D\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String BY_KEY \u003d \"by\";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises a Deadline task.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     * @param isCompleted Whether the task is completed","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     * @param by Due date of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    public Deadline(String description, boolean isCompleted, String by) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"            this.by \u003d LocalDateTime.parse(by, RECEIVE_FORMAT);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"Could not parse \u0027by\u0027 as date time\");","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns whether {@code icon} belongs to a Deadline Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"     * @param icon Icon to be checked.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"     * @return whether the {@code icon} belongs to a Deadline Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public static boolean hasIcon(String icon) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        return icon.equals(ICON);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    public static boolean canDeserialize(Serializer serializer) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"        return hasIcon(serializer.get(CATEGORY_KEY).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    public static TaskDeserializer getDeserializer() {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        return (TaskSerializer serializer) -\u003e {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"            String description \u003d serializer.get(DESCRIPTION_KEY).toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"            boolean isCompleted \u003d Boolean.parseBoolean(serializer.get(COMPLETED_KEY).toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"            String by \u003d serializer.get(BY_KEY).toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"            return new Deadline(description, isCompleted, by);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        };","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        Serializer ts \u003d new TaskSerializer();","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(CATEGORY_KEY, ICON);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(DESCRIPTION_KEY, description);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(COMPLETED_KEY, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(BY_KEY, by.format(RECEIVE_FORMAT));","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"        return ts.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        return String.format(","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"            \"[%s]%s (by: %s)\",","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"            ICON,","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"            super.toString(),","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"            by.format(PRINT_FORMAT));","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":78}},{"path":"src/main/java/duke/task/DoAfter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.Serializer;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskDeserializer;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskSerializer;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":" * Represents an task to be done after a certain timing.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"public class DoAfter extends Task {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String ICON \u003d \"A\";","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String AFTER_KEY \u003d \"after\";","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    protected LocalDateTime after;","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises an DoAfter task.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * @param description Description of DoAfter task.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     * @param isCompleted Whether the DoAfter task has been completed.","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     * @param after Time to be completed after.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    public DoAfter(String description, boolean isCompleted, String after) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"            this.after \u003d LocalDateTime.parse(after, RECEIVE_FORMAT);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"Could not parse \u0027after\u0027 as date time\");","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns whether {@code icon} belongs to a Event Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"     * @param icon Icon to be checked.","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"     * @return whether the {@code icon} belongs to a Event Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public static boolean hasIcon(String icon) {","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        return icon.equals(ICON);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    public static boolean canDeserialize(Serializer serializer) {","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"        return hasIcon(serializer.get(CATEGORY_KEY).toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    public static TaskDeserializer getDeserializer() {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        return (TaskSerializer serializer) -\u003e {","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"            String description \u003d serializer.get(DESCRIPTION_KEY).toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"            boolean isCompleted \u003d Boolean.parseBoolean(serializer.get(COMPLETED_KEY).toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"            String after \u003d serializer.get(AFTER_KEY).toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"            return new DoAfter(description, isCompleted, after);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        };","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"    public String serialize() {","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        Serializer ts \u003d new TaskSerializer();","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(CATEGORY_KEY, ICON);","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(DESCRIPTION_KEY, description);","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(COMPLETED_KEY, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(AFTER_KEY, after.format(RECEIVE_FORMAT));","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"        return ts.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"    public String toString() {","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        return String.format(","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"            \"[%s]%s (after: %s)\",","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"            ICON,","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"            super.toString(),","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"            after.format(PRINT_FORMAT));","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"StanleyNeoh":78}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.Serializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskDeserializer;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskSerializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":" * Represents an event with a start timing and an end timing","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String ICON \u003d \"E\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String FROM_KEY \u003d \"from\";","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String TO_KEY \u003d \"to\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises an Event task.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     * @param description Description of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"     * @param isCompleted Whether the event has been completed.","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"     * @param from Start time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"     * @param to End time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    public Event(String description, boolean isCompleted, String from, String to) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"            this.from \u003d LocalDateTime.parse(from, RECEIVE_FORMAT);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"Could not parse \u0027from\u0027 as date time\");","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"            this.to \u003d LocalDateTime.parse(to, RECEIVE_FORMAT);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"Could not parse \u0027to\u0027 as date time\");","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns whether {@code icon} belongs to a Event Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"     * @param icon Icon to be checked.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"     * @return whether the {@code icon} belongs to a Event Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    public static boolean hasIcon(String icon) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        return icon.equals(ICON);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    public static boolean canDeserialize(Serializer serializer) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        return hasIcon(serializer.get(CATEGORY_KEY).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"    public static TaskDeserializer getDeserializer() {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"        return (TaskSerializer serializer) -\u003e {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"            String description \u003d serializer.get(DESCRIPTION_KEY).toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            boolean isCompleted \u003d Boolean.parseBoolean(serializer.get(COMPLETED_KEY).toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"            String from \u003d serializer.get(FROM_KEY).toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"            String to \u003d serializer.get(TO_KEY).toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"            return new Event(description, isCompleted, from, to);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"        };","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"        Serializer ts \u003d new TaskSerializer();","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(CATEGORY_KEY, ICON);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(DESCRIPTION_KEY, description);","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(COMPLETED_KEY, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(FROM_KEY, from.format(RECEIVE_FORMAT));","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(TO_KEY, to.format(RECEIVE_FORMAT));","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        return ts.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"        return String.format(","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"            \"[%s]%s (from: %s to: %s)\",","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"            ICON, super.toString(),","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"            from.format(PRINT_FORMAT),","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"            to.format(PRINT_FORMAT));","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":88}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a generic completable Task with a description.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    protected static final String CATEGORY_KEY \u003d \"category\";","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    protected static final String DESCRIPTION_KEY \u003d \"description\";","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    protected static final String COMPLETED_KEY \u003d \"completed\";","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    protected static final DateTimeFormatter RECEIVE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy kkmm\");","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    protected static final DateTimeFormatter PRINT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MMM-uuuu,EEE,hh:mma\");","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    protected String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises a task.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * @param isCompleted Whether the task has been completed.","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    public Task(String description, boolean isCompleted) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"The description of a task cannot be empty\");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"    public abstract String serialize();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        return this.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"    public void mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean matches(String pattern) {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"        return description.contains(pattern);","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        return isCompleted() ? \"X\" : \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"        if (object \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"            return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"        if (object instanceof Task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"            Task t \u003d (Task) object;","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"            return toString().equals(t.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"            return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":77}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.Serializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskDeserializer;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.serializer.TaskSerializer;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a task that needs to be done but does not have a specified deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String ICON \u003d \"T\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public Todo(String description, boolean isCompleted) throws DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns whether {@code icon} belongs to a Todo Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     * @param icon Icon to be checked.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     * @return whether the {@code icon} belongs to a Todo Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    public static boolean hasIcon(String icon) {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"        return icon.equals(ICON);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    public static boolean canDeserialize(Serializer serializer) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        return hasIcon(serializer.get(CATEGORY_KEY).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    public static TaskDeserializer getDeserializer() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        return (TaskSerializer serializer) -\u003e {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"            String description \u003d serializer.get(DESCRIPTION_KEY).toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"            boolean isCompleted \u003d Boolean.parseBoolean(serializer.get(COMPLETED_KEY).toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"            return new Todo(description, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        };","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"    public String serialize() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"        Serializer ts \u003d new TaskSerializer();","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(CATEGORY_KEY, ICON);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(DESCRIPTION_KEY, description);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"        ts.add(COMPLETED_KEY, isCompleted);","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"        return ts.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"        return String.format(","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"            \"[%s]%s\",","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"            ICON,","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"            super.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":56}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    public void save() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"        Storage.save(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    public void load() throws Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"        tasks \u003d Storage.load();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean taskExists(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        if (!taskExists(index)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"            throw new DukeException(\"The index given is out of range\");","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"     * Adds {@code task} to the TaskList instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"     * @param task Task to be added to the instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"     * @return The task that was added.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    public Task add(Task task) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        save();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        return task;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"     * Deletes the task at {@code index}.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"     * @param index","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"    public Task delete(int index) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        Task t \u003d get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        save();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        return t;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    public int length() {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"     * Marks the task at {@code index} as completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"     * @param index","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"     * @return The task that was marked completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"    public Task mark(int index) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        Task t \u003d get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"        t.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"        save();","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"        return t;","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"     * Marks the task at {@code index} as uncompleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"     * @param index","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"     * @return The task that was marked uncompleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"    public Task unmark(int index) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"        Task t \u003d get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"        t.unmark();","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"        save();","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"        return t;","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"     * Filters and returns a new instance of TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"StanleyNeoh"},"content":"     * containing only task whose description matches {@code pattern}","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"     * @param pattern","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"StanleyNeoh"},"content":"     * @return A new instance of TaskList with tasks only task whose description matches {@code pattern}","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"    public TaskList matches(String pattern) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"        TaskList filtered \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"        filtered.tasks \u003d tasks.stream().filter((Task task) -\u003e {","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"            return task.matches(pattern);","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"        }).collect(Collectors.toList());","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"        return filtered;","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"StanleyNeoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"StanleyNeoh"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"StanleyNeoh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"StanleyNeoh"},"content":"            sb.append(String.format(\"%d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"StanleyNeoh"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"StanleyNeoh"},"content":"                sb.append(\u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"StanleyNeoh"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":126}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" * The component that interfaces with the users, handling user commands and printing the application response.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"    private StringBuilder sb;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"        sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints a sequence of strings in a pretty way into buffer.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"     * @param chunks sequence of strings to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    public void respond(String... chunks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"        for (String lines : chunks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"            for (String line: lines.split(\"\\n\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"                sb.append(line);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints an exception into buffer","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"     * @param e Exception to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    public void error(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        sb.append(\"Oh No!\\n\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        sb.append(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints a introduction message to the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"    public void introduce() {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"        respond(","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            \"Hello I am Duke!\",","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"            \"What can I do for you?\"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints a goodbye message and stops receiving user commands.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"    public void bye() {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        respond(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints a list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"     * @param tasks List of tasks to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        respond(","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"            \"Here are the tasks in your list:\",","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.toString()","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints a list of tasks that have been filtered with a pattern.","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"     * @param tasks List of tasks to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"    public void listMatchingTasks(TaskList tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"        respond(","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"            \"Here are the matching tasks in your list:\",","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.toString()","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        );","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints the response after a task has been marked as completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"     * @param task The task that has been marked as completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"        respond(","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"            \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(\"\u003d\u003e %s\", task","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"        ));","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints the response after a task has been marked as uncompleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"     * @param task The task that has been marked as uncompleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"        respond(","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"StanleyNeoh"},"content":"            \"OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(\"\u003d\u003e %s\", task)","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints the response after the addition of a task.","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"     * @param task Task that was added.","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"     * @param length Length of the list after addition of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"    public void addTask(Task task, int length) {","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"StanleyNeoh"},"content":"        respond(","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"StanleyNeoh"},"content":"            \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(\"\u003d\u003e %s\", task),","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"StanleyNeoh"},"content":"            \"\",","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(\"Now you have %d tasks in the list\", length)","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"StanleyNeoh"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"StanleyNeoh"},"content":"     * Prints the response after the deletion of a task.","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"StanleyNeoh"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"StanleyNeoh"},"content":"     * @param length Length of the list after deletion of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"StanleyNeoh"},"content":"    public void deleteTask(Task task, int length) {","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"StanleyNeoh"},"content":"        respond(","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"StanleyNeoh"},"content":"            \"Noted. I\u0027ve removed this task\",","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(\"\u003d\u003e %s\", task),","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"StanleyNeoh"},"content":"            \"\",","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(\"Now you have %d tasks in the list\", length)","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"StanleyNeoh"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"StanleyNeoh"},"content":"     * Clears the buffer and returns the string that was stored.","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"StanleyNeoh"},"content":"     * @return String that was stored in the buffer.","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"StanleyNeoh"},"content":"    public String flush() {","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"StanleyNeoh"},"content":"        String s \u003d sb.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"StanleyNeoh"},"content":"        sb.setLength(0);","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"StanleyNeoh"},"content":"        return s;","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"StanleyNeoh":146}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.List;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    public void saveAndLoadTask() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(new Todo(\"Write unit tests\", false));","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(new Deadline(\"complete unit tests\", false, \"26/1/2023 2303\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(new Event(\"unit test celebrations\", false, \"26/1/2023 2303\", \"26/1/2023 2359\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"            Storage.save(tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"            assertArrayEquals(Storage.load().toArray(), tasks.toArray());","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"StanleyNeoh":30}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    public void getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"            String description \u003d \"complete unit tests\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new Deadline(description, false, \"26/1/2023 2303\");","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(description, task.getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    public void init_noName_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"            new Event(\"\", false, \"26/1/2023 2303\", \"26/1/2023 2359\");","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"The description of a task cannot be empty\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    public void hasIcon_deadlineIcon_returnsTrue() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(true, Deadline.hasIcon(\"D\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    public void hasIcon_notDeadlineIcon_returnsFalse() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(false, Todo.hasIcon(\"not D\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public void dateValidity_invalidBy_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"            new Deadline(\"complete unit tests\", false, \"oh no this is invalid\");","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"Could not parse \u0027by\u0027 as date time\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    public void markAndUnmark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new Deadline(\"complete unit tests\", false, \"26/1/2023 2303\");","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(false, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"            task.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(true, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"            task.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(false, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"StanleyNeoh":65}},{"path":"src/test/java/duke/task/DoAfterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class DoAfterTest {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    public void getDescription() {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"            String description \u003d \"return book about unit test\";","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new DoAfter(description, false, \"26/1/2023 2303\");","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(description, task.getDescription());","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    public void init_noName_exceptionThrown() {","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"            new DoAfter(\"\", false, \"26/1/2023 2303\");","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"The description of a task cannot be empty\", e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    public void hasIcon_doAfterIcon_returnsTrue() {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(true, DoAfter.hasIcon(\"A\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    public void hasIcon_notEventIcon_returnsFalse() {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(false, DoAfter.hasIcon(\"not A\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public void dateValidity_invalidAfter_exceptionThrown() {","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"            new DoAfter(\"return book about unit test\", false, \"oh no this is invalid\");","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"Could not parse \u0027after\u0027 as date time\", e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    public void markAndUnmark() {","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new DoAfter(\"return book about unit test\", false, \"26/1/2023 2303\");","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(false, task.isCompleted());","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"            task.mark();","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(true, task.isCompleted());","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"            task.unmark();","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(false, task.isCompleted());","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"StanleyNeoh":65}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class EventTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    public void getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"            String description \u003d \"unit test celebrations\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new Event(description, false, \"26/1/2023 2303\", \"26/1/2023 2359\");","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(description, task.getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    public void init_noName_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"            new Event(\"\", false, \"26/1/2023 2303\", \"26/1/2023 2359\");","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"The description of a task cannot be empty\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    public void hasIcon_eventIcon_returnsTrue() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(true, Event.hasIcon(\"E\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    public void hasIcon_notEventIcon_returnsFalse() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(false, Event.hasIcon(\"not E\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public void dateValidity_invalidFrom_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"            new Event(\"unit test celebrations\", false, \"oh no this is invalid\", \"26/1/2023 2359\");","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"Could not parse \u0027from\u0027 as date time\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    public void dateValidity_invalidTo_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"            new Event(\"unit test celebrations\", false, \"26/1/2023 2359\", \"oh no this is invalid\");","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"Could not parse \u0027to\u0027 as date time\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"    public void markAndUnmark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new Event(\"unit test celebrations\", false, \"26/1/2023 2303\", \"26/1/2023 2359\");","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(false, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"            task.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(true, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"            task.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(false, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"StanleyNeoh":75}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    public void getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"            String description \u003d \"write unit tests\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new Todo(description, false);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(description, task.getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    public void init_noName_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"            new Todo(\"\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"The description of a task cannot be empty\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    public void hasIcon_todoIcon_returnsTrue() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(true, Todo.hasIcon(\"T\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    public void hasIcon_notTodoIcon_returnsFalse() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(false, Todo.hasIcon(\"not T\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public void markAndUnmark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"            Task task \u003d new Todo(\"write unit tests\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(false, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"            task.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(true, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"            task.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(false, task.isCompleted());","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"StanleyNeoh":55}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    public void addAndGet() {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"            Task task0 \u003d new Todo(\"Write unit tests\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"            Task task1 \u003d new Deadline(\"complete unit tests\", false, \"26/1/2023 2303\");","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"            Task task2 \u003d new Event(\"unit test celebrations\", false, \"26/1/2023 2303\", \"26/1/2023 2359\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task0);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task1);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task2);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(tasks.get(0), task0);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(tasks.get(1), task1);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(tasks.get(2), task2);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"    public void delete() {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"            Task task0 \u003d new Todo(\"Write unit tests\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"            Task task1 \u003d new Deadline(\"complete unit tests\", false, \"26/1/2023 2303\");","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"            Task task2 \u003d new Event(\"unit test celebrations\", false, \"26/1/2023 2303\", \"26/1/2023 2359\");","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task0);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task1);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task2);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.delete(1);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(tasks.get(0), task0);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(tasks.get(1), task2);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.get(2);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"The index given is out of range\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    public void matches_testsPattern() {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"        TaskList filteredTasks \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            Task task0 \u003d new Todo(\"Write unit tests\", false);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"            Task task1 \u003d new Deadline(\"complete unit tests\", false, \"26/1/2023 2303\");","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"            Task task2 \u003d new Event(\"unit test celebrations\", false, \"26/1/2023 2303\", \"26/1/2023 2359\");","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task0);","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task1);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"            tasks.add(task2);","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"            filteredTasks \u003d tasks.matches(\"tests\");","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(filteredTasks.get(0), task0);","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(filteredTasks.get(1), task1);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"            fail(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"            filteredTasks.get(2);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"            assertEquals(\"The index given is out of range\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"StanleyNeoh":81}}]
