[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"StefanosAv":16,"-":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     * @param description description of the task.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     * @param by date to be completed by.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     * Returns the string representation of a deadline.","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     * @return the string representation of a deadline.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    public String toString () {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"StefanosAv":28}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"        Circle circle \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"    private void flip() {","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"        db.flip();","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"        return db;","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"StefanosAv":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"StefanosAv"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"StefanosAv"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"StefanosAv"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"StefanosAv"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"StefanosAv"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"StefanosAv"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"StefanosAv"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"StefanosAv"},"content":"        });","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"StefanosAv"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"StefanosAv"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"StefanosAv"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"StefanosAv"},"content":"        });","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"StefanosAv"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"StefanosAv"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"StefanosAv"},"content":"        });","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"StefanosAv"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"StefanosAv"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"StefanosAv"},"content":"        });","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"StefanosAv"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"StefanosAv"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"StefanosAv"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"StefanosAv"},"content":"        stage.show();","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"StefanosAv"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"StefanosAv"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"StefanosAv"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"StefanosAv"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"StefanosAv"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"StefanosAv"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"StefanosAv"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"StefanosAv"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"StefanosAv"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"StefanosAv"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"StefanosAv"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"StefanosAv"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"StefanosAv"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"StefanosAv"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"StefanosAv"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"StefanosAv"},"content":"        );","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"StefanosAv"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"StefanosAv"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"StefanosAv"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"StefanosAv"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"StefanosAv"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"StefanosAv"},"content":"            String output \u003d command.execute(tasks, storage, ui);","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"StefanosAv"},"content":"            return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"StefanosAv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"StefanosAv"},"content":"            return ui.showError(e);","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"StefanosAv"},"content":"     * Loads the list of tasks stored in the text file given by \u0027filepath\u0027.","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"StefanosAv"},"content":"     * @param filePath the path of the stored text file.","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"StefanosAv"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"StefanosAv"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"StefanosAv"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"StefanosAv"},"content":"            tasks \u003d new TaskList(storage.readFromFile());","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"StefanosAv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"StefanosAv"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"StefanosAv"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":153,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"StefanosAv":153}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":" * Exception for handling possible Duke problems.","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     * @param message the message to be displayed","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"        super(message);","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    /*","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     * Exception for handling wrong user input.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    public void WrongCommandException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"        if (this.task.equals(\"wrong\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * Exception for handling user input with empty task description.","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"    public void EmptyDescriptionException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"        switch (this.task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"OOPS!!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"OOPS!!! The description of a deadline task cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"        case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"OOPS!!! The description of an event task cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"     * Exception for handling already marked/unmarked tasks.","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"    public void MarkedException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"        switch (this.task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"        case \"marked\":","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"This task has already been marked as done.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"        case \"unmarked\":","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"This task was already marked as not done.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"     * Exception for handling user input with empty task duration.","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"    public void EmptyTimeException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"        if (this.task.equals(\"empty time\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"Please specify the time the time period for this task.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"    }*/","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"StefanosAv":65}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     * @param description description of event task.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * @param from date/time the event starts.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     * @param to date/time the event ends.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     * Returns the string representation of an event.","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * @return the string representation of an event.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\"))","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"StefanosAv":33}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"public class Launcher {","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"StefanosAv":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"            stage.show();","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"StefanosAv":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage));","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"        );","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"StefanosAv":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"public class Parser {","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"     * Returns true if user input is \"bye\".","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"     * @param command user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     * @return true if user input is \"bye\", false otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    public boolean checkEnd(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"        return command.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     * Returns the command being executed.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     * Returns an error if the input is not in the pre-determined commands.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     * @param command the command to be executed.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     * @return the Command to be executed.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException if input is not in the pre-determined commands.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"            switch(command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"            case \"list\":","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"                return new ListCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"            default:","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"                String[] commands \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"                String firstWord \u003d commands[0].toLowerCase();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"                switch (firstWord) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"                    int i \u003d Integer.parseInt(command.replaceAll(\"mark \", \"\")) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"                    return new MarkCommand(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"                case \"unmark\":","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"                    int j \u003d Integer.parseInt(command.replaceAll(\"unmark \", \"\")) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"                    return new UnmarkCommand(j);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"                    return new DeleteCommand(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"                case \"find\":","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"                    return new FindCommand(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"                    return new ToDoCommand(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"                    return new DeadlineCommand(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"                case \"event\":","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"                    return new EventCommand(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"                default:","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":61}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.io.File;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"public class Storage {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    private String filePath;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     * @param filePath the path of the text file to read/store tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * Reads data from a file, creates new Task objects and stores them in an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     * @return the arrayList\u003cTask\u003e of Tasks stored in the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"     * @throws IOException if an error occurs during reading the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"    public ArrayList\u003cTask\u003e readFromFile() throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"                storeTask(taskList, task);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"            s.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"                Files.createFile(Paths.get(filePath));","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"            } catch (IOException exception) {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"                System.out.println(\"Error: \" + exception.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"        return taskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"     * Creates new Task objects according to the input and adds them to the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"     * @param task task to be added in list.","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"    private void storeTask(ArrayList\u003cTask\u003e taskList, String task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"        char taskType \u003d task.charAt(1);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"        char taskStatus \u003d task.charAt(4);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"        Task newTask;","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"            newTask \u003d new ToDo(task.substring(7));","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"StefanosAv"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"StefanosAv"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(task.substring(task.indexOf(\"(by: \") + 5, task.length() - 1),","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"StefanosAv"},"content":"                    DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"StefanosAv"},"content":"            newTask \u003d new Deadline(task.substring(7, task.indexOf(\" (by:\")), by);","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"StefanosAv"},"content":"        } else if (taskType \u003d\u003d \u0027E\u0027){","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"StefanosAv"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(task.substring(task.indexOf(\"(from: \") + 7, task.indexOf(\"to: \") - 1),","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"StefanosAv"},"content":"                    DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"StefanosAv"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(task.substring(task.indexOf(\"to: \") + 4, task.length() - 1),","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"StefanosAv"},"content":"                    DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"StefanosAv"},"content":"            newTask \u003d new Event(task.substring(7, task.indexOf(\" (from:\")), from, to);","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"StefanosAv"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"There is no such option!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"StefanosAv"},"content":"            newTask \u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"StefanosAv"},"content":"        if (taskStatus \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"StefanosAv"},"content":"            newTask.mark();","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"StefanosAv"},"content":"        taskList.add(newTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"StefanosAv"},"content":"     * Writes the data stored in ArrayList\u003cTask\u003e to a file specified by \u0027filepath\u0027.","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList contains the Tasks to be written in the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"StefanosAv"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"StefanosAv"},"content":"            FileWriter file \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"StefanosAv"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"StefanosAv"},"content":"                file.write(taskList.getTask(i) + System.lineSeparator());","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"StefanosAv"},"content":"            file.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"Your updated list is stored in the file.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"StefanosAv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":105}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"    protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     * @param description of the task.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     * Returns \"X\" if the task is done or \" \" otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     * @return \"X\" if the task is done or \" \" otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * Returns true if the task is marked as done, or false otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     * @return true if the task is marked as done, or false otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"StefanosAv":55}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"public class TaskList {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":30}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * Returns the string representation of a todo task","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"     * @return the string representation of a todo task","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"StefanosAv":22}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"public class Ui {","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"     * Prints welcome message.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"        String output \u003d \"Hello from DUKE!\\n\" + \"What can I help you with?\";","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"        return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     * Creates a Scanner object to read user input.","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    public Ui() {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     * Returns the next command from user input.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * @return the next command from user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"    public String getInput() {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"        return (scanner.nextLine());","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"     * Returns the goodbye message and closes scanner.","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"     * @return goodbye message.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"        String output \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"        scanner.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"        return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"     * Returns message when a task is added to the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"     * @param task the task to be stored in list.","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"     * @return message when a task is added to the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"    public String showTaskAdded(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"        String output \u003d \"I\u0027ve added this task to your list:\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"        output +\u003d task;","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"        return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"    public String printList(TaskList taskList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"            return \"Your list is empty!\";","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"StefanosAv"},"content":"            String output \u003d \"Here is your list:\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"StefanosAv"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"StefanosAv"},"content":"                output +\u003d (i + 1) + \". \" + taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"StefanosAv"},"content":"            return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"StefanosAv"},"content":"     * Returns the task that has been marked as done and the \"marked\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"StefanosAv"},"content":"     * @param task the task to be marked as done.","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"StefanosAv"},"content":"     * @return task that has been marked as done and the \"marked\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"StefanosAv"},"content":"    public String printMark(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"StefanosAv"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"StefanosAv"},"content":"        return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"StefanosAv"},"content":"     * Returns the task that has been marked as not done and the \"unmarked\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"StefanosAv"},"content":"     * @param task task that to be marked as not done.","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"StefanosAv"},"content":"     * @return task that has been marked as not done and the \"unmarked\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"StefanosAv"},"content":"    public String printUnmark(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"StefanosAv"},"content":"        String output \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"StefanosAv"},"content":"        return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"StefanosAv"},"content":"     * Returns the deleted task.","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"StefanosAv"},"content":"     * @param task task to be deleted.","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"StefanosAv"},"content":"     * @return deleted task.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"StefanosAv"},"content":"    public String printDeleteTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"StefanosAv"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task:\\n\" + task.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"StefanosAv"},"content":"        return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"StefanosAv"},"content":"    public String printFind(TaskList taskList, int[] indexArray) {","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"StefanosAv"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"StefanosAv"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"StefanosAv"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"StefanosAv"},"content":"            if (indexArray[i] \u003d\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"StefanosAv"},"content":"                output +\u003d counter + \". \" + taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"StefanosAv"},"content":"                counter++;","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"StefanosAv"},"content":"        return output;","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"StefanosAv"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"StefanosAv"},"content":"        System.out.println( \"There was an error in loading your file!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"StefanosAv"},"content":"    public String showError(DukeException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"StefanosAv"},"content":"        return e.getMessage();","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":125}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    public ByeCommand() {}","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     * Returns the goodbye message.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     * @return goodbye message.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage,  Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"    public boolean checkEnd() {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"        return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"     public abstract String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     public boolean checkEnd() {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"          return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     }","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":14}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import duke.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import duke.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    String command;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     * @param command the task to be added in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    public DeadlineCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * Adds a new deadline task to the list and returns a \"taskAdded\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"     * @return \"taskAdded\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException if input is wrong.","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage,  Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"            Task newTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"            String description \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\"/\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"            String stringDate \u003d command.substring(command.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline task cannot be empty.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"            } else if (stringDate.equals(\"\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"                throw new DukeException(\"Please specify the time the time period for this task.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"                try {","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(stringDate, DateTimeFormatter.ofPattern(\"HH:mm dd-MM-yyyy\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"                    newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"                } catch (Exception e){","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"                    throw new DukeException(\"The time period must be in the format: \u0027HH:mm dd-MM-yyyy\u0027\");","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"            return ui.showTaskAdded(newTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":60}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import duke.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"    String command;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     * @param command the task to be deleted.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     * Returns a \"taskDeleted\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * @return \"taskDeleted\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage,  Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        int index \u003d Integer.parseInt(command.replaceAll(\"delete \", \"\")) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"        Task tempTask \u003d taskList.getTask(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"        return ui.printDeleteTask(tempTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":36}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import duke.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import duke.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    String command;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     * @param command the task to be added in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    public EventCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * Adds a new event task to the list and returns a \"taskAdded\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"     * @return \"taskAdded\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException if input is wrong.","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"            Task newTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"            String description \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\"/from\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"            String stringFrom \u003d command.substring(command.indexOf(\"/from\") + 6, command.indexOf(\" /to\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"            String stringTo \u003d command.substring(command.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"                throw new DukeException(\"OOPS!!! The description of an event task cannot be empty.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"            } else if (stringFrom.equals(\"\") || stringTo.equals(\"\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"                throw new DukeException(\"Please specify the time the time period for this task.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"                try {","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(stringFrom, DateTimeFormatter.ofPattern(\"HH:mm dd-MM-yyyy\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(stringTo, DateTimeFormatter.ofPattern(\"HH:mm dd-MM-yyyy\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"                    newTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"                    throw new DukeException(\"The time period must be in the format: \u0027HH:mm dd-MM-yyyy\u0027\");","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"            return ui.showTaskAdded(newTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":63}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    String command;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * @param command the task to be found in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     * Finds and returns the items in the list that include the keyword given.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     * Returns an error message otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * @return list of items.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        String keyword \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"        int[] indexArray \u003d new int[taskList.getSize()];","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"        boolean isContained \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"            if (taskList.getTask(i).toString().contains(keyword)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"                indexArray[i] \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"                isContained \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"        if (!isContained) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"            return \"There are no such items in your list!\";","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"            return ui.printFind(taskList, indexArray);","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":48}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    public ListCommand() {}","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"        return ui.printList(taskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":25}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    int index;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * @param index index of item to be marked.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     * Marks a task as done and returns a \"taskMarked\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     * Returns an error if task was already marked.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * @return \"taskMarked\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException if task was already marked.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"            if (taskList.getTask(index).isDone()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"                throw new DukeException(\"This task has already been marked as done.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"                taskList.getTask(index).mark();","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"                return ui.printMark(taskList.getTask(index));","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":42}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import duke.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import duke.ToDo;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    String command;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"     * @param command task to be added in list.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    public ToDoCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"     * Adds a new todo task to the list and returns a \"taskAdded\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * @return \"taskAdded\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException if input is wrong.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"            Task newTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"            String description \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"                newTask \u003d new ToDo(command.substring(command.indexOf(\" \") + 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"            return ui.showTaskAdded(newTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":49}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    int index;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * @param index index of item to be marked as not done.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     * Marks a task as not done and returns a \"taskUnmarked\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     * Returns an error if task was already marked as not done.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"     * @param storage the items read from the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * @param ui methods to be used to interact with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * @return \"taskMarked\" message.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * @throws DukeException if task was already unmarked.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"            if (taskList.getTask(index).isDone()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"                taskList.getTask(index).unmark();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"                return ui.printUnmark(taskList.getTask(index));","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"                throw new DukeException(\"This task was already marked as not done.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"StefanosAv":42}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"StefanosAv":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"StefanosAv":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"    public void trueCheckEndTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"        String command \u003d \"bye\";","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(true, parser.checkEnd(command));","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    public void falseCheckEndTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"        String command \u003d \"hello\";","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(false, parser.checkEnd(command));","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":22}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import duke.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import duke.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import duke.ToDo;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    public void toDoTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"        ToDo task \u003d new ToDo(\"do something\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(\"[T][ ] do something\", task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    public void deadlineTest(){","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        Deadline task \u003d new Deadline(\"reach deadline\", \"15:30 20-04-2018\");","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(\"[D][ ] reach deadline (by: 15:30, Friday, Apr 20 2018)\", task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    public void eventTest(){","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"        Event task \u003d new Event(\"go to event\", \"12:00 11-11-1234\", \"14:00 11-11-1234\");","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(\"[E][ ] go to event (from: 12:00, Saturday, Nov 11 1234 to: 14:00, Saturday, Nov 11 1234)\",","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"                task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"deadline visit library /by Monday","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"todo borrow book","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"deadline start working on project /by 25/01/23","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"mark 1","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"mark 2","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"event visit museum /from Thu 2pm /to 4pm","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"mark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"unmark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"StefanosAv":11}}]
