[{"path":"src/main/java/seedu/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     * @param description description of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     * @param by date to be completed by","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"HH:mm dd-MM-yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor to be used when reading from files.","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     * @param description description of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"     * @param by date to be completed by","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"     * Returns the string representation of a deadline.","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"     * @return the string representation of a deadline","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"    public String toString () {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"StefanosAv":39}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     * Loads the list of tasks stored in the text file given by \u0027filepath\u0027.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * @param filePath the path of the stored text file","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"            tasks \u003d new TaskList(storage.readFromFile());","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * Executes the program managing tasks until user inputs \"bye\".","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    public void run() {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        boolean isEnd \u003d false;","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"        while (!isEnd) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"                String input \u003d ui.getInput();","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"                parser \u003d new Parser();","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"                parser.parse(input, tasks, storage, ui);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"                isEnd \u003d parser.checkEnd(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"                ui.showGenericError();","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"StefanosAv":48,"-":1}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":" * Exception for handling possible Duke problems.","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"    private String task;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     * @param task the description of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    public DukeException(String task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     * Exception for handling wrong user input.","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    public void WrongCommandException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"        if (this.task.equals(\"wrong\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * Exception for handling user input with empty task description.","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    public void EmptyDescriptionException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        switch (this.task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"                System.out.println(\"OOPS!!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"                System.out.println(\"OOPS!!! The description of a deadline task cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"            case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"                System.out.println(\"OOPS!!! The description of an event task cannot be empty.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"     * Exception for handling already marked/unmarked tasks.","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"    public void MarkedException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"        switch (this.task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"            case \"marked\":","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"                System.out.println(\"This task has already been marked as done.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"            case \"unmarked\":","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"                System.out.println(\"This task was already marked as not done.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"     * Exception for handling user input with empty task duration.","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"    public void EmptyTimeException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"        if (this.task.equals(\"empty time\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"Please specify the time the time period for this task.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"StefanosAv":66}},{"path":"src/main/java/seedu/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"     * @param description description of event task","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * @param from date/time the event starts","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     * @param to date/time the event ends","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"        this.from \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"HH:mm dd-MM-yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        this.to \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"HH:mm dd-MM-yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor to be used when reading from files.","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"     * @param description description of event task","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * @param from date/time the event starts","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     * @param to date/time the event ends","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"     * Returns the string representation of an event.","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"     * @return the string representation of an event","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\"))","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"StefanosAv":45}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"public class Parser {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"     * Returns true if user input is \"bye\".","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"     * @param command user input","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"     * @return true if user input is \"bye\", false otherwise","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"    public boolean checkEnd(String command) {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"            return true;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"        return false;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    public void parse(String command, TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"            // check if user inputs \"bye\"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"            if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"                ui.showGoodbye();","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"            // check if user inputs \"list\" and display items in list","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"            else if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"                if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"                    System.out.println(\"Your list is empty!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"                } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"                    for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"                        System.out.println(i + 1 + \". \" + taskList.getTask(i));","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"            } else if (command.startsWith(\"mark \") || command.startsWith(\"unmark \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"                    // Mark task as done","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"                    if (command.substring(0, command.indexOf(\" \")).equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"                        int index \u003d Integer.parseInt(command.replaceAll(\"mark \", \"\")) - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"                        if (taskList.getTask(index).isDone()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"                            throw new DukeException(\"marked\");","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"                        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"                            taskList.getTask(index).mark();","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"                    // Unmark task","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"                    else if (command.substring(0, command.indexOf(\" \")).equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"                        int index \u003d Integer.parseInt(command.replaceAll(\"unmark \", \"\")) - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"                        if (taskList.getTask(index).isDone()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"                            taskList.getTask(index).unmark();","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"                        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"                            throw new DukeException(\"unmarked\");","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"                    e.MarkedException();","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"            // Delete a task","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"            else if (command.toLowerCase().startsWith(\"delete \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"                int index \u003d Integer.parseInt(command.replaceAll(\"delete \", \"\")) - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"                Task tempTask \u003d taskList.getTask(index);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"                taskList.deleteTask(index);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\" + \"\\n\" + tempTask.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"            } else if (command.toLowerCase().startsWith(\"find \")){","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"                String keyword \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"                int[] indexArray \u003d new int[taskList.getSize()];","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"StefanosAv"},"content":"                boolean iscontained \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"StefanosAv"},"content":"                for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"StefanosAv"},"content":"                    if (taskList.getTask(i).description.contains(keyword)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"StefanosAv"},"content":"                        indexArray[i] \u003d 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"StefanosAv"},"content":"                        iscontained \u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"StefanosAv"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"StefanosAv"},"content":"                if (!iscontained) {","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"StefanosAv"},"content":"                    System.out.println(\"There are no such items in your list!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"StefanosAv"},"content":"                } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"StefanosAv"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"StefanosAv"},"content":"                    for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"StefanosAv"},"content":"                        if (indexArray[i] \u003d\u003d 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"StefanosAv"},"content":"                            System.out.println(taskList.getTask(i));","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"StefanosAv"},"content":"                        }","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"StefanosAv"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"StefanosAv"},"content":"            } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"StefanosAv"},"content":"                try {","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"StefanosAv"},"content":"                    Task newTask;","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"StefanosAv"},"content":"                    // Create new ToDo task","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"StefanosAv"},"content":"                    if (command.toLowerCase().startsWith(\"todo \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"StefanosAv"},"content":"                        String description \u003d command.substring(command.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"StefanosAv"},"content":"                        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"StefanosAv"},"content":"                            throw new DukeException(\"todo\");","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"StefanosAv"},"content":"                        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"StefanosAv"},"content":"                            newTask \u003d new ToDo(command.substring(command.indexOf(\" \") + 1));","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"StefanosAv"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"StefanosAv"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"StefanosAv"},"content":"                    // Create new Deadline task","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"StefanosAv"},"content":"                    else if (command.toLowerCase().startsWith(\"deadline \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"StefanosAv"},"content":"                        String description \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\"/\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"StefanosAv"},"content":"                        String by \u003d command.substring(command.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"StefanosAv"},"content":"                        System.out.println(description + \" - \" + by);","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"StefanosAv"},"content":"                        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"StefanosAv"},"content":"                            throw new DukeException(\"deadline\");","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"StefanosAv"},"content":"                        } else if (by.equals(\"\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"StefanosAv"},"content":"                            throw new DukeException(\"empty time\");","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"StefanosAv"},"content":"                        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"StefanosAv"},"content":"                            newTask \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"StefanosAv"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"StefanosAv"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"StefanosAv"},"content":"                    // Create new Event task","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"StefanosAv"},"content":"                    else if (command.toLowerCase().startsWith(\"event \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"StefanosAv"},"content":"                        String description \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\"/from\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"StefanosAv"},"content":"                        String from \u003d command.substring(command.indexOf(\"/from\") + 6, command.indexOf(\" /to\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"StefanosAv"},"content":"                        String to \u003d command.substring(command.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"StefanosAv"},"content":"                        if (description.equals(\"\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"StefanosAv"},"content":"                            throw new DukeException(\"event\");","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"StefanosAv"},"content":"                        } else if (from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"StefanosAv"},"content":"                            throw new DukeException(\"empty time\");","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"StefanosAv"},"content":"                        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"StefanosAv"},"content":"                            newTask \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"StefanosAv"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":126,"author":{"gitId":"StefanosAv"},"content":"                    } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"StefanosAv"},"content":"                        throw new DukeException(\"wrong\");","lastModifiedDate":"2023-02-08"},{"lineNumber":128,"author":{"gitId":"StefanosAv"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"StefanosAv"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":130,"author":{"gitId":"StefanosAv"},"content":"                    ui.showTaskAdded(newTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":131,"author":{"gitId":"StefanosAv"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":132,"author":{"gitId":"StefanosAv"},"content":"                    e.WrongCommandException();","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"StefanosAv"},"content":"                    e.EmptyDescriptionException();","lastModifiedDate":"2023-02-08"},{"lineNumber":134,"author":{"gitId":"StefanosAv"},"content":"                    e.EmptyTimeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":135,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":136,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":137,"author":{"gitId":"StefanosAv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":138,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"StefanosAv"},"content":"        } finally {","lastModifiedDate":"2023-02-08"},{"lineNumber":140,"author":{"gitId":"StefanosAv"},"content":"            storage.writeToFile(taskList);","lastModifiedDate":"2023-02-08"},{"lineNumber":141,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":143,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":144}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.io.File;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"public class Storage {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    private String filePath;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"     * @param filePath the path of the text file to read/store tasks","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"     * Reads data from a file, creates new Task objects and stores them in an ArrayList\u003cTask\u003e.","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     * @return the arrayList\u003cTask\u003e of Tasks stored in the file","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"     * @throws IOException if an error occurs during reading the file","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"    public ArrayList\u003cTask\u003e readFromFile() throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"                char taskType \u003d task.charAt(1);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"                char taskStatus \u003d task.charAt(4);","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"                Task newTask;","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"                    newTask \u003d new ToDo(task.substring(7));","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"                else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(task.substring(task.indexOf(\"(by: \") + 5, task.length() - 1),","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"                            DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"                    newTask \u003d new Deadline(task.substring(7, task.indexOf(\" (by:\")), by);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"                else if (taskType \u003d\u003d \u0027E\u0027){","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(task.substring(task.indexOf(\"(from: \") + 7, task.indexOf(\"to: \") - 1),","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"                            DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(task.substring(task.indexOf(\"to: \") + 4, task.length() - 1),","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"                            DateTimeFormatter.ofPattern(\"HH:mm, EEEE, MMM dd yyyy\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"                    newTask \u003d new Event(task.substring(7, task.indexOf(\" (from:\")), from, to);","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"                else {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"                    System.out.println(\"There is no such option!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"                    newTask \u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"                if (taskStatus \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"StefanosAv"},"content":"                    newTask.mark();","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"StefanosAv"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"StefanosAv"},"content":"                taskList.add(newTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"StefanosAv"},"content":"            s.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"StefanosAv"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"StefanosAv"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"StefanosAv"},"content":"                Files.createDirectories(Paths.get(filePath));","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"StefanosAv"},"content":"                File file \u003d new File(filePath);","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"StefanosAv"},"content":"            } catch (IOException exception) {","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"StefanosAv"},"content":"                System.out.println(\"Error: \" + exception.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"StefanosAv"},"content":"        return taskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"StefanosAv"},"content":"     * Writes the data stored in ArrayList\u003cTask\u003e to a file specified by \u0027filepath\u0027.","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"StefanosAv"},"content":"     * @param taskList contains the Tasks to be written in the file","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"StefanosAv"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"StefanosAv"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"StefanosAv"},"content":"            FileWriter file \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"StefanosAv"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"StefanosAv"},"content":"                file.write(taskList.getTask(i) + System.lineSeparator());","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"StefanosAv"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"StefanosAv"},"content":"            file.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"Your updated list is stored in the file.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"StefanosAv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"StefanosAv"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"StefanosAv"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":99}},{"path":"src/main/java/seedu/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"    protected String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    // Mark task as done","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    public void mark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + this);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    // Unmark task","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" + this);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"StefanosAv":38}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"public class TaskList {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":30}},{"path":"src/main/java/seedu/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"     * Class constructor.","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"     * Returns the string representation of a todo task","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"     * @return the string representation of a todo task","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"StefanosAv":22}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"public class Ui {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"    private final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    private final String HELP_STR \u003d \"What can I help you with?\";","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"    private final String BYE_STR \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    private final String TASK_ADDED \u003d \"I\u0027ve added this task to your list:\";","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"    private Scanner s;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"     * Prints welcome message.","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(HELP_STR);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"     * Creates a Scanner object to read user input.","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"StefanosAv"},"content":"    public Ui() {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"StefanosAv"},"content":"        this.s \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"StefanosAv"},"content":"     * Returns the next command from user input.","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"StefanosAv"},"content":"     * @return the next command from user input","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"StefanosAv"},"content":"    public String getInput() {","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"StefanosAv"},"content":"        return (s.nextLine());","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"StefanosAv"},"content":"     * Prints goodbye message and closes scanner.","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"StefanosAv"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(BYE_STR);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"StefanosAv"},"content":"        s.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"StefanosAv"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"StefanosAv"},"content":"     * Prints message when a task is added to the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"StefanosAv"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"StefanosAv"},"content":"     * @param task the task to be stored in list","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"StefanosAv"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"StefanosAv"},"content":"    public void showTaskAdded(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(TASK_ADDED);","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"StefanosAv"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(\"There was an error in loading your file!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"StefanosAv"},"content":"    public void showGenericError() {","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"StefanosAv"},"content":"        System.out.println(\"Error!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":69}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    public void trueCheckEndTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"        String command \u003d \"bye\";","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(true, parser.checkEnd(command));","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    public void falseCheckEndTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        String command \u003d \"hello\";","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(false, parser.checkEnd(command));","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":21}},{"path":"src/test/java/seedu/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"    public void toDoTest() {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"        ToDo task \u003d new ToDo(\"do something\");","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(\"[T][ ] do something\", task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"StefanosAv"},"content":"    public void deadlineTest(){","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"StefanosAv"},"content":"        Deadline task \u003d new Deadline(\"reach deadline\", \"15:30 20-04-2018\");","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"StefanosAv"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(\"[D][ ] reach deadline (by: 15:30, Friday, Apr 20 2018)\", task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"StefanosAv"},"content":"    @Test","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"StefanosAv"},"content":"    public void eventTest(){","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"StefanosAv"},"content":"        Event task \u003d new Event(\"go to event\", \"12:00 11-11-1234\", \"14:00 11-11-1234\");","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"StefanosAv"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"StefanosAv"},"content":"        assertEquals(\"[E][ ] go to event (from: 12:00, Saturday, Nov 11 1234 to: 14:00, Saturday, Nov 11 1234)\",","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"StefanosAv"},"content":"                task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"StefanosAv"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"StefanosAv"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"StefanosAv"},"content":"","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"StefanosAv":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StefanosAv"},"content":"deadline visit library /by Monday","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"StefanosAv"},"content":"todo borrow book","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"StefanosAv"},"content":"deadline start working on project /by 25/01/23","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"StefanosAv"},"content":"mark 1","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"StefanosAv"},"content":"mark 2","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"StefanosAv"},"content":"event visit museum /from Thu 2pm /to 4pm","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"StefanosAv"},"content":"mark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"StefanosAv"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"StefanosAv"},"content":"unmark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"StefanosAv"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"StefanosAv"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"StefanosAv":11}}]
