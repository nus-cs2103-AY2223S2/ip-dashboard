[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TabrizPlv":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"    mainClassName \u003d \"duke.javafx.Launcher\"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"checkstyle{","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"TabrizPlv":21,"-":40}},{"path":"data/duke.Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"TD|false|I","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"D|false|Love |2000-02-16","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"E|false|CS2103 |2023-02-16T14:26|2023-02-26T18:00","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"TabrizPlv":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"### Feature-Add tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"Add different types of Tasks. The types of tasks available are:","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"- To Dos","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"- Deadlines","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"- Events","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"### Feature-Delete tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"Remove unwanted tasks from the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"### Feature-Mark tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"Mark tasks as **done** or **undone**","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"### Feature-Find tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"Find tasks using a specific keyword","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"### `todo` - Adds a todo to the list","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"Specify a task and it will be added to the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"todo Download Duke","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"[T][ ] Download Duke added to the list","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"### `deadline` - Adds a deadline to the list","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"Specify a task and it\u0027s deadline. It will be added to the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"deadline Download Duke /by 2000-10-15","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"[D][ ] Download Duke (By: Oct 15 2000) added to the list","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"### `event` - Adds an event to the list","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"Specify a task, its starting date and time and ending date and time.","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"This event will be added to the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"event Download Duke /from 2000-10-15 12:00 /by 2000-10-20 13:45","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"[E][ ] Download Duke (From: Sunday October 15 2000 12:00 By: Friday October 20 2000 13:45)","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"### `mark` - Marks a task as completed","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"Specify a task to be marked as completed. Tasks are specified by their numbering in the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"todo Download Duke","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"mark 1","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"[T][X] Download Duke is marked as done","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"### `unmark` - Marks a task as completed","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"Specify a task to be marked as incomplete. Tasks are specified by their numbering in the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"todo Download Duke","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"unmark 1","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"[T][ ] Download Duke is unmarked","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"Specify a task to be deleted from the list. Tasks are specified by their numbering in the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"todo Download Duke","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"delete 1","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"[T][X] Download Duke is deleted","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"### `find` - Finds tasks related to keyword","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"Input a keyword and all tasks related to the keyword in the list are returned.","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"Example of usage:","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"todo Download Duke","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"find Download","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"Expected outcome:","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"[T][ ] Download Duke","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"TabrizPlv":77,"-":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import duke.javafx.MainWindow;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"            stage.show();","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":30}},{"path":"src/main/java/duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"/** Custom exceptions*/","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"public class DukeExceptions extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"    public DukeExceptions(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"        super(s);","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":" * Class for parsing all user inputs","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"     * Parses user input to a ToDo object","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"     * @param input the user input given","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"     * @return a ToDo object","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    public static ToDo parseToDo(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        String desc \u003d toDoDesc(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"            if (desc.equals(\"\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Description cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        return new ToDo(desc);","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"     * Retrieves description of ToDo input","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"     * @param input user\u0027s input","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"     * @return description of ToDo","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"    public static String toDoDesc(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"        return input.substring(5);","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"     * Retrieves description of Deadline input","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"     * @param input user\u0027s input","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"     * @return description of Deadline","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"    public static String deadlineDesc(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        String[] inp \u003d input.split(\"/\");","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        return inp[0].substring(9);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"     * Retrieves date of Deadline input","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"     * @param input user\u0027s input","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"     * @return Date of Deadline","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"    public static String deadlineDate(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"        String[] inp \u003d input.split(\"/\");","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"        return inp[1].substring(3);","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"     * Parses String to LocalDateTime","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"     * @param input String in the form of yyyy-dd-mm HH:MM","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"     * @return LocalDateTime of input","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"    public static LocalDateTime parseLocalDateTime(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"        String[] dnt \u003d input.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"        String date \u003d dnt[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"        String time \u003d dnt[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime dnT \u003d LocalDateTime.parse(String.join(\"T\", date, time));","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"        return dnT;","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"     * Parses user input to a Deadline object","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"     * @param input the user input given","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"     * @return a Deadline object","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"    public static Deadline parseDeadline(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"        String inp \u003d input.substring(9);","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"        try { //catching no desc and no deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"            if (inp.equals(\"\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"        try { //catching no deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"            String deadline \u003d deadlineDate(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"Please input a deadline!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"        try { //catching no description","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"            String desc \u003d deadlineDesc(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"            if (desc.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Description cannot be empty!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"        String desc \u003d deadlineDesc(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"        String deadline \u003d deadlineDate(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"        LocalDate date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"        return new Deadline(desc, date);","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"     * Parses user input for creating event","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"TabrizPlv"},"content":"     * @param input user\u0027s input","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"TabrizPlv"},"content":"     * @return an Event object","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"TabrizPlv"},"content":"    public static Event parseEvent(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"TabrizPlv"},"content":"        try { //catching no desc and no deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"TabrizPlv"},"content":"            if (input.substring(6).equals(\"\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Input cannot be empty!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"TabrizPlv"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"TabrizPlv"},"content":"        //event haha /from 2000-20-20 13:00 /to 2000-20-02 13:15","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"TabrizPlv"},"content":"        String[] inp \u003d input.split(\"/\");","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"TabrizPlv"},"content":"        try { //Catching for input format error","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"TabrizPlv"},"content":"            if (inp.length !\u003d 3) {","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Format is task, start, end!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"TabrizPlv"},"content":"        } catch (DukeExceptions de) {","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(de.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"TabrizPlv"},"content":"        String start \u003d inp[1].substring(5);","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"TabrizPlv"},"content":"        String end \u003d inp[2].substring(3);","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime startDnT \u003d parseLocalDateTime(start);","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime endDnT \u003d parseLocalDateTime(end);","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"TabrizPlv"},"content":"        String undesc \u003d inp[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"TabrizPlv"},"content":"        String desc \u003d undesc.substring(6);","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"TabrizPlv"},"content":"        try { //catching for empty description","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"TabrizPlv"},"content":"            if (desc.equals(\"\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Description cannot be empty!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"TabrizPlv"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"TabrizPlv"},"content":"        Event ev \u003d new Event(desc, startDnT, endDnT);","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"TabrizPlv"},"content":"        return ev;","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":143}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"/** Loads and saves tasks from file*/","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    /** User\u0027s root directory path*/","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"    private static final String userDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    /** Data directory path*/","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    private static final Path dataDirPath \u003d Paths.get(userDir, \"data\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"    /** duke.txt file path*/","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    private static final Path dataFilePath \u003d Paths.get(userDir, \"data\", \"duke.Duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"     * Creates data directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    public static void createDataDir() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"            if (!Files.exists(dataDirPath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"                Files.createDirectory(dataDirPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"An error occurred while trying to create directory\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"     * Creates duke.txt if it doesn\u0027t exist. Reads data from duke.txt otherwise","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"     * @return ArrayList of all Tasks in duke.txt","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        //Create duke.Duke.txt inside data dir if it doesn\u0027t exist","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        if (!Files.exists(dataFilePath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"                Files.createFile(dataFilePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"An error occurred while trying to create duke.Duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"        List\u003cString\u003e data \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"        //if duke.Duke.txt exists, read from it","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"            data \u003d Files.readAllLines(dataFilePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"An error occurred while trying to read duke.Duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"        assert data !\u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"        for (String x: data) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"            String[] inp \u003d x.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"            String type \u003d inp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"                Task tsk \u003d new Task(inp[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"                tsk.setIsDone(Boolean.parseBoolean(inp[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"                tasks.add(tsk);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"            } else if (type.equals(\"TD\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"                ToDo td \u003d new ToDo(inp[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"                td.setIsDone(Boolean.parseBoolean(inp[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"                tasks.add(td);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"                Deadline d \u003d new Deadline(inp[2], LocalDate.parse(inp[3]));","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"                d.setIsDone(Boolean.parseBoolean(inp[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"                tasks.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"                Event e \u003d new Event(inp[2], LocalDateTime.parse(inp[3]),","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"                        LocalDateTime.parse(inp[4]));","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"                e.setIsDone(Boolean.parseBoolean(inp[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"                tasks.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"     * Writes into duke.txt","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"     * @param allData is an ArrayList containing all Tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"    public static void upload(ArrayList\u003cTask\u003e allData) {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"        assert !allData.isEmpty();","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"        ArrayList\u003cString\u003e writing \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"        for (Task x : allData) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"            writing.add(x.toFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"            Files.write(dataFilePath, writing);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"Error while writing to file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":105}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"/** List containing all Tasks*/","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    /** ArrayList containing all Tasks*/","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"     * Adds a task to the list","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"     * @param tsk is Task to be added","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    public void addTask(Task tsk) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"        this.tasks.add(tsk);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"     * Removes a task from the list","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"     * @param id is id of Task to be removed","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    public void removeTask(int id) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"        this.tasks.remove(id);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"     * Handles the list command from user","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"     * @return list of all Tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"    public String handleList() {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"        try { //check if list is empty","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"List is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"        } catch (DukeExceptions de) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"            return \"List is empty!\";","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"            output +\u003d i + 1 + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"        return output;","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"    private String handleBye() {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"        Storage.upload(this.tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"        return \"Bye!!!!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"    private String handleMark(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"        String[] inp \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"        int id \u003d Integer.parseInt(inp[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"            Task marked \u003d tasks.get(id - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"            marked.setIsDone(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"            return \"Duke wants to be productive too...\\n\" + marked;","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"            return \"Uhhhhh Duke cant find it...\";","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"    private String handleUnmark(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"        String[] inp \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"        int id \u003d Integer.parseInt(inp[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"            Task unmarked \u003d tasks.get(id - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"            unmarked.setIsDone(false);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"            return \"Duke says come back to it later....\\n\" + unmarked;","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"            return \"Uhhhhh Duke cant find it...\";","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"    private String handleToDo(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"        ToDo processed \u003d Parser.parseToDo(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"        addTask(processed);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"        return \"Duke done adding todo...\\n\" + processed;","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"    private String handleDeadline(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"        Deadline dl \u003d Parser.parseDeadline(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"        addTask(dl);","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"        return \"Duke done adding deadline...\\n\" + dl;","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"    private String handleEvent(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"        Event ev \u003d Parser.parseEvent(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"        addTask(ev);","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"        return \"Duke done adding event...\\n\" + ev;","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"    private String handleDelete(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"        String[] inp \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"        int id \u003d Integer.parseInt(inp[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"        Task item \u003d tasks.get(id - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"TabrizPlv"},"content":"            removeTask(id - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"TabrizPlv"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"Uhhhhh Duke cant find it...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"TabrizPlv"},"content":"        return \"Farewell...\\n\" + item;","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"TabrizPlv"},"content":"     * Finds tasks in the list that matches keyword","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"TabrizPlv"},"content":"     * @param input is user\u0027s input","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"TabrizPlv"},"content":"    private String handleFind(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"TabrizPlv"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"TabrizPlv"},"content":"        String keyword \u003d input.substring(5).toLowerCase();","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"TabrizPlv"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"TabrizPlv"},"content":"        for (Task tsk : tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"TabrizPlv"},"content":"            String desc \u003d tsk.getDesc().toLowerCase();","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"TabrizPlv"},"content":"            if (desc.contains(keyword)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"TabrizPlv"},"content":"                tasksFound.add(tsk);","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"TabrizPlv"},"content":"        for (int i \u003d 0; i \u003c tasksFound.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"TabrizPlv"},"content":"            output +\u003d i + 1 + \". \" + tasksFound.get(i) + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"TabrizPlv"},"content":"        if (output.equals(\"\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"TabrizPlv"},"content":"            return \"Uhhhhh Duke cant find any...\";","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"TabrizPlv"},"content":"        return output;","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"TabrizPlv"},"content":"     * Processes all input commands","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"TabrizPlv"},"content":"     * @param input is user\u0027s input","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"TabrizPlv"},"content":"    public String handleInput(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"TabrizPlv"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"TabrizPlv"},"content":"            return handleList();","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"TabrizPlv"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"TabrizPlv"},"content":"            return handleBye();","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"TabrizPlv"},"content":"        if (input.startsWith(\"mark \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"TabrizPlv"},"content":"            return handleMark(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"TabrizPlv"},"content":"        if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"TabrizPlv"},"content":"            return handleUnmark(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"TabrizPlv"},"content":"        if (input.startsWith(\"todo \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"TabrizPlv"},"content":"            return handleToDo(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"TabrizPlv"},"content":"        if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"TabrizPlv"},"content":"            return handleDeadline(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"TabrizPlv"},"content":"        if (input.startsWith(\"event \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"TabrizPlv"},"content":"            return handleEvent(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"TabrizPlv"},"content":"        if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"TabrizPlv"},"content":"            return handleDelete(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"TabrizPlv"},"content":"        if (input.startsWith(\"find \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"TabrizPlv"},"content":"            return handleFind(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":165,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"TabrizPlv"},"content":"        return \"Duke does not understand....\";","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":168}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"/** Contains all UI for text*/","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"    /** Creates the introduction*/","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"    public static void intro() {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":7,"-":7}},{"path":"src/main/java/duke/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.javafx;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"        dialog.setTextFill(Color.web(\"#DC6627\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"        dialog.setFont(Font.font(\"Times New Roman\", 14));","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"TabrizPlv":64}},{"path":"src/main/java/duke/javafx/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.javafx;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"public class Launcher {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"TabrizPlv":13}},{"path":"src/main/java/duke/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.javafx;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"    /** To initalise the main stage of JavaFX*/","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        this.tasks \u003d loadTextFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"        String intro \u003d \"Hurr..... I\u0027m Duke.....\";","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"                DialogBox.getDukeDialog(intro, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"    private TaskList loadTextFile() {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        Storage.createDataDir();","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        TaskList tasks \u003d new TaskList(Storage.load());","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"        return tasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"     * Creates two dialog boxes, one taking user\u0027s command and the other","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"     * returning Duke\u0027s reply to the command. Clears the user input after processing.","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"        String response \u003d tasks.handleInput(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"TabrizPlv":66}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":" * Class for deadlines","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"     * @param description the task","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"     * @param deadline the deadline","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"     * Process Deadline to String to store in duke.txt","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"     * @return Processed String","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        return \"D|\" + this.isDone + \"|\" + this.desc + \"|\" + this.deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"        String parsedDeadline \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"        return \"[D][\" + statusIcon + \"] \" + this.desc + \"(By: \" + parsedDeadline + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":35}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":" * Class for Event Objects","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"     * Constructor for Events","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"     * @param description task for the event","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"     * @param start start time for the event","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"     * @param end end time for the event","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"     * Processes Event to String to store in duke.txt","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"     * @return Processed String","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"        return \"E|\" + this.isDone + \"|\" + this.desc + \"|\" + this.start + \"|\" + this.end;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"        DateTimeFormatter customFormat \u003d DateTimeFormatter.ofPattern(\"eeee MMMM d u HH:mm\");","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"        String startDnT \u003d start.format(customFormat);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"        String endDnT \u003d end.format(customFormat);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        return \"[E][\" + statusIcon + \"] \" + this.desc + \"(From: \" + startDnT + \" By: \" + endDnT + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":40}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":" * Class that models all Tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"    /** Description of the task*/","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"    protected String desc;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    /** if task is completed*/","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"     * Constructor for Task","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"     * @param description task","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"        this.desc \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"    public void setIsDone(boolean status) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    public String getDesc() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        return this.desc;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"     * Process Task to String to store in duke.txt","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"     * @return Processed String","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        return \"T|\" + this.desc;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"        return \"[\" + statusIcon + \"] \" + this.desc;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":41}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":" * Class that models a ToDo task","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"     * Process ToDo to String to store in duke.txt","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"     * @return Processed String","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"        return \"TD|\" + this.isDone + \"|\" + this.desc;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"        return \"[T][\" + statusIcon + \"] \" + this.desc;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: transparent;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"        \u003cLabel fx:id\u003d\"dialog\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"            \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"101.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-background-color: transparent;\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"            \u003cImage url\u003d\"@../images/duke.png\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"         \u003c/image\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"TabrizPlv":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.javafx.MainWindow\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"CENTER\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Tell Duke something!\" style\u003d\"-fx-background-color: #0ca6a3; -fx-border-color: black; -fx-prompt-text-fill: #e1ed2f;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"            \u003cFont name\u003d\"Times New Roman Italic\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #db3270; -fx-border-color: black;\" text\u003d\"Send\" textFill\u003d\"#55dc92\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"            \u003cFont name\u003d\"Arial Bold Italic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"      \u003c/Button\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"556.0\" prefWidth\u003d\"387.0\" style\u003d\"-fx-background-color: #dec69e;\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"TabrizPlv":27}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    public void setIsDone_true_returnTrue() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(\"run\");","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"        tsk.setIsDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(tsk.isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    public void getStatusIcon_false_returnSpace() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(\"run\");","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"        String ans \u003d tsk.getStatusIcon();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(\" \", ans);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    public void getStatusIcon_true_returnX() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(\"run\");","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        tsk.setIsDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        String ans \u003d tsk.getStatusIcon();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(\"X\", ans);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"    public void toFile_format_returnFormatted() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(\"run\");","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"        String expected \u003d \"T|run\";","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(expected, tsk.toFile());","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"    public void toString_format_returnFormatted() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(\"run\");","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        String expected \u003d \"[ ] run\";","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(expected, tsk.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"TabrizPlv":45}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    //test setup","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    private ToDo td \u003d new ToDo(\"run\");","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"    public void toFile_format_returnFormatted() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"        String expected \u003d \"TD|false|run\";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(td.toFile(), expected);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    public void toString_format_returnFormatted() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        String expected \u003d \"[T][ ] run\";","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(expected, td.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"TabrizPlv":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"TabrizPlv":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TabrizPlv":1,"-":20}}]
