[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TabrizPlv":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"public class Duke {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"    public static void main(String[] args) throws DukeExceptions {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"        Ui.intro();","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"        Storage.createDataDir();","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"        TaskList tasks \u003d new TaskList(Storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"        System.out.println(\"Hey! This is duke.Duke at your service!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"        while(myObj.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"            String input \u003d myObj.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"            tasks.handleInput(input);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":17}},{"path":"src/main/java/duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"public class DukeExceptions extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"    public DukeExceptions(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"        super(s);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import duke.Tasks.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    public static ToDo parseToDo(int size, String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"        String td \u003d input.substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"            if(td.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Description cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"        } catch(DukeExceptions e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"Description cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"        return new ToDo(size + 1, td);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    public static Deadline parseDeadline(int size, String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"        try { //catching no desc and no deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"            if(input.substring(9).equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        } catch(DukeExceptions e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"        String[] inp \u003d input.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"        try { //catching no deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"            String deadline \u003d inp[1].substring(3);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"        } catch(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"Please input a deadline!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"        try { //catching no description","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"            String undesc \u003d inp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"            String desc \u003d undesc.substring(9);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"            if(desc.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"                throw new DukeExceptions(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        } catch(DukeExceptions e){","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"Description cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        String deadline \u003d inp[1].substring(3);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        LocalDate date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        String undesc \u003d inp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"        String desc \u003d undesc.substring(9);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"        return new Deadline(size + 1, desc, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":51}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"import duke.Tasks.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"//deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"    private static final String userDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    private static final Path dataDirPath \u003d Paths.get(userDir, \"data\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    private static final Path dataFilePath \u003d Paths.get(userDir, \"data\", \"duke.Duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    //Create the data dir if it doesn\u0027t exist","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"    public static void createDataDir() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"            if(!Files.exists(dataDirPath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"                Files.createDirectory(dataDirPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"An error occurred while trying to create directory\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"    //Read existing data from duke.Duke.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"        //Create duke.Duke.txt inside data dir if it doesn\u0027t exist","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        if(!Files.exists(dataFilePath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"                Files.createFile(dataFilePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"An error occurred while trying to create duke.Duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        List\u003cString\u003e data \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"        //if duke.Duke.txt exists, read from it","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"            data \u003d Files.readAllLines(dataFilePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"An error occurred while trying to read duke.Duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"        assert data !\u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"        for(String x: data) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"            String[] inp \u003d x.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"            String type \u003d inp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"            if(type.equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"                Task tsk \u003d new Task(tasks.size() + 1, inp[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"                tsk.setIsDone(Boolean.parseBoolean(inp[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"                tasks.add(tsk);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"            } else if(type.equals(\"TD\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"                ToDo td \u003d new ToDo(tasks.size() + 1, inp[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"                td.setIsDone(Boolean.parseBoolean(inp[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"                tasks.add(td);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"            } else if(type.equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"                Deadline d \u003d new Deadline(tasks.size() + 1, inp[2], LocalDate.parse(inp[3]));","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"                d.setIsDone(Boolean.parseBoolean(inp[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"                tasks.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"            } else if(type.equals(\"E\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"                Event e \u003d new Event(tasks.size() + 1, inp[2], LocalDateTime.parse(inp[3]),","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"                        LocalDateTime.parse(inp[4]));","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"                e.setIsDone(Boolean.parseBoolean(inp[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"                tasks.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"    //Write into duke.Duke.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"    public static void upload(ArrayList\u003cTask\u003e allData) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"        ArrayList\u003cString\u003e writing \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"        for(Task x : allData) {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"            writing.add(x.toFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"            Files.write(dataFilePath, writing);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"Error while writing to file!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":89}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import duke.Tasks.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    public void handleInput(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"            try { //check if list is empty","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"                if(tasks.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"                    throw new DukeExceptions(\"List is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"            } catch(DukeExceptions de) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"List is empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"            tasks.forEach(x -\u003e {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(x);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"            });","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(\"See you again, thanks for visiting!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"            Storage.upload(this.tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"        if(input.startsWith(\"mark \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"            String[] inp \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"            int id \u003d Integer.parseInt(inp[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"                Task marked \u003d tasks.get(id - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"                marked.setIsDone(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"Good job! This task is now marked done!\\n\" + marked);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"            } catch(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"No such task found!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"        if(input.startsWith(\"unmark \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"            String[] inp \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"            int id \u003d Integer.parseInt(inp[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"                Task unmarked \u003d tasks.get(id - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"                unmarked.setIsDone(false);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"What a bummer! This task is now unmarked\\n\" + unmarked);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"            } catch(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"No such task found!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"        if(input.startsWith(\"todo \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"            ToDo processed \u003d Parser.parseToDo(tasks.size(), input);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"            tasks.add(processed);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"        if(input.startsWith(\"deadline \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"            Deadline dl \u003d Parser.parseDeadline(tasks.size(), input);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"            try { //catching no desc and no deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"                if(input.substring(9).equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"                    throw new DukeExceptions(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"            } catch(DukeExceptions e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"            String[] inp \u003d input.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"            try { //catching no deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"                String deadline \u003d inp[1].substring(3);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"                LocalDate date \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"                try { //catching no description","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"                    String undesc \u003d inp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"                    String desc \u003d undesc.substring(9);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"                    if(desc.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"                        throw new DukeExceptions(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"                    tasks.add(new Deadline(tasks.size() + 1, desc, date));","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"                } catch(DukeExceptions e){","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"                    System.out.println(\"Description cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"            } catch(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"Please input a deadline!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"        if(input.startsWith(\"event \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"            try { //catching no desc and no deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"                if(input.substring(6).equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"                    throw new DukeExceptions(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"            } catch(DukeExceptions e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"Input cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"            String[] inp \u003d input.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"            try { //Catching for input format error","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"                if(inp.length !\u003d 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"                    throw new DukeExceptions(\"Format is task, start, end!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"            } catch(DukeExceptions de) {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"Format is task, /start, /end!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"            String start \u003d inp[1].substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"TabrizPlv"},"content":"            String[] DnT \u003d start.split(\" \"); //[2000-10-23,10:15]","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"TabrizPlv"},"content":"            String startDate \u003d DnT[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"            String startTime \u003d DnT[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"TabrizPlv"},"content":"            LocalDateTime startDnT \u003d LocalDateTime.parse(String.join(\"T\", startDate, startTime));","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"TabrizPlv"},"content":"            String end \u003d inp[2].substring(3);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"TabrizPlv"},"content":"            String[] DateAndTime \u003d end.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"TabrizPlv"},"content":"            String endDate \u003d DateAndTime[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"TabrizPlv"},"content":"            String endTime \u003d DateAndTime[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"TabrizPlv"},"content":"            LocalDateTime endDnT \u003d LocalDateTime.parse(String.join(\"T\", endDate, endTime));","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"TabrizPlv"},"content":"            String undesc \u003d inp[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"TabrizPlv"},"content":"            String desc \u003d undesc.substring(6);","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"TabrizPlv"},"content":"            try { //catching for empty description","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"TabrizPlv"},"content":"                if(desc.equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"TabrizPlv"},"content":"                    throw new DukeExceptions(\"Description cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"TabrizPlv"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"TabrizPlv"},"content":"            } catch(DukeExceptions e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"Description cannot be empty!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"TabrizPlv"},"content":"            Event ev \u003d new Event(tasks.size() + 1, desc, startDnT, endDnT);","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"TabrizPlv"},"content":"            tasks.add(ev);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"TabrizPlv"},"content":"        if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"TabrizPlv"},"content":"            String[] inp \u003d input.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"TabrizPlv"},"content":"            int id \u003d Integer.parseInt(inp[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"TabrizPlv"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"TabrizPlv"},"content":"                tasks.remove(id - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"TabrizPlv"},"content":"                tasks.forEach(x -\u003e x.setId(tasks.indexOf(x) + 1)); //update id of all items after removing","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"TabrizPlv"},"content":"            } catch(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"TabrizPlv"},"content":"                System.out.println(\"No such task found!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":136}},{"path":"src/main/java/duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"    public Deadline(int id, String description, LocalDate deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"        super(id, description);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"        return \"D|\" + this.isDone + \"|\" + this.desc + \"|\" + this.deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        String parsedDeadline \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        return id + \". [D][\" + statusIcon + \"] \" + this.desc + \"(\" + parsedDeadline + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":23}},{"path":"src/main/java/duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    public Event(int id, String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"        super(id, description);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"        return \"E|\" + this.isDone + \"|\" + this.desc + \"|\" + this.start + \"|\" + this.end;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"        String startDnT \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(start);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"        String endDnT \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(end);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        return id + \". [E][\" + statusIcon + \"] \" + this.desc + \"(from: \" + startDnT + \" to: \" + endDnT + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":27}},{"path":"src/main/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"    protected int id;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"    protected String desc;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"    public Task(int id, String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"        this.desc \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    public void setIsDone(boolean status) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    public void setId(int id) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"        return \"T|\" + this.desc;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        return id + \". [\" + statusIcon + \"] \" + this.desc;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":30}},{"path":"src/main/java/duke/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"    public ToDo(int id, String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"        super(id, description);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"    public String toFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"        return \"TD|\" + this.isDone + \"|\" + this.desc;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"        return this.id + \". [T][\" + statusIcon + \"] \" + this.desc;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":15}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"    public static void intro() {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"TabrizPlv":4,"-":8}},{"path":"src/test/java/duke/Tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    public void testSetIsDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(1, \"run\");","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"        tsk.setIsDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(tsk.isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    public void testGetStatusIconFalse() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(1, \"run\");","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"        String ans \u003d tsk.getStatusIcon();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(\" \", ans);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    public void testGetStatusIconTrue() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(1, \"run\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        tsk.setIsDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        String ans \u003d tsk.getStatusIcon();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(\"X\", ans);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"    public void testSetId() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(1, \"run\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        tsk.setId(2);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(2, tsk.id);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"    public void testToFile() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(1, \"run\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"        String expected \u003d \"T|run\";","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(expected, tsk.toFile());","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        Task tsk \u003d new Task(1, \"run\");","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"        String expected \u003d \"1. [ ] run\";","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(expected, tsk.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"TabrizPlv":51}},{"path":"src/test/java/duke/Tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package duke.Tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"    //test setup","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    ToDo td \u003d new ToDo(1, \"run\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"    public void testToFile() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"        String expected \u003d \"TD|false|run\";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(td.toFile(), expected);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        String expected \u003d \"1. [T][ ] run\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(expected, td.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"TabrizPlv":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"TabrizPlv":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TabrizPlv":1,"-":20}}]
