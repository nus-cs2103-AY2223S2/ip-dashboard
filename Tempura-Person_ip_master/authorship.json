[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"E\u003dX\u003dRepeat\u003dNov 12 2022, 1511 hrs\u003dNov 13 2022, 1512 hrs","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"E\u003dX\u003dhere\u003dnow\u003dforever","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"D\u003d \u003dsleep more\u003d2022/12/11 13:55","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":3}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"abstract class Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"    public abstract void handle() throws DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":3}},{"path":"src/main/java/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"    public void handle() {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"        Duke.ui.print(\"Goodbye, then!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"        Duke.loopEnd \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":7}},{"path":"src/main/java/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"public class CommandDeadline extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    public void handle() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"            String deadlineSentence \u003d Duke.userScan.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"            String deadlineName \u003d deadlineSentence.substring(0, deadlineSentence.indexOf(\" /by\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: deadline description is blank.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"            if (deadlineName.strip().length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatLogicError(\"deadline description cannot be blank.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            String deadlineDate \u003d deadlineSentence.substring(deadlineSentence.indexOf(\" /by\")+5);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: deadline date is blank.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"            if (deadlineDate.strip().length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatLogicError(\"deadline date cannot be blank.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"            Task deadlineToAdd \u003d new Deadline(deadlineName, deadlineDate);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"            Duke.taskList.add(deadlineToAdd);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"            Duke.ui.print(\"Task added:\\n \" + deadlineToAdd + \"\\n\" + \"There are now \" + Duke.taskList.size() +","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"                    \" task(s) in your list.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"            Duke.dukeSave.saveTaskList(Duke.taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"        catch (IOException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatMessage(\"[ERROR]\\nOops, we couldn\u0027t save that!\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: deadline format is anything other than [ deadline /by \u003cinsert deadline\u003e ]","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"        catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatCommandError(\"deadline\",","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"                    \"deadline \u003cinsert description\u003e \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"                            \"/by \u003cinsert deadline\u003e\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":37}},{"path":"src/main/java/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"public class CommandDelete extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    public void handle() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"            String deleteString \u003d Duke.userScan.nextLine().strip();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: delete format is anything other than [ delete \u003cinsert integer\u003e ]","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"            if (deleteString.length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatCommandError(\"delete\",","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"                        \"delete \u003cinsert INTEGER\u003e\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            int deleteInput \u003d Integer.parseInt(deleteString) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"            Task deletedTask \u003d Duke.taskList.get(deleteInput);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"            Duke.taskList.remove(deleteInput);","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            Duke.ui.print(\"Okay, i\u0027ve deleted the following task!\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"                    (deleteInput + 1 + \". \") +","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"                    deletedTask.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"            Duke.dukeSave.saveTaskList(Duke.taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"        catch (IOException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatMessage(\"[ERROR]\\nOops, we couldn\u0027t save that!\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: delete is NOT paired with an integer (e.g. delete two, delete 2.3)","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"        catch (NumberFormatException | InputMismatchException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatLogicError(\"delete can only be used with an INTEGER. \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"                    \"(e.g. 1, 2...)\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: delete target does not exist (e.g. task number is out of bounds)","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"        catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatLogicError(\"you can only delete task numbers that exist.\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"                    \"\\nYou have \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"                    Duke.taskList.size() +","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"                    \" task(s) in your list.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":40}},{"path":"src/main/java/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"public class CommandEvent extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    public void handle() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"            String eventSentence \u003d Duke.userScan.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"            String eventName \u003d eventSentence.substring(0, eventSentence.indexOf(\" /from\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: event description is blank.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"            if (eventName.strip().length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatLogicError(\"event description cannot be blank.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            String fromDate \u003d eventSentence.substring(eventSentence.indexOf(\" /from\")+7,","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"                    eventSentence.indexOf(\" /to\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: event\u0027s from field is blank.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            if (fromDate.strip().length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatLogicError(\"event\u0027s from field cannot be blank.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"            String toDate \u003d eventSentence.substring(eventSentence.indexOf(\" /to\")+5);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: event\u0027s to field is blank.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"            if (toDate.strip().length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatLogicError(\"event\u0027s to field cannot be blank.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"            Task eventToAdd \u003d new Event(eventName, fromDate, toDate);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"            Duke.taskList.add(eventToAdd);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"            Duke.ui.print(\"Task added:\\n \" + eventToAdd + \"\\n\" + \"There are now \" + Duke.taskList.size() +","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"                    \" task(s) in your list.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"            Duke.dukeSave.saveTaskList(Duke.taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"        catch (IOException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatMessage(\"[ERROR]\\nOops, we couldn\u0027t save that!\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: event format is anything other than [ event /from \u003cinsert from field\u003e /to \u003cinsert to field\u003e ]","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"        catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatCommandError(\"event\",","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"                    \"event /from \u003cinsert from field\u003e \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"                            \"/to \u003cinsert to field\u003e\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":43}},{"path":"src/main/java/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"public class CommandList extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"    public void handle() throws DukeException{","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: list format is anything other than [ list ]","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"        if (Duke.userScan.nextLine().length()\u003e0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatCommandError(\"list\",","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"                    \"list\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"        if (Duke.taskList.size()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"            Duke.ui.print(\"You don\u0027t have anything to do right now!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"        else {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"            StringBuilder toPrint \u003d new StringBuilder();","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"            for (int i \u003d 1; i \u003c Duke.taskList.size()+1; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"                toPrint.append(i).append(\". \").append(Duke.taskList.get(i-1).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"                if (i \u003c Duke.taskList.size()){","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"                    toPrint.append(\"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"            Duke.ui.print(\"Here are your tasks:\\n\" + toPrint);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":23}},{"path":"src/main/java/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"public class CommandMark extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"    public void handle() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"            String markString \u003d Duke.userScan.nextLine().strip();","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: mark format is anything other than [ mark \u003cinsert integer\u003e ]","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"            if (markString.length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatCommandError(\"mark\",","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"                        \"mark \u003cinsert INTEGER\u003e\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"            int markInput \u003d Integer.parseInt(markString) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            Duke.taskList.get(markInput).MarkDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            Duke.ui.print(\"Okay, the following task is marked as done!\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"                    (markInput+1 + \". \") +","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"                    Duke.taskList.get(markInput).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            Duke.dukeSave.saveTaskList(Duke.taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"        catch (IOException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatMessage(\"[ERROR]\\nOops, we couldn\u0027t save that!\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: mark is NOT paired with an integer (e.g. unmark two, unmark 2.3)","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"        catch (NumberFormatException | InputMismatchException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatLogicError(\"mark can only be used with an INTEGER. \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"                    \"(e.g. 1, 2...)\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: mark target does not exist (e.g. task number is out of bounds)","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"        catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatLogicError(\"you can only mark task numbers that exist.\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"                    \"You have \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"                    Duke.taskList.size() +","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"                    \" task(s) in your list.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":37}},{"path":"src/main/java/CommandToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.ToDo;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"public class CommandToDo extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    public void handle() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"            String toDoName \u003d Duke.userScan.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: To-Do description is blank.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"            if (toDoName.strip().length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatLogicError(\"Tasks.ToDo description cannot be blank.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            Task taskToAdd \u003d new ToDo(toDoName);","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            Duke.taskList.add(new ToDo(toDoName));","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"            Duke.ui.print(\"Task added:\\n \" + taskToAdd + \"\\n\" + \"There are now \" + Duke.taskList.size() +","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"                    \" task(s) in your list.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            Duke.dukeSave.saveTaskList(Duke.taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"        catch (IOException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatMessage(\"[ERROR]\\nOops, we couldn\u0027t save that!\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":25}},{"path":"src/main/java/CommandUnmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"public class CommandUnmark extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"    public void handle() throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"            String unmarkString \u003d Duke.userScan.nextLine().strip();","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"            // ERROR: unmark format is anything other than [ unmark \u003cinsert integer\u003e ]","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"            if (unmarkString.length()\u003d\u003d0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"                throw new DukeException(Duke.ui.formatCommandError(\"unmark\",","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"                        \"unmark \u003cinsert INTEGER\u003e\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"            int unmarkInput \u003d Integer.parseInt(unmarkString) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            Duke.taskList.get(unmarkInput).MarkNotDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            Duke.ui.print(\"Okay, the following task is marked as NOT done!\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"                    (unmarkInput+1 + \". \") +","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"                    Duke.taskList.get(unmarkInput).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            Duke.dukeSave.saveTaskList(Duke.taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"        catch (IOException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatMessage(\"[ERROR]\\nOops, we couldn\u0027t save that!\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: unmark is NOT paired with an integer (e.g. unmark two, unmark 2.3)","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"        catch (NumberFormatException | InputMismatchException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatLogicError(\"unmark can only be used with an INTEGER. \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"                    \"(e.g. 1, 2...)\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"        // ERROR: unmark target does not exist (e.g. task number is out of bounds)","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"        catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"            throw new DukeException(Duke.ui.formatLogicError(\"you can only unmark task numbers that exist.\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"                    \"\\nYou have \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"                    Duke.taskList.size() +","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"                    \" task(s) in your list.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":37}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"    static Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"    static Storage dukeSave \u003d new Storage();","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    static TaskList taskList \u003d dukeSave.loadTaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    static Scanner userScan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"    static boolean loopEnd \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"        // while LoopEnd \u003d true loop to accept user input","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"        while (!loopEnd) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            // try block to catch DukeException and prevent program from terminating itself.","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"                new Parser().parse();","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            // Catches DukeException if thrown and prevents program from terminating.","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"            catch(DukeException ex){","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"                    // error message can be formatted in many possible ways beforehand, so println is used.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"                    System.out.println(ex.printErrorMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":24,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"    protected String errorMessage;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"    public String printErrorMessage() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"        return this.errorMessage;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Tempura-Person":13}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"public class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"    void parse() throws DukeException{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"        // switch case for future commands","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"        switch (Duke.userScan.next()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"            // loop breaks, ending program if input is \"bye\"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"            case (\"bye\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"                new CommandBye().handle();","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"            // Duke lists out all Tasks.Task names in TaskList when input is \"list\"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            case (\"list\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"                new CommandList().handle();","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            // Duke allows user to mark tasks as done when input is \"mark\"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"            case (\"mark\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"                new CommandMark().handle();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"            // Duke allows user to mark tasks as NOT done when input is \"unmark\"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"            case (\"unmark\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"                new CommandUnmark().handle();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"            // Duke deletes task when input is \"delete\"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"            case (\"delete\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"                new CommandDelete().handle();","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"            // Duke adds Tasks.Deadline","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"            case (\"deadline\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"                new CommandDeadline().handle();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"            // Duke adds Tasks.Event","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"            case (\"event\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"                new CommandEvent().handle();","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"            // Duke adds Tasks.ToDo","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"            case (\"todo\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"                new CommandToDo().handle();","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"            // Duke does not understand any other commands (yet).","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"            default:","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"                Duke.ui.print(\"Yeah, i\u0027m sorry. I don\u0027t understand that.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":54}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Event;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.ToDo;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"    public TaskList loadTaskList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"        File dukeSave \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"        TaskList toLoad \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"        if (dukeSave.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"                Scanner fileScan \u003d new Scanner(dukeSave);","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"                while (fileScan.hasNextLine()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"                    String toEval \u003d fileScan.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"                    String[] evalArray \u003d toEval.split(\"\u003d\");","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"                    switch (evalArray[0]) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"                        case (\"T\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"                            ToDo addToDo \u003d new ToDo(evalArray[2]);","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"                            if (evalArray[1].equals(\"X\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"                                addToDo.MarkDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"                            }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"                            toLoad.add(addToDo);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"                            break;","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"                        case (\"D\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"                            Deadline addDeadline \u003d new Deadline(evalArray[2], evalArray[3]);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"                            if (evalArray[1].equals(\"X\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"                                addDeadline.MarkDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"                            }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"                            toLoad.add(addDeadline);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"                            break;","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"                        case(\"E\"):","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"                            Event addEvent \u003d new Event(evalArray[2], evalArray[3], evalArray[4]);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"                            if (evalArray[1].equals(\"X\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"                                addEvent.MarkDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"                            }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"                            toLoad.add(addEvent);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"                            break;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"            catch (FileNotFoundException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"                return toLoad;","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"        return toLoad;","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Tempura-Person"},"content":"    public void saveTaskList(TaskList toSave) throws IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"        FileWriter dukeWrite \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Tempura-Person"},"content":"        for (int i \u003d 0; i \u003c toSave.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Tempura-Person"},"content":"            dukeWrite.write(toSave.get(i).toSaveString() + \"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Tempura-Person"},"content":"        dukeWrite.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":62}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"import Tasks.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"        this.list.add(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"    public int size() {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":28}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package Tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"    public Deadline(String TaskName, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"        super(TaskName);","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"            this.byDateTime \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"        catch (DateTimeParseException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"            this.byDateTime \u003d null;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"    public String getByTime() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        if (this.byDateTime !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"            return this.byDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\")) + \" hrs\";","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"        else {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"            return this.by;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"        return \"[D]\" + \"[\" + super.getStatus() + \"] \" + super.toString().strip()","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"                + \" (by: \" + this.getByTime() + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"        return \"D\" + \"\u003d\" + super.getStatus() + \"\u003d\" + super.toSaveString().strip()","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"                + \"\u003d\" + this.by;","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Tempura-Person":42}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package Tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    protected String from,to;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"    protected LocalDateTime fromDateTime,toDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"    public Event(String TaskName, String from, String to) {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"        super(TaskName);","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"            this.fromDateTime \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"        catch (DateTimeParseException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"            this.fromDateTime \u003d null;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"            this.toDateTime \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"        catch (DateTimeParseException err) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"            this.toDateTime \u003d null;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"    public String getFromTime() {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"        if (this.fromDateTime !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"            return fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\")) + \" hrs\";","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"        else {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"            return this.from;","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Tempura-Person"},"content":"    public String getToTime() {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Tempura-Person"},"content":"        if (this.toDateTime !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Tempura-Person"},"content":"            return toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\")) + \" hrs\";","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Tempura-Person"},"content":"        else {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Tempura-Person"},"content":"            return this.to;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Tempura-Person"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"Tempura-Person"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"Tempura-Person"},"content":"        return \"[E]\" + \"[\" + super.getStatus() + \"] \" + super.toString().strip()","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Tempura-Person"},"content":"                + \" (from: \" + this.getFromTime() + \" to: \" + this.getToTime() + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Tempura-Person"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Tempura-Person"},"content":"        return \"E\" + \"\u003d\" + super.getStatus() + \"\u003d\" + super.toSaveString().strip()","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Tempura-Person"},"content":"                + \"\u003d\" + this.getFromTime() + \"\u003d\" + this.getToTime();","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Tempura-Person":58}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package Tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"    protected String name;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"        this.name \u003d taskName;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"    // gets name of task","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"    public String getName() {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"        return this.name;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    // gets status of task, mark done with \u0027X\u0027","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"    // marks task as done","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"    public void MarkDone()  {","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"    // marks task as NOT done","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"    public void MarkNotDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"    // properly formats Tasks.Task as String","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"        return getName();","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"Tempura-Person"},"content":"    // properly formats Tasks.Task as String for saving progress","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Tempura-Person"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Tempura-Person"},"content":"        return getName().strip();","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Tempura-Person":36}},{"path":"src/main/java/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"package Tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"    public ToDo(String TaskName) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"        super(TaskName);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"        return \"[T]\" + \"[\" + super.getStatus() + \"] \" + super.toString().strip();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"        return \"T\" + \"\u003d\" + super.getStatus() + \"\u003d\" + super.toSaveString().strip();","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Tempura-Person":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"    protected String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"    protected String border \u003d \"_________________________________________\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"    public Ui() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"        // Welcome message upon initialisation of new Ui","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"        System.out.println(border + \"Sup, Duke here.\\nWhat do you want from me?\\n\" + border);","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Tempura-Person"},"content":"    public void print(String toFormat){","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Tempura-Person"},"content":"        System.out.println(border + toFormat + \"\\n\" + border);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Tempura-Person"},"content":"    public String formatMessage(String toFormat){","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Tempura-Person"},"content":"        return border + toFormat + \"\\n\" + border;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Tempura-Person"},"content":"    public String formatLogicError(String message){","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Tempura-Person"},"content":"        return \"\\n\" + border + \"[ERROR]\\nUh, \" + message + \"\\n\" + border;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Tempura-Person"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Tempura-Person"},"content":"    public String formatCommandError(String command, String format){","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Tempura-Person"},"content":"        return \"\\n\" + border + \"[ERROR]\\nUh, \" + command + \" command format is used wrongly.\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Tempura-Person"},"content":"               \"\\nCorrect format is as follows:\\n\" + \"[ \" + format + \" ]\\n\" + border;","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Tempura-Person"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Tempura-Person"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Tempura-Person":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Tempura-Person"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Tempura-Person"},"content":"lis","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Tempura-Person"},"content":"todo Eat","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Tempura-Person"},"content":"deadline Sleep /by 2023/11/12 18:47","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Tempura-Person"},"content":"event Rave /from 2024/04/15 15:45 /to tomorrow","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Tempura-Person"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Tempura-Person"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Tempura-Person"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Tempura-Person"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Tempura-Person"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Tempura-Person"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Tempura-Person"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Tempura-Person"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Tempura-Person"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Tempura-Person":14}}]
