[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Tohtoroo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"checkstyle {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"    archiveBaseName \u003d \"DukeTohtoro\"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Tohtoroo":7,"-":39}},{"path":"save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"1|T| |this","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"2|T| |that","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"3|D|X|idk this is a command thing|2023-12-14T14:00","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Tohtoroo":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * Represents the Duke program, a chatbot that helps you keep track of your tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"public class Duke {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    private TaskList tl;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    private Duke(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"            this.tl \u003d this.storage.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"            this.ui.showToUser(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     * Main method to run the Duke program.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"        String txtDir \u003d \"./save.txt\";","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        new Duke(txtDir).run();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"     * Runs the Duke program.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"    public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"        while (!this.isExit) {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"                String[] commandString \u003d ui.getUserCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"                Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"                Command c \u003d parser.parse(commandString);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"                c.execute(tl, ui, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"                ui.showToUser(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":57}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" * Other commands extend this class.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * @throws DukeException If there is an error in executing the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    public abstract void execute(TaskList tl, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"     * @return false","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"/*","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"To do:","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"Remember the datetime formatting for the code if they want to add datetime is \"d/MM/yyyy HHmm\"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":35}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that adds a deadline to the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    private final Deadline task;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for a DeadlineCommand object.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"     * @param byTime Deadline of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    public DeadlineCommand(String taskName, LocalDateTime byTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        this.task \u003d new Deadline(taskName, byTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the command and adds a deadline to the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"     * @throws DukeException If there is an error in executing the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        tl.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"        String toShow \u003d \"Meowww, I\u0027ve added this task:\\nAdded: \" + task + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"        toShow +\u003d ui.stringOfTaskNumbers(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"        ui.showToUser(toShow);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"            storage.update(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"Problem with updating in deadline\");","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":48}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that deletes a task from the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    private final int taskNumberToDelete;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for the DeleteCommand object.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskNumberToDelete The task number to be deleted.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    public DeleteCommand(int taskNumberToDelete) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        this.taskNumberToDelete \u003d taskNumberToDelete;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the command and deletes a task from the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     * @throws DukeException If there is an error in executing the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        if (tl.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"How to delete an empty list of tasks meowww\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"        if (this.taskNumberToDelete \u003e tl.size() || this.taskNumberToDelete \u003c 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"Out of range you can delete!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"        Task t \u003d tl.get(taskNumberToDelete - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"        tl.deleteTask(taskNumberToDelete - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"        String toShow \u003d \"Meowww. I\u0027ve removed this task:\\n\" + t + \"\\n\" + ui.stringOfTaskNumbers(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        ui.showToUser(toShow);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"            storage.update(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"Problem with updating in delete\");","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":51}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that adds an event to the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    private final Event task;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for an EventCommand object.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"     * @param fromTime Start time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"     * @param toTime End time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    public EventCommand(String description, LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"        this.task \u003d new Event(description, fromTime, toTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the command and adds an event to the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"     * @throws DukeException If there is an error in executing the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"        tl.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"        String toShow \u003d \"Meowww, I\u0027ve added this task:\\nAdded: \" + task + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"        toShow +\u003d ui.stringOfTaskNumbers(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"        ui.showToUser(toShow);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"            storage.update(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"Problem with updating in Event\");","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":50}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that exits the program.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the command and exits the program.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true to indicate that this is an exit command.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"     * @return true","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":30}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that finds tasks using a keyword.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for a FindCommand object that exits the program.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * @param keyword The keyword the FindCommand is searching for.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the find command by iterating through the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"     * Finds matching tasks based on the keyword given.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"        ArrayList\u003cTask\u003e matchTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        ArrayList\u003cInteger\u003e matchIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"        for (int i \u003d 0; i \u003c tl.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"            Task t \u003d tl.get(i);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"            if (t.getTaskName().contains(keyword)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"                matchTasks.add(t);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"                matchIndex.add(i + 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"        String toShow;","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        if (matchTasks.isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"            toShow \u003d \"Meowww, there is not any tasks that matches your keyword\";","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"            toShow \u003d \"Meowww, here are the tasks you asked for:\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"            for (int i \u003d 0; i \u003c matchTasks.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"                toShow +\u003d String.format(\"%s. %s\", matchIndex.get(i), matchTasks.get(i));","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"                if (i + 1 \u003c matchTasks.size()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"                    toShow +\u003d \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"        ui.showToUser(toShow);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Tohtoroo":56}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that lists all tasks in the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the command and lists all tasks in the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"        ui.showToUserList(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":22}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that marks or unmarks a task in the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    private final int markNumber;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    private final boolean isMark;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for the MarkCommand object.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * @param markNumber Number of the task to be marked or unmarked.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     * @param isMark True if the task is to be marked, false if the task is to be unmarked.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    public MarkCommand(int markNumber, boolean isMark) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        this.markNumber \u003d markNumber;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the command and marks or unmarks a task in the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"     * @throws DukeException If there is an error in executing the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        if (tl.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"How to mark or unmark an empty list of tasks meowww\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"        if (this.markNumber \u003e tl.size() || this.markNumber \u003c 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"Out of range you can mark or unmark!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"        String toShow;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        if (isMark) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"            toShow \u003d tl.markTask(markNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"            ui.showToUser(toShow);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"            toShow \u003d tl.unmarkTask(markNumber - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"            ui.showToUser(toShow);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"            storage.update(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"Problem with updating in delete\");","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":59}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" * Represents a command that adds a todo to the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    private final Todo task;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    public TodoCommand(String taskName) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"        this.task \u003d new Todo(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"     * Executes the command and adds a todo to the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList which the Duke will modify.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"     * @param ui Ui to be used to facilitate interactions between user and the CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"     * @param storage Storage to be used to handle interactions with the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"     * @throws DukeException If there is an error in executing the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"        tl.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"        String toShow \u003d \"Meowww, I\u0027ve added this task:\\nAdded: \" + task + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        toShow +\u003d ui.stringOfTaskNumbers(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"        ui.showToUser(toShow);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"            storage.update(tl);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"Problem with updating in todo\");","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":41}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"    private static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy hh:mma\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    protected LocalDateTime byTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor to make a new Deadline object.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     * @param byTime Deadline of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    public Deadline(String taskName, LocalDateTime byTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for a new Deadline object used for loading from save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"     * @param byTime Deadline of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"    public Deadline(String taskName, LocalDateTime byTime, boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"    public String[] encode() {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"        String[] res \u003d new String[]{\"D\", this.getStatusIcon(), this.taskName, this.byTime.toString()};","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"        return res;","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byTime.format(DATETIME_FORMAT) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":46}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":" * Represents a task called event with a starting from time and ending to time.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"    private static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy hh:mma\");","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    protected LocalDateTime fromTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"    protected LocalDateTime toTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor to make a new Event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * @param fromTime Starting time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * @param toTime Ending time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    public Event(String taskName, LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for a new Event object used for loading from save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     * @param fromTime Starting time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     * @param toTime Ending time of the event.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"    public Event(String taskName, LocalDateTime fromTime, LocalDateTime toTime, boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"    public String[] encode() {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        String[] res \u003d new String[]{\"E\", this.getStatusIcon(), this.taskName, this.fromTime.toString(),","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"                this.toTime.toString()};","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"        return res;","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromTime.format(DATETIME_FORMAT) + \" to: \"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"                + toTime.format(DATETIME_FORMAT) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":" * Represents a task to be put into the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":" * All other tasks inherit from this class.","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"    protected String taskName;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor to make a task object with a given task name.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskName","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"     * @return String representing the status icon of the task \"X\" or \" \".","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     * @return String to be shown to the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    public String mark() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"        if (!isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"            String toShow \u003d \"Nice! I\u0027ve marked this task as done!\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"                    + String.format(\"[%s] %s\", this.getStatusIcon(), this.taskName);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"            return toShow;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"            String toShow \u003d \"The task is already done!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"            return toShow;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"     * Gets the task name which is a string","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"     * @return String task name","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"        return this.taskName;","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"     * @return String to be shown to the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"    public String unmark() {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"            String toShow \u003d \"I\u0027ve marked this task as undone, you lazy bum\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"                    + String.format(\"[%s] %s\", this.getStatusIcon(), this.taskName);","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"            return toShow;","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"            String toShow \u003d \"The task is already done!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"            return toShow;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"     * Encodes the Deadline object into a String array for saving into the save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"     * @return String[] of the encoded Deadline object.","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"    public abstract String[] encode();","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":78}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":" * Represents a task called todo.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":" * A todo is a task without any date/time attached to it.","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for a new Todo object.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for a new Todo object used for loading from save file.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    public String[] encode() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"        String[] res \u003d new String[]{\"T\", this.getStatusIcon(), this.taskName};","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"        return res;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":36}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":" * Represents an exception that is thrown by Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":" * The messages are passed to the DukeException object.","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":" * The DukeException object is then thrown.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":" * The message is then printed by the Ui object.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for a new DukeException object.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"     * @param message is a string to be printed by the Ui object.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Tohtoroo":18}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":" * Represents a parser that parses user input into commands.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    private static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    private String readCommand(String[] userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        return userCommand[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    private int queryInteger(String[] userCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"        if (isInteger(userCommand)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"            return Integer.parseInt(userCommand[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"error Invalid formatting for commands\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"    private static boolean isInteger(String[] userCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        if (userCommand.length !\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"error Invalid formatting for commands\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"        return isInteger(userCommand[1], 10);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"    private static boolean isInteger(String s, int radix) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        if (s.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"            return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"            if (i \u003d\u003d 0 \u0026\u0026 s.charAt(i) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"                if (s.length() \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"                    return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"                } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"                    continue;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"            if (Character.digit(s.charAt(i), radix) \u003c 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"                return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"     * @param userCommand User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"     * @return Command to be executed.","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"     * @throws DukeException If there is an error in parsing the user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"    public Command parse(String[] userCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"        String name;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"        switch(this.readCommand(userCommand)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"            if (userCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error no arguments\");","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"            return new TodoCommand(userCommand[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"            if (userCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error no arguments\");","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"            String[] splitBy \u003d userCommand[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"            if (splitBy.length !\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error Invalid formatting for commands\");","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Tohtoroo"},"content":"            name \u003d splitBy[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Tohtoroo"},"content":"            String by \u003d splitBy[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Tohtoroo"},"content":"            LocalDateTime byTime \u003d LocalDateTime.parse(by, DATETIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"Tohtoroo"},"content":"            return new DeadlineCommand(name, byTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"Tohtoroo"},"content":"        case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"Tohtoroo"},"content":"            if (userCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error no arguments\");","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"Tohtoroo"},"content":"            String[] splitFrom \u003d userCommand[1].split(\" /from \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Tohtoroo"},"content":"            if (splitFrom.length !\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error Invalid formatting for commands\");","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"Tohtoroo"},"content":"            String[] splitTo \u003d splitFrom[1].split(\" /to \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"Tohtoroo"},"content":"            if (splitTo.length !\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error Invalid formatting for commands\");","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"Tohtoroo"},"content":"            name \u003d splitFrom[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"Tohtoroo"},"content":"            String from \u003d splitTo[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"Tohtoroo"},"content":"            String to \u003d splitTo[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"Tohtoroo"},"content":"            LocalDateTime fromTime \u003d LocalDateTime.parse(from, DATETIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"Tohtoroo"},"content":"            LocalDateTime toTime \u003d LocalDateTime.parse(to, DATETIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"Tohtoroo"},"content":"            return new EventCommand(name, fromTime, toTime);","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"Tohtoroo"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"Tohtoroo"},"content":"            return new MarkCommand(this.queryInteger(userCommand), true);","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"Tohtoroo"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"Tohtoroo"},"content":"            return new MarkCommand(this.queryInteger(userCommand), false);","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"Tohtoroo"},"content":"        case \"list\":","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"Tohtoroo"},"content":"            if (userCommand.length \u003e 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error Invalid formatting for commands\");","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"Tohtoroo"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"Tohtoroo"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"Tohtoroo"},"content":"            if (userCommand.length \u003e 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error Invalid formatting for commands\");","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"Tohtoroo"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"Tohtoroo"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"Tohtoroo"},"content":"            return new DeleteCommand(this.queryInteger(userCommand));","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"Tohtoroo"},"content":"        case \"find\":","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"Tohtoroo"},"content":"            if (userCommand.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"Tohtoroo"},"content":"                throw new DukeException(\"error no arguments\");","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"Tohtoroo"},"content":"            String keyword \u003d userCommand[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"Tohtoroo"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"Tohtoroo"},"content":"        default:","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"Tohtoroo"},"content":"            throw new DukeException(\"Cannot recognise command!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Tohtoroo":140}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":" * Represents a storage object that handles interactions with the save file.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    private static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    private final File file;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for a Storage object.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"     * @param filePath Path of the save file.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"            if (this.file.createNewFile()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"                new Ui().showToUser(\"New save file made\");","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"                new Ui().showToUser(\"File already exists meow\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"            new Ui().showToUser(\"Error when construction of Storage meow\");","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"            System.out.println(new Ui().formatMessage(e.getMessage()));","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"     * Loads the save file into a TaskList object.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"     * @return TaskList object containing the tasks in the save file.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"     * @throws DukeException If there is an error in loading the save file.","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"                String[] split \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"                ArrayList\u003cString\u003e encodeSplit \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"                for (String s : split) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"                    encodeSplit.add(s);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"                String type \u003d encodeSplit.get(1);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"                boolean isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"                if (encodeSplit.get(2).equals(\"X\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"                    isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"                } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"                    isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"                String description;","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"                switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"                case \"T\":","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"                    if (encodeSplit.size() !\u003d 4) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"                        throw new DukeException(\"Error with Todo load\");","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"                    description \u003d encodeSplit.get(3);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"                    tl.add(new Todo(description, isDone));","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"                case \"D\":","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"                    if (encodeSplit.size() !\u003d 5) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"                        throw new DukeException(\"Error with Deadline load\");","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"                    description \u003d encodeSplit.get(3);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"                    String by \u003d encodeSplit.get(4);","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Tohtoroo"},"content":"                    LocalDateTime byTime \u003d LocalDateTime.parse(by, DATETIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Tohtoroo"},"content":"                    tl.add(new Deadline(description, byTime, isDone));","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Tohtoroo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Tohtoroo"},"content":"                case \"E\":","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Tohtoroo"},"content":"                    if (encodeSplit.size() !\u003d 6) {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"Tohtoroo"},"content":"                        throw new DukeException(\"Error with Deadline load\");","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"Tohtoroo"},"content":"                    }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"Tohtoroo"},"content":"                    description \u003d encodeSplit.get(3);","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"Tohtoroo"},"content":"                    String from \u003d encodeSplit.get(4);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"Tohtoroo"},"content":"                    String to \u003d encodeSplit.get(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"Tohtoroo"},"content":"                    LocalDateTime fromTime \u003d LocalDateTime.parse(from, DATETIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"Tohtoroo"},"content":"                    LocalDateTime toTime \u003d LocalDateTime.parse(to, DATETIME_FORMAT);","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Tohtoroo"},"content":"                    tl.add(new Event(description, fromTime, toTime, isDone));","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"Tohtoroo"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"Tohtoroo"},"content":"                default:","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"Tohtoroo"},"content":"                    throw new DukeException(\"Loading got problem\");","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"Tohtoroo"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"Tohtoroo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"Tohtoroo"},"content":"            new Ui().showToUser(\"Cannot find save file while loading!! MEOWWW\");","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"Tohtoroo"},"content":"            new Ui().showToUser(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"Tohtoroo"},"content":"        return tl;","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"Tohtoroo"},"content":"     * Updates the save file with the current TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList object containing the current tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"Tohtoroo"},"content":"     * @throws IOException If there is an error in writing to the save file.","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"Tohtoroo"},"content":"    public void update(TaskList tl) throws IOException {","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"Tohtoroo"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"Tohtoroo"},"content":"        String saveTask \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"Tohtoroo"},"content":"        int maxSize \u003d tl.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"Tohtoroo"},"content":"        for (int i \u003d 0; i \u003c maxSize; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"Tohtoroo"},"content":"            Task t \u003d tl.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"Tohtoroo"},"content":"            int stringNumber \u003d i + 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"Tohtoroo"},"content":"            saveTask +\u003d stringNumber + \"|\" + String.join(\"|\", t.encode());","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"Tohtoroo"},"content":"            if (i \u003c maxSize - 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"Tohtoroo"},"content":"                saveTask +\u003d System.lineSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"Tohtoroo"},"content":"        fw.write(saveTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"Tohtoroo"},"content":"        fw.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":130}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for the TaskList object.","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"     * @param taskList ArrayList of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor for the TaskList object if there is no initial task list to load.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"     * Method to check if the task list is empty.","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"     * @return true if the task list is empty.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"     * Method to see the size of the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"     * @return Size of the task list as an integer.","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"    public int size() {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"     * Method to add a task to the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"     * @param task Task to be added to the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"     * Method to delete a task from the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"     * @param index Index of the task to be marked as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"     * @return String representation of the task that was marked as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"    public String markTask(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"        return taskList.get(index).mark();","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"     * Method to mark a task as undone.","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"     * @param index Index of the task to be marked as undone.","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"Tohtoroo"},"content":"     * @return String representation of the task that was marked as undone.","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"Tohtoroo"},"content":"    public String unmarkTask(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Tohtoroo"},"content":"        return taskList.get(index).unmark();","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":87}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.util;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":" * Represents the user interface of the program.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":" * The Ui object is responsible for printing messages to the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    private static final String DASHED_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    private static final String LINE_PREFIX \u003d \"    \";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    private static final String MESSAGE_WELCOME \u003d \"You\u0027ve found the Tohtoro!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    private static final String MESSAGE_GOODBYE \u003d \"Meowww. Hope to see you soon!\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"            + \"THE TOHTORO PROGRAM HAS STOPPED\";","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    private static final String LOGO \u003d \".                   *3k~               \u003cRy.              .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"            + \".                  x#86D.             T#$6h              .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"            + \".                  Q#666y            *#Q66D              .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"            + \".                 ,#BOO6D;          -Q#D66O              .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"            + \".                 !#BO66D^          c##06Rv              .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"            + \".                  0#866Qx:~*)((r^\u003d,k#QR$)               .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"            + \".                  x##Q9009666OO66690$0g6\u0027               .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"            + \".                 rD#Q06OO6OOOOOOOOOOO69R|`              .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"            + \".               \u003dM#B$KeM9OOOOO666O66OOseOR3\u0027             .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"            + \".      _:\u003d~:-` ~###8*vByeO6E$####$66DrBG\u003dE6s`:^^~!`      .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"            + \".   `...``\u0027,~^d##@#RwxyVdOOO6gQQ$6O6EITxzRgQQ)_-----.    .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"            + \".   `_:!\u003d~~~~m@@##QO6666OOOOOO666OO6O6666ORB#QyY|\u003c!:,`   .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"            + \".     -:!\u003d\u003d~rQ####866OOOOOOOOOOOOOOO666OOOOR0$3~\u003d;~!,    .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"            + \".    ._.`  ~8#####BO6OOOOO6OO6EDOO6OOOOOOOOOO66Z\u003c        .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"            + \".        \u003d5#######g6609bMjyVVyjhwykMWdE66O66OOOORw`      .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"            + \".      _3########gOsc}^~~~~~~~~~~~~~~~vxy5966OOOOOh:     .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"            + \".     _Q########Wx\u003c~~~~~~~^TsGHk\\\\~~~~~*]i~*yGROOOOO9^    .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"            + \".    _Q######@Dx\u003c}adbX|~~\u003cOZXTTkH^~~iGOaWbi~~uM980OOO,   .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"            + \".    d####@##diiOMcxxY)~~~~~~~~~~^*~rr~~~vK^~~~hQQOOOZ.  .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"            + \".   c####@#Bewrc)~~~~~^}zhc*~~\u003cVH0gZc\u003c~~~^x]|~~~}gDOO6c  .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"            + \".  _#####@#MoVjMbKv~~v3wYTky~~*Ti(*v}^~~vO5PRG*~~xg6OO0. .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"            + \".  )#####@doIdkx*)^~~~~~~~~~~~~~~~~~~~~~~~~~\u003c})~~~M6OO6* .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"            + \".  W#####QooT~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~U6OO6\\\\ .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"            + \".  D#####Uook*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~kEOOOv .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"            + \".  a####Boojz*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~VRO6D\\\" .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"            + \".  :####Boojo)~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~k6O6h  .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"            + \".   a###goojo}~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u003cM6OM-  .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"            + \".   `y##8oojojx^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|uD6b_   .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"            + \".     hg9joo3RgQDMI}r~~~~~~~~~~~~~~~~~~\\\\oZMdddzyjo8b.    .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"            + \".     :(VooH##QE66O6gc*~~~~~~~~~~~~~~*R#Q966OOO8U3Xv     .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"            + \".       ~ajB#B96O9669DEx~~~~~~~~~~~~xQ#BOOO6OOORO)`      .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"            + \".        hmB#B6E6g$Egg6$Txr*\u003c^;~~~^\\\\B##BDgO6O6O$K`       .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"            + \".        `\\\\5##g$8gg8$8$$doojkkwVcyzW##QBgg$8ROOk`        .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"            + \"xvTyIa5MbZbQ#@#BQ06gQQ8Q9oehP5W3KHHQ#Q$DR0DQD6QMVY)~_    .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"            + \"##############@@QgB##8R@#Q#########@#QQBBDO8Q########B$5jy\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"            + \"################@@##B6Q@############@#$9#BB###############\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"            + \"Q$D9OOO6E0$$0EOM3szwkV########000$g8QwXWDQB###############\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"            + \".                     M######86666OOj      -:\u003crYkG0B######\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"            + \".                     Y######Q66OOO6r               -!^)vY\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"            + \".                     \u0027E######86O6RT                     .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"            + \".                      `d#######BQ}                      .\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"            + \".                        !lG0$0GV,                       .\";","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"     * Constructor to create a new Ui object.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"     * Scanner is used to read user input and is initialised here.","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"    public Ui() {","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"    private boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"        return rawInputLine.trim().isEmpty();","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"     * Reads the user input and returns the words as a string array split by spaces.","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"     * @return String array of user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"    public String[] getUserCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"        showToUser(\"Meowww... enter command:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"        String fullInputLine \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"        while (shouldIgnore(fullInputLine)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Tohtoroo"},"content":"            fullInputLine \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Tohtoroo"},"content":"        showToUser(\"[Meowww you\u0027ve entered \" + fullInputLine + \"]\");","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Tohtoroo"},"content":"        return fullInputLine.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"Tohtoroo"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"Tohtoroo"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"Tohtoroo"},"content":"        showToUser(DASHED_LINE,","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"Tohtoroo"},"content":"                LOGO,","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Tohtoroo"},"content":"                MESSAGE_WELCOME,","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"Tohtoroo"},"content":"                DASHED_LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"Tohtoroo"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"Tohtoroo"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"Tohtoroo"},"content":"        showToUser(DASHED_LINE,","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"Tohtoroo"},"content":"                MESSAGE_GOODBYE,","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"Tohtoroo"},"content":"                DASHED_LINE);","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"Tohtoroo"},"content":"     * Prints the message to the user with the given prefix.","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"Tohtoroo"},"content":"     * Each windows separator is replaced with a line separator.","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"Tohtoroo"},"content":"     * @param message Message to be printed.","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"Tohtoroo"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"Tohtoroo"},"content":"        for (String m : message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"Tohtoroo"},"content":"            System.out.println(LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX));","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"Tohtoroo"},"content":"     * Formats the message to be printed to the user with the given prefix.","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"Tohtoroo"},"content":"     * Each windows separator is replaced with a line separator.","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"Tohtoroo"},"content":"     * @param message of Messages to be printed.","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"Tohtoroo"},"content":"     * @return Formatted message as a string.","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"Tohtoroo"},"content":"    public String formatMessage(String... message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"Tohtoroo"},"content":"        String formattedMessage \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"Tohtoroo"},"content":"        for (String m : message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"Tohtoroo"},"content":"            formattedMessage +\u003d LINE_PREFIX + m.replace(\"\\n\", LS + LINE_PREFIX);","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"Tohtoroo"},"content":"        return formattedMessage;","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"Tohtoroo"},"content":"     * Prints the list of tasks to the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList object containing the list of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"Tohtoroo"},"content":"    public void showToUserList(TaskList tl) {","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"Tohtoroo"},"content":"        if (tl.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"Tohtoroo"},"content":"            showToUser(\"There does not seem to be any tasks meow, would you care to add some?\");","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"Tohtoroo"},"content":"            String toShow \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"Tohtoroo"},"content":"            for (int i \u003d 0; i \u003c tl.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"Tohtoroo"},"content":"                Task t \u003d tl.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"Tohtoroo"},"content":"                toShow +\u003d String.format(\"%s. %s\", i + 1, t);","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"Tohtoroo"},"content":"                if (i + 1 \u003c tl.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"Tohtoroo"},"content":"                    toShow +\u003d \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"Tohtoroo"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"Tohtoroo"},"content":"            showToUser(toShow);","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":153,"author":{"gitId":"Tohtoroo"},"content":"     * Prints the string of remaining tasks the user has in the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":154,"author":{"gitId":"Tohtoroo"},"content":"     * @param tl TaskList object containing the list of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"Tohtoroo"},"content":"     * @return Formatted message as a string.","lastModifiedDate":"2023-02-03"},{"lineNumber":156,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":157,"author":{"gitId":"Tohtoroo"},"content":"    public String stringOfTaskNumbers(TaskList tl) {","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"Tohtoroo"},"content":"        String toShow \u003d String.format(\"Now you have %d tasks in your list\", tl.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"Tohtoroo"},"content":"        return toShow;","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Tohtoroo":161}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    @TempDir","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"    Path tempDir;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    void addTask_todo_success() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"        Path path \u003d tempDir.resolve(\"text.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"        Storage storage \u003d new Storage(path.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        String[] commandInput \u003d new String[]{\"todo\", \"return book\"};","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"        Command command \u003d parser.parse(commandInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"        assertEquals(\"[T][ ] return book\", tasks.get(0).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"    void addTask_deadline_success() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        Path path \u003d tempDir.resolve(\"text.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"        Storage storage \u003d new Storage(path.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"        String[] commandInput \u003d new String[]{\"deadline\", \"return book /by 15/12/2023 1600\"};","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"        Command command \u003d parser.parse(commandInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"        assertEquals(\"[D][ ] return book (by: Fri, 15 Dec 2023 04:00PM)\", tasks.get(0).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Tohtoroo":48}},{"path":"src/test/java/duke/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package duke.util;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"public class StorageTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    @TempDir","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    Path tempDir;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    void addTodo_storage_write_success() throws DukeException, IOException {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"        Path path \u003d tempDir.resolve(\"text.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"        Storage storage \u003d new Storage(path.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        tasks.add(new Todo(\"return book\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        storage.update(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        assertEquals(\"1|T| |return book\" ,Files.readString(path));","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Tohtoroo":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"event event /from friday /to monday","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"deadline event2 /by friday tuesday","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"todo event 3","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"unmark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Tohtoroo":7}}]
