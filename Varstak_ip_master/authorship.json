[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Varstak":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"    archiveBaseName \u003d \"Ultron\"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Varstak":16,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"### List existing tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"Displays all existing tasks saved.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"`list`","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"1. [T][ ] eat medicine","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"2. [D][ ] return library book (Feb 28 2022 1500hrs)","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"### Add a Task `todo`, `event`, `deadline`","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"By using the following commands, users can add a _todo_, _event_ or _deadline_ task to the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"`todo eat medicine`","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"[T][ ] eat medicine","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"`event meet sally /2021-12-13 2200/2021-12-13 2300`","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"[E][ ] meet sally (From: Dec 13 2021 2200hrs To: Dec 13 2021 2300hrs)","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"`deadline return library book /2022-02-28 1500`","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"[D][ ] return library book (Feb 28 2022 1500hrs)","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"### Delete a Task","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"Allows users to remove a task from the existing list by inputting the task serial number","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"`delete 2`","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"[E][ ] meet sally (From: Dec 13 2021 2200hrs To: Dec 13 2021 2300hrs)","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"Varstak"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"Varstak"},"content":"### Set task as done","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"Varstak"},"content":"Users can mark tasks as done by using the `mark` command and inputting the task serial number","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"Varstak"},"content":"`mark 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"Varstak"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"Varstak"},"content":"1. [T][X] eat medicine","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":67,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"Varstak"},"content":"### Set task as undone","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"Varstak"},"content":"Users can mark tasks as undone by using the `unmark` command.","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"Varstak"},"content":"`unmark 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"Varstak"},"content":"Nice! I\u0027ve marked this task as undone:","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"Varstak"},"content":"1. [T][ ] eat medicine","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"Varstak"},"content":"### Find tasks with keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"Varstak"},"content":"The `find` command gives users the ability to filter existing tasks based on the keyword provided.","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"Varstak"},"content":"`find return`","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"Varstak"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"Varstak"},"content":"1. [D][ ] return library book (Feb 28 2022 1500hrs)","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"Varstak"},"content":"### Reminders for upcoming tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"Varstak"},"content":"Users can view upcoming tasks for the next 7 days by using the `remind` command.","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"Varstak"},"content":"`list`","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"Varstak"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"Varstak"},"content":"1. [T][ ] eat medicine","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"Varstak"},"content":"2. [D][ ] return library book (Feb 28 2022 1500hrs)","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"Varstak"},"content":"3. [E][ ] meet sally (From: Feb 23 2023 2200hrs To: Feb 26 2023 2300hrs)","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"Varstak"},"content":"`remind`","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"Varstak"},"content":"Here are your tasks for the next 7 days:","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"Varstak"},"content":"1. [E][ ] meet sally (From: Feb 23 2023 2200hrs To: Feb 26 2023 2300hrs)","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"Varstak"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"Varstak"},"content":"### Save and exit","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"Varstak"},"content":"The command `bye` saves the list and users can now exit the application.","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"Varstak":84,"-":27}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"    String deadlineTimeString;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"    public Deadline(String description, String deadlineTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"        this.deadlineTimeString \u003d Parser.formatDateString(deadlineTime);","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    public String getDeadlineTimeString() {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"        return deadlineTimeString;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"        return \"[D]\" + super.toString() + \"(\" + deadlineTimeString + \"hrs\" + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"        return String.format(\"deadline / %s / %s / %s\", super.getSaveString(), this.getDescription(), deadlineTimeString);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"    private UIText ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"    public Duke() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"            ui \u003d new UIText();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"            storage \u003d new Storage(\"./data/tasks.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"            storage.initialize();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"            TaskHandler handler \u003d new TaskHandler(taskList);","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"            return Parser.execute(input, handler, ui, storage);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"            return e.getMessage() + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"    public String getWelcome() {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"        return \"Peace in our time. \";","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Varstak":36,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"    private String startTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"    private String endTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"        this.startTime \u003d Parser.formatDateString(startTime);","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"        this.endTime \u003d Parser.formatDateString(endTime);","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"        return startTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"     * Creates a string representation of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"     * @return String object of the event task.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"        return \"[E]\" + super.toString() + \"(From: \" + startTime + \"hrs\" + \" To: \" +  endTime + \"hrs\" + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"     * Creates the string representation of the format used to save the tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"     * @return String object of the saved task.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"        return String.format(\"event / %s / %s / %s / %s\", super.getSaveString(), this.getDescription(), startTime, endTime);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import exceptions.EmptyContentException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import exceptions.InvalidTaskAccessException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import exceptions.UnknownInputException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"    public static String formatDateString(String str) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(str, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"        String displayDate \u003d date.format(dateFormat);","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"        return displayDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"     * Changes the format of the date and time for display.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"     * @param str String object of the saved date and time.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"     * @return String object of the date and time used for display.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    public static String retrieveDate(String str) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(str, DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"        String displayDate \u003d date.format(dateFormat);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"        return displayDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"    public static LocalDateTime getTime(String str) {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(str, DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"        return date;","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"     * Extracts the time from event and deadline tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"     * @param input String input of user","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"     * @return Array of strings containing the time if input is an event or deadline task","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"    public static String[] extractArgsFromInput(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"        String[] splitCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"        String type \u003d splitCommand[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"        if (type.equals(\"todo\") || type.equals(\"find\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"            return splitCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"            String[] segments \u003d splitCommand[1].split(\"/\");","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"            return segments;","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Varstak"},"content":"    public static int findIndex(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"        String[] splitCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"        int index \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"        return index;","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"Varstak"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"Varstak"},"content":"     * @param input String input of user","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"Varstak"},"content":"     * @param handler current TaskHandler object being used","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"Varstak"},"content":"     * @param ui current UIText object being used","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"Varstak"},"content":"     * @param storage current storage being accessed","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"Varstak"},"content":"     * @return A string that is displayed to the user in the gui.","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"Varstak"},"content":"     * @throws UnknownInputException","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"Varstak"},"content":"     * @throws EmptyContentException","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"Varstak"},"content":"     * @throws InvalidTaskAccessException","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"Varstak"},"content":"    public static String execute(String input, TaskHandler handler, UIText ui, Storage storage)","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"Varstak"},"content":"            throws UnknownInputException, EmptyContentException, InvalidTaskAccessException {","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"Varstak"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"Varstak"},"content":"            return ui.exit();","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"Varstak"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"Varstak"},"content":"            return handler.display();","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"Varstak"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"Varstak"},"content":"            return handler.markAsDone(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"Varstak"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"Varstak"},"content":"            return handler.markAsUndone(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"Varstak"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"Varstak"},"content":"            return handler.eventHandler(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"Varstak"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"Varstak"},"content":"            return handler.todoHandler(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"Varstak"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"Varstak"},"content":"            return handler.deadlineHandler(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"Varstak"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"Varstak"},"content":"            return handler.deleteHandler(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"Varstak"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"Varstak"},"content":"            return handler.findHandler(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"Varstak"},"content":"        } else if (input.startsWith(\"remind\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"Varstak"},"content":"            storage.saveTasks();","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"Varstak"},"content":"            return handler.remindHandler();","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"Varstak"},"content":"            throw new UnknownInputException();","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Varstak":103}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import java.io.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"    String path;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"     * Method to load content of the saved list and create the file for list storage if it does not exist.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"    public void initialize() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"        File newFile \u003d new File(this.path);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"        newFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"        if (! newFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"            newFile.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"        loadTasks(newFile);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"     * Saves the current list into a text file.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"    public void saveTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"            BufferedWriter bufferWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"            String tasks \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"            for (Task task : TaskList.getContent()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"                tasks +\u003d task.getSaveString() + \"\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"            bufferWriter.write(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"            bufferWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"    public void loadTasks(File file) {","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Varstak"},"content":"                String nextTask \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"                String[] sections \u003d nextTask.split(\" / \", 6);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"                String type \u003d sections[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"                String isDone \u003d sections[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Varstak"},"content":"                Task currentTask \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Varstak"},"content":"                if (type.equals(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Varstak"},"content":"                    currentTask \u003d new Todo(sections[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Varstak"},"content":"                } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Varstak"},"content":"                    currentTask \u003d new Deadline(sections[2], Parser.retrieveDate(sections[3]));","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Varstak"},"content":"                } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Varstak"},"content":"                    currentTask \u003d new Event(sections[2], Parser.retrieveDate(sections[3]), Parser.retrieveDate(sections[4]));","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Varstak"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Varstak"},"content":"                    System.out.println(\"error\");","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Varstak"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Varstak"},"content":"                if (isDone.equals(\"done\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Varstak"},"content":"                    currentTask.setDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Varstak"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Varstak"},"content":"                TaskList.getContent().add(currentTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Varstak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Varstak"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Varstak":75}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"    public String statusToString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"        return \"[\" + getStatusIcon() + \"] \";","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    public void setUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"        return this.statusToString() + this.getDescription();","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"            return \"done\";","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"            return \"undone\";","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":46}},{"path":"src/main/java/duke/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import exceptions.EmptyContentException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import exceptions.InvalidTaskAccessException;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"import java.util.List;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"public class TaskHandler {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    private List\u003cTask\u003e content;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"    public TaskHandler(TaskList taskList) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"        this.content \u003d taskList.getContent();","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"    private static final String HEADER \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"    public String display() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"        String allElements \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"        for (int i \u003d 0; i \u003c content.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"            if (!content.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"                allElements \u003d allElements + (i + 1) + \". \" + content.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"        if (allElements \u003d\u003d \"\") {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"            return \"No items in list!\";","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"            return \"Here are the tasks in your list:\" + \"\\n\" + allElements;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"     * @return Display of task marked if it exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"    public String markAsDone(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"        int index \u003d Parser.findIndex(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"        String nextTaskString \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"        int listIndex \u003d index + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"        if (!content.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"            content.get(index).setDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"            return \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + listIndex + \". \" + content.get(index).toString()","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"                    + \"\\n\" + nextTaskString;","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"            return \"No such task.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Varstak"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Varstak"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Varstak"},"content":"     * @return Display of task marked if it exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Varstak"},"content":"    public String markAsUndone(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Varstak"},"content":"        int index \u003d Parser.findIndex(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Varstak"},"content":"        int listIndex \u003d index + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Varstak"},"content":"        if (content.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"Varstak"},"content":"            return \"No such task.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Varstak"},"content":"        } else if (!content.isEmpty() \u0026\u0026 content.get(index).isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Varstak"},"content":"            content.get(index).setUndone();","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Varstak"},"content":"            return \"Nice! I\u0027ve marked this task as undone: \" + \"\\n\" + (listIndex) + \". \" + content.get(index).toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"Varstak"},"content":"        } else if (!content.get(index).isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"Varstak"},"content":"            return \"This task is already marked undone. \";","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Varstak"},"content":"            return \"No such task.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Varstak"},"content":"     * Creates an event task.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Varstak"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"Varstak"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Varstak"},"content":"     * @return Display of event task created.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Varstak"},"content":"     * @throws EmptyContentException","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Varstak"},"content":"    public String eventHandler(String input) throws EmptyContentException {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Varstak"},"content":"        assert input.length() \u003e 7;","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"Varstak"},"content":"        String[] segments \u003d Parser.extractArgsFromInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"Varstak"},"content":"        String item \u003d segments[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Varstak"},"content":"        String startTime \u003d segments[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Varstak"},"content":"        String endTime \u003d segments[2];","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Varstak"},"content":"        if (item.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Varstak"},"content":"            throw new EmptyContentException(\"event\");","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Varstak"},"content":"        Event newEvent \u003d new Event(item, startTime, endTime);","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"Varstak"},"content":"        content.add(newEvent);","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"Varstak"},"content":"        return HEADER + \"\\n\" + newEvent + \"\\n\" + String.format(\"Now you have %d tasks in the list.\", content.size()) + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Varstak"},"content":"     * Creates a todo task.","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Varstak"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"Varstak"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"Varstak"},"content":"     * @return Display of event task created.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"Varstak"},"content":"     * @throws EmptyContentException","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Varstak"},"content":"    public String todoHandler(String input) throws EmptyContentException {","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"Varstak"},"content":"        assert input.length() \u003e 5;","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"Varstak"},"content":"        String[] segments \u003d Parser.extractArgsFromInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"Varstak"},"content":"        String item \u003d segments[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"Varstak"},"content":"        if (item.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"Varstak"},"content":"            throw new EmptyContentException(\"todo\");","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"Varstak"},"content":"        Todo newTodo \u003d new Todo(item);","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"Varstak"},"content":"        content.add(newTodo);","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"Varstak"},"content":"        return HEADER + \"\\n\" + newTodo + \"\\n\" + String.format(\"Now you have %d tasks in the list.\", content.size()) + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Varstak"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Varstak"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"Varstak"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Varstak"},"content":"     * @return Display of deadline task created.","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Varstak"},"content":"     * @throws EmptyContentException","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"Varstak"},"content":"    public String deadlineHandler(String input) throws EmptyContentException {","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"Varstak"},"content":"        assert input.length() \u003e 9;","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"Varstak"},"content":"        String[] segments \u003d Parser.extractArgsFromInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"Varstak"},"content":"        String item \u003d segments[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Varstak"},"content":"        String deadline \u003d segments[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"Varstak"},"content":"        if (item.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Varstak"},"content":"            throw new EmptyContentException(\"deadline\");","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"Varstak"},"content":"        Deadline newDeadline \u003d new Deadline(item, deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"Varstak"},"content":"        content.add(newDeadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"Varstak"},"content":"        return HEADER + \"\\n\" + newDeadline + \"\\n\" + String.format(\"Now you have %d tasks in the list.\", content.size()) + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"Varstak"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"Varstak"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"Varstak"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Varstak"},"content":"     * @return Confirmation of task deleted if it exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"Varstak"},"content":"     * @throws EmptyContentException","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"Varstak"},"content":"     * @throws InvalidTaskAccessException","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"Varstak"},"content":"    public String deleteHandler(String input) throws InvalidTaskAccessException {","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"Varstak"},"content":"        assert input.length() \u003e 7;","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"Varstak"},"content":"        int index \u003d Parser.findIndex(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"Varstak"},"content":"        if (index \u003e content.size() || index \u003c 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"Varstak"},"content":"            throw new InvalidTaskAccessException();","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"Varstak"},"content":"            String taskContent \u003d content.get(index).toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"Varstak"},"content":"            content.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"Varstak"},"content":"            return \"Noted. I\u0027ve removed this task:\" + \"\\n\" + taskContent + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"Varstak"},"content":"                    String.format(\"Now you have %d tasks in the list.\", content.size()) + \"\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"Varstak"},"content":"     * Finds all tasks containing a keyword","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"Varstak"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"Varstak"},"content":"     * @param input input of the user","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"Varstak"},"content":"     * @return string with a list of all tasks containing a given keyword","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"Varstak"},"content":"     * @throws EmptyContentException","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"Varstak"},"content":"    public String findHandler(String input) throws EmptyContentException {","lastModifiedDate":"2023-01-27"},{"lineNumber":169,"author":{"gitId":"Varstak"},"content":"        String[] segments \u003d Parser.extractArgsFromInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"Varstak"},"content":"        String keyword \u003d segments[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"Varstak"},"content":"        TaskList.findKeyword(keyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"Varstak"},"content":"        return UIText.printFind(TaskList.getWordList());","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"Varstak"},"content":"     * Reminds users of tasks for the next 7 days.","lastModifiedDate":"2023-02-20"},{"lineNumber":178,"author":{"gitId":"Varstak"},"content":"     * @return A list of tasks with deadline or event start time less than 7 days from now.","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"Varstak"},"content":"    public String remindHandler() {","lastModifiedDate":"2023-02-15"},{"lineNumber":181,"author":{"gitId":"Varstak"},"content":"        TaskList.findReminders();","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"Varstak"},"content":"        List\u003cTask\u003e reminders \u003d TaskList.getRemindList();","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"Varstak"},"content":"        String allElements \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"Varstak"},"content":"        for (int i \u003d 0; i \u003c reminders.size(); i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"Varstak"},"content":"            if (! reminders.isEmpty()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"Varstak"},"content":"                allElements \u003d allElements + (i + 1) + \". \" + reminders.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"Varstak"},"content":"            } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":188,"author":{"gitId":"Varstak"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":189,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":190,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"Varstak"},"content":"        if (allElements \u003d\u003d \"\") {","lastModifiedDate":"2023-02-15"},{"lineNumber":192,"author":{"gitId":"Varstak"},"content":"            return \"No upcoming tasks!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":193,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":194,"author":{"gitId":"Varstak"},"content":"            return \"Here are your tasks for the next 7 days:\" + \"\\n\" + allElements;","lastModifiedDate":"2023-02-15"},{"lineNumber":195,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":196,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":197,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":197}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import java.util.List;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"    private static List\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    private static List\u003cTask\u003e wordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    private static List\u003cTask\u003e remindList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"    public static List\u003cTask\u003e getContent() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"        return tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"    public static List\u003cTask\u003e getWordList() { return wordList; }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"    public static List\u003cTask\u003e getRemindList() {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"        return remindList;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    public static void findKeyword(String keyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"        wordList.clear();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"                wordList.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"    public static void findReminders() {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"        remindList.clear();","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"        LocalDateTime today \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"        LocalDateTime remindLimit \u003d today.plusDays(7);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"                LocalDateTime date \u003d Parser.getTime(((Deadline) task).getDeadlineTimeString());","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"                if (!date.isAfter(remindLimit) \u0026\u0026 !date.isBefore(today)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"                    remindList.add(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"                LocalDateTime date \u003d Parser.getTime(((Event) task).getStartTime());","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"                if (!date.isAfter(remindLimit) \u0026\u0026 !date.isBefore(today)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"                    remindList.add(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Varstak"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Varstak":54}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    public String getSaveString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"        return String.format(\"todo / %s / %s\", super.getSaveString(), this.getDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":15}},{"path":"src/main/java/duke/UIText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import java.util.List;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"public class UIText {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"    private static final String GREET \u003d \"Hello! I am Kevin, an interactive chatbot. What can I do for you?\" + \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"    private static final String EXIT \u003d \"Bye! Hope to talk to you again!\";","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    private static final String SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"    public UIText() {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"    public String getInput() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"     * String representation of opening message.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"     * @return String object of greeting message.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    public String greet() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"        return GREET;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"     * String representation of closing message and closes the scanner. ","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"     * @return String object of greeting message.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"    public String exit() {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"        sc.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"        return EXIT;","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"    public String separate() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"        return SEPARATOR + \"\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"     * Prints the list for the find method","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"     * @param wordList","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"     * @return string with a list of all tasks containing a given keyword","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"    public static String printFind(List\u003cTask\u003e wordList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"        String heading \u003d \"Here are the matching tasks in your list: \" + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"        String list \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"        if (wordList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"            return \"No tasks found. \";","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Varstak"},"content":"            int indexCounter \u003d 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"            for (Task task : wordList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"                list +\u003d indexCounter + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"                indexCounter++;","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Varstak"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Varstak"},"content":"        return heading + list;","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Varstak":58}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke.gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Varstak"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Varstak"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Varstak"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Varstak"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"Varstak"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"Varstak"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"Varstak"},"content":"        db.flip();","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"Varstak"},"content":"        return db;","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Varstak":67}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke.gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Varstak":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke.gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"            stage.setTitle(\"Ultron\");","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"            MainWindow main \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"            main.setDuke(duke);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"            main.showWelcome();","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Varstak":35}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke.gui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Varstak"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Varstak"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Varstak"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Varstak"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Varstak"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Tony-PNG.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Varstak"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Ultron-PNG.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Varstak"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Varstak"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Varstak"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Varstak"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Varstak"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Varstak"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Varstak"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Varstak"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Varstak"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Varstak"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Varstak"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Varstak"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Varstak"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Varstak"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Varstak"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Varstak"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Varstak"},"content":"        );","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Varstak"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"Varstak"},"content":"    protected void showWelcome() {","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"Varstak"},"content":"        String welcome \u003d duke.getWelcome();","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"Varstak"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"Varstak"},"content":"                DialogBox.getBotDialog(welcome, dukeImage)","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"Varstak"},"content":"        );","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Varstak":59}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package exceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":7}},{"path":"src/main/java/exceptions/EmptyContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package exceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"public class EmptyContentException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"    public EmptyContentException(String taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"        super(String.format(\"OOPS!!! The description of a \" + taskType + \" cannot be empty.\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":7}},{"path":"src/main/java/exceptions/InvalidTaskAccessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package exceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"public class InvalidTaskAccessException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"    public InvalidTaskAccessException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"        super(\" Trying to access an invalid task!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Varstak":7}},{"path":"src/main/java/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package exceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"public class UnknownInputException extends DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"    public UnknownInputException() {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":7}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Varstak":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Varstak"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Varstak"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Varstak"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Varstak"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Varstak"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Varstak":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    public void dateConversion() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"        assertEquals(\"2000-12-23 2300\", Parser.retrieveDate(\"Dec 23 2000 2300\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Varstak":13}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"import duke.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"    public void testCreate() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Varstak"},"content":"        assertEquals(\"[T][ ] sleep\", new Todo(\"sleep\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Varstak"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Varstak"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Varstak":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Varstak"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Varstak"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Varstak"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Varstak"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Varstak"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Varstak"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Varstak"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Varstak"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Varstak"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Varstak":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Varstak"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Varstak"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Varstak":2,"-":19}}]
