[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2019-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"WilliamHaiweiGu":1}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"# Meggy project template","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"instructions on how to use it.","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"   first)","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"3. After that, locate the `src/main/java/Meggy.java` file, right-click it, and choose `Run Meggy.main()` (if the code","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"   editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"   below as the output:","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"WilliamHaiweiGu":10}},{"path":"src/main/java/DdlTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class DdlTask extends UserTask {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String label \u003d getTaskTypeLabel(Resource.cmdDdl);","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Time\u0027 keyword formatted to be looked up in user input during parsing.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwFmt \u003d formatKeyword(Resource.kwDdl);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static int kwLen \u003d kwFmt.length();","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final String time;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Constructor of parsed strings.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private DdlTask(String desc, String time) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Factory method. Parses time and description.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static DdlTask of(String args) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int kwIdx \u003d args.indexOf(kwFmt);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // If no key word in args, time is set to \"N/A\".","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String desc, time;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (kwIdx \u003c 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"            desc \u003d args;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"            time \u003d Util.noFound;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"            desc \u003d args.substring(0, kwIdx).trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"            time \u003d args.substring(kwIdx + kwLen).trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new DdlTask(desc, time);","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return label + super.toString() + \" (by: \" + time + \u0027)\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":39}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class EventTask extends UserTask {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String label \u003d getTaskTypeLabel(Resource.cmdEvent);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Start\u0027 keyword formatted to be looked up in user input during parsing.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwSttFmt \u003d formatKeyword(Resource.kwStt);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027End\u0027 keyword formatted to be looked up in user input during parsing.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwEndFmt \u003d formatKeyword(Resource.kwEnd);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final String start;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final String end;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param desc  Parsed string description of task.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param start Parsed start time string of task.","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param end   Parsed end time string of task.","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private EventTask(String desc, String start, String end) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static EventTask of(String args) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int argLen \u003d args.length();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ArrayList\u003cKwIdxPair\u003e indeces \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"        indeces.add(new KwIdxPair(null, argLen));","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (String keyword : new String[]{kwSttFmt, kwEndFmt}) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final int idx \u003d args.indexOf(keyword);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (idx \u003e\u003d 0)","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"                indeces.add(new KwIdxPair(keyword, idx));","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"        indeces.sort(KwIdxPair::compareTo);","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final HashMap\u003cString, String\u003e kwValue \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int nIndeces \u003d indeces.size() - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (int i \u003d 0; i \u003c nIndeces; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"            KwIdxPair pair \u003d indeces.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"            kwValue.put(pair.keyword, args.substring(pair.idx + pair.keyword.length(), indeces.get(i + 1).idx));","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int descLim \u003d indeces.get(0).idx;","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String desc \u003d descLim \u003e\u003d argLen ? args : args.substring(0, descLim);","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String start \u003d kwValue.getOrDefault(kwSttFmt, Util.noFound);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String end \u003d kwValue.getOrDefault(kwEndFmt, Util.noFound);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new EventTask(desc.trim(), start.trim(), end.trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return label + super.toString() + \" (from: \" + start + \" to: \" + end + \u0027)\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static class KwIdxPair implements Comparable\u003cKwIdxPair\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public final String keyword;","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public final int idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"        private KwIdxPair(String keyword, int idx) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.keyword \u003d keyword;","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.idx \u003d idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public int compareTo(KwIdxPair o) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return Integer.compare(idx, o.idx);","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":71}},{"path":"src/main/java/Meggy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.OutputStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":" * The chatbot. Supports customized input stream and output stream.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class Meggy implements Runnable {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * What to do when reaching different commands. Keys: non-null strings. Values: Non-null function that accepts","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * unparsed string arguments and return string answers.","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final Map\u003cString, MeggyException.Function\u003cString, String\u003e\u003e cmdJob;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * What to do when the command is unknown. Currently: feedback unknown command","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final MeggyException.Function\u003cString, String\u003e unknownCmdBehavior \u003d s -\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"        throw new MeggyException(Resource.errUnknownCmd(Util.get1stArg(s)));","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    };","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Scanner in;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * List of tasks. Allow dupes.","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final ArrayList\u003cUserTask\u003e tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param in  Non-null input stream","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param out Non-null output stream","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public Meggy(InputStream in, OutputStream out) {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (in \u003d\u003d null)","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new NullPointerException(\"InputStream is null\");","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (out \u003d\u003d null)","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new NullPointerException(\"OutputStream is null\");","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.out \u003d out instanceof PrintStream ? (PrintStream) out : new PrintStream(out);","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"        cmdJob \u003d Map.of(","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdExit, s -\u003e Resource.farewell,","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdList, s -\u003e listItems(),","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdMk, s -\u003e markTaskStatus(s, true),","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdUnmk, s -\u003e markTaskStatus(s, false),","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdTodo, s -\u003e addTask(s, Util.todoNew),","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdDdl, s -\u003e addTask(s, Util.ddlNew),","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdEvent, s -\u003e addTask(s, Util.eventNew),","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdDel, this::deleteTask","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"        );","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"        new Meggy(System.in, System.out).run();","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String listItems() {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final StringBuilder ans \u003d new StringBuilder(Resource.notifList);","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (UserTask task : tasks)","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"            ans.append(Resource.idxFmt(i++)).append(task).append(\u0027\\n\u0027);","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return ans.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param arg Trimmed string","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Parsed idx (starts with 0)","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private int parseIdx(String arg) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"        arg \u003d Util.get1stArg(arg);","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (\"\".equals(arg))","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyNoArgException();","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"            idx \u003d Integer.parseInt(arg) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyNFException(arg);","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int nTask \u003d tasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (idx \u003c 0 || idx \u003e\u003d nTask)","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyIOBException(idx, nTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param arg Index (start with 1) of task to be updated.","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String markTaskStatus(String arg, boolean newStatus) {","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"            idx \u003d parseIdx(arg);","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (MeggyException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return e.getMessage() + Util.usageIdxCmd(newStatus ? Resource.cmdMk : Resource.cmdUnmk);","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final UserTask task \u003d tasks.get(idx);","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"        task.status \u003d newStatus;","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return (newStatus ? Resource.notifMk : Resource.notifUnmk) + Resource.taskIndent + task + \u0027\\n\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String addTask(String args, MeggyException.Function\u003cString, UserTask\u003e newTask) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final UserTask task \u003d newTask.apply(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"WilliamHaiweiGu"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.notifAdd + reportChangedTaskAndList(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param arg Index (start with 1) of task to be updated.","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String deleteTask(String arg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"WilliamHaiweiGu"},"content":"            idx \u003d parseIdx(arg);","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (MeggyException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return e.getMessage() + Util.usageIdxCmd(Resource.cmdDel);","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final UserTask task \u003d tasks.remove(idx);","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.notifDel + reportChangedTaskAndList(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String reportChangedTaskAndList(UserTask task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.taskIndent + task + \u0027\\n\u0027 + Resource.nTaskFmt(tasks.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Interact with user using designated io streams","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void run() {","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Front page","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.print(Resource.msgHd);","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.println(Resource.logo);","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.print(Resource.greetings);","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.print(Resource.msgTl);","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"WilliamHaiweiGu"},"content":"        while (in.hasNextLine()) { // reads user input and reply in each iteration","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"WilliamHaiweiGu"},"content":"            //Parse command and args","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String line \u003d in.nextLine().trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final int spaceIdx \u003d line.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String cmd \u003d (spaceIdx \u003c 0 ? line : line.substring(0, spaceIdx)).toLowerCase();","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"WilliamHaiweiGu"},"content":"            MeggyException.Function\u003cString, String\u003e job \u003d cmdJob.get(cmd);","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"WilliamHaiweiGu"},"content":"            String args;","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (job \u003d\u003d null) { // Unknown command","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"WilliamHaiweiGu"},"content":"                job \u003d unknownCmdBehavior;","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"WilliamHaiweiGu"},"content":"                args \u003d line;","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"WilliamHaiweiGu"},"content":"            } else","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"WilliamHaiweiGu"},"content":"                args \u003d spaceIdx \u003c 0 ? \"\" : line.substring(spaceIdx + 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"WilliamHaiweiGu"},"content":"            args \u003d args.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"WilliamHaiweiGu"},"content":"            //Execute and commands and display results","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"WilliamHaiweiGu"},"content":"            out.print(Resource.msgHd);","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"WilliamHaiweiGu"},"content":"            String response;","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"WilliamHaiweiGu"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"WilliamHaiweiGu"},"content":"                response \u003d job.apply(args);","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"WilliamHaiweiGu"},"content":"            } catch (MeggyException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"WilliamHaiweiGu"},"content":"                response \u003d e.getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"WilliamHaiweiGu"},"content":"            out.print(response);","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"WilliamHaiweiGu"},"content":"            out.print(Resource.msgTl);","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (Resource.cmdExit.equals(cmd))","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"WilliamHaiweiGu"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.println(\"WARNING: REACHED END OF INPUT WITHOUT \u0027BYE\u0027 COMMAND\");","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":163}},{"path":"src/main/java/MeggyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public MeggyException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(Resource.errBase + msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Function that throws Meggy exception","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public interface Function\u003cI, O\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"        O apply(I in) throws MeggyException;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":12}},{"path":"src/main/java/MeggyIOBException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyIOBException extends MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param idx Index to program. Starts with 0.","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public MeggyIOBException(int idx, int listSize) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(Resource.errOutOfBounds(idx, listSize));","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":8}},{"path":"src/main/java/MeggyNFException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyNFException extends MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param arg The string that can\u0027t be parsed.","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public MeggyNFException(String arg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(Resource.errNFE(arg));","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":8}},{"path":"src/main/java/MeggyNoArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyNoArgException extends MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public MeggyNoArgException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(Resource.errNoArgs);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":5}},{"path":"src/main/java/MeggyTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":" * For testing purpose only.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyTest {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"        new Meggy(new FileInputStream(\"text-ui-test/input.txt\"), out).run();","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"        String actual \u003d out.toString().replaceAll(\"\\r\", \"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"        String expected \u003d new String(new FileInputStream(\"text-ui-test/EXPECTED.txt\").readAllBytes()).","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"                replaceAll(\"\\r\", \"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"        System.out.println(actual);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":17}},{"path":"src/main/java/Resource.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Class that stores all customizable resource values statically.","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public final class Resource {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String errBase \u003d \" ☹ OOPS!!! \";","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String errNoArgs \u003d \"Description of this command cannot be empty.\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String taskIndent \u003d \"    \";","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdExit \u003d \"bye\";","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdList \u003d \"list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdMk \u003d \"mark\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdUnmk \u003d \"unmark\";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdTodo \u003d \"todo\";","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdDdl \u003d \"deadline\";","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdEvent \u003d \"event\";","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdDel \u003d \"delete\";","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwDdl \u003d \"by\";","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwStt \u003d \"from\";","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwEnd \u003d \"to\";","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifAdd \u003d \" Got it. Added this task:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifList \u003d \" Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifMk \u003d \" Booyah! Marked this task as done:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifUnmk \u003d \" OK. Marked this task as not done:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifUsage \u003d \" Usage: \";","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifDel \u003d \" OK. Removed this task:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String logo \u003d \" __  __\\n|  \\\\/  |\\n| \\\\  / | ___  __ _  __ _ _   _\\n| |\\\\/| |/ _ \\\\/ _` |/ _`\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"            \" | | | |\\n| |  | |  __/ (_| | (_| | |_| |\\n|_|  |_|\\\\___|\\\\__, |\\\\__, |\\\\__, |\\n              __/ | __/ \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"            \"| __/ |\\n             |___/ |___/ |___/\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String msgHd \u003d \"------------------------------------------------------------\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String msgTl \u003d msgHd + \"\\n\u003e\";","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String greetings \u003d \" Wommy! Get REKT by the upcoming star of Inkopolis, Meggy!\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String farewell \u003d \" OK gotta go play more Turf Wars. Have a nice day!\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static char doneMk \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @deprecated Class that stores all resource values statically. Should not be initialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"    Resource() {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Format to print array index number.","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String idxFmt(int i) {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \" \" + (i + 1) + \u0027.\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String statusFmt(boolean status) {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Util.parenthesize(status ? doneMk : \u0027 \u0027);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String nTaskFmt(int nTask) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \" Now you have \" + nTask + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Msg of error created by NumberFormatException","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String errNFE(String arg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"Can not interpret \\\"\" + arg + \"\\\" as an index number.\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String errUnknownCmd(String cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"\".equals(cmd) ? \"Umm that\u0027s all white space? Say something! Speak to me!\\n\" : \"Don\u0027t know what \\\"\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"                cmd + \"\\\" means.\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param idx Index to program. Starts with 0.","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String errOutOfBounds(int idx, int listSize) {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"        idx +\u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"Can not retrieve item with \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"                (idx \u003e 0 ? \"index \" + idx + \" from a list of size \" + listSize : \"non-positive index (\" + idx + \u0027)\u0027)","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"                + \".\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":78}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Users task that has no time whatsoever","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class TodoTask extends UserTask {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String label \u003d getTaskTypeLabel(Resource.cmdTodo);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param desc Parsed string description of task.","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public TodoTask(String desc) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return label + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":18}},{"path":"src/main/java/UserTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Entries to be recorded by the bot","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class UserTask {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final String desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public boolean status;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param desc Parsed, trimmed string description of task.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public UserTask(String desc) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (\"\".equals(desc)) // No arguments","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyNoArgException();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"        status \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String getTaskTypeLabel(String taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Util.parenthesize(Character.toUpperCase(taskType.charAt(0)));","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String formatKeyword(String keyword) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \u0027/\u0027 + keyword + \u0027 \u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.statusFmt(status) + \u0027 \u0027 + desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":30}},{"path":"src/main/java/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Class that stores all helper functions and uncustomizable constants statically.","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public final class Util {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    //Cached constructor functional objects","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final MeggyException.Function\u003cString, UserTask\u003e todoNew \u003d TodoTask::new;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * What to display if time information is absent in user input","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String noFound \u003d \"N/A\";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final MeggyException.Function\u003cString, UserTask\u003e ddlNew \u003d DdlTask::of;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final MeggyException.Function\u003cString, UserTask\u003e eventNew \u003d EventTask::of;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @deprecated Class that stores all resource values statically. Should not be initialized.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    Util() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String parenthesize(char c) {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"[\" + c + \u0027]\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param cmd Index command. Currently \u0027mark\u0027, \u0027unmark\u0027, or \u0027delete\u0027 only.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String usageIdxCmd(String cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.notifUsage + cmd + \" \u003cidx: integer between 1 and list size (inclusive)\u003e\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param args Trimmed arguments string.","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String get1stArg(String args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int whiteSpaceIdx \u003d args.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return whiteSpaceIdx \u003c 0 ? args : args.substring(0, whiteSpaceIdx);","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"deadline return book","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"mark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"unmark 100","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"unmark a","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"delete -1","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"delete 100","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"delete x","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"java -classpath ..\\bin Meggy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"WilliamHaiweiGu":1}}]
