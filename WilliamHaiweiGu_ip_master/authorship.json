[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2019-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"WilliamHaiweiGu":1}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"# Meggy project template","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"instructions on how to use it.","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"   first)","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"3. After that, locate the `src/main/java/Meggy.java` file, right-click it, and choose `Run Meggy.main()` (if the code","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"   editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"   below as the output:","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"WilliamHaiweiGu":10}},{"path":"src/main/java/DdlTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * {@link UserTask} with an optional due time.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class DdlTask extends UserTask {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Bracketed icon of task type.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String label \u003d getTaskTypeLabel(Resource.cmdDdl);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Due\u0027 keyword formatted to be looked up in user input during parsing.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String dueFmt \u003d formatKeyword(Resource.kwDue);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Formatted \u0027Due\u0027 keyword length. Cached for later use.","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static int dueLen \u003d dueFmt.length();","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Due time.","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final String due;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param desc Non-null. Description string of task.","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param due  Non-null. Due time.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private DdlTask(String desc, String due) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Factory method. Parses description and due time from arguments.","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param args Non-null. User input line with command removed.","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static DdlTask of(String args) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int kwIdx \u003d args.indexOf(dueFmt);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // If no key word in args, time is set to \"N/A\".","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String desc, due;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (kwIdx \u003c 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"            desc \u003d args;","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"            due \u003d Util.noFound;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"            desc \u003d args.substring(0, kwIdx).trim();","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"            due \u003d args.substring(kwIdx + dueLen).trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new DdlTask(desc, due);","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String encode() {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.cmdDdl + \u0027 \u0027 + desc + \u0027 \u0027 + dueFmt + due;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return label + super.toString() + \" (by: \" + due + \u0027)\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":59}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":" * {@link UserTask} with an optional start time and an optional end time.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class EventTask extends UserTask {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Bracketed icon of task type.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String label \u003d getTaskTypeLabel(Resource.cmdEvent);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Start\u0027 keyword formatted to be looked up in user input during parsing.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String sttFmt \u003d formatKeyword(Resource.kwStt);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027End\u0027 keyword formatted to be looked up in user input during parsing.","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String endFmt \u003d formatKeyword(Resource.kwEnd);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Start time.","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final String start;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * end time.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final String end;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param desc  Non-null. Parsed description string.","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param start Non-null. Parsed start time string.","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param end   Non-null. Parsed end time string.","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private EventTask(String desc, String start, String end) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Factory method. Parses description, start time, and end time from arguments.","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param args Non-null. User input line with command removed.","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static EventTask of(String args) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int argLen \u003d args.length();","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // All positions of keywords.","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final ArrayList\u003cKwIdxPair\u003e kwIdxs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // For simplicity, end of argument string is also a keyword position.","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"        kwIdxs.add(new KwIdxPair(null, argLen));","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Record all keyword positions","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (String keyword : new String[]{sttFmt, endFmt}) {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final int idx \u003d args.indexOf(keyword);","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (idx \u003e\u003d 0)","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"                kwIdxs.add(new KwIdxPair(keyword, idx));","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"        kwIdxs.sort(KwIdxPair::compareTo);","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Assign the substring between 2 adjacent keywords to the left one.","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final HashMap\u003cString, String\u003e kwValue \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int nIndeces \u003d kwIdxs.size() - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (int i \u003d 0; i \u003c nIndeces; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"            KwIdxPair pair \u003d kwIdxs.get(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"            kwValue.put(pair.keyword, args.substring(pair.idx + pair.keyword.length(), kwIdxs.get(i + 1).idx));","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // The substring before the 1st keyword is description.","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int descLim \u003d kwIdxs.get(0).idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String desc \u003d descLim \u003e\u003d argLen ? args : args.substring(0, descLim);","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // If \"start\" keyword is in args, write to start time variable. Otherwise use default.","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String start \u003d kwValue.getOrDefault(sttFmt, Util.noFound);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // If \"end\" keyword is in args, write to end time variable. Otherwise use default.","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String end \u003d kwValue.getOrDefault(endFmt, Util.noFound);","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return new EventTask(desc.trim(), start.trim(), end.trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String encode() {","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.cmdEvent + \u0027 \u0027 + desc + \u0027 \u0027 + sttFmt + start + \u0027 \u0027 + endFmt + end;","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return label + super.toString() + \" (from: \" + start + \" to: \" + end + \u0027)\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Keyword-position pair. Enables index sorting of keywords by index positions.","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static class KwIdxPair implements Comparable\u003cKwIdxPair\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public final String keyword;","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public final int idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"        private KwIdxPair(String keyword, int idx) {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.keyword \u003d keyword;","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.idx \u003d idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public int compareTo(KwIdxPair o) {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return Integer.compare(idx, o.idx);","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":102}},{"path":"src/main/java/Meggy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":" * The chatbot. Supports customized {@link InputStream} and {@link OutputStream}.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class Meggy implements Runnable {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * What to do when reaching different commands. Keys: non-null strings. Values: Non-null function that accepts","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * unparsed string arguments and return chatbot response strings.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final Map\u003cString, MeggyException.Function\u003cString, String\u003e\u003e usrCmdToJob;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final Map\u003cString, MeggyException.Function\u003cString, UserTask\u003e\u003e dataEntryToTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * What to do when the user-typed the command is unknown. Currently: notify user command is unknown.","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final MeggyException.Function\u003cString, String\u003e unknownCmdBehavior \u003d s -\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"        throw new MeggyException(Resource.errUnknownCmd(Util.get1stArg(s)));","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    };","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Customizable input.","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final Scanner in;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Customizable output.","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * List of tasks. Allow dupes.","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final ArrayList\u003cUserTask\u003e tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * The task list data file to read from and write to.","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private final File f;","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param in  Non-null. Customizable input.","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param out Non-null. Customizable output.","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public Meggy(InputStream in, OutputStream out) {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (in \u003d\u003d null)","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new NullPointerException(\"InputStream is null\");","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (out \u003d\u003d null)","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new NullPointerException(\"OutputStream is null\");","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.out \u003d out instanceof PrintStream ? (PrintStream) out : new PrintStream(out);","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"        f \u003d new File(Util.dataFilePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"        usrCmdToJob \u003d Map.of(","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdExit, s -\u003e Resource.farewell,","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdList, s -\u003e listTasks(),","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdMk, s -\u003e markTaskStatus(s, true),","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdUnmk, s -\u003e markTaskStatus(s, false),","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdTodo, s -\u003e addTask(s, Util.todoNew),","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdDdl, s -\u003e addTask(s, Util.ddlNew),","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdEvent, s -\u003e addTask(s, Util.eventNew),","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdDel, this::deleteTask","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"        );","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"        dataEntryToTask \u003d Map.of(","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdTodo, Util.todoNew,","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdDdl, Util.ddlNew,","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"                Resource.cmdEvent, Util.eventNew","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"        );","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027List\u0027 command: prints all tasks in the {@code tasks} list.","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Response to \u0027list\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String listTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final StringBuilder ans \u003d new StringBuilder(Resource.notifList);","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"        for (UserTask task : tasks)","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"            ans.append(Resource.idxFmt(i++)).append(task).append(\u0027\\n\u0027);","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return ans.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Parses the index integer from the first word in args string.","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param args Non-null. Trimmed arguments string.","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Parsed idx (starts with 0)","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @throws MeggyNoArgException If args string is empty.","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @throws MeggyNFException    If args string\u0027s first word is not a signed 32-bit {@link Integer}.","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @throws MeggyIOBException   If the parsed index is out of bounds with respect to the tasks list.","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private int parseIdx(String args) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final String arg \u003d Util.get1stArg(args);","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (\"\".equals(arg))","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyNoArgException();","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"WilliamHaiweiGu"},"content":"            idx \u003d Integer.parseInt(arg) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyNFException(arg);","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int nTask \u003d tasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (idx \u003c 0 || idx \u003e\u003d nTask)","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyIOBException(idx, nTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Updates the status of the user task specified by index.","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param args      Non-null. Index (start with 1) string of task to be updated.","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param newStatus The task\u0027s updated status.","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Response to \u0027mark/unmark\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String markTaskStatus(String args, boolean newStatus) {","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"WilliamHaiweiGu"},"content":"            idx \u003d parseIdx(args);","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (MeggyException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return e.getMessage() + Util.usageIdxCmd(newStatus ? Resource.cmdMk : Resource.cmdUnmk);","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final UserTask task \u003d tasks.get(idx);","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"WilliamHaiweiGu"},"content":"        task.status \u003d newStatus;","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return (newStatus ? Resource.notifMk : Resource.notifUnmk) + Resource.taskIndent + task + \u0027\\n\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Adds task to the bottom of {@code tasks} list.","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param args    Non-null. Unparsed task description string.","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param newTask Non-null. Constructor of task to accept {@code args}.","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Response to \"todo/ddl/event\" command.","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String addTask(String args, MeggyException.Function\u003cString, UserTask\u003e newTask) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final UserTask task \u003d newTask.apply(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"WilliamHaiweiGu"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"WilliamHaiweiGu"},"content":"        saveToFile(f);","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.notifAdd + reportChangedTaskAndList(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Deletes task from {@code tasks} list. O(n) runtime.","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param arg Non-null. Index (start with 1) string of task to be updated.","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Response to \u0027delete\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String deleteTask(String arg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int idx;","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"WilliamHaiweiGu"},"content":"            idx \u003d parseIdx(arg);","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (MeggyException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return e.getMessage() + Util.usageIdxCmd(Resource.cmdDel);","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final UserTask task \u003d tasks.remove(idx);","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"WilliamHaiweiGu"},"content":"            saveToFile(f);","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (MeggyException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"WilliamHaiweiGu"},"content":"            out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.notifDel + reportChangedTaskAndList(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Formatted string about the recently modified task and {@code tasks} list.","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param task Non-null. The recently modified task.","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private String reportChangedTaskAndList(UserTask task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.taskIndent + task + \u0027\\n\u0027 + Resource.nTaskFmt(tasks.size());","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Reads content of file into the {@code tasks} list. If the file does not exist, process is skipped. Otherwise, all","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * lines with syntax error are skipped.","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * All file {@link IOException}s are ignored.","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param f Non-null. The data file to read from.","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private void loadFromFile(File f) {","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final Scanner fileIn;","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"WilliamHaiweiGu"},"content":"            fileIn \u003d new Scanner(f);","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return;","lastModifiedDate":"2023-01-25"},{"lineNumber":186,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"WilliamHaiweiGu"},"content":"        while (fileIn.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final JobAndArg\u003cUserTask\u003e jobAndArg \u003d JobAndArg.parse(dataEntryToTask, fileIn.nextLine());","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final MeggyException.Function\u003cString, UserTask\u003e taskNew \u003d jobAndArg.job;","lastModifiedDate":"2023-01-25"},{"lineNumber":190,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (taskNew !\u003d null) { // Command recognized","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"WilliamHaiweiGu"},"content":"                try {","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"WilliamHaiweiGu"},"content":"                    tasks.add(taskNew.apply(jobAndArg.args));","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"WilliamHaiweiGu"},"content":"                } catch (MeggyException ignored) {","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"WilliamHaiweiGu"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"WilliamHaiweiGu"},"content":"        fileIn.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":198,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":201,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Write the content of the entire {@code tasks} list into data file. Creates data file if it did not previously","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * exist.","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param f Non-null. The data file to write to.","lastModifiedDate":"2023-01-25"},{"lineNumber":205,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @throws MeggyException If file IO throws {@link IOException}.","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private void saveToFile(File f) throws MeggyException {","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final FileWriter fw;","lastModifiedDate":"2023-01-25"},{"lineNumber":209,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":210,"author":{"gitId":"WilliamHaiweiGu"},"content":"            f.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":211,"author":{"gitId":"WilliamHaiweiGu"},"content":"            fw \u003d new FileWriter(f, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":212,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":213,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyException(Resource.errFileWrite + Resource.errIO);","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyException(Resource.errFileWrite + Resource.errNoAccess);","lastModifiedDate":"2023-01-25"},{"lineNumber":216,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"WilliamHaiweiGu"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"WilliamHaiweiGu"},"content":"            for (UserTask t : tasks)","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"WilliamHaiweiGu"},"content":"                fw.write(t.encode() + \u0027\\n\u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"WilliamHaiweiGu"},"content":"            fw.flush();","lastModifiedDate":"2023-01-25"},{"lineNumber":221,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyException(Resource.errFileWrite + Resource.errIO);","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"WilliamHaiweiGu"},"content":"        } finally {","lastModifiedDate":"2023-01-25"},{"lineNumber":224,"author":{"gitId":"WilliamHaiweiGu"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":225,"author":{"gitId":"WilliamHaiweiGu"},"content":"                fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":226,"author":{"gitId":"WilliamHaiweiGu"},"content":"            } catch (IOException ignored) {","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":229,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":232,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Interacts with user using designated IO.","lastModifiedDate":"2023-01-19"},{"lineNumber":233,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":234,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":235,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public void run() {","lastModifiedDate":"2023-01-18"},{"lineNumber":236,"author":{"gitId":"WilliamHaiweiGu"},"content":"        // Front page","lastModifiedDate":"2023-01-18"},{"lineNumber":237,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.print(Resource.msgHd);","lastModifiedDate":"2023-01-18"},{"lineNumber":238,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.println(Resource.logo);","lastModifiedDate":"2023-01-18"},{"lineNumber":239,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.print(Resource.greetings);","lastModifiedDate":"2023-01-18"},{"lineNumber":240,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.print(Resource.msgTl);","lastModifiedDate":"2023-01-18"},{"lineNumber":241,"author":{"gitId":"WilliamHaiweiGu"},"content":"        loadFromFile(f);","lastModifiedDate":"2023-01-25"},{"lineNumber":242,"author":{"gitId":"WilliamHaiweiGu"},"content":"        while (in.hasNextLine()) { // reads input and responds in each iteration","lastModifiedDate":"2023-01-19"},{"lineNumber":243,"author":{"gitId":"WilliamHaiweiGu"},"content":"            //Parse command and args","lastModifiedDate":"2023-01-19"},{"lineNumber":244,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final JobAndArg\u003cString\u003e jobAndArg \u003d JobAndArg.parse(usrCmdToJob, in.nextLine());","lastModifiedDate":"2023-01-25"},{"lineNumber":245,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final MeggyException.Function\u003cString, String\u003e job \u003d jobAndArg.job \u003d\u003d null ? unknownCmdBehavior : jobAndArg.job;","lastModifiedDate":"2023-01-25"},{"lineNumber":246,"author":{"gitId":"WilliamHaiweiGu"},"content":"            //Execute commands and display results","lastModifiedDate":"2023-01-19"},{"lineNumber":247,"author":{"gitId":"WilliamHaiweiGu"},"content":"            out.print(Resource.msgHd);","lastModifiedDate":"2023-01-18"},{"lineNumber":248,"author":{"gitId":"WilliamHaiweiGu"},"content":"            String response;","lastModifiedDate":"2023-01-19"},{"lineNumber":249,"author":{"gitId":"WilliamHaiweiGu"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":250,"author":{"gitId":"WilliamHaiweiGu"},"content":"                response \u003d job.apply(jobAndArg.args);","lastModifiedDate":"2023-01-25"},{"lineNumber":251,"author":{"gitId":"WilliamHaiweiGu"},"content":"            } catch (MeggyException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":252,"author":{"gitId":"WilliamHaiweiGu"},"content":"                response \u003d e.getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":253,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":254,"author":{"gitId":"WilliamHaiweiGu"},"content":"            out.print(response);","lastModifiedDate":"2023-01-19"},{"lineNumber":255,"author":{"gitId":"WilliamHaiweiGu"},"content":"            out.print(Resource.msgTl);","lastModifiedDate":"2023-01-18"},{"lineNumber":256,"author":{"gitId":"WilliamHaiweiGu"},"content":"            if (Resource.cmdExit.equals(jobAndArg.cmd)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":257,"author":{"gitId":"WilliamHaiweiGu"},"content":"                in.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":258,"author":{"gitId":"WilliamHaiweiGu"},"content":"                out.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":259,"author":{"gitId":"WilliamHaiweiGu"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":260,"author":{"gitId":"WilliamHaiweiGu"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":261,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":262,"author":{"gitId":"WilliamHaiweiGu"},"content":"        out.println(\"WARNING: REACHED END OF INPUT WITHOUT \u0027BYE\u0027 COMMAND\");","lastModifiedDate":"2023-01-19"},{"lineNumber":263,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":264,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":265,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":266,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Entry class that stores parsed value of command string, the corresponding job function, and args string.","lastModifiedDate":"2023-01-25"},{"lineNumber":267,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":268,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param \u003cE\u003e The return type of the job function.","lastModifiedDate":"2023-01-25"},{"lineNumber":269,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":270,"author":{"gitId":"WilliamHaiweiGu"},"content":"    private static class JobAndArg\u003cE\u003e {","lastModifiedDate":"2023-01-25"},{"lineNumber":271,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public final String cmd;","lastModifiedDate":"2023-01-25"},{"lineNumber":272,"author":{"gitId":"WilliamHaiweiGu"},"content":"        /**","lastModifiedDate":"2023-01-25"},{"lineNumber":273,"author":{"gitId":"WilliamHaiweiGu"},"content":"         * The command-specific function corresponding that will take {@code args} as arguments. Null if the command is","lastModifiedDate":"2023-01-25"},{"lineNumber":274,"author":{"gitId":"WilliamHaiweiGu"},"content":"         * unknown.","lastModifiedDate":"2023-01-25"},{"lineNumber":275,"author":{"gitId":"WilliamHaiweiGu"},"content":"         */","lastModifiedDate":"2023-01-25"},{"lineNumber":276,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public final MeggyException.Function\u003cString, E\u003e job;","lastModifiedDate":"2023-01-25"},{"lineNumber":277,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public final String args;","lastModifiedDate":"2023-01-25"},{"lineNumber":278,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":279,"author":{"gitId":"WilliamHaiweiGu"},"content":"        private JobAndArg(String cmd, MeggyException.Function\u003cString, E\u003e job, String args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":280,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.cmd \u003d cmd;","lastModifiedDate":"2023-01-25"},{"lineNumber":281,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.job \u003d job;","lastModifiedDate":"2023-01-25"},{"lineNumber":282,"author":{"gitId":"WilliamHaiweiGu"},"content":"            this.args \u003d args;","lastModifiedDate":"2023-01-25"},{"lineNumber":283,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":284,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":285,"author":{"gitId":"WilliamHaiweiGu"},"content":"        /**","lastModifiedDate":"2023-01-25"},{"lineNumber":286,"author":{"gitId":"WilliamHaiweiGu"},"content":"         * Parses text line into command, arguments, and finds job according to job table. All continuous whitespaces","lastModifiedDate":"2023-01-25"},{"lineNumber":287,"author":{"gitId":"WilliamHaiweiGu"},"content":"         * are replaced with a single whitespace.","lastModifiedDate":"2023-01-25"},{"lineNumber":288,"author":{"gitId":"WilliamHaiweiGu"},"content":"         *","lastModifiedDate":"2023-01-25"},{"lineNumber":289,"author":{"gitId":"WilliamHaiweiGu"},"content":"         * @return Parsed command, job, and argument encapsulated in an {@code JobAndArg} object.","lastModifiedDate":"2023-01-25"},{"lineNumber":290,"author":{"gitId":"WilliamHaiweiGu"},"content":"         */","lastModifiedDate":"2023-01-25"},{"lineNumber":291,"author":{"gitId":"WilliamHaiweiGu"},"content":"        public static \u003cE\u003e JobAndArg\u003cE\u003e parse(Map\u003cString, MeggyException.Function\u003cString, E\u003e\u003e jobTable, String line) {","lastModifiedDate":"2023-01-25"},{"lineNumber":292,"author":{"gitId":"WilliamHaiweiGu"},"content":"            //Multiple whitespace characters are treated as 1 whitespace.","lastModifiedDate":"2023-01-25"},{"lineNumber":293,"author":{"gitId":"WilliamHaiweiGu"},"content":"            line \u003d line.replaceAll(\"[ \\t\\r\\n\\f]+\", \" \").trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":294,"author":{"gitId":"WilliamHaiweiGu"},"content":"            //Parse command and args","lastModifiedDate":"2023-01-25"},{"lineNumber":295,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final int spaceIdx \u003d line.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":296,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String cmd \u003d (spaceIdx \u003c 0 ? line : line.substring(0, spaceIdx)).toLowerCase();","lastModifiedDate":"2023-01-25"},{"lineNumber":297,"author":{"gitId":"WilliamHaiweiGu"},"content":"            MeggyException.Function\u003cString, E\u003e job \u003d jobTable.get(cmd);","lastModifiedDate":"2023-01-25"},{"lineNumber":298,"author":{"gitId":"WilliamHaiweiGu"},"content":"            final String args \u003d job \u003d\u003d null ? line : line.substring(spaceIdx + 1).trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":299,"author":{"gitId":"WilliamHaiweiGu"},"content":"            return new JobAndArg\u003c\u003e(cmd, job, args);","lastModifiedDate":"2023-01-25"},{"lineNumber":300,"author":{"gitId":"WilliamHaiweiGu"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":301,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":302,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":303,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":304,"author":{"gitId":"WilliamHaiweiGu"},"content":"        new Meggy(System.in, System.out).run();","lastModifiedDate":"2023-01-19"},{"lineNumber":305,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":306,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":306}},{"path":"src/main/java/MeggyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * {@link Exception} that will eventually print out with {@code Resource.errBase} prefix.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Adds prefix to msg","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param msg Non-null. The detailed message.","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public MeggyException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(Resource.errBase + msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Function that throws {@link MeggyException}.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public interface Function\u003cI, O\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"        O apply(I in) throws MeggyException;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":20}},{"path":"src/main/java/MeggyIOBException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Converts upcoming {@link IndexOutOfBoundsException} into {@link MeggyException}.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyIOBException extends MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param idx      Index (starts with 0) in question.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param listSize Size of list that would cause {@link IndexOutOfBoundsException} when queried with idx.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public MeggyIOBException(int idx, int listSize) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(Resource.errOutOfBounds(idx, listSize));","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":12}},{"path":"src/main/java/MeggyNFException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Converts {@link NumberFormatException} into {@link MeggyException}.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyNFException extends MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param arg Non-null. The string that can\u0027t be parsed.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public MeggyNFException(String arg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(Resource.errNFE(arg));","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":11}},{"path":"src/main/java/MeggyNoArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Deals with the absence of argument after commands that needs argument(s).","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyNoArgException extends MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public MeggyNoArgException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(Resource.errNoArgs);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":8}},{"path":"src/main/java/MeggyTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":" * For text UI testing purpose only.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class MeggyTest {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"        new Meggy(new FileInputStream(\"text-ui-test/input.txt\"), out).run();","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"        String actual \u003d out.toString().replaceAll(\"\\r\", \"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"        String expected \u003d new String(new FileInputStream(\"text-ui-test/EXPECTED.txt\").readAllBytes()).","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"                replaceAll(\"\\r\", \"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"        System.out.println(actual.equals(expected));","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"        System.out.println(actual);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":18}},{"path":"src/main/java/Resource.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Class that stores all customizable data statically. Works like a \u0027resource pack\u0027.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public final class Resource {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Prefix of all error messages.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String errBase \u003d \" ☹ OOPS!!! \";","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Error message if no argument is provided to a command that needs argument(s).","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String errNoArgs \u003d \"Description of this command cannot be empty.\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Error message if an error prevents writing to a file.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String errFileWrite \u003d \"Can\u0027t save data to file. \";","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Error message if an error prevents reading from a file.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String errFileRead \u003d \"Can\u0027t read data from file. \";","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Error message if an {@link java.io.IOException} prevents file interaction.","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String errIO \u003d \"An IO error occurred.\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Error message if an {@link SecurityException} prevents file interaction.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String errNoAccess \u003d \"File access denied by system.\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Indentation before task that are highlighted.","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String taskIndent \u003d \"    \";","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Exit\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdExit \u003d \"bye\";","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027List\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdList \u003d \"list\";","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Mark\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdMk \u003d \"mark\";","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Unmark\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdUnmk \u003d \"unmark\";","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Todo\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdTodo \u003d \"todo\";","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Deadline\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdDdl \u003d \"deadline\";","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Event\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdEvent \u003d \"event\";","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Delete\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String cmdDel \u003d \"delete\";","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Due time\u0027 keyword of \u0027deadline\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwDue \u003d \"by\";","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027Start time\u0027 keyword of \u0027event\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwStt \u003d \"from\";","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * \u0027End time\u0027 keyword of \u0027event\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String kwEnd \u003d \"to\";","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after \u0027todo/deadline/event\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifAdd \u003d \" Got it. Added this task:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after \u0027list\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifList \u003d \" Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after \u0027mark\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifMk \u003d \" Booyah! Marked this task as done:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after \u0027unmark\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifUnmk \u003d \" OK. Marked this task as not done:\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after syntax error.","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifUsage \u003d \" Usage: \";","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after \u0027delete\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String notifDel \u003d \" OK. Removed this task:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Front page wallpaper.","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String logo \u003d \" __  __\\n|  \\\\/  |\\n| \\\\  / | ___  __ _  __ _ _   _\\n| |\\\\/| |/ _ \\\\/ _` |/ _`\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"WilliamHaiweiGu"},"content":"            \" | | | |\\n| |  | |  __/ (_| | (_| | |_| |\\n|_|  |_|\\\\___|\\\\__, |\\\\__, |\\\\__, |\\n              __/ | __/ \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"WilliamHaiweiGu"},"content":"            \"| __/ |\\n             |___/ |___/ |___/\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Message header.","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String msgHd \u003d \"------------------------------------------------------------\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Message tail.","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String msgTl \u003d msgHd + \"\\n\u003e\";","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Front page greetings.","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String greetings \u003d \" Wommy! Get REKT by the upcoming star of Inkopolis, Meggy!\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after \u0027bye\u0027 command.","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String farewell \u003d \" OK gotta go play more Turf Wars. Have a nice day!\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Icon for tasks marked \u0027done\u0027.","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static char doneMk \u003d \u0027X\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @deprecated Class stores all resource values statically and should not be initialized.","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"WilliamHaiweiGu"},"content":"    Resource() {","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Format of array/list index number.","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Formatted index (start with 1).","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String idxFmt(int i) {","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \" \" + (i + 1) + \u0027.\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after each change to task list.","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Message about task list size.","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String nTaskFmt(int nTask) {","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \" Now you have \" + nTask + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Msg of error caused by {@link NumberFormatException}","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param arg Non-null. String in question.","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String errNFE(String arg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"Can not interpret \\\"\" + arg + \"\\\" as an index number.\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message after empty input or unknown command or empty input.","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param cmd Non-null. String in question.","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Message about empty input or unknown command or empty input.","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String errUnknownCmd(String cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"\".equals(cmd) ? \"Umm that\u0027s all white space? Say something! Speak to me!\\n\" : \"Don\u0027t know what \\\"\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"WilliamHaiweiGu"},"content":"                cmd + \"\\\" means.\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Msg of error would have caused by {@link IndexOutOfBoundsException}","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param idx      Index (starts with 0) in question.","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param listSize Size of list that would cause {@link IndexOutOfBoundsException} when queried with idx.","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String errOutOfBounds(int idx, int listSize) {","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"WilliamHaiweiGu"},"content":"        idx +\u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"Can not retrieve item with \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"WilliamHaiweiGu"},"content":"                (idx \u003e 0 ? \"index \" + idx + \" from a list of size \" + listSize : \"non-positive index (\" + idx + \u0027)\u0027)","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"WilliamHaiweiGu"},"content":"                + \".\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":191}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * {@link UserTask} that has no time whatsoever","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public class TodoTask extends UserTask {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Bracketed icon of task type.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final static String label \u003d getTaskTypeLabel(Resource.cmdTodo);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param desc Non-null. Description string of task with command removed.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public TodoTask(String desc) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"        super(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String encode() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.cmdTodo + \u0027 \u0027 + desc;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return label + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":26}},{"path":"src/main/java/UserTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Entries to be recorded by Meggy","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public abstract class UserTask {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Task description.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public final String desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Task completion status.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public boolean status;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param desc Non-null. Description string of task with command removed.","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public UserTask(String desc) throws MeggyException {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"        if (\"\".equals(desc)) // No arguments","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"            throw new MeggyNoArgException();","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"        status \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Get ask type label from their names.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param taskType Non-null, non-empty. Name of task type.","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Task-type-specific label.","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String getTaskTypeLabel(String taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Util.parenthesize(Character.toUpperCase(taskType.charAt(0)));","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param keyword Non-null. Raw time keyword.","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Command-syntax-marking time keyword.","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String formatKeyword(String keyword) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \u0027/\u0027 + keyword + \u0027 \u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return The string representation of this task in data file format. Currently: re-create the command that would","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * add the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public abstract String encode();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return The string representation of this task in text UI.","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Util.parenthesize(status ? Resource.doneMk : \u0027 \u0027) + \u0027 \u0027 + desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":55}},{"path":"src/main/java/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":" * Class that stores all helper functions and uncustomizable constants statically.","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"public final class Util {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Cached {@link TodoTask} constructor functional object.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final MeggyException.Function\u003cString, UserTask\u003e todoNew \u003d TodoTask::new;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Cached {@link DdlTask} \"constructor\" functional object.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final MeggyException.Function\u003cString, UserTask\u003e ddlNew \u003d DdlTask::of;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Cached {@link EventTask} \"constructor\" functional object.","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final MeggyException.Function\u003cString, UserTask\u003e eventNew \u003d EventTask::of;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Default time information if corresponding time keyword is absent in user input.","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String noFound \u003d \"N/A\";","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Task list data file.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static final String dataFilePath \u003d \"MeggyData.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @deprecated Class stores all resource values statically and should not be initialized.","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"WilliamHaiweiGu"},"content":"    Util() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Puts {@link Character}s in square brackets.","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String parenthesize(char c) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return \"[\" + c + \u0027]\u0027;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * Notification message to indicate the correct syntax of index commands (todo/deadline/event/delete)","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"WilliamHaiweiGu"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param cmd Non-null. Index command. Currently \u0027mark\u0027, \u0027unmark\u0027, or \u0027delete\u0027 only.","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return Notification message.","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String usageIdxCmd(String cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return Resource.notifUsage + cmd + \" \u003cidx: integer between 1 and list size (inclusive)\u003e\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"WilliamHaiweiGu"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @param args Non-null. Trimmed arguments string.","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"WilliamHaiweiGu"},"content":"     * @return The substring before the 1st whitespace character, or original string if no whitespace exists.","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"WilliamHaiweiGu"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"WilliamHaiweiGu"},"content":"    public static String get1stArg(String args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"WilliamHaiweiGu"},"content":"        final int whiteSpaceIdx \u003d args.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"WilliamHaiweiGu"},"content":"        return whiteSpaceIdx \u003c 0 ? args : args.substring(0, whiteSpaceIdx);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"WilliamHaiweiGu"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"WilliamHaiweiGu"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"WilliamHaiweiGu"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"WilliamHaiweiGu":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WilliamHaiweiGu"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"WilliamHaiweiGu"},"content":"deadline return book","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"WilliamHaiweiGu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"WilliamHaiweiGu"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"WilliamHaiweiGu"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"WilliamHaiweiGu"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"WilliamHaiweiGu"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"WilliamHaiweiGu"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"WilliamHaiweiGu"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"WilliamHaiweiGu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"WilliamHaiweiGu"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"WilliamHaiweiGu"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"WilliamHaiweiGu"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"WilliamHaiweiGu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"WilliamHaiweiGu"},"content":"mark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"WilliamHaiweiGu"},"content":"unmark 100","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"WilliamHaiweiGu"},"content":"unmark a","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"delete -1","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"WilliamHaiweiGu"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"WilliamHaiweiGu"},"content":"delete 100","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"WilliamHaiweiGu"},"content":"delete x","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"WilliamHaiweiGu"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"WilliamHaiweiGu"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"WilliamHaiweiGu":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WilliamHaiweiGu"},"content":"java -classpath ..\\bin Meggy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"WilliamHaiweiGu":1}}]
