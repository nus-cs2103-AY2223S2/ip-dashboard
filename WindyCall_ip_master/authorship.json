[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public Deadline(String description, boolean status, String deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        this.deadline \u003d processDateTime(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        return \"D\";","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        return \"D | \" + getStatusIcon() + \" | \" + description + \" | \" + deadline + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    private LocalDate processDateTime(String deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        // now assume date is in the form","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        // dd/mm/yy or yy-mm-dd","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        // in later versions, more form of date and time will be resolved","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        LocalDate dateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            dateTime \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"            String[] parts \u003d deadline.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"            int day \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"            int month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"            int year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"            dateTime \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        return dateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"    private String deadlineFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        return deadline.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"    private String getDeadline() {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"        return \" (by: \" + deadlineFormat() + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription() + this.getDeadline();","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":55}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public Event(String description, boolean status, String from, String to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        this.from \u003d processDate(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        this.to \u003d processDate(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    private LocalDate processDate(String deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        // now assume date is in the form","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        // dd/mm/yy or yy-mm-dd","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        // in later versions, more form of date and time will be resolved","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        LocalDate dateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            dateTime \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"            String[] parts \u003d deadline.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"            int day \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"            int month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"            int year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"            dateTime \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        return dateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"        return \"E\";","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        return \"E | \" + getStatusIcon() + \" | \" + description + \" | \" + from + \" | \" + to + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"    private String deadlineFormat(LocalDate date) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"    private String getEventInterval() {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        return \" (from: \" + deadlineFormat(from) + \" to: \" + deadlineFormat(to) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription() + this.getEventInterval();","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":57}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    public abstract String getTaskTypeIcon();","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    public abstract String fileFormat();","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    public String getCurrentDescription() {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":34}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"    public Todo(String description, boolean status) {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"        return \"T\";","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public String fileFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        return \"T | \" + getStatusIcon() + \" | \" + description + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription();","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":22}},{"path":"src/main/java/WindyCall.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"public class WindyCall {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"//    private final Task[] tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"//    private int cnt;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"      private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    public WindyCall() {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"        // handle loading here","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        handleLoad();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    public void handleLoad() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        //check if \"./data\" directory exist","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        File file \u003d new File(\"./data\");","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        File task_file \u003d new File(\"./data/WindyCall.txt\");;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        // if data file exists","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        if (!file.isDirectory()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"            file.mkdir();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"            if (task_file.createNewFile()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"                space();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"                System.out.println(\"File created: \" + task_file.getName());","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred. Can not load your tasks\");","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        // load data in task_file into this.tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"            Scanner myReader \u003d new Scanner(task_file);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"                if (data.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"                    String description \u003d data.substring(8);","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"                    Task task \u003d new Todo(description, data.charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"                } else if (data.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"                    int idx \u003d data.indexOf(\"|\", 8);","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"                    String description \u003d data.substring(8, idx - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"                    String deadline \u003d data.substring(idx + 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"                    Task task \u003d new Deadline(description, data.charAt(4) \u003d\u003d \u0027X\u0027, deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"                    int idx1 \u003d data.indexOf(\"|\", 8);","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"                    int idx2 \u003d data.indexOf(\"|\", idx1 + 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"                    String description \u003d data.substring(8, idx1 - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"                    String from \u003d data.substring(idx1 + 2, idx2 - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"                    String to \u003d data.substring(idx2 + 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"                    Task task \u003d new Event(description, data.charAt(4) \u003d\u003d \u0027X\u0027, from, to);","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"            myReader.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"    public void handleTaskChange() {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"        // overwrite tasks back to data file to record the change","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"            FileWriter myWriter \u003d new FileWriter(\"./data/WindyCall.txt\");","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"                myWriter.write(task.fileFormat());","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"//            myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"            space();","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Successfully wrote to the file.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"WindyCall"},"content":"    private static void space() {","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"WindyCall"},"content":"        System.out.print(\"     \");","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"WindyCall"},"content":"    private static void line() {","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"--------------------------------------------------\");","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"    private static void greeting() {","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Hello! I\u0027m WindyCall\");","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"How can I help you?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"WindyCall"},"content":"    private static void byeWords() {","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Bye. Always willing to provide my help for you!!!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"WindyCall"},"content":"    private static void echoCommand(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"WindyCall"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"WindyCall"},"content":"    private void addTask(String message) throws WindyCallException{","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"WindyCall"},"content":"        String[] parts \u003d message.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"WindyCall"},"content":"        Task newTask;","lastModifiedDate":"2023-01-17"},{"lineNumber":125,"author":{"gitId":"WindyCall"},"content":"        if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"WindyCall"},"content":"            if (message.length() \u003d\u003d 4 || message.substring(4).trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":128,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"WindyCall"},"content":"            String description \u003d message.substring(5);","lastModifiedDate":"2023-01-17"},{"lineNumber":130,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Got it. I\u0027ve added this Todo task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d new Todo(description, false);","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":133,"author":{"gitId":"WindyCall"},"content":"        else if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"WindyCall"},"content":"            int idx \u003d message.indexOf(\"/by\");","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"WindyCall"},"content":"            if (message.length() \u003d\u003d 8 || message.substring(8).trim().isEmpty()","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"WindyCall"},"content":"                    || (idx !\u003d -1 \u0026\u0026 message.substring(8, idx).trim().isEmpty())) {","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! The description of a deadline cannot be empty!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":138,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"WindyCall"},"content":"            if (idx \u003d\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify the deadline for the Task\");","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"WindyCall"},"content":"            if (message.length() \u003d\u003d idx + 3 || message.substring(idx + 3).trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify the deadline for the Task\");","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":145,"author":{"gitId":"WindyCall"},"content":"            String description \u003d message.substring(9, idx - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Got it. I\u0027ve added this Deadline task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"WindyCall"},"content":"            String deadline \u003d message.substring(idx + 4);","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d new Deadline(description, false, deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"WindyCall"},"content":"        else if (parts[0].equals(\"event\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":151,"author":{"gitId":"WindyCall"},"content":"            int idxFrom \u003d message.indexOf(\"/from\");","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"WindyCall"},"content":"            int idxTo \u003d message.indexOf(\"/to\");","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"WindyCall"},"content":"            if (message.length() \u003d\u003d 5 || message.substring(5).trim().isEmpty()","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"WindyCall"},"content":"                    || (idxFrom !\u003d -1 \u0026\u0026 message.substring(5, idxFrom).trim().isEmpty())) {","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! The description of an event cannot be empty!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"WindyCall"},"content":"            if (idxFrom \u003d\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify start time of the event!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"WindyCall"},"content":"            if (message.length() \u003d\u003d idxFrom + 5 || message.substring(idxFrom + 5).trim().isEmpty()","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"WindyCall"},"content":"                    || (idxTo !\u003d -1 \u0026\u0026 message.substring(idxFrom, idxTo).trim().isEmpty())) {","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify start time of the event!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"WindyCall"},"content":"            if (idxTo \u003d\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify end time of the event!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"WindyCall"},"content":"            if (message.length() \u003d\u003d idxTo + 3 || message.substring(idxTo + 3).trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify end time of the event!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":170,"author":{"gitId":"WindyCall"},"content":"            String description \u003d message.substring(6, idxFrom - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":171,"author":{"gitId":"WindyCall"},"content":"            String from \u003d message.substring(idxFrom + 6, idxTo - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"WindyCall"},"content":"            String to \u003d message.substring(idxTo + 4);","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Got it. I\u0027ve added this Event task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d new Event(description, false, from, to);","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"WindyCall"},"content":"        System.out.println(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"WindyCall"},"content":"//        this.tasks[cnt] \u003d newTask;","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"WindyCall"},"content":"//        this.cnt++;","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"WindyCall"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"WindyCall"},"content":"        this.handleTaskChange();","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":185,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Now you have \" + this.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":186,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":187,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":188,"author":{"gitId":"WindyCall"},"content":"    private void displayTasks() {","lastModifiedDate":"2023-01-17"},{"lineNumber":189,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":190,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Here are all of your tasks:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":191,"author":{"gitId":"WindyCall"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":192,"author":{"gitId":"WindyCall"},"content":"            space();","lastModifiedDate":"2023-01-17"},{"lineNumber":193,"author":{"gitId":"WindyCall"},"content":"            System.out.println((i + 1) + \".\" + this.tasks.get(i));","lastModifiedDate":"2023-01-17"},{"lineNumber":194,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":195,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"WindyCall"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":198,"author":{"gitId":"WindyCall"},"content":"        greeting();","lastModifiedDate":"2023-01-17"},{"lineNumber":199,"author":{"gitId":"WindyCall"},"content":"        WindyCall chatBox \u003d new WindyCall();","lastModifiedDate":"2023-01-17"},{"lineNumber":200,"author":{"gitId":"WindyCall"},"content":"        while(true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":201,"author":{"gitId":"WindyCall"},"content":"            String userCommand \u003d scan.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":202,"author":{"gitId":"WindyCall"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":203,"author":{"gitId":"WindyCall"},"content":"                byeWords();","lastModifiedDate":"2023-01-17"},{"lineNumber":204,"author":{"gitId":"WindyCall"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":205,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":206,"author":{"gitId":"WindyCall"},"content":"            line();","lastModifiedDate":"2023-01-17"},{"lineNumber":207,"author":{"gitId":"WindyCall"},"content":"            if (userCommand.equals(\"list\")) chatBox.displayTasks();","lastModifiedDate":"2023-01-17"},{"lineNumber":208,"author":{"gitId":"WindyCall"},"content":"            else {","lastModifiedDate":"2023-01-17"},{"lineNumber":209,"author":{"gitId":"WindyCall"},"content":"                String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":210,"author":{"gitId":"WindyCall"},"content":"                if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":211,"author":{"gitId":"WindyCall"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":212,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     You should input a number to mark/unmark a task\");","lastModifiedDate":"2023-01-17"},{"lineNumber":213,"author":{"gitId":"WindyCall"},"content":"                        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"WindyCall"},"content":"                        continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":215,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":216,"author":{"gitId":"WindyCall"},"content":"                    int num \u003d -1;","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"WindyCall"},"content":"                    try {","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"WindyCall"},"content":"                        num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":219,"author":{"gitId":"WindyCall"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":220,"author":{"gitId":"WindyCall"},"content":"                        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":221,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"☹ OOPS!!! You should input a number\");","lastModifiedDate":"2023-01-17"},{"lineNumber":222,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":223,"author":{"gitId":"WindyCall"},"content":"                    if (num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d chatBox.tasks.size()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":224,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"WindyCall"},"content":"                        chatBox.tasks.get(num - 1).markAsDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"WindyCall"},"content":"                        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(chatBox.tasks.get(num - 1));","lastModifiedDate":"2023-01-17"},{"lineNumber":228,"author":{"gitId":"WindyCall"},"content":"                        chatBox.handleTaskChange();","lastModifiedDate":"2023-01-25"},{"lineNumber":229,"author":{"gitId":"WindyCall"},"content":"                    } else if (num !\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":230,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     Sorry, your index is out of range\");","lastModifiedDate":"2023-01-17"},{"lineNumber":231,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":232,"author":{"gitId":"WindyCall"},"content":"                } else if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":233,"author":{"gitId":"WindyCall"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":234,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     You should input a number to mark/unmark a task\");","lastModifiedDate":"2023-01-17"},{"lineNumber":235,"author":{"gitId":"WindyCall"},"content":"                        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":236,"author":{"gitId":"WindyCall"},"content":"                        continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":237,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":238,"author":{"gitId":"WindyCall"},"content":"                    int num \u003d -1;","lastModifiedDate":"2023-01-17"},{"lineNumber":239,"author":{"gitId":"WindyCall"},"content":"                    try {","lastModifiedDate":"2023-01-17"},{"lineNumber":240,"author":{"gitId":"WindyCall"},"content":"                        num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":241,"author":{"gitId":"WindyCall"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":242,"author":{"gitId":"WindyCall"},"content":"                        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":243,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"☹ OOPS!!! You should input a number\");","lastModifiedDate":"2023-01-17"},{"lineNumber":244,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":245,"author":{"gitId":"WindyCall"},"content":"                    if (num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d chatBox.tasks.size()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":246,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":247,"author":{"gitId":"WindyCall"},"content":"                        chatBox.tasks.get(num - 1).unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":248,"author":{"gitId":"WindyCall"},"content":"                        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":249,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(chatBox.tasks.get(num - 1));","lastModifiedDate":"2023-01-17"},{"lineNumber":250,"author":{"gitId":"WindyCall"},"content":"                        chatBox.handleTaskChange();","lastModifiedDate":"2023-01-25"},{"lineNumber":251,"author":{"gitId":"WindyCall"},"content":"                    } else if (num !\u003d -1){","lastModifiedDate":"2023-01-17"},{"lineNumber":252,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     Sorry, your index is out of range\");","lastModifiedDate":"2023-01-17"},{"lineNumber":253,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":254,"author":{"gitId":"WindyCall"},"content":"                } else if (parts[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":255,"author":{"gitId":"WindyCall"},"content":"                    if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":256,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     You should input a number to delete a task\");","lastModifiedDate":"2023-01-17"},{"lineNumber":257,"author":{"gitId":"WindyCall"},"content":"                        line();","lastModifiedDate":"2023-01-17"},{"lineNumber":258,"author":{"gitId":"WindyCall"},"content":"                        continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":259,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":260,"author":{"gitId":"WindyCall"},"content":"                    int num \u003d -1;","lastModifiedDate":"2023-01-17"},{"lineNumber":261,"author":{"gitId":"WindyCall"},"content":"                    try {","lastModifiedDate":"2023-01-17"},{"lineNumber":262,"author":{"gitId":"WindyCall"},"content":"                        num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":263,"author":{"gitId":"WindyCall"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":264,"author":{"gitId":"WindyCall"},"content":"                        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":265,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"☹ OOPS!!! You should input a number\");","lastModifiedDate":"2023-01-17"},{"lineNumber":266,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":267,"author":{"gitId":"WindyCall"},"content":"                    if (num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d chatBox.tasks.size()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":268,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":269,"author":{"gitId":"WindyCall"},"content":"                        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":270,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(chatBox.tasks.get(num - 1));","lastModifiedDate":"2023-01-17"},{"lineNumber":271,"author":{"gitId":"WindyCall"},"content":"                        chatBox.tasks.remove(num - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":272,"author":{"gitId":"WindyCall"},"content":"                        chatBox.handleTaskChange();","lastModifiedDate":"2023-01-25"},{"lineNumber":273,"author":{"gitId":"WindyCall"},"content":"                        space();","lastModifiedDate":"2023-01-17"},{"lineNumber":274,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"Now you have \" + chatBox.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":275,"author":{"gitId":"WindyCall"},"content":"                    } else if (num !\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":276,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(\"     Sorry, your index is out of range\");","lastModifiedDate":"2023-01-17"},{"lineNumber":277,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":278,"author":{"gitId":"WindyCall"},"content":"                } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":279,"author":{"gitId":"WindyCall"},"content":"                    try {","lastModifiedDate":"2023-01-17"},{"lineNumber":280,"author":{"gitId":"WindyCall"},"content":"                        chatBox.addTask(userCommand);","lastModifiedDate":"2023-01-17"},{"lineNumber":281,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":282,"author":{"gitId":"WindyCall"},"content":"                    catch (WindyCallException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":283,"author":{"gitId":"WindyCall"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-17"},{"lineNumber":284,"author":{"gitId":"WindyCall"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":285,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":286,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":287,"author":{"gitId":"WindyCall"},"content":"            line();","lastModifiedDate":"2023-01-17"},{"lineNumber":288,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WindyCall":287,"-":3}},{"path":"src/main/java/WindyCallException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"public class WindyCallException extends Exception{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"    public WindyCallException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"todo read book","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"delete","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"delete 4","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"todo join sports club","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"delete 1","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"delete hehe","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"unmark hello","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"deadline close book","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"mark","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"event /from Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"unmark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"event /from Monday /to","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"delete 5","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"java -classpath ..\\bin WindyCall \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WindyCall":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"java -classpath ../bin WindyCall \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WindyCall":1,"-":37}}]
