[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    mainClassName \u003d \"windycall.WindyCall\"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    archiveBaseName \u003d \"windycall\"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"    archiveVersion \u003d \u00271.0\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WindyCall":8,"-":39}},{"path":"src/main/java/windycall/AddDeadlineHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class AddDeadlineHandler extends AddTaskHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"    public void handle(String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    public static Task handleAddDeadline(String message) throws WindyCallException {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        int idx \u003d message.indexOf(\"/by\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d 8 || message.substring(8).trim().isEmpty()","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"                || (idx !\u003d -1 \u0026\u0026 message.substring(8, idx).trim().isEmpty())) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! The description of a deadline cannot be empty!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify the deadline for the Task\");","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d idx + 3 || message.substring(idx + 3).trim().isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify the deadline for the Task\");","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        String description \u003d message.substring(9, idx - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Got it. I\u0027ve added this Deadline task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        String deadline \u003d message.substring(idx + 4);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        return new Deadline(description, false, deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":27}},{"path":"src/main/java/windycall/AddEventHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class AddEventHandler extends AddTaskHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"    public void handle(String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    public static Task handleAddEvent(String message) throws WindyCallException {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        int idxFrom \u003d message.indexOf(\"/from\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        int idxTo \u003d message.indexOf(\"/to\");","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d 5 || message.substring(5).trim().isEmpty()","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"                || (idxFrom !\u003d -1 \u0026\u0026 message.substring(5, idxFrom).trim().isEmpty())) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! The description of an event cannot be empty!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"        if (idxFrom \u003d\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify start time of the event!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d idxFrom + 5 || message.substring(idxFrom + 5).trim().isEmpty()","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"                || (idxTo !\u003d -1 \u0026\u0026 message.substring(idxFrom, idxTo).trim().isEmpty())) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify start time of the event!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        if (idxTo \u003d\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify end time of the event!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d idxTo + 3 || message.substring(idxTo + 3).trim().isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! You haven\u0027t specify end time of the event!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        String description \u003d message.substring(6, idxFrom - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        String from \u003d message.substring(idxFrom + 6, idxTo - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        String to \u003d message.substring(idxTo + 4);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Got it. I\u0027ve added this Event task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        return new Event(description, false, from, to);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":36}},{"path":"src/main/java/windycall/AddTaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"public abstract class AddTaskHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"     * Adds a new type of task to tasks ArrayList while possibly throwing","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"     * errors from user invalid input.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"     * @param message message input by users","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"     * @throws WindyCallException If user input command is invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    public static void addTask(String message, List\u003cTask\u003e tasks, Storage storage) throws WindyCallException {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        String[] parts \u003d message.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        Task newTask;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d AddTodoHandler.handleAddTodo(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        } else if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d AddDeadlineHandler.handleAddDeadline(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        } else if (parts[0].equals(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d AddEventHandler.handleAddEvent(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        System.out.println(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":36}},{"path":"src/main/java/windycall/AddTodoHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class AddTodoHandler extends AddTaskHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"    public void handle(String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    public static Task handleAddTodo(String message) throws WindyCallException {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d 4 || message.substring(4).trim().isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"☹ OOPS!!! The description of a todo cannot be empty!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        String description \u003d message.substring(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Got it. I\u0027ve added this Todo task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        return new Todo(description, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":18}},{"path":"src/main/java/windycall/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public Deadline(String description, boolean status, String deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        this.deadline \u003d Parser.processDate(deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        return \"D\";","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        return \"D | \" + getStatusIcon() + \" | \" + description + \" | \" + deadline + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    private String changeDateTimeFormat() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        return deadline.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    private String getDeadline() {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        return \" (by: \" + changeDateTimeFormat() + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription() + this.getDeadline();","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":40}},{"path":"src/main/java/windycall/DeleteOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"public class DeleteOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    public void handle(String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public static void handle(Parser parser, List\u003cTask\u003e tasks, String[] parts, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        int idx1 \u003d parser.getDeleteIndex(parts);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        if (idx1 \u003e\u003d 1 \u0026\u0026 idx1 \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"            System.out.println(tasks.get(idx1 - 1));","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"            tasks.remove(idx1 - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"            storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        } else if (idx1 !\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     Sorry, your index is out of range\");","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":26}},{"path":"src/main/java/windycall/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public Event(String description, boolean status, String from, String to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        this.from \u003d Parser.processDate(from);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        this.to \u003d Parser.processDate(to);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        return \"E\";","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        return \"E | \" + getStatusIcon() + \" | \" + description + \" | \" + from + \" | \" + to + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"    private String changeDateTimeFormat(LocalDate date) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    private String getEventInterval() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        return \" (from: \" + changeDateTimeFormat(from) + \" to: \" + changeDateTimeFormat(to) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription() + this.getEventInterval();","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":41}},{"path":"src/main/java/windycall/FindOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"public class FindOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    public void handle(String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public static void handle(String[] parts, Ui ui, List\u003cTask\u003e tasks, String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Please input description of task you want to find\");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"            ui.displayTasks(tasks, userCommand.substring(5));","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":20}},{"path":"src/main/java/windycall/ListOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"public class ListOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    public void handle(String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public static void handle(List\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        ui.displayTasks(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":14}},{"path":"src/main/java/windycall/MarkOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"public class MarkOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    public void handle(String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public static void handle(Parser parser, List\u003cTask\u003e tasks, String[] parts, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        int num \u003d parser.getMarkIndex(parts);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        if (num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"            tasks.get(num - 1).markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"            System.out.println(tasks.get(num - 1));","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"            storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        } else if (num !\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     Sorry, your index is out of range\");","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":26}},{"path":"src/main/java/windycall/OperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public abstract class OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    public abstract void handle(String userCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":7}},{"path":"src/main/java/windycall/OperationType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public enum OperationType {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"    TODO, DEADLINE, EVENT, DELETE, MARK, UNMARK, FIND, LIST, ADDTASK","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":5}},{"path":"src/main/java/windycall/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":" * Deals with making sense of the user command by splitting","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":" * user command and translation","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public Parser() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"     * Returns an operation type representing what users want to do","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"     * @param command command input by users","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"     * @return a enumeration type representing a specific operation","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    public OperationType getOperationType(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            return OperationType.LIST;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"            return OperationType.MARK;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            return OperationType.UNMARK;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"            return OperationType.DELETE;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"        case \"find\":","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"            return OperationType.FIND;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"            return OperationType.ADDTASK;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"     * Returns the translated index of mark operation while","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"     * handling invalid input","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"     * @param parts parts of String of user command split by space","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"     * @return an index representing which task user want to mark","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"    public int getMarkIndex(String[] parts) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     You should input a number to mark/unmark a task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"            return -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"        int num \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"            num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"☹ OOPS!!! You should input a number\");","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"        return num;","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"    public int getUnmarkIndex(String[] parts) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     You should input a number to mark/unmark a task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"            return -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"        int num \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"            num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"☹ OOPS!!! You should input a number\");","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"        return num;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"    public int getDeleteIndex(String[] parts) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     You should input a number to delete a task\");","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"            return -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"        int num \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"WindyCall"},"content":"            num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"WindyCall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"☹ OOPS!!! You should input a number\");","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"        return num;","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"     * Return formatted LocalDate by translating user input String deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"WindyCall"},"content":"     * @param deadline String representation of date input by user","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"WindyCall"},"content":"     * @return formatted LocalDate","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"WindyCall"},"content":"    public static LocalDate processDate(String deadline) {","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"        deadline \u003d deadline.trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"        LocalDate dateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"WindyCall"},"content":"            dateTime \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"WindyCall"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"WindyCall"},"content":"            String[] parts \u003d deadline.split(\"/\");","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"WindyCall"},"content":"            int day \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"WindyCall"},"content":"            int month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"WindyCall"},"content":"            int year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"WindyCall"},"content":"            dateTime \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"WindyCall"},"content":"        return dateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"WindyCall"},"content":"    public String getTodoTaskInformation(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"WindyCall"},"content":"    public String[] getDeadlineInformation(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"WindyCall"},"content":"    public String getEventInformation(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":132}},{"path":"src/main/java/windycall/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":" * Deals with loading tasks from the file and handle tasks change","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":" * by overwriting contents in tasks back to file","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    public Storage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"     * Loads data inside data file to current tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"     * Handles non-existence of files or related directory","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"     * @param tasks an ArrayList that will be loaded into","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    public void handleLoad(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        //check if \"./data\" directory exist","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        File file \u003d new File(\"./data\");","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        File taskFile \u003d new File(\"./data/WindyCall.txt\");;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        // if data file exists","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        if (!file.isDirectory()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            file.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"            if (taskFile.createNewFile()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"                Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"                System.out.println(\"File created: \" + taskFile.getName());","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred. Can not load your tasks\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        // load data in task_file into this.tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"            Scanner myReader \u003d new Scanner(taskFile);","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"                if (data.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"                    String description \u003d data.substring(8);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"                    Task task \u003d new Todo(description, data.charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"                } else if (data.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"                    int idx \u003d data.indexOf(\"|\", 8);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"                    String description \u003d data.substring(8, idx - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"                    String deadline \u003d data.substring(idx + 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"                    Task task \u003d new Deadline(description, data.charAt(4) \u003d\u003d \u0027X\u0027, deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"                    int idx1 \u003d data.indexOf(\"|\", 8);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"                    int idx2 \u003d data.indexOf(\"|\", idx1 + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"                    String description \u003d data.substring(8, idx1 - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"                    String from \u003d data.substring(idx1 + 2, idx2 - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"                    String to \u003d data.substring(idx2 + 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"                    Task task \u003d new Event(description, data.charAt(4) \u003d\u003d \u0027X\u0027, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"                    tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"            myReader.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"     * Handles tasks change by overwriting contents in tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"     * back to data file so that change is saved each time tasks get modified","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"     * @param tasks tasks that has been changed to do users\u0027 operation on tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"    public void handleTaskChange(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"        // overwrite tasks back to data file to record the change","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"            FileWriter myWriter \u003d new FileWriter(\"./data/WindyCall.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"                myWriter.write(task.getFileFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"WindyCall"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Successfully wrote to the file.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"WindyCall"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":98}},{"path":"src/main/java/windycall/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":" * Serves as an abstraction of different types of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    public abstract String getTaskTypeIcon();","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"     * Returns fileFormat of a specific task that will be stored","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"     * inside data file with consistency","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"     * @return a String representation of fileFormat of a task","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    public abstract String getFileFormat();","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"    public boolean matchFilterWord(String filterWord) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        return description.toLowerCase().indexOf(filterWord.toLowerCase()) !\u003d -1;","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"    public String getCurrentDescription() {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":50}},{"path":"src/main/java/windycall/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":4}},{"path":"src/main/java/windycall/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    public Todo(String description, boolean status) {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        return \"T\";","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        return \"T | \" + getStatusIcon() + \" | \" + description + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription();","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":24}},{"path":"src/main/java/windycall/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":" * Makes the background of chatBox more pretty","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    public static void space() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        System.out.print(\"     \");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    public static void line() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"--------------------------------------------------\");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"     * Displays all the tasks according to their String representation","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"     * @param tasks tasks to be displayed","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"    public void displayTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Seems like there is no task in your list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Here are all of your tasks:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"    public void displayTasks(List\u003cTask\u003e tasks, String filterWord) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        int cntValidTask \u003d 0;","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"            if (tasks.get(i).matchFilterWord(filterWord)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"                cntValidTask++;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"        if (cntValidTask \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Oh! There is no matching task found. Try input another key word\");","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"Here are all matching tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"                if (tasks.get(i).matchFilterWord(filterWord)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"                    Ui.space();","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"                    System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"    public void greeting() {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Hello! I\u0027m WindyCall\");","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"How can I help you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"    public void byeWords() {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Bye. Always willing to provide my help for you!!!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":81}},{"path":"src/main/java/windycall/UnmarkOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"public class UnmarkOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    public void handle(String userCommand) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public static void handle(Parser parser, List\u003cTask\u003e tasks, String[] parts, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        int idx \u003d parser.getUnmarkIndex(parts);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        if (idx \u003e\u003d 1 \u0026\u0026 idx \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"            tasks.get(idx - 1).unmark();","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"            System.out.println(tasks.get(idx - 1));","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"            storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        } else if (idx !\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"     Sorry, your index is out of range\");","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":23}},{"path":"src/main/java/windycall/WindyCall.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":" * Serves as a trigger of the whole WindyCall chatBox application.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":" * Stores some important helper classes instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"public class WindyCall {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    public WindyCall() {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        // handle loading here","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        this.storage.handleLoad(this.tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"     * Serves as a runner of the application.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"     * Requires parser to translate user command and handle different commands accordingly.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        ui.greeting();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"            String userCommand \u003d scan.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"                ui.byeWords();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"            OperationType type \u003d parser.getOperationType(userCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"            Ui.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"            String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"            switch (type) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"            case LIST:","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"                ListOperationHandler.handle(tasks, ui);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"            case MARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"                MarkOperationHandler.handle(parser, tasks, parts, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"                UnmarkOperationHandler.handle(parser, tasks, parts, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"            case DELETE:","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"                DeleteOperationHandler.handle(parser, tasks, parts, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"            case FIND:","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"                FindOperationHandler.handle(parts, ui, tasks, userCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"            default:","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"                try {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"                    AddTaskHandler.addTask(userCommand, tasks, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"                } catch (WindyCallException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"            Ui.line();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"        WindyCall chatBox \u003d new WindyCall();","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"        chatBox.run();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WindyCall":72,"-":2}},{"path":"src/main/java/windycall/WindyCallException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class WindyCallException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"    public WindyCallException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":7}},{"path":"src/test/java/windycall/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    public void standardDateFormatTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"        String description \u003d \"eat lunch\";","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        String date \u003d \"2023-01-26\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        Deadline deadlineTask \u003d new Deadline(description, false, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        String expectedFormat \u003d \"2023-01-26\";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        assertEquals(expectedFormat, deadlineTask.processDateTime(expectedFormat).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    public void anotherDateFormatTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        String description \u003d \"eat lunch\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        String date \u003d \"26/1/2023\";","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        Deadline deadlineTask \u003d new Deadline(description, false, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        String expectedFormat \u003d \"2023-01-26\";","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        assertEquals(expectedFormat, deadlineTask.processDateTime(expectedFormat).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":25}},{"path":"src/test/java/windycall/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    public void fileFormatTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"        String description \u003d \"finish assignment\";","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        Task todoTask \u003d new Todo(description, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        String expectedFormat \u003d \"T |   | finish assignment\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        assertEquals(expectedFormat, todoTask.getFileFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public void displayFormatTest(){","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        String description \u003d \"read book\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        Task todoTask \u003d new Todo(description, true);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        String expectedFormat \u003d \"[T][X] read book\";","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        assertEquals(expectedFormat, todoTask.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":23}},{"path":"src/test/java/windycall/WindyCallTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class WindyCallTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    public void markTaskTest(){","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"todo read book","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"delete","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"delete 4","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"todo join sports club","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"delete 1","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"delete hehe","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"unmark hello","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"deadline close book","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"mark","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"event /from Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"unmark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"event /from Monday /to","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"delete 5","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"java -classpath ..\\bin WindyCall \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WindyCall":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"java -classpath ../bin WindyCall \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WindyCall":1,"-":37}}]
