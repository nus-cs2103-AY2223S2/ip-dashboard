[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"    mainClassName \u003d \"javafx.Launcher\"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"    archiveBaseName \u003d \"windycall\"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"    archiveVersion \u003d \u00271.1\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WindyCall":22,"-":39}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package gui;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"    private void flip() {","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"        db.flip();","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"        return db;","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"WindyCall":61}},{"path":"src/main/java/gui/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package gui;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"import windycall.WindyCall;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/pikachu.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/cxk.jfif\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    private WindyCall windycall;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    public Duke() {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        this.windycall \u003d new WindyCall();","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        // ...","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"        stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"        // more code to be added here later","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"        stage.setTitle(\"WindyCall: Your best task manager\");","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"        stage.setMinWidth(500.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"        mainLayout.setPrefSize(500.0, 600.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"        scrollPane.setPrefSize(485, 535);","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"        userInput.setPrefWidth(425.0);","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"WindyCall"},"content":"        // greetings","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"WindyCall"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"WindyCall"},"content":"                DialogBox.getDukeDialog(\"Hi, I\u0027m WindyCall, what can I do for you?\", duke)","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"WindyCall"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"        // for step 3","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"WindyCall"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"WindyCall"},"content":"            handleUserInput(stage);","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"WindyCall"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"WindyCall"},"content":"            handleUserInput(stage);","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"WindyCall"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"WindyCall"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"WindyCall"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"WindyCall"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"WindyCall"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"WindyCall"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"WindyCall"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"WindyCall"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"WindyCall"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"WindyCall"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"WindyCall"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"WindyCall"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"WindyCall"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"WindyCall"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"WindyCall"},"content":"    private void handleUserInput(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"WindyCall"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"WindyCall"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"WindyCall"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"WindyCall"},"content":"                DialogBox.getUserDialog(userInput.getText(), user),","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"WindyCall"},"content":"                DialogBox.getDukeDialog(getResponse(userInput.getText()), user)","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"WindyCall"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"WindyCall"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"WindyCall"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"WindyCall"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"WindyCall"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"WindyCall"},"content":"        return windycall.run(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"WindyCall":146}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package gui;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"WindyCall":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package gui;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"            stage.setTitle(\"WindyCall: Your best task manager\");","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"            // greetings","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"            stage.show();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"WindyCall":34}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package gui;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pikachu.png\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/download.jfif\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"        );","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"WindyCall":51}},{"path":"src/main/java/windycall/OperationType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public enum OperationType {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"    TODO, DEADLINE, EVENT, DELETE, MARK, UNMARK, FIND, LIST, ADDTASK, TAG, BYE","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":5}},{"path":"src/main/java/windycall/WindyCall.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.exception.WindyCallException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.handler.AddTagHandler;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.handler.AddTaskHandler;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import windycall.handler.DeleteOperationHandler;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"import windycall.handler.FindOperationHandler;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"import windycall.handler.ListOperationHandler;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"import windycall.handler.MarkOperationHandler;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"import windycall.handler.UnmarkOperationHandler;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"import windycall.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"import windycall.ui.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":" * Serves as a trigger of the whole WindyCall chatBox application.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":" * Stores some important helper classes instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"public class WindyCall {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    public WindyCall() {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        // handle loading here","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        this.storage.handleLoad(this.tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"     * Serves as a runner of the application.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"     * Requires parser to translate user command and handle different commands accordingly.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"    public String run(String userCommand) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        if (userCommand.isEmpty()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"            return \"Hi, I\u0027m WindyCall, what can I do for you?\";","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"        OperationType type \u003d parser.getOperationType(userCommand);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"        String[] parts \u003d userCommand.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        switch (type) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        case LIST:","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"            ListOperationHandler listOperationHandler \u003d new ListOperationHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"            return listOperationHandler.handle(tasks, ui);","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"        case MARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"            MarkOperationHandler markOperationHandler \u003d new MarkOperationHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"            return markOperationHandler.handle(parser, tasks, parts, storage);","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"            UnmarkOperationHandler unmarkOperationHandler \u003d new UnmarkOperationHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"            return unmarkOperationHandler.handle(parser, tasks, parts, storage);","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"        case DELETE:","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"            DeleteOperationHandler deleteOperationHandler \u003d new DeleteOperationHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"            return deleteOperationHandler.handle(parser, tasks, parts, storage);","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"        case FIND:","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"            FindOperationHandler findOperationHandler \u003d new FindOperationHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"            return findOperationHandler.handle(parts, ui, tasks, userCommand);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"        case TAG:","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"            AddTagHandler addTagHandler \u003d new AddTagHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"            return addTagHandler.handle(parser, tasks, parts, storage);","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"        case BYE:","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"            return \"Bye. Always willing to provide my help for you!!!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"            String returnedMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"                AddTaskHandler addTaskHandler \u003d new AddTaskHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"                returnedMessage \u003d addTaskHandler.addTask(userCommand, tasks, storage, parser);","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"            } catch (WindyCallException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"                returnedMessage \u003d e.getMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"            return returnedMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"        WindyCall chatBox \u003d new WindyCall();","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"        chatBox.run();","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"WindyCall":86,"-":2}},{"path":"src/main/java/windycall/exception/WindyCallException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class WindyCallException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"    public WindyCallException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":7}},{"path":"src/main/java/windycall/handler/AddDeadlineHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.exception.WindyCallException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"public class AddDeadlineHandler extends AddTaskHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public Task handleAddDeadline(String message) throws WindyCallException {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        int idx \u003d message.indexOf(\"/by\");","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d 8 || message.substring(8).trim().isEmpty()","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"                || (idx !\u003d -1 \u0026\u0026 message.substring(8, idx).trim().isEmpty())) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! The description of a deadline cannot be empty!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! You haven\u0027t specify the deadline for the Task\");","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d idx + 3 || message.substring(idx + 3).trim().isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! You haven\u0027t specify the deadline for the Task\");","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        String description \u003d message.substring(9, idx - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        String deadlineStr \u003d message.substring(idx + 4);","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        LocalDate deadline \u003d Parser.processDate(deadlineStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        return new Deadline(description, false, deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":34}},{"path":"src/main/java/windycall/handler/AddEventHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.exception.WindyCallException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"public class AddEventHandler extends AddTaskHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public Task handleAddEvent(String message) throws WindyCallException {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        int idxFrom \u003d message.indexOf(\"/from\");","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        int idxTo \u003d message.indexOf(\"/to\");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d 5 || message.substring(5).trim().isEmpty()","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"                || (idxFrom !\u003d -1 \u0026\u0026 message.substring(5, idxFrom).trim().isEmpty())) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! The description of an event cannot be empty!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        if (idxFrom \u003d\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! You haven\u0027t specify start time of the event!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d idxFrom + 5 || message.substring(idxFrom + 5).trim().isEmpty()","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"                || (idxTo !\u003d -1 \u0026\u0026 message.substring(idxFrom, idxTo).trim().isEmpty())) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! You haven\u0027t specify start time of the event!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        if (idxTo \u003d\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! You haven\u0027t specify end time of the event!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d idxTo + 3 || message.substring(idxTo + 3).trim().isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! You haven\u0027t specify end time of the event!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"        String description \u003d message.substring(6, idxFrom - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"        String fromStr \u003d message.substring(idxFrom + 6, idxTo - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        String toStr \u003d message.substring(idxTo + 4);","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        LocalDate from \u003d Parser.processDate(fromStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        LocalDate to \u003d Parser.processDate(toStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        if (to.isBefore(from)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"To date should not be before From date\");","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        return new Event(description, false, from, to);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":47}},{"path":"src/main/java/windycall/handler/AddTagHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"public class AddTagHandler extends OperationHandler {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public String handle(Parser parser, List\u003cTask\u003e tasks, String[] parts, Storage storage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        // valid format: tag #index #tag","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        Pair\u003cInteger, String\u003e info \u003d parser.getTagIndex(parts);","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        int num \u003d info.getKey();","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        String tag \u003d info.getValue();","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        if (num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"            tasks.get(num - 1).changeTag(tag);","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            String returnedMessage \u003d \"I\u0027ve successfully added tag #\" + tag + \" to this task:\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"            returnedMessage +\u003d tasks.get(num - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"            storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"            return returnedMessage;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        } else if (num \u003e tasks.size() || (num \u003c 1 \u0026\u0026 num !\u003d -1)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"            return \"Sorry, your index is out of range\";","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"            return tag;","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"WindyCall":34}},{"path":"src/main/java/windycall/handler/AddTaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.OperationType;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.exception.WindyCallException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.storage.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"public class AddTaskHandler extends OperationHandler {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"     * Adds a new type of task to tasks ArrayList while possibly throwing","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"     * errors from user invalid input.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"     * @param message message input by users","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"     * @throws WindyCallException If user input command is invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    public String addTask(String message, List\u003cTask\u003e tasks, Storage storage, Parser parser) throws WindyCallException {","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"        String[] parts \u003d message.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        Task newTask;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        OperationType addTaskType \u003d parser.getAddTaskType(message);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        switch (addTaskType) {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        case TODO:","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            AddTodoHandler addTodoHandler \u003d new AddTodoHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d addTodoHandler.handleAddTodo(message);","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"            AddDeadlineHandler addDeadlineHandler \u003d new AddDeadlineHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d addDeadlineHandler.handleAddDeadline(message);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        case EVENT:","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"            AddEventHandler addEventHandler \u003d new AddEventHandler();","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"            newTask \u003d addEventHandler.handleAddEvent(message);","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        String returnedMessage \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"        returnedMessage +\u003d newTask + \"\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        returnedMessage +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"        return returnedMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":54}},{"path":"src/main/java/windycall/handler/AddTodoHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import windycall.exception.WindyCallException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Todo;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class AddTodoHandler extends AddTaskHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    public Task handleAddTodo(String message) throws WindyCallException {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        if (message.length() \u003d\u003d 4 || message.substring(4).trim().isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! The description of a todo cannot be empty!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        String description \u003d message.substring(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        return new Todo(description, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":21}},{"path":"src/main/java/windycall/handler/DeleteOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"public class DeleteOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public String handle(Parser parser, List\u003cTask\u003e tasks, String[] parts, Storage storage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        Pair\u003cInteger, String\u003e info \u003d parser.getDeleteIndex(parts);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        int num \u003d info.getKey();","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        String message \u003d info.getValue();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        assert num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d tasks.size();","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        if (num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"            String returnedMessage \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            returnedMessage +\u003d tasks.get(num - 1) + \"\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"            tasks.remove(num - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"            returnedMessage +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"            storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"            return returnedMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        } else if (num \u003e tasks.size() || (num \u003c 1 \u0026\u0026 num !\u003d -1)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"            return \"Sorry, your index is out of range\";","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"            return message;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":35}},{"path":"src/main/java/windycall/handler/FindOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.ui.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"public class FindOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    public String handle(String[] parts, Ui ui, List\u003cTask\u003e tasks, String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"            return \"Please input description of task you want to find\";","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"            return ui.displayTasks(tasks, userCommand.substring(5));","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":22}},{"path":"src/main/java/windycall/handler/ListOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.ui.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"public class ListOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    public String handle(List\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        return ui.displayTasks(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":18}},{"path":"src/main/java/windycall/handler/MarkOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"public class MarkOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public String handle(Parser parser, List\u003cTask\u003e tasks, String[] parts, Storage storage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        Pair\u003cInteger, String\u003e info \u003d parser.getMarkIndex(parts);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        int num \u003d info.getKey();","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        String message \u003d info.getValue();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        assert num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d tasks.size();","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        if (num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"            tasks.get(num - 1).markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            String returnedMessage \u003d \"Good job! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"            returnedMessage +\u003d tasks.get(num - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"            storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"            return returnedMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"        } else if (num \u003e tasks.size() || (num \u003c 1 \u0026\u0026 num !\u003d -1)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"            return \"Sorry, your index is out of range\";","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"            return message;","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":36}},{"path":"src/main/java/windycall/handler/OperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public abstract class OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    public abstract String handle(String userCommand);","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":7}},{"path":"src/main/java/windycall/handler/UnmarkOperationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.handler;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"public class UnmarkOperationHandler extends OperationHandler {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public String handle(String userCommand) {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    public String handle(Parser parser, List\u003cTask\u003e tasks, String[] parts, Storage storage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"        Pair\u003cInteger, String\u003e info \u003d parser.getUnmarkIndex(parts);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        int num \u003d info.getKey();","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        String message \u003d info.getValue();","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        assert num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d tasks.size();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        if (num \u003e\u003d 1 \u0026\u0026 num \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"            tasks.get(num - 1).unmark();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"            String returnedMessage \u003d \"Good job! I\u0027ve unmarked this task as not done yet:\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"            returnedMessage +\u003d tasks.get(num - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"            storage.handleTaskChange(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"            return returnedMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        } else if (num \u003e tasks.size() || (num \u003c 1 \u0026\u0026 num !\u003d -1)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"            return \"Sorry, your index is out of range\";","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"            return message;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"WindyCall":33}},{"path":"src/main/java/windycall/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import windycall.OperationType;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import windycall.exception.WindyCallException;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":" * Deals with making sense of the user command by splitting","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":" * user command and translation","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    public Parser() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"     * Returns an operation type representing what users want to do","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"     * @param command command input by users","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"     * @return a enumeration type representing a specific operation","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    public OperationType getOperationType(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"            return OperationType.LIST;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"            return OperationType.MARK;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"            return OperationType.UNMARK;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"            return OperationType.DELETE;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        case \"find\":","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"            return OperationType.FIND;","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        case \"tag\":","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"            return OperationType.TAG;","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"            return OperationType.BYE;","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"            return OperationType.ADDTASK;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"            //break;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"     * Returns the translated index of mark operation while","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"     * handling invalid input","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"     * @param parts parts of String of user command split by space","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"     * @return an index representing which task user want to mark","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"    public Pair\u003cInteger, String\u003e getMarkIndex(String[] parts) {","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"You should input a number to mark/unmark a task\");","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"        int num \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"            num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"OOPS!!! You should input a number\");","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"        return new Pair\u003c\u003e(num, num !\u003d -1 ? \"Success\" : \"Sorry, your index is out of range\");","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"    public Pair\u003cInteger, String\u003e getUnmarkIndex(String[] parts) {","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"You should input a number to mark/unmark a task\");","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"        int num \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"            num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"OOPS!!! You should input a number\");","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"        return new Pair\u003c\u003e(num, num !\u003d -1 ? \"Success\" : \"Sorry, your index is out of range\");","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"WindyCall"},"content":"    public Pair\u003cInteger, String\u003e getDeleteIndex(String[] parts) {","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"You should input a number to delete a task\");","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"WindyCall"},"content":"        int num \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"WindyCall"},"content":"            num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"WindyCall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"OOPS!!! You should input a number\");","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"        return new Pair\u003c\u003e(num, num !\u003d -1 ? \"Success\" : \"Sorry, your index is out of range\");","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"WindyCall"},"content":"    public Pair\u003cInteger, String\u003e getTagIndex(String[] parts) {","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"You should input the index of task to add a tag\");","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"        int num \u003d -1;","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"WindyCall"},"content":"            num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"WindyCall"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"OOPS!!! You should input a number\");","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"WindyCall"},"content":"        if (parts.length \u003e 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(num, num !\u003d -1 ? parts[2] : \"Sorry, your index is out of range\");","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"WindyCall"},"content":"            return new Pair\u003c\u003e(-1, \"Please input a string you want to tag this task\");","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"WindyCall"},"content":"    public OperationType getAddTaskType(String message) throws WindyCallException {","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"WindyCall"},"content":"        String[] parts \u003d message.split(\" \");","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"WindyCall"},"content":"        switch (parts[0]) {","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"WindyCall"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"WindyCall"},"content":"            return OperationType.TODO;","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"WindyCall"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"WindyCall"},"content":"            return OperationType.DEADLINE;","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"WindyCall"},"content":"        case \"event\":","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"WindyCall"},"content":"            return OperationType.EVENT;","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"WindyCall"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"WindyCall"},"content":"            throw new WindyCallException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"WindyCall"},"content":"     * Return formatted LocalDate by translating user input String deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"WindyCall"},"content":"     * @param deadline String representation of date input by user","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"WindyCall"},"content":"     * @return formatted LocalDate","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"WindyCall"},"content":"    public static LocalDate processDate(String deadline) throws WindyCallException {","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"WindyCall"},"content":"        // allowed date format:","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"WindyCall"},"content":"        // YYYY-MM-DD or DD/MM/YYYY","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"WindyCall"},"content":"        deadline \u003d deadline.trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"WindyCall"},"content":"        LocalDate dateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"WindyCall"},"content":"            dateTime \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"WindyCall"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"WindyCall"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":149,"author":{"gitId":"WindyCall"},"content":"                String[] parts \u003d deadline.split(\"/\");","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"WindyCall"},"content":"                int day \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"WindyCall"},"content":"                int month \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"WindyCall"},"content":"                int year \u003d Integer.parseInt(parts[2]);","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"WindyCall"},"content":"                dateTime \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"WindyCall"},"content":"            } catch (Exception e1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"WindyCall"},"content":"                throw new WindyCallException(\"Invalid date format. Only YYYY-MM-DD or DD/MM/YYYY are allowed\");","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"WindyCall"},"content":"        return dateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"WindyCall"},"content":"    /*","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"WindyCall"},"content":"    public String getTodoTaskInformation(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"WindyCall"},"content":"        return \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"WindyCall"},"content":"    public String[] getDeadlineInformation(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"WindyCall"},"content":"    public String getEventInformation(String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":174}},{"path":"src/main/java/windycall/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"import windycall.exception.WindyCallException;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Todo;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"import windycall.ui.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":" * Deals with loading tasks from the file and handle tasks change","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":" * by overwriting contents in tasks back to file","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    public Storage() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"     * Loads data inside data file to current tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"     * Handles non-existence of files or related directory","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"     * @param tasks an ArrayList that will be loaded into","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"    public void handleLoad(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"        //check if \"./data\" directory exist","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"        File file \u003d new File(\"./data\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        File taskFile \u003d new File(\"./data/WindyCall.txt\");;","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        // if data file exists","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"        if (!file.isDirectory()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"            file.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"            if (taskFile.createNewFile()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"                Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"                System.out.println(\"File created: \" + taskFile.getName());","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred. Can not load your tasks\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"        // load data in task_file into this.tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"            Scanner myReader \u003d new Scanner(taskFile);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"                if (data.charAt(0) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"                    handleLoadTodo(data, tasks);","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"                } else if (data.charAt(0) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"                    handleLoadDeadline(data, tasks);","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"                } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"                    handleLoadEvent(data, tasks);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"            myReader.close();","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"    private void handleLoadTodo(String data, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"        if (data.charAt(9) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"            String description \u003d data.substring(11);","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"            Task task \u003d new Todo(description, data.charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"WindyCall"},"content":"            tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"WindyCall"},"content":"            int idx \u003d data.indexOf(\"|\", 7);","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"WindyCall"},"content":"            String tag \u003d data.substring(8, idx - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"WindyCall"},"content":"            String description \u003d data.substring(idx + 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"WindyCall"},"content":"            Task task \u003d new Todo(description, data.charAt(4) \u003d\u003d \u0027X\u0027, tag);","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"WindyCall"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"WindyCall"},"content":"    private void handleLoadDeadline(String data, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"WindyCall"},"content":"        if (data.charAt(9) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"WindyCall"},"content":"            int idx \u003d data.indexOf(\"|\", 10);","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"WindyCall"},"content":"            String description \u003d data.substring(11, idx - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"WindyCall"},"content":"            String deadlineStr \u003d data.substring(idx + 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"WindyCall"},"content":"            LocalDate deadline \u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"WindyCall"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"WindyCall"},"content":"                deadline \u003d Parser.processDate(deadlineStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"WindyCall"},"content":"            } catch (WindyCallException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"WindyCall"},"content":"                // since load from file","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"WindyCall"},"content":"                // for sure the format is correct","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"WindyCall"},"content":"            Task task \u003d new Deadline(description, data.charAt(4) \u003d\u003d \u0027X\u0027, deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"WindyCall"},"content":"            tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"WindyCall"},"content":"            int idx1 \u003d data.indexOf(\"|\", 7);","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"WindyCall"},"content":"            int idx2 \u003d data.indexOf(\"|\", idx1 + 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"WindyCall"},"content":"            String description \u003d data.substring(idx1 + 2, idx2 - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"WindyCall"},"content":"            String deadlineStr \u003d data.substring(idx2 + 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"WindyCall"},"content":"            LocalDate deadline \u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"WindyCall"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"WindyCall"},"content":"                deadline \u003d Parser.processDate(deadlineStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"WindyCall"},"content":"            } catch (WindyCallException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"WindyCall"},"content":"                // since load from file","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"WindyCall"},"content":"                // for sure the format is correct","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"WindyCall"},"content":"            String tag \u003d data.substring(8, idx1 - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"WindyCall"},"content":"            Task task \u003d new Deadline(description, data.charAt(4) \u003d\u003d \u0027X\u0027, deadline, tag);","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"WindyCall"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"WindyCall"},"content":"    private void handleLoadEvent(String data, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"WindyCall"},"content":"        if (data.charAt(9) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"WindyCall"},"content":"            int idx1 \u003d data.indexOf(\"|\", 10);","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"WindyCall"},"content":"            int idx2 \u003d data.indexOf(\"|\", idx1 + 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"WindyCall"},"content":"            String description \u003d data.substring(11, idx1 - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"WindyCall"},"content":"            String fromStr \u003d data.substring(idx1 + 2, idx2 - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"WindyCall"},"content":"            String toStr \u003d data.substring(idx2 + 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"WindyCall"},"content":"            LocalDate from \u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"WindyCall"},"content":"            LocalDate to \u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"WindyCall"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"WindyCall"},"content":"                from \u003d Parser.processDate(fromStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"WindyCall"},"content":"                to \u003d Parser.processDate(toStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"WindyCall"},"content":"            } catch (WindyCallException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"WindyCall"},"content":"                // since load from file","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"WindyCall"},"content":"                // for sure the format is correct","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"WindyCall"},"content":"            Task task \u003d new Event(description, data.charAt(4) \u003d\u003d \u0027X\u0027, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"WindyCall"},"content":"            tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"WindyCall"},"content":"            int idx1 \u003d data.indexOf(\"|\", 7);","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"WindyCall"},"content":"            int idx2 \u003d data.indexOf(\"|\", idx1 + 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"WindyCall"},"content":"            int idx3 \u003d data.indexOf(\"|\", idx2 + 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"WindyCall"},"content":"            String description \u003d data.substring(idx1 + 2, idx2 - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"WindyCall"},"content":"            String fromStr \u003d data.substring(idx2 + 2, idx3 - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":145,"author":{"gitId":"WindyCall"},"content":"            String toStr \u003d data.substring(idx3 + 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":146,"author":{"gitId":"WindyCall"},"content":"            LocalDate from \u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":147,"author":{"gitId":"WindyCall"},"content":"            LocalDate to \u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":148,"author":{"gitId":"WindyCall"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":149,"author":{"gitId":"WindyCall"},"content":"                from \u003d Parser.processDate(fromStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":150,"author":{"gitId":"WindyCall"},"content":"                to \u003d Parser.processDate(toStr);","lastModifiedDate":"2023-02-14"},{"lineNumber":151,"author":{"gitId":"WindyCall"},"content":"            } catch (WindyCallException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":152,"author":{"gitId":"WindyCall"},"content":"                // since load from file","lastModifiedDate":"2023-02-14"},{"lineNumber":153,"author":{"gitId":"WindyCall"},"content":"                // for sure the format is correct","lastModifiedDate":"2023-02-14"},{"lineNumber":154,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"WindyCall"},"content":"            String tag \u003d data.substring(8, idx1 - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"WindyCall"},"content":"            Task task \u003d new Event(description, data.charAt(4) \u003d\u003d \u0027X\u0027, from, to, tag);","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"WindyCall"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"WindyCall"},"content":"     * Handles tasks change by overwriting contents in tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"WindyCall"},"content":"     * back to data file so that change is saved each time tasks get modified","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"WindyCall"},"content":"     * @param tasks tasks that has been changed to do users\u0027 operation on tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"WindyCall"},"content":"    public void handleTaskChange(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"WindyCall"},"content":"        // overwrite tasks back to data file to record the change","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"WindyCall"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"WindyCall"},"content":"            FileWriter myWriter \u003d new FileWriter(\"./data/WindyCall.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"WindyCall"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"WindyCall"},"content":"                myWriter.write(task.getFileFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"WindyCall"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"WindyCall"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"WindyCall"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"WindyCall"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":180}},{"path":"src/main/java/windycall/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"    public Deadline(String description, boolean status, LocalDate deadline) {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public Deadline(String description, boolean status, LocalDate deadline, String tag) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        super(description, status, tag);","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"        return \"D\";","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"        return \"D | \" + getStatusIcon() + \" | \" + tag + \" | \" + description + \" | \" + deadline + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    private String changeDateTimeFormat() {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        return deadline.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    private String getDeadline() {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"        return \" (by: \" + changeDateTimeFormat() + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription() + this.getDeadline();","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":45}},{"path":"src/main/java/windycall/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public Event(String description, boolean status, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    public Event(String description, boolean status, LocalDate from, LocalDate to, String tag) {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        super(description, status, tag);","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        return \"E\";","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"        return \"E | \" + getStatusIcon() + \" | \" + tag + \" | \" + description + \" | \" + from + \" | \" + to + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"    private String changeDateTimeFormat(LocalDate date) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        return date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    private String getEventInterval() {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        return \" (from: \" + changeDateTimeFormat(from) + \" to: \" + changeDateTimeFormat(to) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription() + this.getEventInterval();","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":47}},{"path":"src/main/java/windycall/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":" * Serves as an abstraction of different types of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    protected String tag \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    public Task(String description, boolean isDone, String tag) {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"    public abstract String getTaskTypeIcon();","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"     * Returns fileFormat of a specific task that will be stored","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"     * inside data file with consistency","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"     * @return a String representation of fileFormat of a task","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"    public abstract String getFileFormat();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"    public boolean matchFilterWord(String filterWord) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        return description.toLowerCase().indexOf(filterWord.toLowerCase()) !\u003d -1;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"    public void changeTag(String tag) {","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"    public String getCurrentDescription() {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + (tag.isEmpty() ? \" \" : \"[#\" + tag + \"] \")","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"                + this.description;","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":62}},{"path":"src/main/java/windycall/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":4}},{"path":"src/main/java/windycall/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"    public Todo(String description, boolean status) {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"        super(description, status);","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    public Todo(String description, boolean status, String tag) {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"        super(description, status, tag);","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        return \"T\";","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    public String getFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        return \"T | \" + getStatusIcon() + \" | \" + tag + \" | \" + description + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"        return \"[\" + getTaskTypeIcon() + \"]\" + getCurrentDescription();","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":28}},{"path":"src/main/java/windycall/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall.ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":" * Makes the background of chatBox more pretty","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"    public static void space() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"        System.out.print(\"     \");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    public static void line() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"--------------------------------------------------\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"     * Displays all the tasks according to their String representation","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"     * @param tasks tasks to be displayed","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"    public String displayTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"WindyCall"},"content":"            return \"Seems like there is no task in your list.\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"WindyCall"},"content":"        String returnedMessage \u003d \"Here are all of your tasks:\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"WindyCall"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"WindyCall"},"content":"            Ui.space();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"WindyCall"},"content":"            returnedMessage +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"WindyCall"},"content":"        return returnedMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"WindyCall"},"content":"    public String displayTasks(List\u003cTask\u003e tasks, String filterWord) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"WindyCall"},"content":"        int cntValidTask \u003d 0;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"WindyCall"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"WindyCall"},"content":"            if (tasks.get(i).matchFilterWord(filterWord)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"WindyCall"},"content":"                cntValidTask++;","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"WindyCall"},"content":"        if (cntValidTask \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"WindyCall"},"content":"            return \"Oh! There is no matching task found. Try input another key word\";","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"WindyCall"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"WindyCall"},"content":"            String returnedMessage \u003d \"Here are all matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"WindyCall"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"WindyCall"},"content":"                if (tasks.get(i).matchFilterWord(filterWord)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"WindyCall"},"content":"                    returnedMessage +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"WindyCall"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"WindyCall"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"WindyCall"},"content":"            return returnedMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"WindyCall"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"WindyCall"},"content":"    public void greeting() {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Hello! I\u0027m WindyCall\");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"How can I help you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"WindyCall"},"content":"    public void byeWords() {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"WindyCall"},"content":"        space();","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"WindyCall"},"content":"        System.out.println(\"Bye. Always willing to provide my help for you!!!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"WindyCall"},"content":"        line();","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: tan; -fx-border-color: blue; -fx-border-radius: 12; -fx-background-radius: 12; -fx-border-width: 2;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-padding: 15;\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"WindyCall":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"558.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"490.0\" style\u003d\"-fx-background-color: pink; -fx-font-size: 14px;\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"WindyCall":19}},{"path":"src/test/java/windycall/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import windycall.exception.WindyCallException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.parser.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    public void standardDateFormatTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    public void anotherDateFormatTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":22}},{"path":"src/test/java/windycall/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import windycall.task.Todo;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    public void fileFormatTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"        String description \u003d \"finish assignment\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"        Task todoTask \u003d new Todo(description, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"        String expectedFormat \u003d \"T |   | finish assignment\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        assertEquals(expectedFormat, todoTask.getFileFormat());","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"    public void displayFormatTest(){","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"        String description \u003d \"read book\";","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"        Task todoTask \u003d new Todo(description, true);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"        String expectedFormat \u003d \"[T][X] read book\";","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"        assertEquals(expectedFormat, todoTask.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":25}},{"path":"src/test/java/windycall/WindyCallTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"package windycall;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"public class WindyCallTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"    public void markTaskTest(){","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"WindyCall":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"WindyCall"},"content":"todo read book","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"WindyCall"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WindyCall"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"WindyCall"},"content":"delete","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"WindyCall"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WindyCall"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"WindyCall"},"content":"delete 4","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"WindyCall"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"WindyCall"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WindyCall"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"WindyCall"},"content":"todo join sports club","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"WindyCall"},"content":"delete 1","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"WindyCall"},"content":"delete hehe","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"WindyCall"},"content":"unmark hello","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"WindyCall"},"content":"deadline close book","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"WindyCall"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"WindyCall"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"WindyCall"},"content":"mark","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"event /from Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WindyCall"},"content":"unmark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WindyCall"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WindyCall"},"content":"event /from Monday /to","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"WindyCall"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"WindyCall"},"content":"delete 5","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"WindyCall"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"WindyCall"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"WindyCall":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WindyCall"},"content":"java -classpath ..\\bin WindyCall \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WindyCall":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"WindyCall"},"content":"java -classpath ../bin WindyCall \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WindyCall":1,"-":37}}]
