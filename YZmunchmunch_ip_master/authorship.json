[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"# **MUNCH**","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"\u003e \"Eat your sorrows away\" - nobody ( [source](https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/cb647821-dc91-4178-847f-42c98fbcd407/deogqv8-c614049b-bcf6-440a-9765-9f0b8299e350.png?token\u003deyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcL2NiNjQ3ODIxLWRjOTEtNDE3OC04NDdmLTQyYzk4ZmJjZDQwN1wvZGVvZ3F2OC1jNjE0MDQ5Yi1iY2Y2LTQ0MGEtOTc2NS05ZjBiODI5OWUzNTAucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.asrcbJKBG2WDOG76pc9cFPMQIZZvMiVkV0Qz47u2_14) )","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"#### MUNCH frees your mind from the trouble of remembering things you need to do, so that you can focus on eating. It\u0027s","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"- Text-based","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"- Easy to learn","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"- **Beautiful** user interface","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"It\u0027s amazing :star_struck: :star_struck:","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"**All you have to do is,**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"1. Download it","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"2. Click it","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"3. Add your tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"4. Have faith in it :pray:","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"5. Have ur meal :hamburger:","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"#### MUNCH\u0027s features","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"- [x] Simple todo tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"- [x] Managing deadlines ","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"#### If you are a Java programmer, you can use it to practice Java too! Here\u0027s the main method","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"YZmunchmunch"},"content":"public class Main {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"YZmunchmunch"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"YZmunchmunch"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"YZmunchmunch"},"content":"#### So what are you waiting for? Join MUNCH and forget your worries :stuck_out_tongue_winking_eye:","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"YZmunchmunch":26,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"YZmunchmunch"},"content":"    mainClassName \u003d \"Munch\"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"YZmunchmunch"},"content":"    archiveBaseName \u003d \"munch\"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YZmunchmunch":2,"-":39}},{"path":"src/main/java/AddTasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package AddTasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"     * @param description Name of the Deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"     * @param by The date representation of the Deadline task, must be in dd/mm/yyyy format.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"    public Deadlines(String description, LocalDate by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"     * String representation of the Deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"     * @return String representation of the Deadline task with the date in the format of MMM d yyyy.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"YZmunchmunch"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"YZmunchmunch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"YZmunchmunch"},"content":"        String convert \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"YZmunchmunch"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"YZmunchmunch"},"content":"            convert \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"YZmunchmunch"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"YZmunchmunch"},"content":"        return \" \" + \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (By: \" + convert + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"YZmunchmunch":34}},{"path":"src/main/java/AddTasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package AddTasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"public class Events extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"     * Constructor for Events task.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"     * @param description Name of the Event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"     * @param from Date which the Event task starts, must be in dd/mm/yyyy format.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"     * @param to Date which the Event task ends, must be in dd/mm/yyyy format.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"    public Events(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"     * String representation of the Event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"     * @return String representation of the Event task with the date in the format of MMM d yyyy.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"YZmunchmunch"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"YZmunchmunch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"YZmunchmunch"},"content":"        String convertFrom \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"YZmunchmunch"},"content":"        String convertTo \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"YZmunchmunch"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"YZmunchmunch"},"content":"            convertFrom \u003d from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"YZmunchmunch"},"content":"            convertTo \u003d to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"YZmunchmunch"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"YZmunchmunch"},"content":"        return \" \" + \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (From: \" + convertFrom + \" | To: \" + convertTo + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"YZmunchmunch":38}},{"path":"src/main/java/AddTasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package AddTasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"    public String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"     * @param description Task object\u0027s description.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints \"X\" if task\u0027s isDone is true, else print \" \".","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"     * @return A String \"X\" or \" \" depending on the boolean value isDone.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"YZmunchmunch"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"YZmunchmunch"},"content":"     * Sets the boolean value of isDone to true","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"YZmunchmunch"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"YZmunchmunch"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"YZmunchmunch"},"content":"     * Sets the boolean value of isDone to false","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"YZmunchmunch"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"YZmunchmunch"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints accordingly depending on the String input.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"YZmunchmunch"},"content":"     * Changes the task object\u0027s value of isDone according to the string input.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"YZmunchmunch"},"content":"     * @param str The String word to be read from.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"YZmunchmunch"},"content":"    public void marking(String str) {","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"YZmunchmunch"},"content":"        // converting string to integer","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"YZmunchmunch"},"content":"        if (str.equals(\"mark\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"YZmunchmunch"},"content":"            this.markAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"YZmunchmunch"},"content":"            System.out.println(\"Okay! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"YZmunchmunch"},"content":"            System.out.println(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"YZmunchmunch"},"content":"        } else if (str.equals(\"unmark\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"YZmunchmunch"},"content":"            this.markAsUndone();","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"YZmunchmunch"},"content":"            System.out.println(\"Aites cool, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"YZmunchmunch"},"content":"            System.out.println(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"YZmunchmunch"},"content":"     * Returns a string representation of the task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"YZmunchmunch"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"YZmunchmunch"},"content":"     * @return String representation of the task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"YZmunchmunch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"YZmunchmunch"},"content":"        return this.description;","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"YZmunchmunch":68}},{"path":"src/main/java/AddTasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package AddTasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import AddTasks.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"     * @param description Name of the Todo object.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"     * Returns string representation of the Todo object.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"     * @return String representation of the Todo object and its marking status.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"        return \" \" + \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"YZmunchmunch":23}},{"path":"src/main/java/Exceptions/FileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package Exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"public class FileNotFoundException extends MunchException {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"    public FileNotFoundException() {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"        super(\"Invalid file path! \");","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"YZmunchmunch":8}},{"path":"src/main/java/Exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package Exceptions;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"public class IncompleteInputException extends MunchException {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"    public IncompleteInputException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"        super(\"Bro, this is not a complete command!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"YZmunchmunch":7}},{"path":"src/main/java/Exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package Exceptions;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"public class InvalidInputException extends MunchException {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"        super(\"Bro, I\u0027m sorry but I do not understand the command. \");","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"YZmunchmunch":7}},{"path":"src/main/java/Exceptions/MunchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package Exceptions;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"public class MunchException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"    public MunchException(String message) {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"        super(message);","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"YZmunchmunch":8}},{"path":"src/main/java/Munch.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"import AddTasks.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"import Exceptions.IncompleteInputException;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"import Exceptions.MunchException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"import munch.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"import munch.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"import munch.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"import java.util.*;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":" * Main class of Munch.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"public class Munch {","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"    private static Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"     * Constructor for Munch object","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"     * @param filePath Path of the object file where the task objects are stored in.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"YZmunchmunch"},"content":"    public Munch(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"YZmunchmunch"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"YZmunchmunch"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"YZmunchmunch"},"content":"        this.tasks \u003d Storage.load(tasks, filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"YZmunchmunch"},"content":"     * Runs the program flow.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints a welcome message when the user starts the chat.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"YZmunchmunch"},"content":"     * Continues the program while taking in commands from the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"YZmunchmunch"},"content":"     * Exits the program when user types in \"bye\".","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints a goodbye message and close thr program.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"YZmunchmunch"},"content":"     * @param args String array input","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"YZmunchmunch"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"YZmunchmunch"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"YZmunchmunch"},"content":"        String filePath \u003d \"src/main/java/data/SavedTaskList.txt\";","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"YZmunchmunch"},"content":"        new Munch(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"YZmunchmunch"},"content":"        Boolean exit \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"YZmunchmunch"},"content":"        while (exit) {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"YZmunchmunch"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"YZmunchmunch"},"content":"                String word \u003d ui.readCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"YZmunchmunch"},"content":"                String[] words \u003d word.split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"YZmunchmunch"},"content":"                if (word.equals(\"bye\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"YZmunchmunch"},"content":"                    ui.exitMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"YZmunchmunch"},"content":"                    exit \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"YZmunchmunch"},"content":"                } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"YZmunchmunch"},"content":"                    TaskList.run(tasks, word, words);","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"YZmunchmunch"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"YZmunchmunch"},"content":"                Storage.save(tasks, filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"YZmunchmunch"},"content":"            } catch (IncompleteInputException | InvalidInputException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"YZmunchmunch"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"YZmunchmunch":61}},{"path":"src/main/java/data/SavedTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":" [T][ ] read book","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":" [D][ ] read book (By: Feb 1 2023)","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":" [D][ ] gibberish (By: Feb 1 2023)","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":" [E][ ] read book (From: Feb 1 2023 | To: Feb 2 2023)","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":" [D][ ] gibberish (By: Feb 1 2023)","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"YZmunchmunch":5}},{"path":"src/main/java/munch/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package munch;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"     * Converts a string into a LocalDate object.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"     * String has to be in the format of dd/MM/yyyy.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"     * @param date String to be converted into LocalDate object.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"     * @return LocalDate object.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"    public static LocalDate convertToDate(String date) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"        DateTimeFormatter sf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"        LocalDate localDate \u003d LocalDate.from(sf.parse(date));","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"        return localDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"//    public static String printFormat(String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"//        String newFormat \u003d by.format(String.valueOf(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"//        return newFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"//    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"YZmunchmunch":23}},{"path":"src/main/java/munch/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package munch;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import AddTasks.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"import java.io.*;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"    private String path;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"     * @param path The path of the object file where the task objects are stored in.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"     * Loads the task objects stored in a file and store it in an ArrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"     * If file has not been created, creates a new file.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"     * @param tasks Stores all the task objects obtained from the file into the arrayList tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"     * @param paths The path of the object file where the task objects are stored in.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"     * @return An arrayList consisting of all the task objects previously stored in a file.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"YZmunchmunch"},"content":"    public static ArrayList\u003cTask\u003e load(ArrayList\u003cTask\u003e tasks, String paths) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"YZmunchmunch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"YZmunchmunch"},"content":"            File storageFile \u003d new File(paths);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"YZmunchmunch"},"content":"            if (!storageFile.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"YZmunchmunch"},"content":"                storageFile.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"YZmunchmunch"},"content":"                System.out.println(\"File does not exist, but I have created a new file for you!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"YZmunchmunch"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"YZmunchmunch"},"content":"                FileReader munch \u003d new FileReader(paths);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"YZmunchmunch"},"content":"                BufferedReader munchRead \u003d new BufferedReader(munch);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"YZmunchmunch"},"content":"                String nextLine \u003d munchRead.readLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"YZmunchmunch"},"content":"                while (nextLine !\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"YZmunchmunch"},"content":"                    tasks.add(new Task(nextLine));","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"YZmunchmunch"},"content":"                    nextLine \u003d munchRead.readLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"YZmunchmunch"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"YZmunchmunch"},"content":"                munchRead.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"YZmunchmunch"},"content":"                return tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"YZmunchmunch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"YZmunchmunch"},"content":"            System.out.println(\"Apologies, file cannot be read!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"YZmunchmunch"},"content":"        return tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"YZmunchmunch"},"content":"     * Stores the task objects in an arrayList into a file.","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"YZmunchmunch"},"content":"     * If file has not been created, creates a new file.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"YZmunchmunch"},"content":"     * @param tasks Stores all the task objects in tasks into a file.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"YZmunchmunch"},"content":"     * @param paths The path of the object file where the task objects are stored in.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"YZmunchmunch"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks, String paths) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"YZmunchmunch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"YZmunchmunch"},"content":"            File storageFile \u003d new File(paths);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"YZmunchmunch"},"content":"            if (!storageFile.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"YZmunchmunch"},"content":"                storageFile.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"YZmunchmunch"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"YZmunchmunch"},"content":"                storageFile.delete();","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"YZmunchmunch"},"content":"                storageFile.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"YZmunchmunch"},"content":"            FileWriter munch \u003d new FileWriter(paths);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"YZmunchmunch"},"content":"            BufferedWriter munchWrite \u003d new BufferedWriter(munch);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"YZmunchmunch"},"content":"            for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"YZmunchmunch"},"content":"                munchWrite.write(tasks.get(i).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"YZmunchmunch"},"content":"                munchWrite.newLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"YZmunchmunch"},"content":"            munchWrite.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"YZmunchmunch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"YZmunchmunch"},"content":"            System.out.println(\"Apologies, file cannot be read!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"YZmunchmunch":76}},{"path":"src/main/java/munch/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package munch;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import AddTasks.Deadlines;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"import AddTasks.Events;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"import AddTasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"import AddTasks.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"import Exceptions.IncompleteInputException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"import munch.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"    public static void run(ArrayList\u003cTask\u003e tasks, String word, String[] words) throws IncompleteInputException, InvalidInputException {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"        if (word.equals(\"list\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"            Ui.listMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"        } else if (words[0].equals(\"mark\") || words[0].equals(\"unmark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"YZmunchmunch"},"content":"            int i \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"YZmunchmunch"},"content":"            tasks.get(i).marking(words[0]);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"YZmunchmunch"},"content":"        } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"YZmunchmunch"},"content":"            int i \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"YZmunchmunch"},"content":"            deleteTask(tasks, i);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"YZmunchmunch"},"content":"        } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"YZmunchmunch"},"content":"            addTodoTask(tasks, word);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"YZmunchmunch"},"content":"        } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"YZmunchmunch"},"content":"            addDeadlineTask(tasks, word);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"YZmunchmunch"},"content":"        } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"YZmunchmunch"},"content":"            addEventTask(tasks, word);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"YZmunchmunch"},"content":"        } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"YZmunchmunch"},"content":"            ArrayList\u003cTask\u003e keywordList \u003d findMatchingTasks(tasks, word);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"YZmunchmunch"},"content":"            for (int i \u003d 0; i \u003c keywordList.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"YZmunchmunch"},"content":"                System.out.println((i + 1) + \".\" + keywordList.get(i).toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"YZmunchmunch"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"YZmunchmunch"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"YZmunchmunch"},"content":"        Ui.divider();","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"YZmunchmunch"},"content":"     * Removes a task object from the arrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints a deleted message.","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints the remaining number of task in the arrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"YZmunchmunch"},"content":"     * @param tasks arrayList to be deleted from.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"YZmunchmunch"},"content":"     * @param element Integer of the element in the arrayList to be deleted.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"YZmunchmunch"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int element) {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"YZmunchmunch"},"content":"        Ui.deleteMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(tasks.get(element));","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"YZmunchmunch"},"content":"        tasks.remove(element);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list ~~\");","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"YZmunchmunch"},"content":"    public static void addTodoTask(ArrayList\u003cTask\u003e tasks, String word) throws IncompleteInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"YZmunchmunch"},"content":"        String separator \u003d \"todo\";","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"YZmunchmunch"},"content":"        int sepPos \u003d word.indexOf(separator);","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"YZmunchmunch"},"content":"        String str \u003d word.substring(sepPos + separator.length() + 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"YZmunchmunch"},"content":"        if (str.length() !\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"YZmunchmunch"},"content":"            Todo todos \u003d new Todo(str);","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"YZmunchmunch"},"content":"            tasks.add(todos);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"YZmunchmunch"},"content":"            Ui.addTaskMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"YZmunchmunch"},"content":"            System.out.println(todos);","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"YZmunchmunch"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list ~~\");","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"YZmunchmunch"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"YZmunchmunch"},"content":"            throw new IncompleteInputException();","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"YZmunchmunch"},"content":"    public static void addDeadlineTask(ArrayList\u003cTask\u003e tasks, String word) throws IncompleteInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"YZmunchmunch"},"content":"        if (word.contains(\"deadline\") \u0026\u0026 word.contains(\"/by\")){","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"YZmunchmunch"},"content":"            String separator1 \u003d \"deadline\";","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"YZmunchmunch"},"content":"            String separator2 \u003d \"/by\";","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"YZmunchmunch"},"content":"            int sepPos1 \u003d word.indexOf(separator1);","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"YZmunchmunch"},"content":"            int sepPos2 \u003d word.indexOf(separator2);","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"YZmunchmunch"},"content":"            String str \u003d word.substring(sepPos1 + separator1.length() + 1, sepPos2 - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"YZmunchmunch"},"content":"            String date \u003d word.substring(sepPos2 + 1 + separator2.length());","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"YZmunchmunch"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"YZmunchmunch"},"content":"                LocalDate convertDate \u003d Parser.convertToDate(date);","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"YZmunchmunch"},"content":"                Deadlines deadline \u003d new Deadlines(str, convertDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"YZmunchmunch"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"YZmunchmunch"},"content":"                Ui.addTaskMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"YZmunchmunch"},"content":"                System.out.println(deadline);","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"YZmunchmunch"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list ~~\");","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"YZmunchmunch"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"YZmunchmunch"},"content":"                Ui.wrongDateFormatMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"YZmunchmunch"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"YZmunchmunch"},"content":"            throw new IncompleteInputException();","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"YZmunchmunch"},"content":"    public static void addEventTask(ArrayList\u003cTask\u003e tasks, String word) throws IncompleteInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"YZmunchmunch"},"content":"        if (word.contains(\"event\") \u0026\u0026 word.contains(\"/from\") \u0026\u0026 word.contains(\"/to\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"YZmunchmunch"},"content":"            String separator1 \u003d \"event\";","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"YZmunchmunch"},"content":"            String separator2 \u003d \"/from\";","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"YZmunchmunch"},"content":"            String separator3 \u003d \"/to\";","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"YZmunchmunch"},"content":"            int sepPos1 \u003d word.indexOf(separator1);","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"YZmunchmunch"},"content":"            int sepPos2 \u003d word.indexOf(separator2);","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"YZmunchmunch"},"content":"            int sepPos3 \u003d word.indexOf(separator3);","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"YZmunchmunch"},"content":"            String str \u003d word.substring(sepPos1 + separator1.length() + 1, sepPos2 - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"YZmunchmunch"},"content":"            String from \u003d word.substring(sepPos2 + 1 + separator2.length(), sepPos3 - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"YZmunchmunch"},"content":"            String to \u003d word.substring(sepPos3 + 1 + separator3.length());","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"YZmunchmunch"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"YZmunchmunch"},"content":"                LocalDate convertFrom \u003d Parser.convertToDate(from);","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"YZmunchmunch"},"content":"                LocalDate convertTo \u003d Parser.convertToDate(to);","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"YZmunchmunch"},"content":"                Events event \u003d new Events(str, convertFrom, convertTo);","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"YZmunchmunch"},"content":"                tasks.add(event);","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"YZmunchmunch"},"content":"                Ui.addTaskMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"YZmunchmunch"},"content":"                System.out.println(event);","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"YZmunchmunch"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list ~~\");","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"YZmunchmunch"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"YZmunchmunch"},"content":"                Ui.wrongDateFormatMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"YZmunchmunch"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"YZmunchmunch"},"content":"            throw new IncompleteInputException();","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"YZmunchmunch"},"content":"    public static ArrayList\u003cTask\u003e findMatchingTasks(ArrayList\u003cTask\u003e tasks, String word) throws IncompleteInputException {","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"YZmunchmunch"},"content":"        ArrayList\u003cTask\u003e keywordList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"YZmunchmunch"},"content":"        if (word.contains(\"find\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"YZmunchmunch"},"content":"            String separator \u003d \"find\";","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"YZmunchmunch"},"content":"            int sepPos \u003d word.indexOf(separator);","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"YZmunchmunch"},"content":"            String keyword \u003d word.substring(sepPos + separator.length() + 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"YZmunchmunch"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"YZmunchmunch"},"content":"                if (tasks.get(i).description.contains(keyword)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"YZmunchmunch"},"content":"                    keywordList.add(tasks.get(i));","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"YZmunchmunch"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"YZmunchmunch"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"YZmunchmunch"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"YZmunchmunch"},"content":"            throw new IncompleteInputException();","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"YZmunchmunch"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"YZmunchmunch"},"content":"        return keywordList;","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"YZmunchmunch":142}},{"path":"src/main/java/munch/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package munch;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"     * Constructor for Ui object.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"    public Ui() {}","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"     * Scans the command input from the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"     * @return String representation of the input.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints a welcome message when the program is first being started.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"Hello! I am Munch! :)\");","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"How may I help you?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"__________________________________\");","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints a divider line to improve user interface.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"YZmunchmunch"},"content":"    public static void divider() {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"__________________________________\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints an error message when the input format for date is wrong.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"YZmunchmunch"},"content":"    public static void wrongDateFormatMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"Wrong format for date! [Format: dd/MM/yyyy HHmm]\");","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints a message every time a new task has been added.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"YZmunchmunch"},"content":"    public static void addTaskMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"I\u0027ve added this task for you!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints an exit message when the program ends.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"YZmunchmunch"},"content":"    public static void exitMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"See ya champ! Enjoy your day!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints the list of tasks in the arrayList.","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"YZmunchmunch"},"content":"    public static void listMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"Here are the task(s) in your list:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"YZmunchmunch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"YZmunchmunch"},"content":"     * Prints a message every time a task is deleted.","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"YZmunchmunch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"YZmunchmunch"},"content":"    public static void deleteMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"YZmunchmunch"},"content":"        System.out.println(\"I\u0027ve deleted this task for you!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"YZmunchmunch":71}},{"path":"src/test/java/AddTasks/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package AddTasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"import munch.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"public class DeadlinesTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"    public void testDeadlineTasks() {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"        String date \u003d \"01/02/2023\";","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"        LocalDate convertDate \u003d Parser.convertToDate(date);","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"        Deadlines deadline1 \u003d new Deadlines(\"read book\", convertDate );","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [D][ ] read book (By: Feb 1 2023)\", deadline1.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"        Deadlines deadline2 \u003d new Deadlines(\"read book\", convertDate);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"        deadline2.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [D][X] read book (By: Feb 1 2023)\", deadline2.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"        deadline2.markAsUndone();","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [D][ ] read book (By: Feb 1 2023)\", deadline2.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"YZmunchmunch":22}},{"path":"src/test/java/AddTasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package AddTasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"import jdk.jfr.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import munch.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"public class EventsTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"    public void testEventTasks() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"        String from \u003d \"01/02/2023\";","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"        String to \u003d \"02/02/2023\";","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"        LocalDate convertDateFrom \u003d Parser.convertToDate(from);","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"        LocalDate convertDateTo \u003d Parser.convertToDate(to);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"        Events event1 \u003d new Events(\"read book\", convertDateFrom, convertDateTo);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [E][ ] read book (From: Feb 1 2023 | To: Feb 2 2023)\", event1.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"YZmunchmunch"},"content":"        Events event2 \u003d new Events(\"read book\", convertDateFrom, convertDateTo);","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"YZmunchmunch"},"content":"        event2.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [E][X] read book (From: Feb 1 2023 | To: Feb 2 2023)\", event2.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YZmunchmunch"},"content":"        event2.markAsUndone();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [E][ ] read book (From: Feb 1 2023 | To: Feb 2 2023)\", event2.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"YZmunchmunch":25}},{"path":"src/test/java/AddTasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"package AddTasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"    public void testTodoTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"        Todo todo1 \u003d new Todo(\"read book\");","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [T][ ] read book\", todo1.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"YZmunchmunch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"YZmunchmunch"},"content":"        Todo todo2 \u003d new Todo(\"read book\");","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"YZmunchmunch"},"content":"        todo2.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [T][X] read book\", todo2.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YZmunchmunch"},"content":"        todo2.markAsUndone();","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YZmunchmunch"},"content":"        assertEquals(\" [T][ ] read book\", todo2.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YZmunchmunch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YZmunchmunch"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"YZmunchmunch":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YZmunchmunch"},"content":"deadline read book /by sunday","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"YZmunchmunch"},"content":"todo CS2103 lecture","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"YZmunchmunch"},"content":"event DJ @ Prism /from Wed 11pm /to Wed 12am","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"YZmunchmunch"},"content":"list","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"YZmunchmunch"},"content":"mark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"YZmunchmunch"},"content":"unmark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"YZmunchmunch"},"content":"list","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"YZmunchmunch"},"content":"bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"YZmunchmunch":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"YZmunchmunch"},"content":"java -classpath ../bin Munch \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YZmunchmunch":1,"-":37}}]
