[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"public class DeadlineTask extends Task{","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"  private final LocalDate date;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"  public DeadlineTask(String name, LocalDate date) {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"    super(name);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"    this.date \u003d date;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"  public DeadlineTask(String name, LocalDate date, Boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"    super(name, isDone);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"    this.date \u003d date;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"  @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"  public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    return \"[D] \" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Yaladah":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"    public static String projName \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    private final static String SAVED_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"    private void addTask(Task task, String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"        System.out.println(\"Item added: \" + name);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    public boolean readInput(String input) throws DukeException, IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"        String firstInput \u003d input.split(\" \")[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"            switch (firstInput) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"            case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"Here are the tasks you asked for!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i +\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"                    int currItem \u003d i + 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"                    System.out.println(currItem + \": \" + taskList.get(i));","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"You now have \" + taskList.size() + \" items in your list.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"                return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"It was a pleasure to help, goodbye!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"                return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"                if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Mark? Mark what?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"                    int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"                    Task selectedTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"                    System.out.println(\"Done! I\u0027ve marked this task as done :D\");","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"                    selectedTask.check();","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"                    System.out.println(selectedTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"                    return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Oops, that task number does not exist\");","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"                if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Unmark? Unmark what?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"                    int untaskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"                    Task unselectedTask \u003d taskList.get(untaskIndex);","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"                    System.out.println(\"This task is apparently not done huh D:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"                    unselectedTask.unCheck();","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"                    System.out.println(unselectedTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"                    return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Oops, that task number does not exist\");","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"                    String todoTaskName \u003d input.substring(5);","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"                    TodoTask todoTask \u003d new TodoTask(todoTaskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"                    addTask(todoTask, todoTaskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"                    return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Oops, you can\u0027t enter an empty task!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"                String deadlineDetails \u003d input.substring(9);","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"                if (deadlineDetails.split(\" /by \").length \u003c 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Wait a minute, you\u0027re missing something! Could be the name or date...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"Yaladah"},"content":"                String deadlineName \u003d deadlineDetails.split(\" /by \")[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"                String deadlineDateStr \u003d deadlineDetails.split(\" /by \")[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateStr);","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Yaladah"},"content":"                // make sure date not before curr date","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"Yaladah"},"content":"                if (deadlineDate.isBefore(now)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Wait! Time travelling is not in my kit!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Yaladah"},"content":"                DeadlineTask deadlineTask \u003d new DeadlineTask(deadlineName, deadlineDate);","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"                addTask(deadlineTask, deadlineName);","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"                return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"            case \"event\":","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"                String eventDetails \u003d input.substring(6);","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"                if (eventDetails.split(\" /from \").length \u003c 2 || eventDetails.split(\" /to \").length \u003c 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Hold up, you might be missing something here buddy!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"                String eventName \u003d eventDetails.split(\" /from \")[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"Yaladah"},"content":"                String eventDate \u003d eventDetails.split(\" /from \")[1];","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"Yaladah"},"content":"                String eventStartStr \u003d eventDate.split(\" /to \")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"Yaladah"},"content":"                String eventEndStr \u003d eventDate.split(\" /to \")[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"Yaladah"},"content":"                LocalDate eventStart \u003d LocalDate.parse(eventStartStr);","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"Yaladah"},"content":"                LocalDate eventEnd \u003d LocalDate.parse(eventEndStr);","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"Yaladah"},"content":"                if (eventStart.isBefore(now) || eventEnd.isBefore(now)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Wait! Time travelling is not in my kit!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"                if (eventStart.isAfter(eventEnd)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Ohhh I wasn\u0027t aware time travels backwards for you :O\");","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"Yaladah"},"content":"                EventTask eventTask \u003d new EventTask(eventName, eventStart, eventEnd);","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"Yaladah"},"content":"                addTask(eventTask, eventName);","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"Yaladah"},"content":"                return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"Yaladah"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"Yaladah"},"content":"                if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Delete? Delete what?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"Yaladah"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"Yaladah"},"content":"                    int deleteIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"Yaladah"},"content":"                    Task deleteTask \u003d taskList.get(deleteIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"Yaladah"},"content":"                    System.out.println(\"Done! \" + deleteTask + \" has been deleted for good.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"Yaladah"},"content":"                    taskList.remove(deleteIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"Yaladah"},"content":"                    return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"Yaladah"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Oops, that task number does not exist\");","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"Yaladah"},"content":"            case \"save\":","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"Yaladah"},"content":"                File f \u003d new File(SAVED_PATH);","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"Yaladah"},"content":"                if (!f.getParentFile().exists()) { //check if directory exists, else make one","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"Yaladah"},"content":"                    if (!f.getParentFile().mkdirs()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"Yaladah"},"content":"                        throw new DukeException(\"Directories can\u0027t be made? Or did something go wrong...\");","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"Yaladah"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"Yaladah"},"content":"                if (!f.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"Yaladah"},"content":"                    if (!f.createNewFile()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"Yaladah"},"content":"                        throw new DukeException(\"This file both doesn\u0027t exist and cannot be made D:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"Yaladah"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"Yaladah"},"content":"                FileWriter fileWriter \u003d new FileWriter(f);","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"Yaladah"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"Yaladah"},"content":"                    fileWriter.write(task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"Yaladah"},"content":"                    fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"Yaladah"},"content":"                fileWriter.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"Yaladah"},"content":"                return true;","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"Yaladah"},"content":"            default:","lastModifiedDate":"2023-01-22"},{"lineNumber":155,"author":{"gitId":"Yaladah"},"content":"                throw new DukeException(\"Oops I do not recognise this command...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":157,"author":{"gitId":"Yaladah"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"Yaladah"},"content":"            throw new DukeException(\"Something is up with your files it seems\");","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"Yaladah"},"content":"        } catch (DateTimeParseException dl) {","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"Yaladah"},"content":"            throw new DukeException(\"Beep boop this robot can only understand dates in the form yyyy-mm-dd\");","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":163,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":164,"author":{"gitId":"Yaladah"},"content":"    public void load() {","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"Yaladah"},"content":"        File f \u003d new File(SAVED_PATH);","lastModifiedDate":"2023-01-28"},{"lineNumber":166,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":167,"author":{"gitId":"Yaladah"},"content":"            if (!f.exists()) { //file didn\u0027t exist yet","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"Oh boy a new user! What\u0027s up?\");","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"Yaladah"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"Welcome back!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"Here\u0027s the tasks you have:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":172,"author":{"gitId":"Yaladah"},"content":"                Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"Yaladah"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"Yaladah"},"content":"                    Task task;","lastModifiedDate":"2023-01-28"},{"lineNumber":175,"author":{"gitId":"Yaladah"},"content":"                    String currTask \u003d scanner.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":176,"author":{"gitId":"Yaladah"},"content":"                    String taskType \u003d currTask.split(\" \")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"Yaladah"},"content":"                    String taskCompletion \u003d currTask.substring(4,7);","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"Yaladah"},"content":"                    Boolean complete \u003d Objects.equals(taskCompletion, \"[X]\");","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"Yaladah"},"content":"                    String taskDetails;","lastModifiedDate":"2023-01-28"},{"lineNumber":180,"author":{"gitId":"Yaladah"},"content":"                    if (complete) {","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"Yaladah"},"content":"                        taskDetails \u003d currTask.split(\" \\\\[X] \")[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":182,"author":{"gitId":"Yaladah"},"content":"                    } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":183,"author":{"gitId":"Yaladah"},"content":"                        taskDetails \u003d currTask.split(\" \\\\[ ] \")[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":184,"author":{"gitId":"Yaladah"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":185,"author":{"gitId":"Yaladah"},"content":"                    switch (taskType){","lastModifiedDate":"2023-01-28"},{"lineNumber":186,"author":{"gitId":"Yaladah"},"content":"                    case \"[T]\":","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new TodoTask(taskDetails, complete);","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"Yaladah"},"content":"                        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":189,"author":{"gitId":"Yaladah"},"content":"                    case \"[D]\":","lastModifiedDate":"2023-01-28"},{"lineNumber":190,"author":{"gitId":"Yaladah"},"content":"                        String deadlineName \u003d taskDetails.split(\" \\\\(by: \")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":191,"author":{"gitId":"Yaladah"},"content":"                        String date \u003d taskDetails.split(\" \\\\(by: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":192,"author":{"gitId":"Yaladah"},"content":"                        LocalDate deadLine \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new DeadlineTask(deadlineName, deadLine, complete);","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"Yaladah"},"content":"                        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"Yaladah"},"content":"                    case \"[E]\":","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"Yaladah"},"content":"                        String eventName \u003d taskDetails.split(\" \\\\(from:\")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"Yaladah"},"content":"                        String eventPeriod \u003d taskDetails.split(\"\\\\(from: \")[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"Yaladah"},"content":"                        String startStr \u003d eventPeriod.split(\" to: \")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"Yaladah"},"content":"                        String endStr \u003d eventPeriod.split(\" to: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"Yaladah"},"content":"                        LocalDate start \u003d LocalDate.parse(startStr);","lastModifiedDate":"2023-01-28"},{"lineNumber":201,"author":{"gitId":"Yaladah"},"content":"                        LocalDate end \u003d LocalDate.parse(endStr);","lastModifiedDate":"2023-01-28"},{"lineNumber":202,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new EventTask(eventName, start, end, complete);","lastModifiedDate":"2023-01-28"},{"lineNumber":203,"author":{"gitId":"Yaladah"},"content":"                        break;","lastModifiedDate":"2023-01-28"},{"lineNumber":204,"author":{"gitId":"Yaladah"},"content":"                    default:","lastModifiedDate":"2023-01-28"},{"lineNumber":205,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new Task(taskDetails);","lastModifiedDate":"2023-01-28"},{"lineNumber":206,"author":{"gitId":"Yaladah"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":207,"author":{"gitId":"Yaladah"},"content":"                    taskList.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":208,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":209,"author":{"gitId":"Yaladah"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i +\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":210,"author":{"gitId":"Yaladah"},"content":"                    int currItem \u003d i + 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":211,"author":{"gitId":"Yaladah"},"content":"                    System.out.println(currItem + \": \" + taskList.get(i));","lastModifiedDate":"2023-01-28"},{"lineNumber":212,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":213,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"How might I help you today?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":214,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":215,"author":{"gitId":"Yaladah"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-01-28"},{"lineNumber":216,"author":{"gitId":"Yaladah"},"content":"            System.out.println(\"Haha noob\");","lastModifiedDate":"2023-01-28"},{"lineNumber":217,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":218,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":219,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":220,"author":{"gitId":"Yaladah"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":221,"author":{"gitId":"Yaladah"},"content":"        System.out.println(\"Yo! The name is\\n\" + projName);","lastModifiedDate":"2023-01-28"},{"lineNumber":222,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":223,"author":{"gitId":"Yaladah"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-22"},{"lineNumber":224,"author":{"gitId":"Yaladah"},"content":"        duke.load();","lastModifiedDate":"2023-01-28"},{"lineNumber":225,"author":{"gitId":"Yaladah"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":226,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":227,"author":{"gitId":"Yaladah"},"content":"        boolean cont \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":228,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":229,"author":{"gitId":"Yaladah"},"content":"        while (cont) {","lastModifiedDate":"2023-01-22"},{"lineNumber":230,"author":{"gitId":"Yaladah"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":231,"author":{"gitId":"Yaladah"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":232,"author":{"gitId":"Yaladah"},"content":"                cont \u003d duke.readInput(input);","lastModifiedDate":"2023-01-22"},{"lineNumber":233,"author":{"gitId":"Yaladah"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":234,"author":{"gitId":"Yaladah"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":235,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":236,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":237,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":238,"author":{"gitId":"Yaladah"},"content":"        scanner.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Yaladah":233,"-":7}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"  public DukeException(String msg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"    super(msg);","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Yaladah":5}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"  private final LocalDate startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"  private final LocalDate endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"  public EventTask(String name, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"    super(name);","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    this.startTime \u003d startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"    this.endTime \u003d endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"  public EventTask(String name, LocalDate startTime, LocalDate endTime,Boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"    super(name, isDone);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    this.startTime \u003d startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"    this.endTime \u003d endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"  @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"  public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"    return \"[E] \" + super.toString() + \" (from: \" + this.startTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"            + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Yaladah":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"  private String name;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"  private Boolean completed;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"  public Task(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"    this.name \u003d name;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"    this.completed \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"  public Task(String name, Boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"    this.name \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    this.completed \u003d isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"  public Boolean isDone() {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    return this.completed;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"  public void check() {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    this.completed \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"  public void unCheck() {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    this.completed \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"  @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"  public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    if (this.completed) {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"      return \"[X] \" + this.name;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"      return \"[ ] \" + this.name;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Yaladah":35}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"public class TodoTask extends Task{","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"  public TodoTask(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"    super(name);","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"  public TodoTask(String name, Boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"    super(name, isDone);","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"  @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"  public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Yaladah":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"todo read book","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"todo drink water","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"deadline finish project /by 2023-06-01","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"event Jerome Birthday /from 2024-01-17 /to 2024-01-17","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"mark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"mark 4","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"unmark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"wronginput","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"mark","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"mark 6","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"unmark","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"unmark 6","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"todo","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"deadline swim /by","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"deadline /by Monday","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"event bake /from 1pm /to","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"event /from 2pm /to 3pm","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"delete","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"delete 2","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"delete 6","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"deadline write book /by monday","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"deadline write book /by 1999-01-01","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"event travel to Japan /from 1999-01-01 /to 2030-01-01","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"event travel to Japan /from 2031-01-01 /to 2030-01-01","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Yaladah":29}}]
