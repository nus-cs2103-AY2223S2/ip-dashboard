[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"# Duke chatbot","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"\u003eEvery day, my daddy told me the same thing. \u0027Once a task is just begun, never leave it till it\u0027s done. Be the labour great or small, do it well or not at all.\u0027 - Quincy Jones","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"Chatbot with functions:","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"- Add todo tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"- Add deadline tasks with single deadline","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"- Add event tasks with a start time and end time","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"- Function to mark and unmark tasks as done or undone","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"- Function to delete unwanted tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"- Function to list down recorded tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"- Function to close chatbot","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"Steps to use the chatbot,","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"1. Download the jar file [here](https://github.com/Yaladah/ip/releases/tag/A-Jar)","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"2. Navigate to the directory containing the jar file.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"3. Open the terminal and run the file using `java -jar duke.jar`","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"4. Have **FUN** with it!","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"What you can do,","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"- [x] Add tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"- [x] Manage tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"- [ ] Edit tasks (Coming soon)","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Yaladah":19,"-":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"checkstyle{","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Yaladah":21,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"### Add tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"The ability to add various different tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"- Todo tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"- Deadline tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"- Event tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"- Duration tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"### Mark them as done or undone","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"Keep track of whether you have completed your tasks by marking them","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"### `list` - Lists all tasks currently stored","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"Example of list:","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"Here are the tasks you asked for!","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"1: [T] [ ] he","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"2: [Du] [ ] hello ( 5 hours 0 mins )","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"You now have 2 items in your list.","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"### `todo` - A standard todo task","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"`todo Assignment 1`","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"### `deadline` - A task with an assigned deadline","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"`/by`: used to specify date that task should be done by","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"Date in `yyyy-mm-dd` format","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"`deadline Submit critical reflection /by 2024-01-01`","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"### `event` - A task with a start and end date","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"`/from` and `/to` used to specify start and end dates","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"Dates are in `yyyy-mm-dd` format","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"`event Sports carnival /from 2023-03-03 /to 2023-03-10`","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"### `duration` - A task with a given duration to complete","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"`/for` used to specify the time period given for task","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"Time is in `hh:mm` format","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"`duration Mock practical exam /for 2:00`","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"### `mark` - To check a task","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"Example:","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"`mark 2` - checks the second item on the list as done","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"### `unmark` - Unchecks a task","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"`unmark 1` - unchecks the first item on the list","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"### `delete` - Deletes a task from the list","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"`delete 3` - Permanently deletes the third item from the list","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"### `save` - Saves the list to hard drive","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"### `find` - Filters tasks by a search","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"Yaladah"},"content":"Example:","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"1: [T] [ ] hehe","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"2: [Du] [ ] hello ( 5 hours 0 mins )","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"3: [D] [X] Return home (by: 09 Sep 2023)","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"`find he` gives","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"1: [T] [ ] hehe","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"2: [Du] [ ] hello ( 5 hours 0 mins )","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"Yaladah"},"content":"```","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Yaladah":73,"-":25}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Yaladah":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    private final static String SAVED_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"     * Constructs a Duke object for program to run.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"     * Initialises the ui, storage, parser and tasklist to be used for the program.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"//     * @param filePath Path in which the file is located relative to project root.","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"    public Duke() {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"        storage \u003d new Storage(SAVED_PATH);","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"        TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"            Ui.showLoadingErrorMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"        parser \u003d new Parser(storage, taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"        stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"Yaladah"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"        });","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"        });","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"Yaladah"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"                handleUserInput();","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"Yaladah"},"content":"        });","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"Yaladah"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"Yaladah"},"content":"                handleUserInput();","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"        });","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"Yaladah"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"Yaladah"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"Yaladah"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"Yaladah"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"Yaladah"},"content":"    private void handleUserInput() throws DukeException, IOException {","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"Yaladah"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"Yaladah"},"content":"        assert userText.length() \u003e\u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"Yaladah"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"Yaladah"},"content":"        System.out.println(dukeText);","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"Yaladah"},"content":"        if (dukeText \u003d\u003d null) {","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"Yaladah"},"content":"            dukeText \u003d \"Nononono\";","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"Yaladah"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"Yaladah"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"Yaladah"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"Yaladah"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"Yaladah"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"Yaladah"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"Yaladah"},"content":"        // The response to an input command","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"Yaladah"},"content":"            String output \u003d parser.readInput(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"Yaladah"},"content":"            return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"Yaladah"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"Yaladah"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"Yaladah"},"content":"     * Accepts user input and checks whether program terminated or continues running.","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"Yaladah"},"content":"    public void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"Yaladah"},"content":"        boolean isContinueRunning \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"Yaladah"},"content":"        while (isContinueRunning) {","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"Yaladah"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"Yaladah"},"content":"                String input \u003d ui.requestUserInput();","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"Yaladah"},"content":"                assert input.length() \u003c\u003d 0 : \"User input should not be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":153,"author":{"gitId":"Yaladah"},"content":"                String output \u003d parser.readInput(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"Yaladah"},"content":"                if (output.isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"Yaladah"},"content":"                    isContinueRunning \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":156,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":157,"author":{"gitId":"Yaladah"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"Yaladah"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":161,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"Yaladah"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"Yaladah"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Yaladah":164,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":" * DukeException class for Duke throw when unexpected behaviour occurs during runtime.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"     * Generates a DukeException that informs user about problems.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"     * @param msg The error message to be printed to user.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"        super(msg);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Yaladah":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"public class Launcher {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Yaladah":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"            stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Yaladah":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"        welcomeMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"        assert input.length() \u003c\u003d 0 : \"User input should not be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"        String reply \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"        String response;","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"        if (reply \u003d\u003d null) {","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"            response \u003d \"Bye bye\";","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"        } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"            response \u003d reply;","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"    private void welcomeMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"                DialogBox.getDukeDialog(\"Yo! Duke here! How might I be of service?\", dukeImage)","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"        );","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Yaladah":70}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import task.DeadlineTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import task.DurationTask;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import task.EventTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import task.TodoTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":" * Parser class that handles inputs made by user.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"     * Constructor for a parser.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"     * @param storage Storage instance of Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"     * @param taskList TaskList containing the tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    public Parser(Storage storage, TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"     * Returns a boolean, continues running the program if true, terminates it if false.","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"     * Takes in user input and carries out functionality of the command.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"     * @param input Command input by user.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"     * @return True for Duke to continue running.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"     * @throws DukeException Thrown when unexpected behaviour occurs.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"     * @throws IOException Thrown when file system encounters an error.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"    public String readInput(String input) throws DukeException, IOException {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"        String firstInput \u003d input.split(\" \")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"        LocalDate currentTime \u003d LocalDate.now();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"            switch (firstInput) {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"            case \"list\":","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"                String listOutput \u003d \"Here are the tasks you asked for!\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i +\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"                    int currItem \u003d i + 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"                    listOutput +\u003d currItem + \": \" + taskList.get(i);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"                    listOutput +\u003d \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"                listOutput +\u003d \"You now have \" + taskList.size() + \" items in your list.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"                return listOutput;","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"                return null;","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"                if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Mark? Mark what?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"                    int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"                    Task selectedTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"                    selectedTask.check();","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"                    String markOutput \u003d \"Done! I\u0027ve marked this task as done :D\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"Yaladah"},"content":"                    markOutput +\u003d selectedTask;","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"                    storage.save(taskList);","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"                    return markOutput;","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Oops, that task number does not exist\");","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"                if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Unmark? Unmark what?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"                    int unmarkIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"                    Task unselectedTask \u003d taskList.get(unmarkIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"                    String unmarkOutput \u003d \"This task is apparently not done huh D:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"                    unselectedTask.unCheck();","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"Yaladah"},"content":"                    unmarkOutput +\u003d unselectedTask;","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"                    storage.save(taskList);","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"                    return unmarkOutput;","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"Yaladah"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Oops, that task number does not exist\");","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"Yaladah"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"                    String todoTaskName \u003d input.substring(5);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"                    TodoTask todoTask \u003d new TodoTask(todoTaskName);","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"                    return addTask(todoTask, todoTaskName);","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Oops, you can\u0027t enter an empty task!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"Yaladah"},"content":"                String deadlineDetails \u003d input.substring(9);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"Yaladah"},"content":"                if (deadlineDetails.split(\" /by \").length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Wait a minute, \"","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"Yaladah"},"content":"                            + \"you\u0027re missing something! Could be the name or date...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"Yaladah"},"content":"                String deadlineName \u003d deadlineDetails.split(\" /by \")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"                String deadlineDateStr \u003d deadlineDetails.split(\" /by \")[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateStr);","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"Yaladah"},"content":"                if (deadlineDate.isBefore(currentTime)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Wait! Time travelling is not in my kit!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"Yaladah"},"content":"                DeadlineTask deadlineTask \u003d new DeadlineTask(deadlineName, deadlineDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"Yaladah"},"content":"                return addTask(deadlineTask, deadlineName);","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"Yaladah"},"content":"            case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"Yaladah"},"content":"                String eventDetails \u003d input.substring(6);","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"Yaladah"},"content":"                if (eventDetails.split(\" /from \").length \u003c 2","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"Yaladah"},"content":"                        || eventDetails.split(\" /to \").length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Hold up, you might be missing something here buddy!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"Yaladah"},"content":"                String eventName \u003d eventDetails.split(\" /from \")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"Yaladah"},"content":"                String eventDate \u003d eventDetails.split(\" /from \")[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"Yaladah"},"content":"                String eventStartStr \u003d eventDate.split(\" /to \")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"Yaladah"},"content":"                String eventEndStr \u003d eventDate.split(\" /to \")[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"Yaladah"},"content":"                LocalDate eventStart \u003d LocalDate.parse(eventStartStr);","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"Yaladah"},"content":"                LocalDate eventEnd \u003d LocalDate.parse(eventEndStr);","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"Yaladah"},"content":"                if (eventStart.isBefore(currentTime) || eventEnd.isBefore(currentTime)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Wait! Time travelling is not in my kit!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"Yaladah"},"content":"                if (eventStart.isAfter(eventEnd)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Ohhh I wasn\u0027t aware time travels backwards for you :O\");","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"Yaladah"},"content":"                EventTask eventTask \u003d new EventTask(eventName, eventStart, eventEnd);","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"Yaladah"},"content":"                return addTask(eventTask, eventName);","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"Yaladah"},"content":"            case \"duration\":","lastModifiedDate":"2023-02-14"},{"lineNumber":152,"author":{"gitId":"Yaladah"},"content":"                String durationDetails \u003d input.substring(9);","lastModifiedDate":"2023-02-14"},{"lineNumber":153,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":154,"author":{"gitId":"Yaladah"},"content":"                if (durationDetails.split(\" /for \").length \u003c 2) {","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Hold up, you might be missing something here buddy!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"Yaladah"},"content":"                String durationName \u003d durationDetails.split(\" /for \")[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":158,"author":{"gitId":"Yaladah"},"content":"                String durationLength \u003d durationDetails.split(\" /for \")[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":159,"author":{"gitId":"Yaladah"},"content":"                int hours \u003d Integer.parseInt(durationLength.split(\":\")[0]);","lastModifiedDate":"2023-02-14"},{"lineNumber":160,"author":{"gitId":"Yaladah"},"content":"                int mins \u003d Integer.parseInt(durationLength.split(\":\")[1]);","lastModifiedDate":"2023-02-14"},{"lineNumber":161,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":162,"author":{"gitId":"Yaladah"},"content":"                if (hours \u003c\u003d 0 \u0026\u0026 mins \u003c\u003d 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":163,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Wait, you\u0027re giving yourself no time to do this?\");","lastModifiedDate":"2023-02-14"},{"lineNumber":164,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":165,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":166,"author":{"gitId":"Yaladah"},"content":"                if (mins \u003e 59 || mins \u003c 0) {","lastModifiedDate":"2023-02-14"},{"lineNumber":167,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Minutes cannot be more than 59 or less than 0 dear child\");","lastModifiedDate":"2023-02-14"},{"lineNumber":168,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":169,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":170,"author":{"gitId":"Yaladah"},"content":"                DurationTask durationTask \u003d new DurationTask(durationName, hours, mins);","lastModifiedDate":"2023-02-14"},{"lineNumber":171,"author":{"gitId":"Yaladah"},"content":"                return addTask(durationTask, durationName);","lastModifiedDate":"2023-02-14"},{"lineNumber":172,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":173,"author":{"gitId":"Yaladah"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"Yaladah"},"content":"                if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Delete? Delete what?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":177,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":178,"author":{"gitId":"Yaladah"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":179,"author":{"gitId":"Yaladah"},"content":"                    int deleteIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":180,"author":{"gitId":"Yaladah"},"content":"                    Task deleteTask \u003d taskList.get(deleteIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"Yaladah"},"content":"                    String deleteOutput \u003d \"Done! \" + deleteTask + \" has been deleted for good.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":182,"author":{"gitId":"Yaladah"},"content":"                    taskList.remove(deleteIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"Yaladah"},"content":"                    storage.save(taskList);","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"Yaladah"},"content":"                    return deleteOutput;","lastModifiedDate":"2023-02-07"},{"lineNumber":185,"author":{"gitId":"Yaladah"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Oops, that task number does not exist\");","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"Yaladah"},"content":"            case \"find\":","lastModifiedDate":"2023-01-31"},{"lineNumber":190,"author":{"gitId":"Yaladah"},"content":"                String keyword \u003d input.substring(5);","lastModifiedDate":"2023-01-31"},{"lineNumber":191,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":192,"author":{"gitId":"Yaladah"},"content":"                if (keyword.length() \u003c\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":193,"author":{"gitId":"Yaladah"},"content":"                    throw new DukeException(\"Err... There\u0027s nothing to find here\");","lastModifiedDate":"2023-01-31"},{"lineNumber":194,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":195,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"Yaladah"},"content":"                ArrayList\u003cTask\u003e filteredList \u003d taskList.filterByKeyword(keyword);","lastModifiedDate":"2023-01-31"},{"lineNumber":197,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"Yaladah"},"content":"                String findOutput \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":199,"author":{"gitId":"Yaladah"},"content":"                for (int i \u003d 0; i \u003c filteredList.size(); i +\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":200,"author":{"gitId":"Yaladah"},"content":"                    int currItem \u003d i + 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":201,"author":{"gitId":"Yaladah"},"content":"                    findOutput +\u003d (currItem + \": \" + filteredList.get(i));","lastModifiedDate":"2023-02-07"},{"lineNumber":202,"author":{"gitId":"Yaladah"},"content":"                    findOutput +\u003d \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":203,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":204,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":205,"author":{"gitId":"Yaladah"},"content":"                return findOutput;","lastModifiedDate":"2023-02-07"},{"lineNumber":206,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":207,"author":{"gitId":"Yaladah"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"Yaladah"},"content":"                throw new DukeException(\"Oops I do not recognise this command...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"Yaladah"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-01-31"},{"lineNumber":211,"author":{"gitId":"Yaladah"},"content":"            throw new DukeException(\"Something is up with your files it seems\");","lastModifiedDate":"2023-01-31"},{"lineNumber":212,"author":{"gitId":"Yaladah"},"content":"        } catch (DateTimeParseException dl) {","lastModifiedDate":"2023-01-31"},{"lineNumber":213,"author":{"gitId":"Yaladah"},"content":"            throw new DukeException(\"Beep boop \"","lastModifiedDate":"2023-01-31"},{"lineNumber":214,"author":{"gitId":"Yaladah"},"content":"                    + \"this robot can only understand dates in the form yyyy-mm-dd\");","lastModifiedDate":"2023-01-31"},{"lineNumber":215,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":216,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":217,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":218,"author":{"gitId":"Yaladah"},"content":"    private String addTask(Task task, String name) throws DukeException, IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"Yaladah"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":220,"author":{"gitId":"Yaladah"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"Yaladah"},"content":"        return \"Item added: \" + name;","lastModifiedDate":"2023-02-07"},{"lineNumber":222,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":223,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Yaladah":223}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import task.DeadlineTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import task.DurationTask;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import task.EventTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import task.TodoTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":" * Storage class handles the interaction between local hard drive and Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"    File file;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    private final static String SAVED_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"     * Constructor for Storage instance.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"     * @param filePath Path to locate file relative to project root.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"     * Method to write current TaskList onto file on hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"     * @param taskList TaskList with tasks in Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"     * @throws IOException Thrown when file system encounters an error.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"     * @throws DukeException Thrown when unexpected behaviour occurs with Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"    public void save(TaskList taskList) throws IOException, DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"        if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"            if (!file.getParentFile().mkdirs()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"                throw new DukeException(\"Directories can\u0027t be made? Or did something go wrong...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"                throw new DukeException(\"This file both doesn\u0027t exist and cannot be made D:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"        FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"        for (Task task : taskList.asList()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"            fileWriter.write(task.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"        fileWriter.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"     * Retrieves data from a previous session of Duke, if it exists.","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"     * @return An array of Tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"     * @throws DukeException Thrown when unexpected behaviour occurs with Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"    public Task[] load() throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"        File f \u003d new File(SAVED_PATH);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"                Ui.showNewUserMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"                return new Task[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"Welcome back!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"                System.out.println(\"Here\u0027s the tasks you have:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"                Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"                ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Yaladah"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"                    Task task;","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"                    String currTask \u003d scanner.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"                    String taskType \u003d currTask.split(\" \")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"                    String taskCompletion \u003d currTask.substring(4,7);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"                    Boolean complete \u003d Objects.equals(taskCompletion, \"[X]\");","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"Yaladah"},"content":"                    String taskDetails;","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"                    if (complete) {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"Yaladah"},"content":"                        taskDetails \u003d currTask.split(\" \\\\[X] \")[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"Yaladah"},"content":"                    } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"                        taskDetails \u003d currTask.split(\" \\\\[ ] \")[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu\");","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"                    switch (taskType) {","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"                    case \"[T]\":","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new TodoTask(taskDetails, complete);","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"                        break;","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"                    case \"[D]\":","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"                        String deadlineName \u003d taskDetails.split(\" \\\\(by: \")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"Yaladah"},"content":"                        String date \u003d taskDetails.split(\" \\\\(by: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"Yaladah"},"content":"                        LocalDate deadLine \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new DeadlineTask(deadlineName, deadLine, complete);","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"Yaladah"},"content":"                        break;","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"Yaladah"},"content":"                    case \"[E]\":","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"                        String eventName \u003d taskDetails.split(\" \\\\(from:\")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"Yaladah"},"content":"                        String eventPeriod \u003d taskDetails.split(\"\\\\(from: \")[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"                        String startStr \u003d eventPeriod.split(\" to: \")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"                        String endStr \u003d eventPeriod.split(\" to: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"                        LocalDate start \u003d LocalDate.parse(startStr, formatter);","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"Yaladah"},"content":"                        LocalDate end \u003d LocalDate.parse(endStr, formatter);","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new EventTask(eventName, start, end, complete);","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"Yaladah"},"content":"                        break;","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"Yaladah"},"content":"                    case \"[Du]\":","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"Yaladah"},"content":"                        String durationName \u003d taskDetails.split(\" \\\\( \")[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"Yaladah"},"content":"                        String durationTime \u003d taskDetails.split(\" \\\\( \")[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"Yaladah"},"content":"                        int hours \u003d Integer.parseInt(durationTime.split(\" hours\")[0]);","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"Yaladah"},"content":"                        String minsStr \u003d durationTime.split(\" hours \")[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"Yaladah"},"content":"                        int mins \u003d Integer.parseInt(minsStr.split(\" mins \")[0]);","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new DurationTask(durationName, hours, mins, complete);","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"Yaladah"},"content":"                        break;","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"Yaladah"},"content":"                    default:","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"Yaladah"},"content":"                        task \u003d new Task(taskDetails);","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"Yaladah"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"Yaladah"},"content":"                    taskList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"Yaladah"},"content":"                for (int i \u003d 0; i \u003c taskList.size(); i +\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"Yaladah"},"content":"                    int currItem \u003d i + 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"Yaladah"},"content":"                    System.out.println(currItem + \": \" + taskList.get(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"Yaladah"},"content":"                Ui.showWelcomePrompt();","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"Yaladah"},"content":"                return taskList.toArray(new Task[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"Yaladah"},"content":"        } catch (IOException io) {","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"Yaladah"},"content":"            throw new DukeException(\"Something went wrong while trying to load...\");","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Yaladah":150}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":" * Ui class to handle user interaction for Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"     * Constructor for Ui instance of Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"     * Returns user input as a String.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"     * @return String input by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"    public String requestUserInput() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"     * Prints a loading error message to user.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"    public static void showLoadingErrorMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"        System.out.println(\"Couldn\u0027t load the file for some reason\");","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"     * Prints a message to welcome a new user, if no save file is found.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"    public static void showNewUserMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"        System.out.println(\"Oh boy a new user! What\u0027s up?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"     * Prints a prompt for the user to input command.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"    public static void showWelcomePrompt() {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"        System.out.println(\"How might I help you today?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"     * Prints the Duke logo and introduces Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"        String projName \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"        return \"Yo! The name is\\n\" + projName;","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Yaladah":59}},{"path":"src/main/java/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":" * Class for a Task with a deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"     * Constructor for a deadline Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"     * @param name Title/name of task.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"     * @param date Date which task should be done by.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    public DeadlineTask(String name, LocalDate date) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"        super(name);","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"     * Constructor for a deadline Task when loaded in from hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"     * @param name Title/name of task.","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"     * @param date Date which task should be done by.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"     * @param isDone True if task has been marked as done, false otherwise.","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"    public DeadlineTask(String name, LocalDate date, Boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"        return \"[D] \" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Yaladah":40}},{"path":"src/main/java/task/DurationTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":" * Class for a duration type task.","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"public class DurationTask extends Task {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"    private final int hours;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"    private final int mins;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"     * Constructor for duration type task.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"     * @param name Name of the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"     * @param hours Number of hours allocated to task.","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"     * @param mins Number of minutes allocated to task.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"    public DurationTask(String name, int hours, int mins) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"        super(name);","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"        this.hours \u003d hours;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"        this.mins \u003d mins;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"     * Constructor for duration task when loaded in from hard drive.","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"     * @param name Name of the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"     * @param hours Number of hours allocated to task.","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"     * @param mins Number of minutes allocated to task.","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"     * @param isDone True if task has been marked as done, false otherwise.","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    public DurationTask(String name, int hours, int mins, boolean isDone) {","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"        super(name, isDone);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"        this.hours \u003d hours;","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"        this.mins \u003d mins;","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"    public String toString() {","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"        return \"[Du] \"","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"                + super.toString() + \" ( \"","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"                + hours + \" hours \" + mins + \" mins )\";","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Yaladah":43}},{"path":"src/main/java/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":" * Class for an event type Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    private final LocalDate startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"    private final LocalDate endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"     * Contructor for an event type Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"     * @param name Title/name of task.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"     * @param startTime Date where task should start.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"     * @param endTime Sate where task should end.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    public EventTask(String name, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"        super(name);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"     * Contructor for an event type Task when loaded in from hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"     * @param name Title/name of task.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"     * @param startTime Date where task should start.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"     * @param endTime Sate where task should end.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"     * @param isDone True if task has been marked as done, false otherwise.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"    public EventTask(String name, LocalDate startTime, LocalDate endTime,Boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"        return \"[E] \"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"                + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"                + this.startTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"                + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Yaladah":47}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":" * Class to represent a task created by Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"    private String name;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"    private Boolean isCompleted;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"     * Constructor for a Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"     * @param name Title/name of Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"     * Constructor for a Task when loaded in from hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"     * @param name Title/name of Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"     * @param isDone True if Task has been marked as done, false otherwise.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    public Task(String name, Boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"        this.isCompleted \u003d isDone;","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"     * To mark a Task as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"    public void check() {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"     * To unmark a done Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"    public void unCheck() {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"    public String getName() {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"        return name;","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Yaladah":57}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":" * Class representing a list of Tasks for Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"public class TaskList {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"     * Constructor for TaskList when no Tasks are present.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"     * Constructor for TaskList when Tasks are present.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"     * @param inputTasks Array of Tasks to be added.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    public TaskList(Task[] inputTasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"        this();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"        tasks.addAll(Arrays.asList(inputTasks));","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"     * Adds a Task to existing TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"     * @param task Task to be added to current list.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"     * Removes task from list at given index.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"     * @param index Index where task is to be removed.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"     * Returns a task at a given index.","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"     * @param index Index where task is to be returned.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"     * @return The task requested by Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"     * Returns the number of items in the existing TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"     * @return Number of tasks in the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"    public int size() {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"     * Returns an array of tasks stored in current TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"     * @return An array of Tasks from current TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"    public Task[] asList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"        return tasks.toArray(new Task[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"    public ArrayList\u003cTask\u003e filterByKeyword(String keyword) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"            String taskName \u003d currentTask.getName();","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"            if (taskName.contains(keyword)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"                filteredTasks.add(currentTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"        return filteredTasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Yaladah":88}},{"path":"src/main/java/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":" * Class for a Todo Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"     * Constructor for todo Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"     * @param name Title/name of Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"        super(name);","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"     * Constructor for todo Task when loaded in from hard drive.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"     * @param name Title/name of task.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"     * @param isDone True if task has been marked as done, false otherwise.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"    public TodoTask(String name, Boolean isDone) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"  }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Yaladah":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"      \u003cScrollPane prefHeight\u003d\"99.0\" prefWidth\u003d\"286.0\" vmax\u003d\"1000.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"              \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"406.0\" prefWidth\u003d\"272.0\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"         \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Yaladah":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"         \u003c/opaqueInsets\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"            \u003cFont name\u003d\"Dubai Medium\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Yaladah":27}},{"path":"src/test/java/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"    public void firstTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"        DeadlineTask tempTask \u003d new DeadlineTask(\"Do work\", LocalDate.parse(\"2024-01-01\"), true);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"        assertEquals(\"[D] [X] Do work (by: 01 Jan 2024)\", tempTask.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"    public void secondTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"        DeadlineTask tempTask \u003d new DeadlineTask(\"Go home\", LocalDate.parse(\"2024-03-03\"), false);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"        assertEquals(\"[D] [ ] Go home (by: 03 Mar 2024)\", tempTask.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Yaladah":21}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"    public void getTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"        Task task1 \u003d new TodoTask(\"Do work\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"        Task[] taskArray \u003d {task1};","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"        TaskList inputTaskList \u003d new TaskList(taskArray);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"        assertEquals(task1, inputTaskList.get(0));","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    public void sizeTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"        Task task1 \u003d new TodoTask(\"Do work\");","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"        Task task2 \u003d new DeadlineTask(\"Return book\", LocalDate.parse(\"2024-01-01\"), true);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"        Task[] taskArray \u003d {task1, task2};","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"        TaskList inputTaskList \u003d new TaskList(taskArray);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"        assertEquals(2, inputTaskList.size());","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Yaladah":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"todo read book","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"todo drink water","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"deadline finish project /by 2023-06-01","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"event Jerome Birthday /from 2024-01-17 /to 2024-01-17","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"mark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"mark 4","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"unmark 3","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"wronginput","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"mark","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"mark 6","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"unmark","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"unmark 6","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"todo","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"deadline swim /by","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"deadline /by Monday","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"event bake /from 1pm /to","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"event /from 2pm /to 3pm","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"delete","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"delete 2","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"delete 6","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"deadline write book /by monday","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"deadline write book /by 1999-01-01","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"event travel to Japan /from 1999-01-01 /to 2030-01-01","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"event travel to Japan /from 2031-01-01 /to 2030-01-01","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Yaladah":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Yaladah":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/task/*.java","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Yaladah":1,"-":37}}]
