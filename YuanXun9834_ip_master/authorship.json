[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YuanXun9834":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"checkstyle {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YuanXun9834":5,"-":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":" * Deadline class also extends task. A deadline is a category of task in","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":" * duke that has a deadline(date).","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"    private LocalDate date;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"    public Deadline(String name, boolean done, String date) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"        super(name, done);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"        return this.date;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    public String summary() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"        String s \u003d \"D___\";","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"        String d \u003d this.getDone() ? \"✓\" : \" X\";","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"        return s + d + \"___\" + this.getTask() + \"___\" + this.getDate();","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        String dateFormatted \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        String s \u003d \"[ D ]\" + super.toString() + String.format(\"(%s)\", dateFormatted);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        return s;","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"YuanXun9834":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":" * Duke class, main driver of the duke application. The duke app is an","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":" * application that takes users inputs and stores tasks in a list as a","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":" * reminder for the user.","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"    public Duke() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"            this.taskList \u003d FileReadWrite.readFile();","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"     * Runs the duke application.","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IOException  if failed I/O operation","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        ui.start();","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"        while (parser.parseInput(ui.input())) {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        ui.end();","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"YuanXun9834":39,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":" * Class that encapsulates all exceptions that are unique to duke.","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"public class DukeException extends IllegalStateException {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"        super(message);","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"YuanXun9834":10}},{"path":"src/main/java/duke/EmptyArgException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"public class EmptyArgException extends DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"    public EmptyArgException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"YuanXun9834":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":" * Event class extends Task class as well and is a category of tasks that","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":" * includes a description start date and end date.","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    private LocalDate date1;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"    private LocalDate date2;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    public Event(String name, boolean done, String date1, String date2) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"        super(name, done);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"        this.date1 \u003d LocalDate.parse(date1);","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"        this.date2 \u003d LocalDate.parse(date2);","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    public LocalDate getDate1() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"        return this.date1;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    public LocalDate getDate2() {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        return this.date2;","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    public String summary() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        String s \u003d \"E___\";","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        String d \u003d this.getDone() ? \"✓\" : \"X\";","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"        return s + d + \"___\" + this.getTask() + \"___\" + this.getDate1() + \"___\" + this.getDate2();","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        String d1 \u003d date1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        String d2 \u003d date2.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        String s \u003d \"[ E ]\" + super.toString() + String.format(\"(%s %s)\", d1, d2);","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"        return s;","lastModifiedDate":"2023-01-13"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"YuanXun9834":44}},{"path":"src/main/java/duke/FileReadWrite.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.io.File;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":" * Class that handles writing and reading from the duke.txt file","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"public abstract class FileReadWrite {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    private static final String FILE_PATH \u003d Paths.get(Paths.get(System.getProperty(\"user.dir\")).toString(),","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"            \"data/duke.txt\").toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"     * Returns lateral location of the specified position.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"     * @return Task List that is read and interpreted from the duke.txt file","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IOException  If the user input is interrupted.","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    public static TaskList readFile() throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"            file.mkdir();","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"            String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"            String[] arr \u003d nextLine.split(\"___\", 5);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"            String taskType \u003d arr[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"            String done \u003d arr[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"            String description \u003d arr[2];","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"            Task nextTask;","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"                boolean d \u003d done.equals(\"✓\") ? true : false;","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"                nextTask \u003d new Todo(description, d);","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"                boolean d \u003d done.equals(\"✓\") ? true : false;","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"                String date \u003d arr[3];","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"                nextTask \u003d new Deadline(description, d, date);","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"                String date1 \u003d arr[3];","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"                String date2 \u003d arr[4];","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"                boolean d \u003d done.equals(\"✓\") ? true : false;","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"                nextTask \u003d new Event(description, d, date1, date2);","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"            taskList.add(nextTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"        return taskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"     * Function that updates duke.txt file when a task is added","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"     * to keep an updated version of the task list for future reference.","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IOException if the write operation is interrupted.","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"    public static void writeTask(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"            fileWriter.write(t.summary() + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"        fileWriter.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"     * Function that updates duke.txt file with task marking operation","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"     * to keep an updated version of the task list for future reference.","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IOException if the write operation is interrupted.","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"    public static void writeMark(int i, Task t) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"YuanXun9834"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"            lines.add(scanner.nextLine());","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"        lines.remove(i - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"YuanXun9834"},"content":"        t.mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"        lines.add(i - 1, t.summary());","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"YuanXun9834"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"        for (String s : lines) {","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"YuanXun9834"},"content":"            fileWriter.write(s + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"        fileWriter.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"YuanXun9834"},"content":"     * Function that updates duke.txt file with any task manipulation operation","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"     * to keep an updated version of the task list for future reference.","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IOException if the write operation is interrupted.","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"YuanXun9834"},"content":"    public static void writeUnmark(int i, Task t) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"YuanXun9834"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"YuanXun9834"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"YuanXun9834"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"YuanXun9834"},"content":"            lines.add(scanner.nextLine());","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"YuanXun9834"},"content":"        lines.remove(i - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"        t.unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"YuanXun9834"},"content":"        lines.add(i - 1, t.summary());","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"YuanXun9834"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"YuanXun9834"},"content":"        for (String s : lines) {","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"YuanXun9834"},"content":"            fileWriter.write(s + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"YuanXun9834"},"content":"        fileWriter.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"YuanXun9834"},"content":"     * Function that updates duke.txt file after a delete operation","lastModifiedDate":"2023-01-21"},{"lineNumber":120,"author":{"gitId":"YuanXun9834"},"content":"     * to keep an updated version of the task list for future reference.","lastModifiedDate":"2023-01-21"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IOException if the write operation is interrupted.","lastModifiedDate":"2023-01-21"},{"lineNumber":123,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"YuanXun9834"},"content":"    public static void writeDelete(int i) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"YuanXun9834"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-21"},{"lineNumber":126,"author":{"gitId":"YuanXun9834"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"YuanXun9834"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"YuanXun9834"},"content":"            lines.add(scanner.nextLine());","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"YuanXun9834"},"content":"        lines.remove(i - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"YuanXun9834"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"YuanXun9834"},"content":"        for (String s : lines) {","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"YuanXun9834"},"content":"            fileWriter.write(s + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"YuanXun9834"},"content":"        fileWriter.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"YuanXun9834":139}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":" * Parser class to convert user\u0027s input into commands","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":" * for the duke application.","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"public class Parser {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    private int size;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"        this.size \u003d taskList.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"     * Function that parses the input string from ui class to determine","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"     * the duke operation to perform next.","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"     * @param input input string from user read from the Ui class","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"     * @return boolean return false if the user indicates the end of current session","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    public boolean parseInput(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"            return false;","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"            if (input.contains(\"unmark\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"                int i \u003d Integer.parseInt(input.substring(7, 8));","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"                Task t \u003d taskList.unmarkTask(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"                    FileReadWrite.writeUnmark(i, t);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"                Ui.printUnmark(taskList, i);","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"            } else if (input.contains(\"mark\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"                int i \u003d Integer.parseInt(input.substring(5, 6));","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"                Task t \u003d taskList.markTask(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"                    FileReadWrite.writeMark(i, t);","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"                Ui.printMark(taskList, i);","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"            } else if (input.contains(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"                int i \u003d Integer.parseInt(input.substring(7, 8));","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"                Ui.printDelete(taskList, i, this.size);","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"                taskList.delete(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"                    FileReadWrite.writeDelete(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"                this.size--;","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"            } else if (input.contains(\"find\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"                String keyword \u003d input.substring(5);","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"                Ui.printFindList(taskList, keyword);","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"                switch (input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"                case \"list\":","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"                    Ui.printListCommand(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"                default:","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"                        Task newTask \u003d createTask(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"                        taskList.add(newTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"                        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"                            FileReadWrite.writeTask(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"                            e.printStackTrace();","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"                        this.size++;","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"                        Ui.printAddTask(newTask, size);","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"                    } catch (EmptyArgException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"                        Ui.emptyError();","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"                    } catch (UnknownInputException u) {","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"YuanXun9834"},"content":"                        Ui.invalidInputError();","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"        return true;","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"     * Function that creates the Task objects from user inputs pertaining","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"     * to adding tasks onto the list.","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"     * @param input from the user indicating which operation he wants duke to perform","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"YuanXun9834"},"content":"     * @return Task return the task object created from the user input","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"YuanXun9834"},"content":"     * @throws DukeException if the input is invalid.","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"    public static Task createTask(String input) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"YuanXun9834"},"content":"        Task newTask;","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"        if (input.contains(\"todo\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"YuanXun9834"},"content":"            if (input.equals(\"todo\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"YuanXun9834"},"content":"                throw new EmptyArgException(\"Did not provide argument\");","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"YuanXun9834"},"content":"            newTask \u003d new Todo(input.substring(5), false);","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"YuanXun9834"},"content":"            return newTask;","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"YuanXun9834"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"YuanXun9834"},"content":"            if (input.equals(\"deadline\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"YuanXun9834"},"content":"                throw new EmptyArgException(\"Did not provide argument\");","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"YuanXun9834"},"content":"            String[] arr \u003d input.substring(9).split(\"/\");","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"YuanXun9834"},"content":"            newTask \u003d new Deadline(arr[0], false, arr[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"YuanXun9834"},"content":"            return newTask;","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"YuanXun9834"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"YuanXun9834"},"content":"            if (input.equals(\"event\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"YuanXun9834"},"content":"                throw new EmptyArgException(\"Did not provide argument\");","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"YuanXun9834"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"YuanXun9834"},"content":"            String[] arr \u003d input.substring(6).split(\"/\");","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"YuanXun9834"},"content":"            newTask \u003d new Event(arr[0], false, arr[1], arr[2]);","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"YuanXun9834"},"content":"            return newTask;","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"YuanXun9834"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"            throw new UnknownInputException(\"Unknown Input!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"YuanXun9834":124}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":" * An abstract class that groups all categories of tasks that duke","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":" * is able to keep track of. All tasks have a description and also","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":" * a boolean value that indicates if the task is done already.","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"    private boolean done;","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"    private String task;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    public Task(String name, boolean done) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"        this.task \u003d name;","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    public void mark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"        return this.done;","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        return this.task;","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"     * Method to help keep track of tasks in duke.txt for future","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"     * references.","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"     * @return String that represents the task to do.","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    public abstract String summary();","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"        String checkmark \u003d this.done ? \"✓\" : \" \";","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"        return String.format(\"[ %s ] %s\", checkmark, this.task);","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"YuanXun9834":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":" * TaskList class is an extension of the java Array List class as it provides functionalities","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":" * that are unique for duke.","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"        super();","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"     * Function that prints all the tasks currently in the TaskList.","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    public void printList() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"            String output \u003d num + \". \" + this.get(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"            Ui.indent(output);","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    public void findList(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        int size \u003d this.size();","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"            Task t \u003d this.get(i);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"            if (t.getTask().contains(input)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"                String output \u003d index + \". \" + t;","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"                Ui.indent(output);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"                index++;","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"     * Marks a task in the Task List at index as done.","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"     * @param index Index of task user wish to mark.","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"     * @return Task that has been marked done.","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"    public Task markTask(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"        Task t \u003d this.get(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        t.mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"        return t;","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"     * Un-marks a task in the Task List at index as undone.","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"     * @param index Index of task user wish to un-mark.","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"     * @return Task that has been marked undone.","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"        Task t \u003d this.get(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"        t.unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"        return t;","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"     * Deletes a task in the Task List at index.","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"     * @param index Index of task user wish to delete from the TaskList.","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"    public void delete(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"        this.remove(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"YuanXun9834":80}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":" * Todo extends the Task class and represents a simple task description","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":" * without any information associated with it","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"    public Todo(String name, boolean done) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"        super(name, done);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"        String s \u003d \"[ T ]\" + super.toString();","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"        return s;","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    public String summary() {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"        String s \u003d \"T___\";","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"        String d \u003d this.getDone() ? \"✓\" : \"X\";","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"        return s + d + \"___\" + this.getTask();","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"YuanXun9834":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":" * Ui class handles all logic involved with the duke app communicating","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":" * with the user.","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"public class Ui {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"    private BufferedReader reader;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    public Ui() {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"        this.reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"     * Method that reads the user\u0027s text input.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"     * @return User\u0027s input as a string.","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    public String input() throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"        return this.reader.readLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"     * Prints welcome statement upon starting the duke app","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    public void start() {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Hi, I\u0027m Duke \");","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"What can I do for you :) ?\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"     * Prints ending message when user terminates the duke app","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"    public void end() {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Bye. Hope to hear from you again! :)\");","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"     * Prints error message for when user provides empty dates.","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"    public static void emptyError() {","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Sorry! You provided an empty description. Pls provide a correct input :)\");","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"     * Error message for when the user input an invalid statement","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"    public static void invalidInputError() {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Sorry! I did not quite understand what you meant :( Pls try again!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"     * Message for un-mark operation","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"    public static void printUnmark(TaskList taskList, int i) {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Alright! I\u0027ve unmarked this task :(\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"  \" + taskList.get(i - 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"     * Message for mark operation","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"    public static void printMark(TaskList taskList, int i) {","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Alright! I\u0027ve marked this task as done :) !\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"  \" + taskList.get(i - 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"     * Message for delete operation","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"    public static void printDelete(TaskList taskList, int i, int size) {","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"OK! I\u0027ve deleted this task :)\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"  \" + taskList.get(i - 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"        indent(String.format(\"Now you have %d tasks in the list\", size - 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"     * Message for list operation","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"YuanXun9834"},"content":"    public static void printListCommand(TaskList taskList) {","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Here are the remaining tasks in your list:\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"YuanXun9834"},"content":"        taskList.printList();","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"YuanXun9834"},"content":"     * Message for add task operation","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"YuanXun9834"},"content":"    public static void printAddTask(Task task, int size) {","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Roger! I\u0027ve added this task to the list:\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"YuanXun9834"},"content":"        indent(task + \"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"YuanXun9834"},"content":"        indent(String.format(\"Now you have %d tasks left in the list\", size));","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"YuanXun9834"},"content":"     * function to indent duke system messages","lastModifiedDate":"2023-01-21"},{"lineNumber":126,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":127,"author":{"gitId":"YuanXun9834"},"content":"    public static void indent(String txt) {","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"        System.out.println(\"     \" + txt);","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"YuanXun9834"},"content":"    public static void printFindList(TaskList taskList, String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":132,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"YuanXun9834"},"content":"        indent(\"Here are the matching tasks in your list\");","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"YuanXun9834"},"content":"        taskList.findList(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"YuanXun9834"},"content":"        line();","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"YuanXun9834"},"content":"    public static void line() {","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"YuanXun9834"},"content":"        System.out.println(\"____________________________________________________________________________________\");","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"YuanXun9834":141}},{"path":"src/main/java/duke/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"public class UnknownInputException extends DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"    public UnknownInputException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"YuanXun9834":7}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"    public void summaryTest(){","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"        Deadline test \u003d new Deadline(\"Test\", true, \"2010-10-19\");","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(\"D___✓___Test___2010-10-19\", test.summary());","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    public void dateTest(){","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"        Deadline test \u003d new Deadline(\"Test\", true, \"2010-10-19\");","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(\"[ D ][ ✓ ] Test(Oct 19 2010)\", test.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"YuanXun9834":20}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"    public void summaryTest(){","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"        Todo test \u003d new Todo(\"Test\", true);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(\"T___✓___Test\", test.summary());","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"YuanXun9834":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"todo read book","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"deadline return book/on June 10th","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"event project meeting /from Aug 6th 2pm/to 6pm","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"todo play basketball","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"mark 3","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"unmark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"YuanXun9834":9}}]
