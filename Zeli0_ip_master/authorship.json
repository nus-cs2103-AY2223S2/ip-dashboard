[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"import command.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"import command.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import command.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"        parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"    public void run() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"        ui.startMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"        while(ui.isOpenForInput()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"            String nextInput \u003d ui.getInput();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"            parser.processInput(nextInput);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"        storage.store(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"        Duke duke \u003d new Duke(\"/dukeData/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"        duke.run();","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"Zeli0":40}},{"path":"src/main/java/command/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"public class InvalidInputException extends Exception{","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Zeli0":7}},{"path":"src/main/java/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import task.*;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    // Interprets user input","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"    Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    TaskList list;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"    public Parser(Ui ui, TaskList list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"    public void processInput(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"        String[] inputAnalyzed \u003d input.split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"        if (input.contains(\"#\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"            ui.showInvalidInputError(\"Illegal character \u0027#\u0027.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"            return;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"            switch (inputAnalyzed[0].toLowerCase(Locale.ROOT)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"                    byeOperation(inputAnalyzed);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"                case \"list\":","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"                    listOperation(inputAnalyzed);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Zeli0"},"content":"                    markOperation(inputAnalyzed);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Zeli0"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Zeli0"},"content":"                    unmarkOperation(inputAnalyzed);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"                    ddlOperation(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Zeli0"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Zeli0"},"content":"                    todoOperation(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Zeli0"},"content":"                case \"event\":","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Zeli0"},"content":"                    eventOperation(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Zeli0"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Zeli0"},"content":"                    deleteOperation(inputAnalyzed);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Zeli0"},"content":"                default:","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Zeli0"},"content":"                    ui.unknownCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Zeli0"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Zeli0"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Zeli0"},"content":"            ui.showInvalidInputError(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Zeli0"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Zeli0"},"content":"            ui.showArrayOutOfBoundsError();","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Zeli0"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Zeli0"},"content":"            ui.showNumberFormatError();","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Zeli0"},"content":"    private void byeOperation(String[] inputAnalyzed) throws InvalidInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Zeli0"},"content":"        //Check if there is anything other than bye","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Zeli0"},"content":"        if (inputAnalyzed.length \u003e 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Incorrect format. Correct form should be \\\"bye\\\".\");","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Zeli0"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Zeli0"},"content":"            ui.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Zeli0"},"content":"    private void listOperation(String[] inputAnalyzed) throws InvalidInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"Zeli0"},"content":"        //Check if there is anything other than list","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"Zeli0"},"content":"        if (inputAnalyzed.length \u003e 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Incorrect format. Correct form should be \\\"list\\\".\");","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Zeli0"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Zeli0"},"content":"            ui.showListState(list);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"Zeli0"},"content":"    private void markOperation(String[] inputAnalyzed) throws InvalidInputException,","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"Zeli0"},"content":"            IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Zeli0"},"content":"        // Parse","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"Zeli0"},"content":"        if (inputAnalyzed.length !\u003d 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Incorrect format. Correct form should be \\\"mark i\\\", \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"Zeli0"},"content":"                    \"with i being an integer.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Zeli0"},"content":"        int index \u003d parseInt(inputAnalyzed[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Zeli0"},"content":"        // List","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"Zeli0"},"content":"        list.mark(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"Zeli0"},"content":"        // command.Ui","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"Zeli0"},"content":"        ui.showMarkSuccess(list.get(index - 1));","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"Zeli0"},"content":"    private void unmarkOperation(String[] inputAnalyzed) throws InvalidInputException, IndexOutOfBoundsException,","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Zeli0"},"content":"            NumberFormatException {","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Zeli0"},"content":"        if (inputAnalyzed.length !\u003d 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Incorrect format. Correct form should be \\\"unmark i\\\", \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"Zeli0"},"content":"                    \"with i being an integer.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"Zeli0"},"content":"        int index \u003d parseInt(inputAnalyzed[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"Zeli0"},"content":"        list.unmark(index - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"Zeli0"},"content":"        ui.showUnmarkSuccess(list.get(index - 1));","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"Zeli0"},"content":"    private void deleteOperation(String[] inputAnalyzed) throws InvalidInputException, IndexOutOfBoundsException,","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"Zeli0"},"content":"            NumberFormatException {","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"Zeli0"},"content":"        if (inputAnalyzed.length !\u003d 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Incorrect format. Correct form should be \\\"delete i\\\", \" +","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"Zeli0"},"content":"                    \"with i being an integer.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"Zeli0"},"content":"        int index \u003d parseInt(inputAnalyzed[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"Zeli0"},"content":"        Task temp \u003d list.get(index - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"Zeli0"},"content":"        list.remove(index - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"Zeli0"},"content":"        ui.showDeleteSuccess(temp, list);","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"Zeli0"},"content":"    private void ddlOperation(String input) throws IndexOutOfBoundsException, InvalidInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"Zeli0"},"content":"        String[] deadlineAnalyze \u003d input.split(\"/by\");","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"Zeli0"},"content":"        String deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"Zeli0"},"content":"            deadline \u003d deadlineAnalyze[1].trim();","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"Zeli0"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Missing deadline date.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"Zeli0"},"content":"        String deets \u003d deadlineAnalyze[0].split(\"deadline\")[1].trim();","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"Zeli0"},"content":"        if (deets.equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Missing deadline description.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"Zeli0"},"content":"        Deadline newDead \u003d new Deadline(deets, deadline);","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"Zeli0"},"content":"        list.add(newDead);","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"Zeli0"},"content":"        ui.showAddTaskSuccess(newDead, list);","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"Zeli0"},"content":"    private void todoOperation(String input) throws InvalidInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"Zeli0"},"content":"        //Possible Errors:","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"Zeli0"},"content":"        //No descriptor","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"Zeli0"},"content":"        String[] todoAnalyze \u003d input.split(\"todo \");","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"Zeli0"},"content":"        //Analyze","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"Zeli0"},"content":"        Todo newTodo;","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"Zeli0"},"content":"            newTodo \u003d new Todo(todoAnalyze[1].trim());","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"Zeli0"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Missing to-do description.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"Zeli0"},"content":"        //List","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"Zeli0"},"content":"        list.add(newTodo);","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"Zeli0"},"content":"        //command.Ui","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"Zeli0"},"content":"        ui.showAddTaskSuccess(newTodo, list);","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"Zeli0"},"content":"    private void eventOperation(String input) throws IndexOutOfBoundsException, InvalidInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"Zeli0"},"content":"        //Analyze","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"Zeli0"},"content":"        String[] eventAnalyze;","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"Zeli0"},"content":"        String[] timeAnalyze;","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"Zeli0"},"content":"            eventAnalyze \u003d input.split(\"/from\");","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"Zeli0"},"content":"            timeAnalyze \u003d eventAnalyze[1].split(\"/to\");","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"Zeli0"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Missing /from or /to. Format is \\\"event [name] /from [time] /to [time]\\\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"Zeli0"},"content":"        String start \u003d timeAnalyze[0].trim();","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"Zeli0"},"content":"        String over \u003d timeAnalyze[1].trim();","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"Zeli0"},"content":"        String details \u003d eventAnalyze[0].split(\"event\")[1].trim();","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"Zeli0"},"content":"        if (start.equals(\"\") || over.equals(\"\") || details.equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"Zeli0"},"content":"            throw new InvalidInputException(\"Missing details for at least one of the sections.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"Zeli0"},"content":"        //Add Item","lastModifiedDate":"2023-01-30"},{"lineNumber":168,"author":{"gitId":"Zeli0"},"content":"        Event newEvent \u003d new Event(details, start, over);","lastModifiedDate":"2023-01-30"},{"lineNumber":169,"author":{"gitId":"Zeli0"},"content":"        list.add(newEvent);","lastModifiedDate":"2023-01-30"},{"lineNumber":170,"author":{"gitId":"Zeli0"},"content":"        //command.Ui Section","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"Zeli0"},"content":"        ui.showAddTaskSuccess(newEvent, list);","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Zeli0":173}},{"path":"src/main/java/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    // For loading from and storing into the file","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"    Path loadPath;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"    Path storePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"        loadPath \u003d java.nio.file.Paths.get(home, filePath);;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"        storePath \u003d java.nio.file.Paths.get(System.getProperty(\"user.dir\"), \"dukeData.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"    public void store(TaskList list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"        StringBuilder outputConstruct \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"        for (Task curr : list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"            outputConstruct.append(curr.toStorageString()).append(System.lineSeparator());","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"        String finalOut \u003d outputConstruct.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"            if (!java.nio.file.Files.exists(storePath)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"                java.nio.file.Files.createFile(storePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"            java.nio.file.Files.write(storePath, finalOut.getBytes());","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Zeli0"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Zeli0"},"content":"    public List\u003cString\u003e load() throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"            return Files.readAllLines(loadPath);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Zeli0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Zeli0"},"content":"            return Files.readAllLines(storePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Zeli0":44}},{"path":"src/main/java/command/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"    // For all interactions with the user","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    private Scanner userInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"    private Boolean isOpenForInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    public Ui() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"        userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"        isOpenForInput \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //@@author IceFire","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/questions/36514289","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private void dashedLine()","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c 90; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            sb.append(\"-\");","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        System.out.println(sb.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void close() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        System.out.println(\"Pleasure doing business with you.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        isOpenForInput \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean isOpenForInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return isOpenForInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void unknownCommand() {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        System.out.println(\"Sorry sir, didn\u0027t quite get that.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void startMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String intro \u003d \"My name is Skyler White yo \\nHow can I help you?\";","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        System.out.println(intro);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userInput.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        System.out.println(\"Looks like you don\u0027t have any old lists for me to include. That\u0027s alright; we\u0027ll start\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \" from scratch!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void showArrayOutOfBoundsError() {","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        System.out.println(\"Woah there. Got an index problem. That entry does not exist.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void showInvalidInputError(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        System.out.println(\"Whoa. That command doesn\u0027t look right. Here\u0027s what seems to be wrong:\\n\" + message);","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void showNumberFormatError() {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        System.out.println(\"I only take integers for that command, kid.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void showMarkSuccess(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        System.out.println(\"Gotcha. Just marked this task as done:\\n\" + task);","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void showUnmarkSuccess(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        System.out.println(\"Gotcha. Just marked this task as not done:\\n\" + task);","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void showAddTaskSuccess(Task task, TaskList list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        System.out.println(\"Gotcha. Just added this task to the list:\\n\" + task + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        showListLength(list);","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void showDeleteSuccess(Task task, TaskList list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        System.out.println(\"Gotcha. Just marked this task as not done:\\n\" + task + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        showListLength(list);","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void showListState(TaskList list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++){","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            System.out.println(i + \". \" + list.get(i-1));","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        dashedLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void showListLength(TaskList list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        System.out.println(\"You have \" + list.size() + \" tasks left. Anything else?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"-":104,"Zeli0":15}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    String dead;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"    LocalDate deadDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    public Deadline(String details, String dead) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"        super(details);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"            this.deadDate \u003d LocalDate.parse(dead);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"            this.dead \u003d deadDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"            this.dead \u003d dead;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"        String task \u003d super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"        return \"[D] \" + task + \" (by: \" + dead + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"        return \"D#\" + super.toStorageString() + \"#\" + dead;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Zeli0":32}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    String startString \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"    String endString \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    LocalDate startDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"    LocalDate endDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"    public Event(String details, String start, String end) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"        super(details);","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"            this.startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"            this.startString \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"            this.endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"            this.endString \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"            if (startString \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"                this.startString \u003d start;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"                this.startDate \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"            if (endString \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"                this.endString \u003d end;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"                this.endDate \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Zeli0"},"content":"        String task \u003d super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Zeli0"},"content":"        return \"[E] \" + task + \" (from: \" + startString + \" to: \" + endString + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Zeli0"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Zeli0"},"content":"        return \"E#\" + super.toStorageString() + \"#\" + startString + \"#\" + endString;","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Zeli0":43}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"    private boolean checked;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"    private String details;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"    public Task(String details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"        checked \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    public void setChecked(Boolean checked) {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"        this.checked \u003d checked;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"    public String toString(){","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"        String checkSymbol \u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"        if (checked) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"            checkSymbol \u003d \"X\";","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"        return \"[\" + checkSymbol + \"] \" + details;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"        String checkSymbol \u003d \"0\";","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"        if (checked) {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"            checkSymbol \u003d \"1\";","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"        return checkSymbol + \"#\" + details;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Zeli0":32}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    // Stores everything in the lists and takes care of adding/removing from the list","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"    // author: notnoop","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    // Reused from https://stackoverflow.com/questions/1096621/","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"    public TaskList(List\u003cString\u003e fileData) throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"        //Somehow gotta read the fileData in","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"        for (String line : fileData) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"            // process the line","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"            String[] lineSplit \u003d line.split(\"#\");","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"            switch (lineSplit[0]) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"                case \"T\":","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"                    // To-do entry","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"                    Task todo \u003d new Todo(lineSplit[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"                    if (parseInt(lineSplit[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"                        todo.setChecked(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"                    this.add(todo);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"                case \"D\":","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"                    // task.Deadline","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"                    Task dead \u003d new Deadline(lineSplit[2], lineSplit[3]);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"                    if (parseInt(lineSplit[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"                        dead.setChecked(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Zeli0"},"content":"                    this.add(dead);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Zeli0"},"content":"                case \"E\":","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Zeli0"},"content":"                    // task.Event","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Zeli0"},"content":"                    Task event \u003d new Event(lineSplit[2], lineSplit[3], lineSplit[4]);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"                    if (parseInt(lineSplit[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"                        event.setChecked(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Zeli0"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Zeli0"},"content":"                    this.add(event);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Zeli0"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Zeli0"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Zeli0"},"content":"    public void mark(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Zeli0"},"content":"        super.get(index).setChecked(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Zeli0"},"content":"    public void unmark(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Zeli0"},"content":"        super.get(index).setChecked(false);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Zeli0":58}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"    public Todo(String details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"        super(details);","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"        String task \u003d super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"        return \"[T] \" + task;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"        return \"T#\" + super.toStorageString();","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Zeli0":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"fuck","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"todo Say hi","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"event Buy bughatti /from 10 /to 2","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"deadline This project /by some date","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"mark 1","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Zeli0":6}}]
