[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"    String dead;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"    public Deadline(String details, String dead) {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"        super(details);","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"        this.dead \u003d dead;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"        String task \u003d super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"        return \"[D] \" + task + \" (by: \" + dead + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Zeli0":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    //@@author IceFire","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/questions/36514289","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static String dashedLine()","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder(90);","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c 90; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            sb.append(\"-\");","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        /*String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";*/","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        System.out.println(dashedLine());","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        System.out.println(\"My name is Skyler White yo \\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"How can I help you?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        System.out.println(dashedLine());","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        boolean end \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        while(!end) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            System.out.print(\"Please Input: \");","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            end \u003d processInput(userInput.nextLine(), list, end);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static boolean processInput(String input, ArrayList\u003cTask\u003e list, boolean end) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String[] inputAnalyzed \u003d input.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        System.out.println(dashedLine());","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        switch (inputAnalyzed[0].toLowerCase(Locale.ROOT)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                end \u003d byeOperation(inputAnalyzed);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                listOperation(inputAnalyzed,list);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                markOperation(inputAnalyzed,list);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                unmarkOperation(inputAnalyzed,list);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                ddlOperation(inputAnalyzed,input,list);","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                todoOperation(inputAnalyzed,input,list);","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                eventOperation(inputAnalyzed,input,list);","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                deleteOperation(inputAnalyzed,list);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                System.out.println(\"Sorry sir, didn\u0027t quite get that.\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                        \"\\nYou have \" + list.size() + \" tasks. Anything else?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        System.out.println(dashedLine());","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return end;","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static boolean byeOperation(String[] inputAnalyzed){","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        //Check if there is anything other than bye","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (inputAnalyzed.length \u003e 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            System.out.println(\"Did you want to close the program? A simple bye would be enough.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            System.out.println(\"Pleasure doing business with you.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static void listOperation(String[] inputAnalyzed,  ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        //Check if there is anything other than list","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (inputAnalyzed.length \u003e 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            System.out.println(\"Did you want to see your list? Just type \\\"list\\\". Nothing else.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++){","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                System.out.println(i + \". \" + list.get(i-1));","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static void markOperation(String[] inputAnalyzed, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            if (inputAnalyzed.length \u003e 2) {","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                System.out.println(\"If you want to mark a task, just type \\\"mark\\\" and a number. Nothing else. Sheesh.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            int index \u003d parseInt(inputAnalyzed[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            list.get(index - 1).setChecked(true);","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            System.out.println(\"It\u0027s all good man, just marked this task as done:\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    + list.get(index - 1).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            //Inputted a number beyond the list\u0027s length","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            System.out.println(\"Woah there. That entry doesn\u0027t exist yo.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            System.out.println(\"Label the place you want to mark with a NUMBER, not a word.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        //array out of bounds, numberformatexception","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static void unmarkOperation(String[] inputAnalyzed, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (inputAnalyzed.length \u003e 2) {","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                System.out.println(\"If you want to unmark a task, just type \\\"unmark\\\" and a number. Nothing else.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            int index \u003d parseInt(inputAnalyzed[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            list.get(index - 1).setChecked(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            System.out.println(\"Alright, I marked this task as not done:\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + list.get(index - 1).toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            //Inputted a number beyond the list\u0027s length","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            System.out.println(\"Woah there. That entry doesn\u0027t exist yo.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            System.out.println(\"Label the place you want to unmark with a NUMBER, not a word.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private static void deleteOperation(String[] inputAnalyzed, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (inputAnalyzed.length \u003e 2) {","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                System.out.println(\"If you want to delete a task, just type \\\"delete\\\" and a number. That\u0027s it.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            int index \u003d parseInt(inputAnalyzed[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            Task temp \u003d list.get(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            list.remove(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            System.out.println(\"Righto, just removed this task from your list:\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    + temp + \"\\nYou now have \" + list.size() + \" tasks left.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            //Inputted a number beyond the list\u0027s length","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            System.out.println(\"Woah there. That entry doesn\u0027t exist yo.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            System.out.println(\"Label the place you want to delete with a NUMBER, and not just any number; an INTEGER.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static void ddlOperation(String[] inputAnalyzed, String input, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Possible Errors:","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            //No descriptor","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            //No /by","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            //No deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            String[] deadlineAnalyze \u003d input.split(\"/by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            String deadline \u003d deadlineAnalyze[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            String deets \u003d deadlineAnalyze[0].split(\"deadline\")[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            if (deets.equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                System.out.println(\"Where\u0027s the description?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            Deadline newDead \u003d new Deadline(deets.toString(), deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            list.add(newDead);","lastModifiedDate":"2023-01-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            System.out.println(\"Got it sir, just added this task to the list.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    + newDead + \"\\nYou now have \" + list.size() + \" tasks. Anything else?\");","lastModifiedDate":"2023-01-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            System.out.println(\"You forgot to add the deadline to your deadline. Reformat your deadline info and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private static void todoOperation(String[] inputAnalyzed, String input, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Possible Errors:","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        //No descriptor","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String[] todoAnalyze \u003d input.split(\"todo \");","lastModifiedDate":"2023-01-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            Todo newTodo \u003d new Todo(todoAnalyze[1].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            list.add(newTodo);","lastModifiedDate":"2023-01-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            System.out.println(\"Got it sir, just added this task to the list.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    + newTodo);","lastModifiedDate":"2023-01-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            System.out.println(\"Whoops, you need to put in what you\u0027re about to do!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private static void eventOperation(String[] inputAnalyzed, String input, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        //Possible Errors:","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        //No descriptor","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        //No /from","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        //No /to","lastModifiedDate":"2023-01-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        //No things in between or following these two labels","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            String[] eventAnalyze \u003d input.split(\"/from\");","lastModifiedDate":"2023-01-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            String[] timeAnalyze \u003d eventAnalyze[1].split(\"/to\");","lastModifiedDate":"2023-01-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            String start \u003d timeAnalyze[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            String over \u003d timeAnalyze[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            String details \u003d eventAnalyze[0].split(\"event\")[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (start.equals(\"\") || over.equals(\"\") || details.equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                System.out.println(\"Where\u0027s the specifics?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            Event newEvent \u003d new Event(details, start, over);","lastModifiedDate":"2023-01-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            list.add(newEvent);","lastModifiedDate":"2023-01-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            System.out.println(\"Got it sir, just added this task to the list.\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                    + newEvent + \"\\nYou now have \" + list.size() + \" tasks. Anything else?\");","lastModifiedDate":"2023-01-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            System.out.println(\"You forgot to add the time frame. Reformat your event info and try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":212,"Zeli0":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"    String start, end;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"    public Event(String details, String start, String end) {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"        super(details);","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"        String task \u003d super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"        return \"[E] \" + task + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Zeli0":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"    private boolean checked;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"    private String details;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"    public Task(String details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"        checked \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    public void setChecked(Boolean checked) {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"        this.checked \u003d checked;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"    public String toString(){","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"        String checkSymbol \u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"        if (checked) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"            checkSymbol \u003d \"X\";","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"        return \"[\" + checkSymbol + \"] \" + details;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Zeli0":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"    public Todo(String details) {","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"        super(details);","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"        String task \u003d super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"        return \"[T] \" + task;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Zeli0":11}},{"path":"src/main/java/UnwantedItemException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"public class UnwantedItemException {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Zeli0":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"fuck","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"todo Say hi","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"event Buy bughatti /from 10 /to 2","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"deadline This project /by some date","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"mark 1","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Zeli0":6}}]
