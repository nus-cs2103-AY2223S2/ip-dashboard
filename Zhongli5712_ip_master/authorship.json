[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zhongli5712":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"javafx {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"checkstyle {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"        showStandardStreams \u003d true","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zhongli5712":15,"-":39}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":" *","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":" * Represents the chat bot.","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":" *","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Zhongli5712":12,"-":3}},{"path":"src/main/java/duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":" * Represents Exceptions caused by input syntax.","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"public class DukeExceptions extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"    private String error;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"    public DukeExceptions(String error) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"        this.error \u003d error;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"        return this.error;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Zhongli5712":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":" * Parses the command.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"public class Parser {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"    private TodoList todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    private enum Instructions {todo, deadline, event, mark, unmark, delete, find}","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"    public Parser(TodoList todoList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"        this.todoList \u003d todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"     * Returns a Command object (can be ListCommand, ...) of the input String.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"     * @param command String input.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"     * @return Command Object corresponding to the input String command.","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"     * @throws DukeExceptions If input syntax is incorrect.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"    public Command parse(String command) throws DukeExceptions {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"        String[] split_command \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"        String instruction \u003d split_command[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"        if (instruction.equals(\"list\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"            if (split_command.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"                return new ListCommand(todoList);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"                throw new DukeExceptions(\"OOPS!!! The description of a list \" +","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"                        \"cannot have other parameters\");","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"        //check for valid instructions","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"        for (Instructions validInstruction : Instructions.values()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"            if (validInstruction.name().equals(instruction)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"                if (split_command.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"                    throw new DukeExceptions(String.format(\"OOPS!!! The description of a %s cannot be empty.\",","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"                            instruction));","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"                } else if (instruction.equals(\"mark\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"                    int digit \u003d Integer.parseInt(split_command[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"                    return new MarkCommand(todoList, digit);","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"                } else if (instruction.equals(\"unmark\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"                    int digit \u003d Integer.parseInt(split_command[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"                    return new UnmarkCommand(todoList, digit);","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"                } else if (instruction.equals(\"delete\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"                    int digit \u003d Integer.parseInt(split_command[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"Zhongli5712"},"content":"                    return new DeleteCommand(todoList, digit);","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"                } else if (instruction.equals(\"find\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"                    return new FindCommand(todoList, split_command[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"Zhongli5712"},"content":"                } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"Zhongli5712"},"content":"                    return new AddTaskCommand(todoList, instruction, split_command[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Zhongli5712"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"        throw new DukeExceptions(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"Zhongli5712"},"content":"     * Returns LocalDate object capture the date of an event.","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"Zhongli5712"},"content":"     * @param possibleDateTime A string array may contain date information.","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"Zhongli5712"},"content":"     * @return LocalDate object capture the date or null if there is no information.","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"Zhongli5712"},"content":"     * @throws DateTimeParseException If there is no information.","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"Zhongli5712"},"content":"    public static LocalDate parseDate(String[] possibleDateTime) throws DateTimeParseException {","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"Zhongli5712"},"content":"            //parse date","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"Zhongli5712"},"content":"            LocalDate possibleDeadlineDate \u003d LocalDate.parse(possibleDateTime[0]);","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"Zhongli5712"},"content":"            return possibleDeadlineDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"Zhongli5712"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"Zhongli5712"},"content":"            //can not parse date","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"Zhongli5712"},"content":"            return null;","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"Zhongli5712"},"content":"     * Returns String representation of the date of an event.","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"Zhongli5712"},"content":"     * @param possibleDeadlineDate LocalDate object capture the date of an event.","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"Zhongli5712"},"content":"     * @return String representation of the date of an event.","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"Zhongli5712"},"content":"    public static String parseStringDate(LocalDate possibleDeadlineDate) {","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"Zhongli5712"},"content":"        return possibleDeadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"Zhongli5712"},"content":"     * Returns LocalTime object capture the time of an event.","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"Zhongli5712"},"content":"     * @param possibleDateTime A string array may contain time information.","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"Zhongli5712"},"content":"     * @return LocalTime object capture the time or null if there is no information.","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"Zhongli5712"},"content":"     * @throws DateTimeParseException If there is no information.","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"Zhongli5712"},"content":"    public static LocalTime parseTime(String[] possibleDateTime) throws DateTimeParseException {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"Zhongli5712"},"content":"            //parse date","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"Zhongli5712"},"content":"            LocalTime possibleDeadlineTime \u003d (possibleDateTime.length \u003d\u003d 1)","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"Zhongli5712"},"content":"                    ? LocalTime.parse(possibleDateTime[0])","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"Zhongli5712"},"content":"                    : LocalTime.parse(possibleDateTime[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"Zhongli5712"},"content":"            return possibleDeadlineTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"Zhongli5712"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"Zhongli5712"},"content":"            //can not parse date","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"Zhongli5712"},"content":"            return null;","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"Zhongli5712"},"content":"     * Returns String representation of the time of an event.","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"Zhongli5712"},"content":"     * @param possibleDeadlineTime LocalTime object capture the time.","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"Zhongli5712"},"content":"     * @return String representation of the time of an event.","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"Zhongli5712"},"content":"    public static String parseStringTime(LocalTime possibleDeadlineTime) {","lastModifiedDate":"2023-02-04"},{"lineNumber":122,"author":{"gitId":"Zhongli5712"},"content":"        return possibleDeadlineTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":124,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Zhongli5712":124}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import java.io.*;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":" * Represents a storage that load previous to do list and save current to do list.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"public class Storage {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"    private Path path;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"    private boolean doesDirectoryExist;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"    public Storage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"        this.path \u003d Paths.get(\"src\", \"main\", \"ToDoListCS2103.txt\");","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"        this.doesDirectoryExist \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"     * Loads previous to do list stored either in main folder or in current folder.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"     * If there is no file, create one.","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"     * @return A TodoList object contain information of previous to do list.","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"    public TodoList load() {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"            File previousToDoList \u003d new File(path.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"            if (doesDirectoryExist) {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"                FileInputStream fis \u003d new FileInputStream(previousToDoList);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"                TodoList savedTodoList \u003d (TodoList) ois.readObject();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"                ois.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"                fis.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"                return savedTodoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"                previousToDoList.createNewFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"                return new TodoList();","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"            this.path \u003d Paths.get(\"ToDoListCS2103.txt\");","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"            doesDirectoryExist \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"            return load();","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"        return new TodoList();","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"     * Saves current to do list in the same file in load.","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"     * @param todoList TodoList object contain information needed to save.","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"    public void save(TodoList todoList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"Zhongli5712"},"content":"        try{","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"            FileOutputStream fos \u003d new FileOutputStream(path.toFile());","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"Zhongli5712"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"Zhongli5712"},"content":"            oos.writeObject(todoList);","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"Zhongli5712"},"content":"            oos.flush();","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"Zhongli5712"},"content":"            oos.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"Zhongli5712"},"content":"            fos.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Zhongli5712"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Zhongli5712":68}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":" * Represents a task (to do task or task with deadline,...).","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"    private Boolean isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"    private String description;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"//    private static final long serialVersionUID \u003d -7531925916726747642;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    public Task() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"    public Task(String task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"        this.description \u003d task;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"     * Returns a subclass of a task corresponding to the input command.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"     * @param type Type of task.","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"     * @param task Description of task.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"     * @return A Task Object with corresponding information.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"     * @throws DukeExceptions If the input syntax is incorrect.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"    public Task createNewTask(String type, String task) throws DukeExceptions{","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"            return new Todo(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"            return new Deadline(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"            return new Event(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"            throw new DukeExceptions(\"unknown command! Please try again.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"     * Marks a task is done.","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"     * Unmarks a task is done.","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"Zhongli5712"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"Zhongli5712"},"content":"     * Returns true if the description contains keywords, false otherwise.","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"Zhongli5712"},"content":"     * @param keyword Keywords needed to find.","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"     * @return true if the description contains keywords, false otherwise.","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"Zhongli5712"},"content":"    public boolean doesContainKeyword(String keyword) {","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"Zhongli5712"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"Zhongli5712"},"content":"    private class Todo extends Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"Zhongli5712"},"content":"        private String task;","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"Zhongli5712"},"content":"        public Todo(String task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"Zhongli5712"},"content":"            super(task);","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"Zhongli5712"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"Zhongli5712"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"Zhongli5712"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"Zhongli5712"},"content":"            String name \u003d super.isDone ? \"[T][X] \" + task : \"[T][ ] \" + task;","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"Zhongli5712"},"content":"            return name;","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"Zhongli5712"},"content":"    private class Deadline extends Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"Zhongli5712"},"content":"        private static final long serialVersionUID \u003d -7531925916726747642L;","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"Zhongli5712"},"content":"        private String task;","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"Zhongli5712"},"content":"        private String deadline;","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"Zhongli5712"},"content":"        private Boolean isDate \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"Zhongli5712"},"content":"        private Boolean isTime \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"Zhongli5712"},"content":"        private LocalDate deadlineDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"Zhongli5712"},"content":"        private LocalTime deadlineTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"Zhongli5712"},"content":"        private String deadlineDateString;","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"Zhongli5712"},"content":"        private String deadlineTimeString;","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"Zhongli5712"},"content":"        public Deadline(String task) throws DukeExceptions, DateTimeParseException {","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"Zhongli5712"},"content":"            super(task);","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"Zhongli5712"},"content":"            String[] commands \u003d task.split(\" /by \");","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"Zhongli5712"},"content":"            if (commands.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"Zhongli5712"},"content":"                throw new DukeExceptions(\"OOPS!!! Looks like someone forget his/her deadline :)\\n Please use /by to indicate deadline\");","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"Zhongli5712"},"content":"            this.task \u003d commands[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"Zhongli5712"},"content":"            this.deadline \u003d commands[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"Zhongli5712"},"content":"            String[] possibleDateTime \u003d this.deadline.split((\" \"));","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"Zhongli5712"},"content":"            LocalDate possibleDeadlineDate \u003d Parser.parseDate(possibleDateTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"Zhongli5712"},"content":"            if (possibleDeadlineDate !\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"Zhongli5712"},"content":"                this.isDate \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"Zhongli5712"},"content":"                this.deadlineDate \u003d possibleDeadlineDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"Zhongli5712"},"content":"                this.deadlineDateString \u003d Parser.parseStringDate(possibleDeadlineDate);","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"Zhongli5712"},"content":"            LocalTime possibleDeadlineTime \u003d Parser.parseTime(possibleDateTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"Zhongli5712"},"content":"            if (possibleDeadlineTime !\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"Zhongli5712"},"content":"                this.isTime \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"Zhongli5712"},"content":"                this.deadlineTime \u003d possibleDeadlineTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"Zhongli5712"},"content":"                this.deadlineTimeString \u003d Parser.parseStringTime(possibleDeadlineTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"Zhongli5712"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"Zhongli5712"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"Zhongli5712"},"content":"            if (isDate \u0026\u0026 isTime) {","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"Zhongli5712"},"content":"                String name \u003d super.isDone ? \"[D][X] \" + task + \" (by: \" + this.deadlineDateString + \" \"","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"Zhongli5712"},"content":"                        + this.deadlineTimeString +\")\" : \"[D][ ] \" + task + \" (by: \" + this.deadlineDateString + \" \"","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"Zhongli5712"},"content":"                        + this.deadlineTimeString + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"Zhongli5712"},"content":"                return name;","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"Zhongli5712"},"content":"            } else if (isDate) {","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"Zhongli5712"},"content":"                String name \u003d super.isDone ? \"[D][X] \" + task + \" (by: \" + this.deadlineDateString + \" \"","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"Zhongli5712"},"content":"                        +\")\" : \"[D][ ] \" + task + \" (by: \" + this.deadlineDateString + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"Zhongli5712"},"content":"                return name;","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"Zhongli5712"},"content":"            } else if (isTime) {","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"Zhongli5712"},"content":"                String name \u003d super.isDone ? \"[D][X] \" + task + \" (by: \" + this.deadlineTimeString + \" \"","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"Zhongli5712"},"content":"                        +\")\" : \"[D][ ] \" + task + \" (by: \" + this.deadlineTimeString + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"Zhongli5712"},"content":"                return name;","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"Zhongli5712"},"content":"            String name \u003d super.isDone ? \"[D][X] \" + task + \" (by: \" + this.deadline +\")\" : \"[D][ ] \" + task + \" (by: \" + this.deadline +\")\";","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"Zhongli5712"},"content":"            return name;","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"Zhongli5712"},"content":"    private class Event extends Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"Zhongli5712"},"content":"        private static final long serialVersionUID \u003d 6827458563349815922L;","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"Zhongli5712"},"content":"        private String task;","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"Zhongli5712"},"content":"        private String from;","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"Zhongli5712"},"content":"        private String to;","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"Zhongli5712"},"content":"        private Boolean isFromDate \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"Zhongli5712"},"content":"        private Boolean isFromTime \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"Zhongli5712"},"content":"        private Boolean isToDate \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"Zhongli5712"},"content":"        private Boolean isToTime \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"Zhongli5712"},"content":"        private LocalDate fromDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":150,"author":{"gitId":"Zhongli5712"},"content":"        private LocalTime fromTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":151,"author":{"gitId":"Zhongli5712"},"content":"        private LocalDate toDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":152,"author":{"gitId":"Zhongli5712"},"content":"        private LocalTime toTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":153,"author":{"gitId":"Zhongli5712"},"content":"        private String fromDateString;","lastModifiedDate":"2023-02-03"},{"lineNumber":154,"author":{"gitId":"Zhongli5712"},"content":"        private String fromTimeString;","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"Zhongli5712"},"content":"        private String toDateString;","lastModifiedDate":"2023-02-03"},{"lineNumber":156,"author":{"gitId":"Zhongli5712"},"content":"        private String toTimeString;","lastModifiedDate":"2023-02-03"},{"lineNumber":157,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"Zhongli5712"},"content":"        public Event(String task) throws DukeExceptions {","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"Zhongli5712"},"content":"            super(task);","lastModifiedDate":"2023-02-06"},{"lineNumber":160,"author":{"gitId":"Zhongli5712"},"content":"            String[] commands \u003d task.split(\" /from \");","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"Zhongli5712"},"content":"            if (commands.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"Zhongli5712"},"content":"                throw new DukeExceptions(\"OOPS!!! Looks like someone forget when the event begins :)\\n Please use /from to indicate begin time\");","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"Zhongli5712"},"content":"            this.task \u003d commands[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"Zhongli5712"},"content":"            String[] from_to_timeline \u003d commands[1].split(\" /to \");","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"Zhongli5712"},"content":"            if (from_to_timeline.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"Zhongli5712"},"content":"                throw new DukeExceptions(\"OOPS!!! Looks like someone forget when the event ends :)\\n Please use /to to indicate end time\");","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"Zhongli5712"},"content":"            this.from \u003d from_to_timeline[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"Zhongli5712"},"content":"            this.to \u003d from_to_timeline[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"Zhongli5712"},"content":"            //parse date and time of /from","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"Zhongli5712"},"content":"            String[] possibleDateTime \u003d this.from.split((\" \"));","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"Zhongli5712"},"content":"            LocalDate possibleFromDate \u003d Parser.parseDate(possibleDateTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":174,"author":{"gitId":"Zhongli5712"},"content":"            if (possibleFromDate !\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"Zhongli5712"},"content":"                this.isFromDate \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"Zhongli5712"},"content":"                this.fromDate \u003d possibleFromDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"Zhongli5712"},"content":"                this.fromDateString \u003d Parser.parseStringDate(possibleFromDate);","lastModifiedDate":"2023-02-04"},{"lineNumber":178,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":179,"author":{"gitId":"Zhongli5712"},"content":"            LocalTime possibleFromTime \u003d Parser.parseTime(possibleDateTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":180,"author":{"gitId":"Zhongli5712"},"content":"            if (possibleFromTime !\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":181,"author":{"gitId":"Zhongli5712"},"content":"                this.isFromTime \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":182,"author":{"gitId":"Zhongli5712"},"content":"                this.fromTime \u003d possibleFromTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":183,"author":{"gitId":"Zhongli5712"},"content":"                this.fromTimeString \u003d Parser.parseStringTime(possibleFromTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":184,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":185,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":186,"author":{"gitId":"Zhongli5712"},"content":"            //parse date and time of /to","lastModifiedDate":"2023-02-03"},{"lineNumber":187,"author":{"gitId":"Zhongli5712"},"content":"            possibleDateTime \u003d this.to.split((\" \"));","lastModifiedDate":"2023-02-03"},{"lineNumber":188,"author":{"gitId":"Zhongli5712"},"content":"            LocalDate possibleToDate \u003d Parser.parseDate(possibleDateTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":189,"author":{"gitId":"Zhongli5712"},"content":"            if (possibleToDate !\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"Zhongli5712"},"content":"                this.isToDate \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":191,"author":{"gitId":"Zhongli5712"},"content":"                this.toDate \u003d possibleToDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":192,"author":{"gitId":"Zhongli5712"},"content":"                this.toDateString \u003d Parser.parseStringDate(possibleToDate);","lastModifiedDate":"2023-02-04"},{"lineNumber":193,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":194,"author":{"gitId":"Zhongli5712"},"content":"            LocalTime possibleToTime \u003d Parser.parseTime(possibleDateTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":195,"author":{"gitId":"Zhongli5712"},"content":"            if (possibleToTime !\u003d null) {","lastModifiedDate":"2023-02-03"},{"lineNumber":196,"author":{"gitId":"Zhongli5712"},"content":"                this.isToTime \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":197,"author":{"gitId":"Zhongli5712"},"content":"                this.toTime \u003d possibleToTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":198,"author":{"gitId":"Zhongli5712"},"content":"                this.toTimeString \u003d Parser.parseStringTime(possibleToTime);","lastModifiedDate":"2023-02-04"},{"lineNumber":199,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":200,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"Zhongli5712"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"Zhongli5712"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"Zhongli5712"},"content":"            String fromString \u003d this.from;","lastModifiedDate":"2023-02-03"},{"lineNumber":205,"author":{"gitId":"Zhongli5712"},"content":"            if (isFromDate || isFromTime) {","lastModifiedDate":"2023-02-03"},{"lineNumber":206,"author":{"gitId":"Zhongli5712"},"content":"                fromString \u003d isFromDate ? fromDateString : \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":207,"author":{"gitId":"Zhongli5712"},"content":"                fromString +\u003d isFromTime ? \" \" + fromTimeString : \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":208,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":209,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":210,"author":{"gitId":"Zhongli5712"},"content":"            String toString \u003d this.to;","lastModifiedDate":"2023-02-03"},{"lineNumber":211,"author":{"gitId":"Zhongli5712"},"content":"            if (isToDate || isToTime) {","lastModifiedDate":"2023-02-03"},{"lineNumber":212,"author":{"gitId":"Zhongli5712"},"content":"                toString \u003d isToDate ? toDateString : \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":213,"author":{"gitId":"Zhongli5712"},"content":"                toString +\u003d isToTime ? \" \" + toTimeString : \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":214,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":215,"author":{"gitId":"Zhongli5712"},"content":"            String name \u003d super.isDone ? \"[E][X] \" + task + \" (from: \" + fromString +\" to: \" + toString + \")\"","lastModifiedDate":"2023-02-03"},{"lineNumber":216,"author":{"gitId":"Zhongli5712"},"content":"                    : \"[E][ ] \" + task + \" (from: \" + fromString +\" to: \" + toString + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":217,"author":{"gitId":"Zhongli5712"},"content":"            return name;","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Zhongli5712":220}},{"path":"src/main/java/duke/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":" * Represents a list containing all tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"public class TodoList implements Serializable {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"    private ArrayList\u003cTask\u003e todo_list;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"    public TodoList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"        this.todo_list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"     * Creates and adds new task corresponding to the input.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"     * @param type Type of task.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"     * @param task Description of task.","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"     * @throws DukeExceptions If the input syntax is incorrect.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"    public String add(String type, String task) throws DukeExceptions{","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"        Task taskObject \u003d new Task();","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"        Task newTask \u003d taskObject.createNewTask(type, task);","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"        todo_list.add(newTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\" + newTask.toString());","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"     * Marks a numbered task is done.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"     * @param index The number order of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"     * @throws DukeExceptions If the input syntax is incorrect.","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"    public String mark(int index) throws DukeExceptions{","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"        int todo_list_length \u003d todo_list.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"        boolean isOutOfBound \u003d index \u003c 0 || index \u003e todo_list_length;","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"        if (isOutOfBound) {","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"            throw new DukeExceptions(\"Please use list command to check the index!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"        Task task \u003d todo_list.get(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"        task.markTask();","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", todo_list.get(index-1));","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"     * Unmarks a numbered task is done.","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"     * @param index The number order of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"     * @throws DukeExceptions If the input syntax is incorrect.","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"    public String unmark(int index) throws DukeExceptions{","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"        int todo_list_length \u003d todo_list.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"        boolean isOutOfBound \u003d index \u003c 0 || index \u003e todo_list_length;","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"Zhongli5712"},"content":"        if (isOutOfBound) {","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"            throw new DukeExceptions(\"Please use list command to check the index!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"Zhongli5712"},"content":"        Task task \u003d todo_list.get(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"Zhongli5712"},"content":"        task.unmarkTask();","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"Zhongli5712"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n%s\", todo_list.get(index-1));","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"Zhongli5712"},"content":"     * Deletes a numbered task is done.","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"Zhongli5712"},"content":"     * @param index The number order of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"Zhongli5712"},"content":"     * @throws DukeExceptions If the input syntax is incorrect.","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"Zhongli5712"},"content":"    public String delete(int index) throws DukeExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"Zhongli5712"},"content":"        int todo_list_length \u003d todo_list.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"Zhongli5712"},"content":"        boolean isOutOfBound \u003d index \u003c 0 || index \u003e todo_list_length;","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"Zhongli5712"},"content":"        if (isOutOfBound) {","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"Zhongli5712"},"content":"            throw new DukeExceptions(\"Please use list command to check the index!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"Zhongli5712"},"content":"        Task task \u003d todo_list.remove(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"Zhongli5712"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\", task);","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"Zhongli5712"},"content":"     * Returns how many tasks in the list.","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"Zhongli5712"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"Zhongli5712"},"content":"     * @return How many tasks in the list.","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"Zhongli5712"},"content":"    public int number_of_tasks() {","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"Zhongli5712"},"content":"        return todo_list.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"Zhongli5712"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"Zhongli5712"},"content":"        String result_list \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"Zhongli5712"},"content":"        int todo_list_length \u003d todo_list.size();","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"Zhongli5712"},"content":"        int resultIndex \u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"Zhongli5712"},"content":"        for (int i \u003d 1; i \u003c\u003d todo_list_length; i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"Zhongli5712"},"content":"            Task task \u003d todo_list.get(i-1);","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"Zhongli5712"},"content":"            if (task.doesContainKeyword(keyword)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"Zhongli5712"},"content":"                result_list +\u003d String.format(\"%d. %s\\n\", resultIndex++, task);","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"Zhongli5712"},"content":"        return(\"Here are the matching tasks in your list:\\n\" + result_list);","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Zhongli5712"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Zhongli5712"},"content":"        String shown_list \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"Zhongli5712"},"content":"        int todo_list_length \u003d todo_list.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Zhongli5712"},"content":"        for (int i \u003d 1; i \u003c\u003d todo_list_length; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Zhongli5712"},"content":"            shown_list +\u003d String.format(\"%d. %s\\n\", i, todo_list.get(i-1));","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"Zhongli5712"},"content":"        return shown_list;","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Zhongli5712":111}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import duke.TodoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":" * Represents an add command.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"public class AddTaskCommand extends Command{","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"    private TodoList todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"    private String instruction;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"    private String description;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"    public AddTaskCommand(TodoList todoList, String instruction, String description) {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"        this.todoList \u003d todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"    public String execute() throws DukeExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"        String result \u003d todoList.add(instruction, description);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"        return(String.format(\"%s\\nNow I have %d tasks in the list.\", result, todoList.number_of_tasks()));","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Zhongli5712":25}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":" * Represents a command.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"    public abstract String execute() throws DukeExceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Zhongli5712":10}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import duke.TodoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"    private TodoList todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"    private int index;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"    public DeleteCommand(TodoList todoList, int index) {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"        this.todoList \u003d todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    public String execute() throws DukeExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"        todoList.delete(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"        return(String.format(\"Now I have %d tasks in the list.\", todoList.number_of_tasks()));","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Zhongli5712":20}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import duke.TodoList;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":" * Represents find command.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"    private TodoList todoList;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"    private String description;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"    public FindCommand(TodoList todoList, String description) {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"        this.todoList \u003d todoList;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"    public String execute() throws DukeExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"        return (todoList.find(description));","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Zhongli5712":22}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import duke.TodoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"    private TodoList todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"    public ListCommand(TodoList todoList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"        this.todoList \u003d todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"    public String execute() throws DukeExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"        String shown_list \u003d todoList.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"        return(shown_list);","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Zhongli5712":19}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import duke.TodoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"    private TodoList todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"    private int index;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"    public MarkCommand(TodoList todoList, int index) {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"        this.todoList \u003d todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    public String execute() throws DukeExceptions { return todoList.mark(index); }","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Zhongli5712":17}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import duke.TodoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"    private TodoList todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"    private int index;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"    public UnmarkCommand(TodoList todoList, int index) {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"        this.todoList \u003d todoList;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"    public String execute() throws DukeExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"        return todoList.unmark(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"Zhongli5712":19}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":" * Represents a dialog, use code from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":" * with some modification in format setting.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"    private Label text;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"        text.setFont(Font.font(\"Comic Sans MS\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"        text.setPadding(new Insets(5.0, 10.0, 10.0, 10.0));","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"        displayPicture.setFitHeight(50.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"        displayPicture.setFitWidth(50.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"        this.setPadding(new Insets(5.0));","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"    private void flip() {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"        db.flip();","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"        return db;","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"Zhongli5712":53}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke.ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import duke.DukeExceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"import duke.TodoList;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":" * Represents User Interface, handle interaction with users, use code from","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":" * https://se-education.org/guides/tutorials/javaFx.html with modification in format,","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":" * some additional method and fields, some logic handling.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"public class Ui extends Application{","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"    private Parser bot;","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"    private TodoList todoList;","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"    public void init() {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"        this.todoList \u003d storage.load();","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"        this.bot \u003d new Parser(todoList);","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"Zhongli5712"},"content":"    public void start(Stage stage) throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"Zhongli5712"},"content":"        //Step 1: Setting","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"Zhongli5712"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"Zhongli5712"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"Zhongli5712"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"Zhongli5712"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"Zhongli5712"},"content":"        TextField userInput \u003d new TextField(\"Type your command here\");","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"Zhongli5712"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"Zhongli5712"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"Zhongli5712"},"content":"        //Step 2: Formatting","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"Zhongli5712"},"content":"        double height \u003d 600.0;","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"Zhongli5712"},"content":"        double width \u003d 400.0;","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"Zhongli5712"},"content":"        stage.setMinHeight(height);","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"Zhongli5712"},"content":"        stage.setMinWidth(width);","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"Zhongli5712"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"Zhongli5712"},"content":"        mainLayout.setPrefSize(width, height);","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"Zhongli5712"},"content":"        scrollPane.setPrefSize(width - 15, height - 65);","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"Zhongli5712"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"Zhongli5712"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"Zhongli5712"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"Zhongli5712"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"Zhongli5712"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"Zhongli5712"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"Zhongli5712"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"Zhongli5712"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"Zhongli5712"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"Zhongli5712"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"Zhongli5712"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"Zhongli5712"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"Zhongli5712"},"content":"        dialogContainer.heightProperty().addListener((observable -\u003e {scrollPane.setVvalue(1.0);}));","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"Zhongli5712"},"content":"        //Step 3: Handle action","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"Zhongli5712"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"Zhongli5712"},"content":"            String userInputCommand \u003d userInput.getText();","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"Zhongli5712"},"content":"            Label userText \u003d new Label(userInputCommand);","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"Zhongli5712"},"content":"            String response \u003d \"\";","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"Zhongli5712"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"Zhongli5712"},"content":"                Command command \u003d bot.parse(userInputCommand);","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"Zhongli5712"},"content":"                response \u003d command.execute();","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"Zhongli5712"},"content":"            } catch (DukeExceptions error) {","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"Zhongli5712"},"content":"                response \u003d error.getErrorMessage();","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"Zhongli5712"},"content":"            Label dukeText \u003d new Label(response);","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"Zhongli5712"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"Zhongli5712"},"content":"                    DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"Zhongli5712"},"content":"                    DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"Zhongli5712"},"content":"            );","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"Zhongli5712"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"Zhongli5712"},"content":"        });","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"Zhongli5712"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"Zhongli5712"},"content":"            String userInputCommand \u003d userInput.getText();","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"Zhongli5712"},"content":"            Label userText \u003d new Label(userInputCommand);","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"Zhongli5712"},"content":"            String response \u003d \"\";","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"Zhongli5712"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"Zhongli5712"},"content":"                Command command \u003d bot.parse(userInputCommand);","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"Zhongli5712"},"content":"                response \u003d command.execute();","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"Zhongli5712"},"content":"            } catch (DukeExceptions error) {","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"Zhongli5712"},"content":"                response \u003d error.getErrorMessage();","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"Zhongli5712"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"Zhongli5712"},"content":"            Label dukeText \u003d new Label(response);","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"Zhongli5712"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"Zhongli5712"},"content":"                    DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"Zhongli5712"},"content":"                    DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"Zhongli5712"},"content":"            );","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"Zhongli5712"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"Zhongli5712"},"content":"        });","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"Zhongli5712"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"Zhongli5712"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"Zhongli5712"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"Zhongli5712"},"content":"        stage.show();","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"Zhongli5712"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"Zhongli5712"},"content":"    public void stop() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"Zhongli5712"},"content":"        storage.save(todoList);","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"Zhongli5712"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"Zhongli5712"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"Zhongli5712"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"Zhongli5712"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"Zhongli5712"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"Zhongli5712"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"Zhongli5712"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"Zhongli5712"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"Zhongli5712"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"Zhongli5712":148}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"    public void createNewToDoTask(){","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"            String newTodoTask \u003d new Task().createNewTask(\"todo\",","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"                    \"read book\").toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"            assertEquals(newTodoTask, \"[T][ ] read book\");","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"        } catch (DukeExceptions ex) {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"            System.out.println(ex.getErrorMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"    public void createNewDeadlineTask(){","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"            String newDeadlineTask \u003d new Task().createNewTask(\"deadline\",","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"                    \"return book /by 2023-02-10 18:00\").toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"            assertEquals(newDeadlineTask, \"[D][ ] return book (by: Feb 10 2023 06:00 PM)\");","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"        } catch (DukeExceptions ex) {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"            System.out.println(ex.getErrorMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Zhongli5712":29}},{"path":"src/test/java/duke/TodoListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"public class TodoListTest {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"    public void addToDoTask(){","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"            TodoList newTodoList \u003d new TodoList();","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"            newTodoList.add(\"todo\", \"read book\");","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"            assertEquals(newTodoList.number_of_tasks(), 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"        } catch (DukeExceptions ex) {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"            System.out.println(ex.getErrorMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Zhongli5712":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zhongli5712"},"content":"tola","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"Zhongli5712"},"content":"todo","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Zhongli5712"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Zhongli5712"},"content":"list appear","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Zhongli5712"},"content":"deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Zhongli5712"},"content":"deadline return book","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Zhongli5712"},"content":"deadline return book /by Sunday 2pm","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Zhongli5712"},"content":"event","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Zhongli5712"},"content":"event programming study","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Zhongli5712"},"content":"event programming study /from 5pm","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Zhongli5712"},"content":"event programming study /from 5pm /to 9pm","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Zhongli5712"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Zhongli5712"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Zhongli5712"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Zhongli5712"},"content":"delete","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Zhongli5712"},"content":"delete 4","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Zhongli5712"},"content":"delete 1","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Zhongli5712"},"content":"delete 1","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Zhongli5712"},"content":"delete 1","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Zhongli5712"},"content":"deadline return book /by 2023-02-10 18:00","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Zhongli5712"},"content":"deadline assignment /by 2023-02-10","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Zhongli5712"},"content":"deadline cooking /by 18:00","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Zhongli5712"},"content":"event dance /from 2023-02-10 18:00 /to 2023-02-10 19:00","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Zhongli5712"},"content":"event dance /from 2023-02-10 /to 2023-02-10 19:00","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Zhongli5712"},"content":"event dance /from 2023-02-10 18:00 /to 2023-02-10","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Zhongli5712"},"content":"event dance /from 2023-02-10 /to 2023-02-10","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Zhongli5712"},"content":"event dance /from 18:00 /to 19:00","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Zhongli5712"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Zhongli5712"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Zhongli5712":42}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Zhongli5712"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zhongli5712":1,"-":20}}]
