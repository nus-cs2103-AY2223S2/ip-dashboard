[{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.exception;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":" * Handles all exceptions.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"        super(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"     * Handles exception to missing time input for deadline and event.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"     * @param command Command entered by user.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"     * @throws DukeException if missing time input.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"    public static void missingTimingException(String command) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"        if (command.startsWith(\"deadline\") \u0026\u0026 !command.contains(\"/by\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The timing of a deadline cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.startsWith(\"event\") \u0026\u0026 !command.contains(\"/from\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The start time of an event cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.startsWith(\"event\") \u0026\u0026 !command.contains(\"/to\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The end time of an event cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"     * Handles exception to missing index input of task when marking/","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"     * unmarking/ deleting task.","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"     * @param command Command entered by user.","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"     * @throws DukeException if missing index input.","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"    public static void missingIndexException(String command) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The task index to mark a task as done cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The task index to unmark a task as not done cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The task index to delete a task as not done cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"     * Handles exception to invalid index input of task when marking/","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"     * unmarking/ deleting task.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"     * This occurs when index input is more or less than number of","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"     * existing tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"     * @param command Command entered by user.","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"     * @param taskSize Total number of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"     * @throws DukeException if wrong index input.","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"    public static void invalidIndexException(String command, int taskSize) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"        if (command.startsWith(\"mark\") || command.startsWith(\"unmark\") ||command.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"            String index \u003d command.split(\" \")[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"            int index1 \u003d Integer.parseInt(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"            if (index1 \u003c\u003d 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"                throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"ZhuLeYao"},"content":"                        + \"\\n\\t ☹ OOPS!!! The task index to delete or un/mark a task cannot be zero or less.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"ZhuLeYao"},"content":"                        + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (index.equals(\"\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"ZhuLeYao"},"content":"                throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"ZhuLeYao"},"content":"                        + \"\\n\\t ☹ OOPS!!! The task index to delete or un/mark a task cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"ZhuLeYao"},"content":"                        + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (index1 \u003e taskSize) {","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"ZhuLeYao"},"content":"                throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ZhuLeYao"},"content":"                        + \"\\n\\t ☹ OOPS!!! The task index to delete or un/mark a task cannot be more than\"","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"ZhuLeYao"},"content":"                        + \" number of tasks.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"ZhuLeYao"},"content":"                        + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"ZhuLeYao"},"content":"     * Handles exception to missing command keyword.","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"ZhuLeYao"},"content":"     * @param command Command entered by user.","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"ZhuLeYao"},"content":"     * @throws DukeException if invalid command input.","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"ZhuLeYao"},"content":"    public static void invalidCommandException(String command) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"ZhuLeYao"},"content":"        if (!command.startsWith(\"event\") || !(command.startsWith(\"deadline\")) ||","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"ZhuLeYao"},"content":"                !command.startsWith(\"todo\") || command.startsWith(\"mark\") || !command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"ZhuLeYao"},"content":"     * Handles exception to missing task description.","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"ZhuLeYao"},"content":"     * @param command Command entered by user.","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"ZhuLeYao"},"content":"     * @throws DukeException if missing command information.","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"ZhuLeYao"},"content":"    public static void emptyCommandException(String command) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"ZhuLeYao"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The description of a todo cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The description of a deadline cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The description of an event cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.equals(\"find deadlines or events on\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"ZhuLeYao"},"content":"            throw new DukeException(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t ☹ OOPS!!! The date of a deadline/ event cannot be empty.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"ZhuLeYao"},"content":"                    + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"ZhuLeYao":127}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.main;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.io.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":" * Runs the app.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"     * Initialises Storage, TaskList and Ui.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"     * Previous tasks are loaded up.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"     * Loading error will be shown if file cannot be found/ generated.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"     * @param filePath file path of text file containing tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"            tasks \u003d new TaskList(storage.loadTxtFile());","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"     * Updates the task file in main method.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"     * Runs the app.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"    public void run() {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"        ui.printGreetingMessage();","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"        boolean saidBye \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"        while (!saidBye) {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"            String command \u003d ui.getCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"            parser.parse(command, ui, tasks, storage);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ZhuLeYao":52,"-":2}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.main;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":" * Understands what the command is asking for.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"public class Parser {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"     * Parses the command to process.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"     * If command calls for list, task list is printed.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"     * If command starts with \"mark\", task will be mark as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"     * If command starts with \"unmark\", task will be unmarked as","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"     * undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"     * If command starts with \"todo\", \"deadline\" or \"event\", task will","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"     * be added to command list.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"     * If command starts with \"delete\", task will be deleted from task","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"     * list.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"     * If command starts with \"show deadlines or events on\", matching","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"     * tasks on input date will be shown.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"     * If command starts with \"find\", matching tasks to keyword will","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"     * be shown.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"     * If command starts with \"bye\", exit message will be printed.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"     * Task list and text file on hard disk containing all commands","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"     * updates if possible after each command.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"     * Corresponding messages will also be printed to signify","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"     * completion of command.","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"     * Each command has its corresponding exceptions catching.","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"     * @param command Command typed by user.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"     * @param ui Ui object to print corresponding messages.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"     * @param allTasks A list of existing tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"     * @param storage Storage object to update text file of task list","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"     *                on hard disk.","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"    public void parse(String command, Ui ui, TaskList allTasks, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"        DateTimeFormatter dateTimeFormatter \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"                ui.printCommandList(allTasks.getAllTasks());","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.missingIndexException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.invalidIndexException(command, allTasks.getNumberOfTask());","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"                String[] str \u003d command.split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"                int taskIndex \u003d Integer.parseInt(str[1]) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"                Task oldTask \u003d allTasks.getTask(taskIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"                Task task \u003d allTasks.markTaskAsDone(oldTask, taskIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"                task.markAsDone();","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"                storage.saveListToFile(command, task, allTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.missingIndexException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.invalidIndexException(command, allTasks.getNumberOfTask());","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"                String[] str \u003d command.split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"                int taskIndex \u003d Integer.parseInt(str[1]) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"                Task oldTask \u003d allTasks.getTask(taskIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"                Task task \u003d allTasks.unmarkTaskAsUndone(oldTask, taskIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"                task.unmarkAsUndone();","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"                storage.saveListToFile(command, task, allTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.emptyCommandException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"ZhuLeYao"},"content":"                String[] str \u003d command.split(\"todo\");","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"ZhuLeYao"},"content":"                String taskName \u003d str[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"ZhuLeYao"},"content":"                Todo todo \u003d new Todo(allTasks.getNumberOfTask(), false,","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"ZhuLeYao"},"content":"                        taskName, allTasks.getNumberOfTask() + 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"ZhuLeYao"},"content":"                allTasks.addTask(todo);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"ZhuLeYao"},"content":"                todo.printToDoTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"ZhuLeYao"},"content":"                storage.saveListToFile(command, todo, allTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.emptyCommandException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.missingTimingException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"ZhuLeYao"},"content":"                String[] str \u003d command.split(\"/by \");","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"ZhuLeYao"},"content":"                String taskName \u003d str[0].split(\"deadline\")[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"ZhuLeYao"},"content":"                LocalDateTime taskDeadline \u003d LocalDateTime.parse(str[1], dateTimeFormatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"ZhuLeYao"},"content":"                Deadline deadline \u003d new Deadline(allTasks.getNumberOfTask(), false,","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"ZhuLeYao"},"content":"                        taskName, taskDeadline, allTasks.getNumberOfTask() + 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"ZhuLeYao"},"content":"                allTasks.addTask(deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"ZhuLeYao"},"content":"                deadline.printDeadlineTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"ZhuLeYao"},"content":"                storage.saveListToFile(command, deadline, allTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.emptyCommandException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.missingTimingException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"ZhuLeYao"},"content":"                String[] str \u003d command.split(\"/from \");","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"ZhuLeYao"},"content":"                String taskName \u003d str[0].split(\"event\")[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"ZhuLeYao"},"content":"                String[] eventStartEndTime \u003d str[1].split(\" /to \");","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"ZhuLeYao"},"content":"                LocalDateTime eventStartTime \u003d LocalDateTime.parse(eventStartEndTime[0], dateTimeFormatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"ZhuLeYao"},"content":"                LocalDateTime eventEndTime \u003d LocalDateTime.parse(eventStartEndTime[1], dateTimeFormatter);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"ZhuLeYao"},"content":"                Event event \u003d new Event(allTasks.getNumberOfTask(), false,","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"ZhuLeYao"},"content":"                        taskName, eventStartTime, eventEndTime, allTasks.getNumberOfTask() + 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"ZhuLeYao"},"content":"                allTasks.addTask(event);","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"ZhuLeYao"},"content":"                event.printEventTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"ZhuLeYao"},"content":"                storage.saveListToFile(command, event, allTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.missingIndexException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.invalidIndexException(command, allTasks.getNumberOfTask());","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"ZhuLeYao"},"content":"                String[] str \u003d command.split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"ZhuLeYao"},"content":"                int taskIndex \u003d Integer.parseInt(str[1]) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"ZhuLeYao"},"content":"                Task task \u003d allTasks.getTask(taskIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"ZhuLeYao"},"content":"                task.printDelete(allTasks.getAllTasks());","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"ZhuLeYao"},"content":"                allTasks.deleteTask(taskIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"ZhuLeYao"},"content":"                storage.saveListToFile(command, task, allTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.startsWith(\"show deadlines or events on\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.emptyCommandException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"ZhuLeYao"},"content":"                String[] str \u003d command.split(\"show deadlines or events on \");","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"ZhuLeYao"},"content":"                String dateTime \u003d str[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"ZhuLeYao"},"content":"                DateTimeFormatter dateTimeFormatter2 \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"ZhuLeYao"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"ZhuLeYao"},"content":"                LocalDate dateTime1 \u003d LocalDate.parse(dateTime, dateTimeFormatter2);","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"ZhuLeYao"},"content":"                ui.printDeadlineOrEventsOnDay(dateTime1, allTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"ZhuLeYao"},"content":"                String[] str \u003d command.split(\"find\");","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"ZhuLeYao"},"content":"                String keyword \u003d str[1];","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"ZhuLeYao"},"content":"                ui.printFindResults(keyword, allTasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (command.equals(\"bye\")){","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"ZhuLeYao"},"content":"                boolean saidBye \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"ZhuLeYao"},"content":"                ui.printByeMessage();","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"ZhuLeYao"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"ZhuLeYao"},"content":"                DukeException.invalidCommandException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"ZhuLeYao"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"ZhuLeYao"},"content":"            System.out.println(d.getMessage());","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"ZhuLeYao"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"ZhuLeYao"},"content":"            System.out.println(\"\\t____________________________________________________________\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"ZhuLeYao"},"content":"                    \"\\n\\t ☹ OOPS!!! The task index to delete or un/mark a task cannot be a non-integer.\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"ZhuLeYao"},"content":"                    \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"ZhuLeYao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"ZhuLeYao"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"ZhuLeYao":141}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.main;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.io.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.List;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":" * Loads previous task list and saves updated task list to a file on","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":" * hard disk.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"public class Storage {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"    private final String filePathParent;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"    Storage(String filePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"        this.filePathParent \u003d Paths.get(filePath).getParent().toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"     * Loads previous task list if it exists.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"     * Existing text file on hard disk containing all tasks loops","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"     * through to read each line.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"     * @return list of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"     * @throws IOException if file cannot be loaded.","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"    public List\u003cTask\u003e loadTxtFile() throws IOException {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"        List\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"        File file3 \u003d new File(this.filePathParent);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"        if (!file3.exists()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"            file3.mkdir();","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"            List\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"            FileReader file2 \u003d new FileReader(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(file2);","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"            String taskInformation \u003d bufferedReader.readLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"            while (taskInformation !\u003d null) {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"                taskList.add(taskInformation);","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"                taskInformation \u003d bufferedReader.readLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"                String task \u003d taskList.get(i);","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"                String[] task1 \u003d task.split(\" / \");","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"                boolean taskStatus \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"                if (task1[1].equals(\"[ ]\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"                    taskStatus \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"                } else if (task1[1].equals(\"[X]\")){","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"                    taskStatus \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"                DateTimeFormatter dateTimeFormatter1 \u003d","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"                        DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm a\");","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"                if (task.startsWith(\"T\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"                    Todo todo \u003d new Todo(i + 1, taskStatus, task1[2],","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"                            taskList.size());","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"                    allTasks.add(todo);","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"                } else if (task.startsWith(\"D\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"                    Deadline deadline \u003d new Deadline(i + 1, taskStatus, task1[2],","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"ZhuLeYao"},"content":"                            LocalDateTime.parse(task1[3], dateTimeFormatter1), taskList.size());","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"ZhuLeYao"},"content":"                    allTasks.add(deadline);","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"ZhuLeYao"},"content":"                } else if (task.startsWith(\"E\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"ZhuLeYao"},"content":"                    String[] taskTiming \u003d task1[3].split(\"-\");","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"ZhuLeYao"},"content":"                    Event event \u003d new Event(i + 1, taskStatus, task1[2],","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"ZhuLeYao"},"content":"                            LocalDateTime.parse(taskTiming[0], dateTimeFormatter1),","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"ZhuLeYao"},"content":"                            LocalDateTime.parse(taskTiming[1], dateTimeFormatter1), taskList.size());","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"ZhuLeYao"},"content":"                    allTasks.add(event);","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"ZhuLeYao"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"ZhuLeYao"},"content":"        return allTasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"ZhuLeYao"},"content":"     * Saves the updated task list to existing file on hard disk.","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"ZhuLeYao"},"content":"     * If file does not exist, create a new one.","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"ZhuLeYao"},"content":"     * @param command Command input from user.","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"ZhuLeYao"},"content":"     * @param task Task to be added to text file.","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"ZhuLeYao"},"content":"     * @param taskList Task list that updates with task changes.","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"ZhuLeYao"},"content":"     * @throws IOException if file cannot be loaded.","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"ZhuLeYao"},"content":"    public void saveListToFile(String command, Task task, TaskList taskList) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"ZhuLeYao"},"content":"        File file3 \u003d new File(this.filePathParent);","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"ZhuLeYao"},"content":"        if (!file3.exists()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"ZhuLeYao"},"content":"            file3.mkdir();","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"ZhuLeYao"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"ZhuLeYao"},"content":"        FileWriter file1 \u003d new FileWriter(file, true);","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"ZhuLeYao"},"content":"        BufferedWriter buffer \u003d new BufferedWriter(file1);","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"ZhuLeYao"},"content":"        DateTimeFormatter dateTimeFormatter1 \u003d","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"ZhuLeYao"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm a\");","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"ZhuLeYao"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"ZhuLeYao"},"content":"            String content \u003d \"T / \" + task.getTaskStatus() + \" / \" + task.getTask() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"ZhuLeYao"},"content":"            buffer.write(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"ZhuLeYao"},"content":"            String content \u003d \"D / \" + task.getTaskStatus() + \" / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"ZhuLeYao"},"content":"                    + task.getTask() + \" / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"ZhuLeYao"},"content":"                    + task.getDeadline().format(dateTimeFormatter1) + \"\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ZhuLeYao"},"content":"            buffer.write(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"ZhuLeYao"},"content":"            String content \u003d \"E / \" + task.getTaskStatus() + \" / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"ZhuLeYao"},"content":"                    + task.getTask() + \" / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"ZhuLeYao"},"content":"                    + task.getEventStartTime().format(dateTimeFormatter1) + \"-\"","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"ZhuLeYao"},"content":"                    + task.getEventEndTime().format(dateTimeFormatter1) + \"\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"ZhuLeYao"},"content":"            buffer.write(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"ZhuLeYao"},"content":"            FileReader file2 \u003d new FileReader(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"ZhuLeYao"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(file2);","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"ZhuLeYao"},"content":"            String[] str \u003d command.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"ZhuLeYao"},"content":"            int taskIndex \u003d Integer.parseInt(str[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"ZhuLeYao"},"content":"            String unchangedTasks \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"ZhuLeYao"},"content":"            for (int i \u003d 1; i \u003c taskIndex; i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + bufferedReader.readLine() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"ZhuLeYao"},"content":"            if (task.getTaskType().equals(\"[T]\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + \"T / [X] / \" + task.getTask() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (task.getTaskType().equals(\"[D]\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + \"D / [X] / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTask() + \" / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getDeadline().format(dateTimeFormatter1) + \"\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (task.getTaskType().equals(\"[E]\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + \"E / [X] / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTask() + \" / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getEventStartTime().format(dateTimeFormatter1) + \"-\"","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getEventEndTime().format(dateTimeFormatter1) + \"\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"ZhuLeYao"},"content":"            bufferedReader.readLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"ZhuLeYao"},"content":"            for (int i \u003d taskIndex + 1; i \u003c\u003d taskList.getNumberOfTask(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + bufferedReader.readLine() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"ZhuLeYao"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"ZhuLeYao"},"content":"            file1 \u003d new FileWriter(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"ZhuLeYao"},"content":"            buffer \u003d new BufferedWriter(file1);","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"ZhuLeYao"},"content":"            buffer.write(unchangedTasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"ZhuLeYao"},"content":"            FileReader file2 \u003d new FileReader(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"ZhuLeYao"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(file2);","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"ZhuLeYao"},"content":"            String[] str \u003d command.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"ZhuLeYao"},"content":"            int taskIndex \u003d Integer.parseInt(str[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"ZhuLeYao"},"content":"            String unchangedTasks \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"ZhuLeYao"},"content":"            for (int i \u003d 1; i \u003c taskIndex; i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + bufferedReader.readLine() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"ZhuLeYao"},"content":"            if (task.getTaskType().equals(\"[T]\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + \"T / [ ] / \" + task.getTask() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":161,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (task.getTaskType().equals(\"[D]\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + \"D / [ ] / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTask() + \" / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getDeadline().format(dateTimeFormatter1) + \"\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (task.getTaskType().equals(\"[E]\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + \"E / [ ] / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTask() + \" / \"","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getEventStartTime().format(dateTimeFormatter1) + \"-\"","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getEventEndTime().format(dateTimeFormatter1) + \"\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"ZhuLeYao"},"content":"            bufferedReader.readLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":172,"author":{"gitId":"ZhuLeYao"},"content":"            for (int i \u003d taskIndex + 1; i \u003c\u003d taskList.getNumberOfTask(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"ZhuLeYao"},"content":"                unchangedTasks \u003d unchangedTasks + bufferedReader.readLine() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"ZhuLeYao"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":176,"author":{"gitId":"ZhuLeYao"},"content":"            file1 \u003d new FileWriter(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":177,"author":{"gitId":"ZhuLeYao"},"content":"            buffer \u003d new BufferedWriter(file1);","lastModifiedDate":"2023-02-10"},{"lineNumber":178,"author":{"gitId":"ZhuLeYao"},"content":"            buffer.write(unchangedTasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":179,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"ZhuLeYao"},"content":"            FileReader file2 \u003d new FileReader(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"ZhuLeYao"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(file2);","lastModifiedDate":"2023-02-10"},{"lineNumber":182,"author":{"gitId":"ZhuLeYao"},"content":"            String undeletedTasks \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":183,"author":{"gitId":"ZhuLeYao"},"content":"            String[] str \u003d command.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"ZhuLeYao"},"content":"            int taskIndex \u003d Integer.parseInt(str[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":185,"author":{"gitId":"ZhuLeYao"},"content":"            for (int i \u003d 1; i \u003c taskIndex; i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"ZhuLeYao"},"content":"                undeletedTasks \u003d undeletedTasks + bufferedReader.readLine() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":187,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":188,"author":{"gitId":"ZhuLeYao"},"content":"            bufferedReader.readLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":189,"author":{"gitId":"ZhuLeYao"},"content":"            for (int i \u003d taskIndex; i \u003c\u003d taskList.getNumberOfTask(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":190,"author":{"gitId":"ZhuLeYao"},"content":"                undeletedTasks \u003d undeletedTasks + bufferedReader.readLine() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":191,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":192,"author":{"gitId":"ZhuLeYao"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":193,"author":{"gitId":"ZhuLeYao"},"content":"            file1 \u003d new FileWriter(file);","lastModifiedDate":"2023-02-10"},{"lineNumber":194,"author":{"gitId":"ZhuLeYao"},"content":"            buffer \u003d new BufferedWriter(file1);","lastModifiedDate":"2023-02-10"},{"lineNumber":195,"author":{"gitId":"ZhuLeYao"},"content":"            buffer.write(undeletedTasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":196,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":197,"author":{"gitId":"ZhuLeYao"},"content":"        buffer.close();","lastModifiedDate":"2023-02-10"},{"lineNumber":198,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":199,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"ZhuLeYao":199}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.main;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":" * Keeps track of and updates the list of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"public class TaskList {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"    private List\u003cTask\u003e allTasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"    TaskList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"        this.allTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"    TaskList(List\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"        this.allTasks \u003d allTasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"     * Updates relevant task\u0027s status as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"     * @param oldTask Task to be marked as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"     * @param taskIndex Index of task to be marked as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"     * @return New task that is marked as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"    public Task markTaskAsDone(Task oldTask, int taskIndex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"        if (oldTask.getTaskType().equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"            Todo todo \u003d new Todo(oldTask.getTaskNumber(),","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"                    true, oldTask.getTask(),","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"                    this.allTasks.size());","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"            this.allTasks.set(taskIndex, todo);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"            oldTask \u003d todo;","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (oldTask.getTaskType().equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"            Deadline deadline \u003d new Deadline(oldTask.getTaskNumber(),","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"                    true, oldTask.getTask(),","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"                    oldTask.getDeadline(), this.allTasks.size());","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"            this.allTasks.set(taskIndex, deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"            oldTask \u003d deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (oldTask.getTaskType().equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"            Event event \u003d new Event(oldTask.getTaskNumber(),","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"                    true, oldTask.getTask(),","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"                    oldTask.getEventStartTime(),","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"                    oldTask.getEventEndTime(), this.allTasks.size());","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"            this.allTasks.set(taskIndex, event);","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"            oldTask \u003d event;","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"        return oldTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"     * Updates relevant task\u0027s status as undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"     * @param oldTask Task to be unmarked as undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"     * @param taskIndex Index of task to be unmarked as undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"     * @return New task that is unmarked as undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"    public Task unmarkTaskAsUndone(Task oldTask, int taskIndex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"        if (oldTask.getTaskType().equals(\"[T]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"            Todo todo \u003d new Todo(oldTask.getTaskNumber(),","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"                    false, oldTask.getTask(),","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"                    this.allTasks.size());","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"            this.allTasks.set(taskIndex, todo);","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (oldTask.getTaskType().equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"            Deadline deadline \u003d new Deadline(oldTask.getTaskNumber(),","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"                    false, oldTask.getTask(),","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"                    oldTask.getDeadline(), this.allTasks.size());","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"            this.allTasks.set(taskIndex, deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"ZhuLeYao"},"content":"        } else if (oldTask.getTaskType().equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"ZhuLeYao"},"content":"            Event event \u003d new Event(oldTask.getTaskNumber(),","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"ZhuLeYao"},"content":"                    false, oldTask.getTask(),","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"ZhuLeYao"},"content":"                    oldTask.getEventStartTime(),","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"ZhuLeYao"},"content":"                    oldTask.getEventEndTime(), this.allTasks.size());","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"ZhuLeYao"},"content":"            this.allTasks.set(taskIndex, event);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"ZhuLeYao"},"content":"        return oldTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"ZhuLeYao"},"content":"     * Deletes task from task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"ZhuLeYao"},"content":"     * @param taskIndex Index of task to be deleted.","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"ZhuLeYao"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"ZhuLeYao"},"content":"        this.allTasks.remove(taskIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"ZhuLeYao"},"content":"     * Adds task to task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"ZhuLeYao"},"content":"     * @param task Task to be added to task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"ZhuLeYao"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"ZhuLeYao"},"content":"        this.allTasks.add(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"ZhuLeYao"},"content":"     * Shows all tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"ZhuLeYao"},"content":"     * @return List of existing tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"ZhuLeYao"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"ZhuLeYao"},"content":"        return this.allTasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets a specific task based on its index.","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"ZhuLeYao"},"content":"     * @param index Index of task to be retrieved.","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Task that is retrieved.","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"ZhuLeYao"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"ZhuLeYao"},"content":"        return this.allTasks.get(index);","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets total number of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Total number of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"ZhuLeYao"},"content":"    public int getNumberOfTask() {","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"ZhuLeYao"},"content":"        return this.allTasks.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"ZhuLeYao":128}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.main;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":" * Prints responses to commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"public class Ui {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints greeting message when app is started.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"    public void printGreetingMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t What can I do for you?\"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints a list of current tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"     * @param allTasks List of all existing tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"    public void printCommandList(List\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"        DateTimeFormatter dateTimeFormatter1 \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm a\");","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"            int numbering \u003d i + 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"            Task task \u003d allTasks.get(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"            String time \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"            if (task.getTaskType().equals(\"[D]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"                time \u003d \" (by: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getDeadline().format(dateTimeFormatter1) + \")\";","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (task.getTaskType().equals(\"[E]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"                time \u003d \" (from: \" + task.getEventStartTime().format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"                        + \" to: \" + task.getEventEndTime().format(dateTimeFormatter1) + \")\";","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"            System.out.println(\"\\t \" + numbering + \".\" + task.getTaskType() + task.getTaskStatus() + \" \"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"                    + task.getTask() + time);","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints a list of deadlines or events happening on this day.","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"     * @param dateTime Date that user wants to find tasks on.","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"     * @param allTasks List of all existing tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"    public void printDeadlineOrEventsOnDay(LocalDate dateTime, TaskList allTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"        DateTimeFormatter dateTimeFormatter1 \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm a\");","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t Here are the tasks in your list at this day:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"ZhuLeYao"},"content":"        int numbering \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"ZhuLeYao"},"content":"        for (int i \u003d 0; i \u003c allTasks.getNumberOfTask(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"ZhuLeYao"},"content":"            Task task \u003d allTasks.getTask(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"ZhuLeYao"},"content":"            String time \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"ZhuLeYao"},"content":"            if (task.getTaskType().equals(\"[D]\") \u0026\u0026 task.getDate().equals(dateTime)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ZhuLeYao"},"content":"                time \u003d \" (by: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getDeadline().format(dateTimeFormatter1) + \")\";","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ZhuLeYao"},"content":"                System.out.println(\"\\t \" + numbering + \".\"","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTaskType() + task.getTaskStatus() + \" \"","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTask() + time);","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"ZhuLeYao"},"content":"                numbering +\u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (task.getTaskType().equals(\"[E]\") \u0026\u0026 task.getDate().equals(dateTime)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"ZhuLeYao"},"content":"                time \u003d \" (from: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getEventStartTime().format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"ZhuLeYao"},"content":"                        + \" to: \"","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getEventEndTime().format(dateTimeFormatter1)","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"ZhuLeYao"},"content":"                        + \")\";","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"ZhuLeYao"},"content":"                System.out.println(\"\\t \" + numbering + \".\"","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTaskType() + task.getTaskStatus() + \" \"","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTask() + time);","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"ZhuLeYao"},"content":"                numbering +\u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints a list of tasks contains keyword.","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"ZhuLeYao"},"content":"     * @param keyword Keyword that user wants to search for relevant","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"ZhuLeYao"},"content":"     *                tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"ZhuLeYao"},"content":"     * @param allTasks List of all existing tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"ZhuLeYao"},"content":"    public void printFindResults(String keyword, TaskList allTasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"ZhuLeYao"},"content":"        DateTimeFormatter dateTimeFormatter1 \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"ZhuLeYao"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm a\");","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"ZhuLeYao"},"content":"        int numbering \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"ZhuLeYao"},"content":"        for (int i \u003d 0; i \u003c allTasks.getNumberOfTask(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"ZhuLeYao"},"content":"            Task task \u003d allTasks.getTask(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ZhuLeYao"},"content":"            String time \u003d \"\";","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"ZhuLeYao"},"content":"            if (task.getTaskType().equals(\"[D]\") \u0026\u0026","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"ZhuLeYao"},"content":"                    task.getTask().contains(keyword)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"ZhuLeYao"},"content":"                time \u003d \" (by: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getDeadline().format(dateTimeFormatter1) + \")\";","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"ZhuLeYao"},"content":"                System.out.println(\"\\t \" + numbering + \".\"","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTaskType() + task.getTaskStatus() + \" \"","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTask() + time);","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"ZhuLeYao"},"content":"                numbering +\u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"ZhuLeYao"},"content":"            } else if (task.getTaskType().equals(\"[E]\") \u0026\u0026","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"ZhuLeYao"},"content":"                    task.getTask().contains(keyword)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"ZhuLeYao"},"content":"                time \u003d \" (from: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getEventStartTime().format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"ZhuLeYao"},"content":"                        + \" to: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getEventEndTime().format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"ZhuLeYao"},"content":"                        + \")\";","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"ZhuLeYao"},"content":"                System.out.println(\"\\t \" + numbering + \".\"","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTaskType() + task.getTaskStatus() + \" \"","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"ZhuLeYao"},"content":"                        + task.getTask() + time);","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"ZhuLeYao"},"content":"                numbering +\u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"ZhuLeYao"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints exit message when app is terminated.","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"ZhuLeYao"},"content":"    public void printByeMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Bye. Hope to see you again soon!\"","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"ZhuLeYao"},"content":"     * Reads command from user.","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Command typed by user.","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"ZhuLeYao"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"ZhuLeYao"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints any file loading error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"ZhuLeYao"},"content":"     * @param message Error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"ZhuLeYao"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"ZhuLeYao":166}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.task;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":" * Represents task type of deadline.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"    private final String taskType;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"    private final LocalDateTime taskDeadline;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"    DateTimeFormatter dateTimeFormatter1 \u003d","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm a\");","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"    public Deadline(int taskNumber, boolean taskStatus, String task, LocalDateTime taskDeadline, int totalNumOfTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"        super(taskNumber, taskStatus, task, totalNumOfTasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"        this.taskType \u003d \"[D]\";","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"        this.taskDeadline \u003d taskDeadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is marked as done when task is done.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t  \" + this.taskType + \"[X]\" + \" \" + super.task","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"                + \" (by: \" + this.taskDeadline.format(dateTimeFormatter1) + \")\"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is marked as not done when task is unmarked.","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"    public void unmarkAsUndone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t  \" + this.taskType + \"[ ]\" + \" \" + super.task","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"                + \" (by: \" + this.taskDeadline.format(dateTimeFormatter1) + \")\"","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints task information when added to task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"    public void printDeadlineTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Got it. I\u0027ve added this task:\"","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t   [D]\" + super.getTaskStatus() + \" \" + super.task","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"                + \"(by: \" + this.taskDeadline.format(dateTimeFormatter1) + \")\"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Now you have \" + super.totalNumOfTasks + \" tasks in the list.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is deleted.","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"    public void printDelete(List\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"        int newTotalNumOfTasks \u003d allTasks.size() - 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Noted. I\u0027ve removed this task:\" + \"\\n\\t   \" + this.taskType","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"                + super.getTaskStatus() + \" \" + super.task + \" (by: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"                + this.taskDeadline.format(dateTimeFormatter1) + \")\"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Now you have \" + newTotalNumOfTasks + \" tasks in the list.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"ZhuLeYao"},"content":"     * Returns that this is a deadline task type.","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Type of task.","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"ZhuLeYao"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"ZhuLeYao"},"content":"        return this.taskType;","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets task deadline.","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date and time of deadline.","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"ZhuLeYao"},"content":"        return this.taskDeadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets date of task deadline.","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date of deadline.","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"ZhuLeYao"},"content":"        return this.taskDeadline.toLocalDate();","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"ZhuLeYao":103}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.task;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":" * Represents task type of event.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"    private final String taskType;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"    private final LocalDateTime eventStartTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"    private final LocalDateTime eventEndTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"    DateTimeFormatter dateTimeFormatter1 \u003d","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm a\");","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"    public Event(int taskNumber, boolean taskStatus, String task,","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"                 LocalDateTime eventStartTime, LocalDateTime eventEndTime, int totalNumOfTasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"        super(taskNumber, taskStatus, task, totalNumOfTasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"        this.taskType \u003d \"[E]\";","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is marked as done when task is done.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t  \" + this.taskType + \"[X]\" + \" \" + super.task","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"                + \" (from: \" + this.eventStartTime.format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"                + \" to: \"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"                + this.eventEndTime.format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is marked as not done when task is unmarked.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"    public void unmarkAsUndone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t  \" + this.taskType + \"[ ]\" + \" \" + super.task","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"                + \" (from: \" + this.eventStartTime.format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"                + \" to: \"","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"                + this.eventEndTime.format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints task information when added to task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"    public void printEventTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Got it. I\u0027ve added this task:\"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t   [E]\" + super.getTaskStatus() + \" \" + super.task","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"                + \"(from: \" + this.eventStartTime.format(dateTimeFormatter1)","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"                + \" to: \" + this.eventEndTime.format(dateTimeFormatter1) + \")\"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Now you have \" + super.totalNumOfTasks + \" tasks in the list.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is deleted.","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"ZhuLeYao"},"content":"    public void printDelete(List\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"ZhuLeYao"},"content":"        int newTotalNumOfTasks \u003d allTasks.size() - 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Noted. I\u0027ve removed this task:\" + \"\\n\\t   \" + this.taskType","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"ZhuLeYao"},"content":"                + super.getTaskStatus() + \" \" + super.task + \" (from: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"ZhuLeYao"},"content":"                + this.eventStartTime.format(dateTimeFormatter1) + \" to: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ZhuLeYao"},"content":"                + this.eventEndTime.format(dateTimeFormatter1) + \")\" + \"\\n\\t Now you have \"","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ZhuLeYao"},"content":"                + newTotalNumOfTasks + \" tasks in the list.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"ZhuLeYao"},"content":"     * Returns that this is an event task type.","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Task type.","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"ZhuLeYao"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"ZhuLeYao"},"content":"        return this.taskType;","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"ZhuLeYao"},"content":"     * Get the starting time of event.","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date and time of event start time.","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDateTime getEventStartTime() {","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"ZhuLeYao"},"content":"        return this.eventStartTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"ZhuLeYao"},"content":"     * Get the ending time of event.","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date and time of event end time.","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDateTime getEventEndTime() {","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"ZhuLeYao"},"content":"        return this.eventEndTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ZhuLeYao"},"content":"     * Get the date of event.","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date of event.","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"ZhuLeYao"},"content":"        return this.eventStartTime.toLocalDate();","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"ZhuLeYao":122}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.task;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":" * Represents a Task.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":" * Task information are stored here.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"public class Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"    protected final int taskNumber;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"    protected final boolean taskStatus;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"    protected final String task;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"    protected final int totalNumOfTasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"    Task(int taskNumber, boolean taskStatus, String task, int totalNumOfTasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"        this.taskStatus \u003d taskStatus;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"        this.totalNumOfTasks \u003d totalNumOfTasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is marked as done when task is done.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t  \" + \"[X]\" + \" \" + this.task","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is marked as not done when task is unmarked.","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"    public void unmarkAsUndone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t  \" + \"[ ]\" + \" \" + this.task","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is deleted.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"    public void printDelete(List\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"        int allTaskSize \u003d allTasks.size() - 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Noted. I\u0027ve removed this task:\" + \"\\n\\t   \"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"                + this.getTaskStatus() + \" \" + this.task","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Now you have \" + allTaskSize + \" tasks in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets task number.","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Index of task on task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"        return this.taskNumber;","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets type of task.","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"     * Returns empty string as parent class is not a specific type of","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"     * task.","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"     * @return String of task type.","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"ZhuLeYao"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"ZhuLeYao"},"content":"        return \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets whether task is done.","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ZhuLeYao"},"content":"     * @return String of brackets that fills with X if task is done.","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"ZhuLeYao"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"ZhuLeYao"},"content":"        if (!this.taskStatus) {","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"ZhuLeYao"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"ZhuLeYao"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"ZhuLeYao"},"content":"            return \"[X]\";","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"ZhuLeYao"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets task.","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Task.","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"ZhuLeYao"},"content":"    public String getTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"ZhuLeYao"},"content":"        return this.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets deadline.","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"ZhuLeYao"},"content":"     * Returns null as parent class does not require deadlines.","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date and time of deadline.","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"ZhuLeYao"},"content":"        return null;","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets event start time.","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"ZhuLeYao"},"content":"     * Returns null as parent class does not have a start time.","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date and time of event start time.","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDateTime getEventStartTime() {","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"ZhuLeYao"},"content":"        return null;","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets event start time.","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"ZhuLeYao"},"content":"     * Returns null as parent class does not have an end time.","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date and time of event end time.","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDateTime getEventEndTime() {","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"ZhuLeYao"},"content":"        return null;","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"ZhuLeYao"},"content":"     * Gets task date.","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"ZhuLeYao"},"content":"     * Returns null as parent class does not have a date required.","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Date of task.","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"ZhuLeYao"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"ZhuLeYao"},"content":"        return null;","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"ZhuLeYao"},"content":"     * Overrides default equal method such that same type of object","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"ZhuLeYao"},"content":"     * can pass Junit test.","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"ZhuLeYao"},"content":"     * @param o Object to be compared to.","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Boolean of whether object has same class.","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"ZhuLeYao"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"ZhuLeYao"},"content":"        return getClass() \u003d\u003d o.getClass();","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"ZhuLeYao":149}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.task;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.List;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":" * Represents task type of event.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"    private final String taskType;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"    public Todo(int taskNumber, boolean taskStatus, String task, int totalNumOfTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"        super(taskNumber, taskStatus, task, totalNumOfTasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"        this.taskType \u003d \"[T]\";","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is marked as done when task is done.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t  \" + this.taskType + \"[X]\" + \" \" + this.task","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is marked as not done when task is unmarked.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"    public void unmarkAsUndone() {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\t  \" + this.taskType + \"[ ]\" + \" \" + this.task","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints task information when added to task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ZhuLeYao"},"content":"    public void printToDoTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Got it. I\u0027ve added this task:\"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t   [T]\" + super.getTaskStatus() + \" \" + super.task","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Now you have \" + super.totalNumOfTasks + \" tasks in the list.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ZhuLeYao"},"content":"     * Prints that task is deleted.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"ZhuLeYao"},"content":"    public void printDelete(List\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"ZhuLeYao"},"content":"        int newTotalNumOfTasks \u003d allTasks.size() - 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"ZhuLeYao"},"content":"        System.out.println(\"\\t____________________________________________________________\"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Noted. I\u0027ve removed this task:\" + \"\\n\\t   \" + this.taskType","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ZhuLeYao"},"content":"                + super.getTaskStatus() + \" \" + super.task","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t Now you have \" + newTotalNumOfTasks + \" tasks in the list.\"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"ZhuLeYao"},"content":"                + \"\\n\\t____________________________________________________________\");","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"ZhuLeYao"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"ZhuLeYao"},"content":"     * Returns that this is a todo task type.","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"ZhuLeYao"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"ZhuLeYao"},"content":"     * @return Task type.","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"ZhuLeYao"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"ZhuLeYao"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"ZhuLeYao"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"ZhuLeYao"},"content":"        return this.taskType;","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"ZhuLeYao":71}},{"path":"src/test/java/duke/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.main;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"    Todo todoOne, todoTwo, todoThree, todoFour;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"    TaskList taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"    List\u003cTask\u003e allTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"    void setUp() {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"        todoOne \u003d new Todo(1, true, \"eat food\", 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"        todoTwo \u003d new Todo(2, false, \"buy food\", 2);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ZhuLeYao"},"content":"        todoThree \u003d new Todo(2, true, \"buy food\", 2);","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ZhuLeYao"},"content":"        todoFour \u003d new Todo(1, false, \"eat food\", 2);","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"        allTask.add(todoOne);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ZhuLeYao"},"content":"        allTask.add(todoTwo);","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ZhuLeYao"},"content":"        taskList \u003d new TaskList(allTask);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ZhuLeYao"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ZhuLeYao"},"content":"    public void markAsDoneTest() {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ZhuLeYao"},"content":"        assertEquals(todoThree, taskList.markTaskAsDone(todoTwo, 0));","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ZhuLeYao"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ZhuLeYao"},"content":"    public void unmarkAsUndoneTest() {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ZhuLeYao"},"content":"        assertEquals(todoFour, taskList.unmarkTaskAsUndone(todoOne, 0));","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ZhuLeYao":36}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"package duke.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ZhuLeYao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ZhuLeYao"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ZhuLeYao"},"content":"    Todo todo;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ZhuLeYao"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ZhuLeYao"},"content":"        todo \u003d new Todo(1, false, \"buy food\", 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ZhuLeYao"},"content":"        assertEquals(\"buy food\", todo.getTask());","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ZhuLeYao"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ZhuLeYao"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"    public void getTaskStatusTest() {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ZhuLeYao"},"content":"        todo \u003d new Todo(1, false, \"buy food\", 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"        assertEquals(\"[ ]\", todo.getTaskStatus());","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ZhuLeYao"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ZhuLeYao"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ZhuLeYao":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZhuLeYao"},"content":"todo borrow book","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"ZhuLeYao"},"content":"list","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ZhuLeYao"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"ZhuLeYao"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"ZhuLeYao":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ZhuLeYao"},"content":"javac  -cp \\Users\\leyaozhu\\Documents\\NUS\\CS2103\\ip\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ZhuLeYao"},"content":"java -classpath \\Users\\leyaozhu\\Documents\\NUS\\CS2103\\ip\\src\\main\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZhuLeYao":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ZhuLeYao"},"content":"if ! javac -cp /Users/leyaozhu/Documents/NUS/CS2103/ip/src/main/java -Xlint:none -d /Users/leyaozhu/Documents/NUS/CS2103/ip/bin /Users/leyaozhu/Documents/NUS/CS2103/ip/src/main/java/*.java","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ZhuLeYao"},"content":"java -classpath /Users/leyaozhu/Documents/NUS/CS2103/ip/src/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZhuLeYao":2,"-":36}}]
