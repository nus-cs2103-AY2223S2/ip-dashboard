[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zxun2":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"    mainClassName \u003d \"gui.Launcher\"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"checkstyle {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"jar {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    manifest {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        attributes(","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"                \u0027Main-Class\u0027: \u0027gui.Launcher\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"        )","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zxun2":30,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"# User Guide to  Duke ","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"\u003ch2 align\u003d\"center\"\u003e Your Personal Chatbot Assistant \u003c/h2\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"\u003cimg width\u003d\"500\" src\u003d\"./images/start.png\" alt\u003d\"main view of application\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"- [Features](#features)","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    * [Create a Task](#create-a-task)","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"      * [Add Todo task](#add-todo-task)","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"      * [Add Deadline task](#add-deadline-task)","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"      * [Add Event task](#add-event-task)","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    * [List All Tasks](#list-all-tasks)","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"      * [List All Events](#list-all-events) ","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"      * [List All Todos](#list-all-todos)","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"      * [List All Deadlines](#list-all-deadlines)","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    * [Mark Task](#mark-task) ","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    * [Unmark Task](#unmark-task)","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    * [Delete Task](#delete-task) ","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    * [Find Task](#find-tasks)","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    * [Undo command](#undo)","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    * [Checkout version](#checkout)","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    * [Saving data](#saving-the-data)","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    * [Bye](#bye)","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"## Introduction","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"Hello! I am a chatbot designed to help you keep track of your tasks and manage your projects. ","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"With me, you can create and organize to-do lists, set deadlines, and assign tasks to team members. ","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"I also have version control capabilities, which means you can keep track of changes and updates to your projects, ","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"ensuring that everyone is on the same page. Whether you\u0027re working on a personal project or collaborating with a team, ","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"I am here to make task management simple and efficient. Let\u0027s get started!","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"## Quick Start","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"2. You can check whether Java 11 is installed by opening your terminal window and running the command `java -version`","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"3. If Java 11 is not installed, please download Java 11 from [Oracle](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"4. For Mac users, you may use the [Azul build of OpenJDK 11 (JDK FX) version](https://www.azul.com/downloads/?version\u003djava-11-lts\u0026os\u003dmacos\u0026architecture\u003darm-64-bit\u0026package\u003djdk-fx).","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"5. Download the latest duke.jar from [the application\u0027s release page](https://github.com/Zxun2/ip/releases/tag/v0.2).","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"6. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"7. Double-click the file to start the app.","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"8. When the application is running, click on the \"help\" icon on the top right to view a list of available commands.","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"## Command Summary","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"| Index |   Command to Use    |                   Format                    |                        examples                         |","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"|:-----:|:-------------------:|:-------------------------------------------:|:-------------------------------------------------------:|","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"|   1   | Add a Deadline task |   `deadline \u003cdescription\u003e /by \u003cdeadline\u003e`   |         `deadline homework due /by 2023-02-02`          |","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"|   2   |  Add an Event task  | `event \u003cdescription\u003e /from \u003cfrom\u003e /to \u003cto\u003e` | `event project meeting /from 2023-02-02 /to 2023-12-01` |","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"|   3   |   Add a Todo task   |            `todo \u003cdescription\u003e`             |                   `todo borrow book`                    |","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"|   4   |    Delete a task    |               `delete \u003ctask\u003e`               |                       `delete 1`                        |","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"|   5   |    Find task(s)     |            `find \u003cdescription\u003e`             |                     `find homework`                     |","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"|   6   |   List all tasks    |        `list \u003cevent/deadline/todo\u003e?`        |                         `list`                          |","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"|  10   |     Mark a task     |                `mark \u003ctask\u003e`                |                        `mark 1`                         |","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"|  11   |    Unmark a task    |               `unmark \u003ctask\u003e`               |                       `unmark 1`                        |","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"|  12   |     Undo action     |                   `undo`                    |                       `unmark 1`                        |","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"|  13   |  Checkout version   |            `checkout \u003cversion\u003e?`            |                       `unmark 1`                        |","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"|  14   |  Terminate session  |                    `bye`                    |                          `bye`                          |","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"**Notes about the command format**","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"- Words enclosed in diamond brackets `\u003c\u003e` are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"- `?` after `\u003c\u003e` indicates that the argument is optional, and the user may choose not to specify it.","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"- Parameters must respect the order of the command format","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"- Extra parameters for commands that do not take in parameters will be ignored.","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"In Duke, there are 3 types of tasks:","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"- **Deadline `D`**: Used when there are deadlines to meet, and you need to keep track of what to do","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"- **Event `E`**: Used when there is an event that you need to attend, and you need to keep track of it","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"- **ToDo `T`**: The most fundamental type of tasks that denote an item that you intend to accomplish","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"All tasks come with the ability to be described, and support marking or unmarking tasks as completed.","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"### Create a task","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"Tasks are created and stored locally in a `.txt` file under the `data` folder.","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"#### Add Todo Task","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"The `todo \u003cdescription\u003e` command adds a Todo task to your task list. It takes in a single argument, which is the description of the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"Example:  `todo homework`","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"Expected Outcome: ","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"    [T] [ ] homework","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"#### Add Deadline Task","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"The `deadline \u003cdescription\u003e /by \u003cdeadline\u003e` command adds a Deadline task to your task list. It takes in two arguments, the first is the description of the task and the second is the deadline of the task in the format of `/by \u003cDateTime\u003e`.","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"Example: `deadline return book /by 2023-02-13`","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"Zxun2"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"Zxun2"},"content":"    [D] [ ] return book (by: monday, Feb 13 2023)","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"Zxun2"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"Zxun2"},"content":"#### Add Event Task","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"Zxun2"},"content":"The `event \u003cdescription\u003e /from \u003cDateTime\u003e /to \u003cDateTime\u003e` command allows you to add an Event task to your task list. It takes in three arguments, the first is the description of the task, the second is the start time of the event in the format of `/from \u003cDateTime\u003e`, and the third is the end time of the event in the format of `/to \u003cDateTime\u003e`.","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"Zxun2"},"content":"Example: `event homework /from 2023-02-13 /to 2023-03-11`","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"Zxun2"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"Zxun2"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"Zxun2"},"content":"    [E] [ ] project meeting (from: Feb 13 2023 to Mar 11 2023)","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"Zxun2"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"Zxun2"},"content":"### List All Tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"Zxun2"},"content":"In Duke, you can easily view the list of tasks. The `list` command allows you to view all tasks in your task list. ","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"Zxun2"},"content":"It takes in 3 optional arguments and will show the description, deadline (if any), and start and end time (if any) for each task in the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"Zxun2"},"content":"#### List All Events","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"Zxun2"},"content":"Example: `list event`","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"Zxun2"},"content":"Expected Outcome: ","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"Zxun2"},"content":"1.  [E] [ ] project meeting (from: Feb 13 2023 to Mar 11 2023)","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"Zxun2"},"content":"#### List All Todos","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"Zxun2"},"content":"Example: `list todo`","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"Zxun2"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"Zxun2"},"content":"1.  [T] [ ] project meeting ","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"Zxun2"},"content":"#### List All Deadlines","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"Zxun2"},"content":"Example: `list deadline`","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"Zxun2"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"Zxun2"},"content":"1.  [D] [ ] return book (by: monday, Feb 13 2023)","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"Zxun2"},"content":"### Mark Task","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"Zxun2"},"content":"The `mark \u003ctask\u003e` command allows you to mark a task as done in your task list. It takes in one argument, the index of the task you want to mark as done.","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"Zxun2"},"content":"Example: `mark 1`","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"Zxun2"},"content":"Expected Outcome: ","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"Zxun2"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"Zxun2"},"content":"    [X] Do Assignment 1 ","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"Zxun2"},"content":"### Unmark Task","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"Zxun2"},"content":"The `unmark \u003ctask\u003e` command allows you to unmark a task that you previously marked as done. It takes in a single argument which is the index of the task you want to unmark.","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"Zxun2"},"content":"Example: `unmark 1`","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"Zxun2"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"Zxun2"},"content":"Ok, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"Zxun2"},"content":"    [ ] Do Assignment 1","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"Zxun2"},"content":"### Delete Task","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"Zxun2"},"content":"The `delete \u003ctask\u003e` command allows you to delete a task from your task list. It takes in a single argument which is the index of the task you want to delete.","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"Zxun2"},"content":"Example: `delete 1`","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"Zxun2"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"Zxun2"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"Zxun2"},"content":"    [T][X] Do Assignment 1 ","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"Zxun2"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"Zxun2"},"content":"### Find Tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"Zxun2"},"content":"The `find \u003cdescription...\u003e` command allows you to find tasks in your task list based on their descriptions. ","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"Zxun2"},"content":"It takes in one or more arguments which are the keywords you want to search for,","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"Zxun2"},"content":"Example: `find homework`","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"Zxun2"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"Zxun2"},"content":"Here are the tasks matching \"homework\":","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"Zxun2"},"content":"[T][ ] homework ","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"Zxun2"},"content":"[T][ ] Do homework for math class","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"Zxun2"},"content":"### Undo","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"Zxun2"},"content":"The \"undo\" action refers to the ability to reverse or cancel the previous action taken by the user. ","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"Zxun2"},"content":"For example, if the user accidentally adds a task, they can use the undo action to remove it from the task list. ","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"Zxun2"},"content":"The undo action can also be used to revert any changes made to an existing task, such as editing its description or ","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"Zxun2"},"content":"marking it as complete. Essentially, the undo action allows the user to correct mistakes or change their mind without having to start over from scratch.","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"Zxun2"},"content":"Example: `undo`","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"Zxun2"},"content":"Expected Outcome: ","lastModifiedDate":"2023-02-11"},{"lineNumber":206,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":207,"author":{"gitId":"Zxun2"},"content":"State has successfully reverted to the last changes.","lastModifiedDate":"2023-02-11"},{"lineNumber":208,"author":{"gitId":"Zxun2"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"Zxun2"},"content":"### Checkout","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"Zxun2"},"content":"The application records each change made to the state of the application and provides an overview of the complete history of the project.","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"Zxun2"},"content":"This makes it possible to revert to a previous version of the project if necessary, or to compare different versions to see how the project has evolved.","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"Zxun2"},"content":"Example: `checkout`","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"Zxun2"},"content":"### Saving the data","lastModifiedDate":"2023-02-11"},{"lineNumber":217,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"Zxun2"},"content":"Duke\u0027s data is saved in a local file automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":220,"author":{"gitId":"Zxun2"},"content":"### Bye","lastModifiedDate":"2023-02-11"},{"lineNumber":221,"author":{"gitId":"Zxun2"},"content":"Terminates the application.","lastModifiedDate":"2023-02-11"},{"lineNumber":222,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":223,"author":{"gitId":"Zxun2"},"content":"Example of usage:","lastModifiedDate":"2023-02-11"},{"lineNumber":224,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":225,"author":{"gitId":"Zxun2"},"content":"`bye`","lastModifiedDate":"2023-02-11"},{"lineNumber":226,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"Zxun2"},"content":"Expected outcome:","lastModifiedDate":"2023-02-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":230,"author":{"gitId":"Zxun2"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Zxun2":214,"-":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":" * Represents the Duke Chat bot.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" * Running a duke object loads data from the specified file into memory,","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" * and exiting the program writes data to the hard disk.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"public class Duke {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    private static CacheManager cacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"     * Duke Constructor for initializing the duke.Duke Object.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * @param filename location of Storage","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public Duke(String filename) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        Storage storage \u003d new Storage(filename);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"            cacheManager \u003d new CacheManager(storage);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     * Retrieves the command for the given command string.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     * @param input The given command string","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     * @return Status of the command execution","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            return cmd.execute(() -\u003e cacheManager);","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"            return \"[ERROR]: \" + e.getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Zxun2":45}},{"path":"src/main/java/duke/controllers/CheckoutCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" * Represents the Checkout Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" * It allows the user to check out to a specified version of their program.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"public class CheckoutCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern VALID_CMD \u003d Pattern.compile(\"^(checkout)(?\u003cversion\u003e ([1-9]|10))?$\");","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * Initializes a Checkout instance.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @param args The parsed arguments.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public CheckoutCommand(String args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.CHECKOUT);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     * The function to call when the command is executed in the main event loop.","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     * @param store In-memory store that holds all existing tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException Throws an exception when something goes wrong.","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e store) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        CacheManager cacheManager \u003d store.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        Matcher matcher \u003d VALID_CMD.matcher(args);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            String version \u003d matcher.group(\"version\");","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"            return cacheManager.checkout(version);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(INVALID_FORMAT_ERROR + \" \" + \"Please ensure you follow: checkout [version]\");","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Zxun2":46}},{"path":"src/main/java/duke/controllers/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.utils.IExecutable;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" * Command represents an abstraction over the inputs to the duke chatbot.","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"public abstract class Command implements IExecutable\u003cCacheManager\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    protected static final String INVALID_FORMAT_ERROR \u003d \"Invalid format.\";","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    protected static final Pattern VALID_NUMBER \u003d Pattern.compile(\"[-+]?\\\\d+\");","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    /** The associated type of command **/","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    private final CommandType commandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    /** Indicates if the program should terminate after executing the command **/","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    private boolean isTerminating \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    public Command(CommandType cmdType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        this.commandType \u003d cmdType;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     * Initializes a new Command with the specified type and termination.","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     * @param cmdType A command type.","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * @param isTerminating Termination command.","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    public Command(CommandType cmdType, boolean isTerminating) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        this.commandType \u003d cmdType;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        this.isTerminating \u003d isTerminating;","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"     * The function to call when the command is executed in the main event loop.","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"     * @param store In-memory store that holds all existing tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException Throws an exception when something goes wrong.","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    public abstract String execute(Supplier\u003c? extends CacheManager\u003e store) throws DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"    public boolean isTerminating() {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"        return isTerminating;","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":51}},{"path":"src/main/java/duke/controllers/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.utils.CustomValidator;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" * Represents the DateCommand.","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" * The date command can be used to determine active tasks on a certain date.","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    /** Date validation regex **/","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern VALID_DATE \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})-(?\u003cmonth\u003e0[0-9]|1[0-2])-(?\u003cday\u003e0[0-9]|1[0-9]|2[0-9]|3[0-1])$\");","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     * Initializes the Date Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"     * @param args The parsed arguments.","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    public DateCommand(String args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.DATE);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     * This method parses the command to verify and filter tasks with the date specified.","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        CacheManager store \u003d taskList.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        boolean valid \u003d CustomValidator.validate(args.strip(), input -\u003e VALID_DATE.matcher(input).find());","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"        if (valid) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"            return store.filter(task -\u003e task.isActiveOn(LocalDate.parse(args.split(\" \")[1])),","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"                    \"There are no active tasks on this date!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"            String dateFormatError \u003d INVALID_FORMAT_ERROR + \" \" + \"Please ensure you follow: date [yyyy-mm-dd]\";","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(dateFormatError);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Zxun2":48}},{"path":"src/main/java/duke/controllers/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" * Represents the Deadline Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" * The deadline command can be used to add a new task with a deadline.","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * Initializes a Deadline Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @param arguments The parsed arguments.","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public DeadlineCommand(String arguments) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.DEADLINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * This method verify the command and add a new task with the deadline specified.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        CacheManager store \u003d taskList.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        Matcher mDeadline \u003d Task.DEADLINE.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        return Task.processTask(mDeadline, TaskType.DEADLINE, store);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":39}},{"path":"src/main/java/duke/controllers/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" * Represents the Delete Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" * The delete command can be used to remove a task.","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"     * Initializes a Delete Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * @param args The parsed arguments.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public DeleteCommand(String args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.DELETE);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     * The method verifies the command and delete the task specified.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        CacheManager store \u003d taskList.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        Matcher m \u003d VALID_NUMBER.matcher(args);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        if (m.find()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"            return store.deleteTask(Integer.parseInt(m.group()));","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(INVALID_FORMAT_ERROR + \" \" + \"Please ensure you follow: delete [task]\");","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":41}},{"path":"src/main/java/duke/controllers/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" * Represents the Event Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" * The event command can be used to add a new task with a from date and to date.","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * Initializes an Event Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @param arguments The parsed arguments.","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public EventCommand(String arguments) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.EVENT);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * The method verifies the command and add a new task with the specified from and to dates.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        CacheManager store \u003d taskList.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        Matcher mEvent \u003d Task.EVENT.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        return Task.processTask(mEvent, TaskType.EVENT, store);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":39}},{"path":"src/main/java/duke/controllers/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" * Represents the find command.","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" * Parses through each task and check if it contains the specified string.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    /** Valid filter regex **/","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern VALID_FILTER \u003d Pattern.compile(\"^(?\u003ccmd\u003efind) (?\u003cfilter\u003e.+)$\");","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * Instantiates the find command.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     * @param args The args of the command.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    public FindCommand(String args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.FIND);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * The method verifies the command and filters tasks based on the filter string.","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e store) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        CacheManager cacheManager \u003d store.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        Matcher matcher \u003d VALID_FILTER.matcher(args);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            return cacheManager.filter((task -\u003e task.matchString(matcher.group(\"filter\"))),","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"                    \"There are no tasks with this description.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(INVALID_FORMAT_ERROR + \" \" + \"Please ensure you follow: filter [filter]\");","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Zxun2":46}},{"path":"src/main/java/duke/controllers/GoodbyeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" * Represents the Goodbye Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":" * The goodbye command can be used to terminate the program and save date to hard disk.","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"public class GoodbyeCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private static final String message \u003d \"Goodbye!\";","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    public GoodbyeCommand() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.BYE, true);","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     * The method returns a terminating goodbye message.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e taskList) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        return message;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":27}},{"path":"src/main/java/duke/controllers/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" * Represents the List Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" * The list command can be used to list all tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    /** Valid list command regex **/","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern VALID_LIST_CMD \u003d","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"^(list\\\\s*)((?\u003cfilter\u003etodo|deadline|event)\\\\s*$)?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    private final String arguments;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     * Initializes a list command.","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    public ListCommand(String arguments) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.LIST);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * The method verifies the command and list all tasks in the store.","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e store) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        CacheManager cacheManager \u003d store.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        Matcher matcher \u003d VALID_LIST_CMD.matcher(arguments);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            String filter \u003d matcher.group(\"filter\");","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"            TaskType type \u003d Optional.ofNullable(filter)","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"                    .map(enumTask -\u003e TaskType.valueOf(enumTask.trim().toUpperCase()))","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"                    .orElse(TaskType.ALL);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"            return cacheManager.listTasks(task -\u003e type.isAll() || task.getTaskType() \u003d\u003d type, type.isAll());","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(INVALID_FORMAT_ERROR);","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":50}},{"path":"src/main/java/duke/controllers/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" * Represents the Mark Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" * The mark command can be used to mark a task as completed.","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"     * Initializes a Mark Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * @param args The parsed arguments.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public MarkCommand(String args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.MARK);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     * The method verifies the command and mark the specified task as complete.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        CacheManager store \u003d taskList.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        Matcher m \u003d VALID_NUMBER.matcher(args);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        if (m.find()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"            Integer key \u003d Integer.parseInt(m.group());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"            return store.getTaskAndToggle(key, true);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        throw new DukeException(INVALID_FORMAT_ERROR + \" \" + \"Please ensure you follow: mark [task]\");","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":41}},{"path":"src/main/java/duke/controllers/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" * Represents the Todo Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" * The todo command can be used to add a new task.","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * Initializes the Todo Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @param arguments The parsed arguments.","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public TodoCommand(String arguments) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.TODO);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * The method verifies the command and adds a new todo task into the store.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        CacheManager store \u003d taskList.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        Matcher mTodo \u003d Task.TODO.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        return Task.processTask(mTodo, TaskType.TODO, store);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":39}},{"path":"src/main/java/duke/controllers/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" * Represents the undo command.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" * The command reverts the state of the program to a previous executed command.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern VALID_CMD \u003d Pattern.compile(\"^(?\u003ccmd\u003eundo)$\");","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * Initializes the undo command.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @param args The parsed arguments.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public UndoCommand(String args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.UNDO);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     * The function to call when the command is executed in the main event loop.","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     * @param store In-memory store that holds all existing tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException Throws an exception when something goes wrong.","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e store) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        CacheManager cacheManager \u003d store.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        Matcher matcher \u003d VALID_CMD.matcher(args);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            return cacheManager.undo();","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(INVALID_FORMAT_ERROR + \" \" + \"Please ensure you follow: undo\");","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Zxun2":45}},{"path":"src/main/java/duke/controllers/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" * Represents the Unmark Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" * The unmark command can be used to unmark a task.","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"     * Initializes an unmark Command.","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * @param args The parsed arguments.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public UnmarkCommand(String args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.UNMARK);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     * The method verifies the command and unmark the specified task as incomplete.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    public String execute(Supplier\u003c? extends CacheManager\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        CacheManager store \u003d taskList.get();","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        Matcher m \u003d VALID_NUMBER.matcher(args);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        if (m.find()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"            Integer key \u003d Integer.parseInt(m.group());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"            return store.getTaskAndToggle(key, false);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        throw new DukeException(INVALID_FORMAT_ERROR + \" \" + \"Please ensure you follow: unmark [task]\");","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":41}},{"path":"src/main/java/duke/entities/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" * Represents the Deadline task.","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":" * Can specify the deadline for a task.","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    /** Deadline attributes **/","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    /** Datetime formatter **/","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"     * Initialize the Deadline task.","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @param by The deadline for the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * Overloaded constructor that takes in a string representation instead.","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     * @param by The deadline for the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"     * Serialize the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"     * @return Returns serialized representation.","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        String flags \u003d by.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"        return new SerializableTask(TaskType.DEADLINE, isDone, description, flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"    public boolean isActiveOn(LocalDate date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        return by.equals(date);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"                + by.getDayOfWeek().toString().toLowerCase() + \", \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Zxun2":62}},{"path":"src/main/java/duke/entities/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" * Represents the Event task.","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":" * Can specify the start date and end date for a task.","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    /** Event attributes **/","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    /** Date formatter **/","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     * Initializes the Event task.","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     * @param from The start date.","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"     * @param to The end date.","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     * Overloaded constructor which accepts a string array of flags instead.","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"     * @param flags The flags required to specify the dates.","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    public Event(String description, String ...flags) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        this.from \u003d LocalDate.parse(flags[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        this.to \u003d LocalDate.parse(flags[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"     * Serialize the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"     * @return Returns serialized representation.","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"        String flags \u003d from + \" to \" + to;","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        return new SerializableTask(TaskType.EVENT, isDone, description, flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"    public boolean isActiveOn(LocalDate date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"        boolean isBetweenDuration \u003d date.isAfter(from) \u0026\u0026 date.isBefore(to);","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"        boolean isOnDuration \u003d date.isEqual(from) || date.equals(to);","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"        return isBetweenDuration || isOnDuration;","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Zxun2":68}},{"path":"src/main/java/duke/entities/SerializableTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import duke.utils.ISerializable;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":" * Represents a serializable task.","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public class SerializableTask implements ISerializable\u003cString, Task\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    /** Serializable task attributes **/","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private final TaskType taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    private final String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    private String flags \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"     * Initializes a Serializable Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * @param taskType The type of task.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     * @param done The status of task.","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @param description The description of task.","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask(TaskType taskType, boolean done, String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * Initializes a Serializable Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * @param taskType The type of task.","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     * @param done The status of task.","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     * @param description The description of task.","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"     * @param flags Additional flags of task.","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask(TaskType taskType, boolean done, String description, String flags) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        this(taskType, done, description);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"        this.flags \u003d flags;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    public String marshal() {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"        StringBuilder sb \u003d new StringBuilder(taskType.getType() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"        if (!flags.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"            sb.append(\" | \").append(flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"    public Task unmarshal() throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        Task task;","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        case TODO:","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"            task \u003d new Deadline(description, flags);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"        case EVENT:","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"            task \u003d new Event(description, flags.split(\" to \"));","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"        default:","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"            assert false;","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"It seems like an empty task has made it into your hard disk\");","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"            task.markTask();","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"        return task;","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":74}},{"path":"src/main/java/duke/entities/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import duke.utils.CustomValidator;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":" * Represents a Task Object.","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"public abstract class Task implements Cloneable {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    public static final Pattern TODO \u003d Pattern.compile(\"^(todo) (?\u003cdescription\u003e.+)$\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    /** Task validation **/","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    public static final Pattern EVENT \u003d","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"^(event) (?\u003cdescription\u003e.+) /from (?\u003cfrom\u003e.+) /to (?\u003cto\u003e.+)$\",","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"                    Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public static final Pattern DEADLINE \u003d","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"^(deadline) (?\u003cdescription\u003e.+) /by (?\u003cby\u003e.+)$\",","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"                    Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    /** Date validation **/","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d \"Date is not valid! Please try again.\";","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern FORMAT_DATE \u003d","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"^(?\u003cyear\u003e\\\\d{4})-(?\u003cmonth\u003e0[0-9]|1[0-2])-(?\u003cday\u003e0[0-9]|1[0-9]|2[0-9]|3[0-1])$\");","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    /** Task attributes **/","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    protected TaskType taskType;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"     * Instantiates a Task Object that can be placed into the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"        return taskType;","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"     * Converts an existing task to a SerializableTask that can marshal and unmarshal.","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"     * @return SerializableTask","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    public abstract SerializableTask serialize();","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"    public abstract boolean isActiveOn(LocalDate date);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"     * Filters a task based on the matched string.","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"     * @param string The string to match.","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"     * @return a boolean value indicating if a match is found.","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"    public boolean matchString(String string) {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"        Matcher pattern \u003d Pattern.compile(\".*\" + string + \".*$\", Pattern.CASE_INSENSITIVE).matcher(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"        return pattern.matches();","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"     * Returns the status of a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"     * @return A string indicating the status of a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"    private static boolean isNotValidDate(String date) {","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"        assert date !\u003d null : \"date cannot be null\";","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"        return !CustomValidator.validate(date, (String val) -\u003e FORMAT_DATE.matcher(val).matches());","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"    private static Task createTask(TaskType type, String description, Matcher matcher) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"        assert !Objects.equals(description, \"\") : \"description should not be empty\";","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"        switch (type) {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"        case TODO: return new Todo(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"        case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"            String from \u003d matcher.group(\"from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"            String to \u003d matcher.group(\"to\");","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"            if (isNotValidDate(from) || isNotValidDate(to)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"                throw type.getErr();","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"            LocalDate toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"            if (!fromDate.isBefore(toDate) \u0026\u0026 fromDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"                throw new DukeException(INVALID_DATE_MESSAGE);","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"            return new Event(description, fromDate, toDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Zxun2"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"            String by \u003d matcher.group(\"by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"Zxun2"},"content":"            if (isNotValidDate(by)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"Zxun2"},"content":"                throw type.getErr();","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"Zxun2"},"content":"            LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"Zxun2"},"content":"            if (!byDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"Zxun2"},"content":"                throw new DukeException(INVALID_DATE_MESSAGE);","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"Zxun2"},"content":"            return new Deadline(description, byDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Zxun2"},"content":"        default: throw type.getErr();","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"Zxun2"},"content":"     * Processes the given task by creating and storing into the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"Zxun2"},"content":"     * @param matcher A regex matcher that matches the type of command.","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"Zxun2"},"content":"     * @param type Specifies the task type.","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException An exception to be thrown if an invalid task is to be created.","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":120,"author":{"gitId":"Zxun2"},"content":"    public static String processTask(Matcher matcher, TaskType type, CacheManager store) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"Zxun2"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"Zxun2"},"content":"            throw type.getErr();","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"Zxun2"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"Zxun2"},"content":"        Task task \u003d createTask(type, description, matcher);","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"Zxun2"},"content":"        return store.addTask(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":130,"author":{"gitId":"Zxun2"},"content":"     * Marks the given task as complete.","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":132,"author":{"gitId":"Zxun2"},"content":"    public String markTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"Zxun2"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"Zxun2"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + this;","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"Zxun2"},"content":"     * Marks the given task as incomplete.","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"Zxun2"},"content":"    public String unmarkTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"Zxun2"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"Zxun2"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + this;","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"Zxun2"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":151,"author":{"gitId":"Zxun2"},"content":"    public Task clone() {","lastModifiedDate":"2023-02-05"},{"lineNumber":152,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":153,"author":{"gitId":"Zxun2"},"content":"            return (Task) super.clone();","lastModifiedDate":"2023-02-05"},{"lineNumber":154,"author":{"gitId":"Zxun2"},"content":"        } catch (CloneNotSupportedException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":155,"author":{"gitId":"Zxun2"},"content":"            throw new AssertionError();","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":157,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Zxun2":158}},{"path":"src/main/java/duke/entities/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":" * Represents the Todo task.","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"     * Instantiates a todo object.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        this.taskType \u003d TaskType.TODO;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     * Serializes the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"     * @return Returns serialized representation.","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        return new SerializableTask(TaskType.TODO, isDone, description);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    public boolean isActiveOn(LocalDate date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Zxun2":41}},{"path":"src/main/java/duke/entities/Version.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.util.UUID;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" * Specifies a particular version of the program state.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"public class Version {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private final UUID id \u003d UUID.randomUUID();","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private final ArrayList\u003cTask\u003e state;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    private final LocalDateTime datetime;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    private final String description;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm:ss\");","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"     * Initiates an instance of the program version.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     * @param state The current state to store.","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @param datetime The time the changes were made.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     * @param description The description regarding the command performed.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    public Version(ArrayList\u003cTask\u003e state, LocalDateTime datetime, String description) {","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.state \u003d state;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    public UUID getUuid() {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"        return id;","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    public ArrayList\u003cTask\u003e getState() {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        return state;","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    public LocalDateTime getDatetime() {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"        return datetime;","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"        return description + \" on \" + formatter.format(getDatetime());","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Zxun2":47}},{"path":"src/main/java/duke/entities/managers/CacheManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities.managers;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.List;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Version;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import duke.views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" * TaskList represents a data structure that holds Tasks.","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"public class CacheManager {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    /** Hard disk storage **/","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    /** Version Control Stack **/","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    private final VersionManager versions \u003d new VersionManager(10); // Stores the last 10 state changes","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    /** In memory store **/","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     * Initializes a TaskList with preloaded data.","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * @param storage storage class for writing to hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    public CacheManager(Storage storage) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"            storage.connect();","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"            Boolean isSuccessful \u003d storage.load(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"            if (isSuccessful) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"                System.out.println(\"Successfully loaded data.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"                System.out.println(\"Data load unsuccessful. Initializing empty storage.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"            System.out.println(e.getMessage() + \"\\n Initializing empty storage.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"     * Reverts the state to the last tracked changes.","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"     * @return Success message of the undo operation.","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"    public String undo() throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        Version state \u003d versions.pop();","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        this.taskList \u003d state.getState();","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        storage.writeAll(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"        return \"State has successfully reverted to the last changes.\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"                + listTasks(task -\u003e true, true);","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"     * Checkouts to the specified version.","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"     * @param version The version of changes.","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"     * @return A status message regarding the status of checking out.","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException An error that is thrown when checking out fails.","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"    public String checkout(String version) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"        if (version \u003d\u003d null) {","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"            return versions.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"        Version state \u003d versions.checkout(version.trim());","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"        this.taskList \u003d state.getState();","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"        storage.writeAll(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"        return \"State has successfully reverted to specified version.\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"                + listTasks(task -\u003e true, true);","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"     * A generic filter function which parses through the TaskList and return tasks that match.","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"     * @param predicate A boolean function.","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"    public String filter(Predicate\u003c? super Task\u003e predicate, String emptyMsg) {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"        return this.filter(predicate, emptyMsg, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"    private String filter(Predicate\u003c? super Task\u003e predicate, String emptyMsg, boolean requireIndexing) {","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"        assert !Objects.equals(emptyMsg, \"\") : \"an empty message is needed in case the filtered list is empty\";","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"        List\u003cTask\u003e filteredList \u003d taskList.stream().filter(predicate).collect(Collectors.toList());","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"            return emptyMsg;","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"        ListIterator\u003cTask\u003e it \u003d filteredList.listIterator();","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"        StringBuilder sb \u003d new StringBuilder(\"These are the tasks you asked for.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"        it.forEachRemaining((task) -\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"            if (requireIndexing) {","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"Zxun2"},"content":"                sb.append(\"\\n\").append(it.nextIndex() + 1).append(\". \").append(it.next());","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"Zxun2"},"content":"                sb.append(\"\\n\").append(it.next());","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"Zxun2"},"content":"        });","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"Zxun2"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"Zxun2"},"content":"     * Adds a given task into memory.","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"Zxun2"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"Zxun2"},"content":"     * @param print Boolean value indicating if console messages should be printed.","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"Zxun2"},"content":"    public String addTask(Task task, boolean print) {","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"Zxun2"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"Zxun2"},"content":"        if (print) {","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"Zxun2"},"content":"            return \"Successfully added task to memory.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"Zxun2"},"content":"        return null;","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"Zxun2"},"content":"     * Adds a task into the taskList.","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"Zxun2"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException A duke specific exception thrown due to adding error.","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"Zxun2"},"content":"    public String addTask(Task task) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"Zxun2"},"content":"        // NOTE: ordering affects correctness here!","lastModifiedDate":"2023-02-05"},{"lineNumber":129,"author":{"gitId":"Zxun2"},"content":"        Version current \u003d new Version(generateStateClone(), LocalDateTime.now(), \"added a task\");","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"Zxun2"},"content":"        versions.push(current);","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"Zxun2"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"Zxun2"},"content":"        storage.writeOne(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"Zxun2"},"content":"        return \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"Zxun2"},"content":"                + UI.indentMessage(String.valueOf(task))","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"Zxun2"},"content":"                + UI.newLine() + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"Zxun2"},"content":"    private boolean isNotValidKey(Integer key) {","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"Zxun2"},"content":"        return (key \u003e taskList.size() || key \u003c\u003d 0);","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"Zxun2"},"content":"    private ArrayList\u003cTask\u003e generateStateClone() {","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"Zxun2"},"content":"        ArrayList\u003cTask\u003e current \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"Zxun2"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"Zxun2"},"content":"            current.add(t.clone());","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"Zxun2"},"content":"        return current;","lastModifiedDate":"2023-02-05"},{"lineNumber":148,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":149,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"Zxun2"},"content":"     * Gets the task from the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"Zxun2"},"content":"     * @param key The task of choice.","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"Zxun2"},"content":"     * @return The specified task.","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException An error indicating there was an error in retrieving the specified task.","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"Zxun2"},"content":"    public Task getTask(Integer key) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"Zxun2"},"content":"        if (isNotValidKey(key)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":159,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"This task don\u0027t exists! Please select one from the list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":160,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"Zxun2"},"content":"        return taskList.get(key - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"Zxun2"},"content":"     * A generic function used in markTask and unmarkTask to ensure DRY principle.","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"Zxun2"},"content":"     * @param key The task to toggle.","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"Zxun2"},"content":"     * @param mark Indicates whether to mark or unmark.","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"Zxun2"},"content":"     * @return Success message","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException An error indicating that there was an error in toggling the tasks\u0027 status.","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"Zxun2"},"content":"    public String getTaskAndToggle(Integer key, boolean mark) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"Zxun2"},"content":"        Task task \u003d this.getTask(key);","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"Zxun2"},"content":"        versions.push(new Version(generateStateClone(), LocalDateTime.now(), \"toggled a task\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":175,"author":{"gitId":"Zxun2"},"content":"        String msg \u003d mark ? task.markTask() : task.unmarkTask();","lastModifiedDate":"2023-01-28"},{"lineNumber":176,"author":{"gitId":"Zxun2"},"content":"        storage.writeAll(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":177,"author":{"gitId":"Zxun2"},"content":"        return msg;","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":181,"author":{"gitId":"Zxun2"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-01-21"},{"lineNumber":182,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":183,"author":{"gitId":"Zxun2"},"content":"     * @param key The task identifier.","lastModifiedDate":"2023-01-21"},{"lineNumber":184,"author":{"gitId":"Zxun2"},"content":"     * @return Status message of the executed command.","lastModifiedDate":"2023-01-28"},{"lineNumber":185,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":186,"author":{"gitId":"Zxun2"},"content":"    public String deleteTask(Integer key) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"Zxun2"},"content":"        if (isNotValidKey(key)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":188,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"This task don\u0027t exists! Please select one from the list.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":189,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"Zxun2"},"content":"        // NOTE: ordering affects correctness here!","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"Zxun2"},"content":"        versions.push(new Version(generateStateClone(), LocalDateTime.now(), \"deleted a task\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":192,"author":{"gitId":"Zxun2"},"content":"        Task task \u003d taskList.remove(key - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":193,"author":{"gitId":"Zxun2"},"content":"        storage.writeAll(this);","lastModifiedDate":"2023-01-23"},{"lineNumber":194,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":195,"author":{"gitId":"Zxun2"},"content":"        return \"Noted. I\u0027ve removed the task:\"","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"Zxun2"},"content":"                + UI.indentMessage(String.valueOf(task))","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"Zxun2"},"content":"                + UI.newLine() + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":199,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"Zxun2"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-05"},{"lineNumber":201,"author":{"gitId":"Zxun2"},"content":"        return taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":202,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":203,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":204,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":205,"author":{"gitId":"Zxun2"},"content":"     * Lists the tasks in the TaskList.","lastModifiedDate":"2023-01-21"},{"lineNumber":206,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":207,"author":{"gitId":"Zxun2"},"content":"     * @param predicate The filter function required to select tasks from the list.","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"Zxun2"},"content":"     * @param index the boolean value indicating if tasks should be indexed.","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"Zxun2"},"content":"     * @return The string representing the list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":211,"author":{"gitId":"Zxun2"},"content":"    public String listTasks(Predicate\u003c? super Task\u003e predicate, boolean index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":212,"author":{"gitId":"Zxun2"},"content":"        return this.filter(predicate, \"There are no outstanding tasks!\", index);","lastModifiedDate":"2023-01-28"},{"lineNumber":213,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":214}},{"path":"src/main/java/duke/entities/managers/VersionManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities.managers;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.UUID;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Version;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import duke.views.UI;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" * Represents the version manager that manages the application versions.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"public class VersionManager {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    private final Integer sizeLimit;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    private final Map\u003cUUID, Version\u003e verMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    private final LinkedList\u003cVersion\u003e verControl \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    public VersionManager(Integer sizeLimit) {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        this.sizeLimit \u003d sizeLimit;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     * Pushes the version into the application history.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     * @param state The state to store.","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    public void push(Version state) {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        if (verControl.size() \u003d\u003d sizeLimit) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"            Version eldest \u003d verControl.removeFirst();","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"            verMap.remove(eldest.getUuid());","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        verControl.push(state);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        verMap.put(state.getUuid(), state);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"     * Removes the latest addition.","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"     * @return The version that was removed.","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException The exception thrown when there is an error associated with the removal.","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"    public Version pop() throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        if (verControl.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"There are no changes to undo!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"        Version state \u003d verControl.pop();","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"        verMap.remove(state.getUuid());","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"        return state;","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"     * Returns the specified version.","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"     * @param id The id of the version to checkout to.","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"     * @return The specified version.","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException The exception thrown when there is an error associated with the checkout process.","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"    public Version checkout(String id) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"        int idx \u003d Integer.parseInt(id) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"        if (idx \u003e\u003d 0 \u0026\u0026 idx \u003c verControl.size()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"            UUID uuid \u003d (UUID) verMap.keySet().toArray()[idx];","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"            return verMap.get(uuid);","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"Invalid version number\");","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"        String initialMsg \u003d \"There are no changes made recently!\";","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"        if (verMap.size() \u003e 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"            initialMsg \u003d \"Here you find the 10 most recent changes that were captured.\";","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"        StringBuilder sb \u003d new StringBuilder(initialMsg);","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"        ListIterator\u003cMap.Entry\u003cUUID, Version\u003e\u003e it \u003d new ArrayList\u003c\u003e(verMap.entrySet()).listIterator();","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"        it.forEachRemaining((entry) -\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"            sb.append(UI.indentMessage(String.valueOf(it.nextIndex() + 1)))","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"                    .append(\". \").append(entry.getKey().toString(), 0, 10).append(\"...\")","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"                    .append(\": \").append(entry.getValue());","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"            it.next();","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"        });","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Zxun2":90}},{"path":"src/main/java/duke/enums/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.enums;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":" * Enum types for commands.","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"public enum CommandType {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"    BYE,","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    LIST,","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    DELETE,","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    TODO,","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    EVENT,","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    MARK,","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    UNMARK,","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    INVALID,","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    DATE,","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    FIND,","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    UNDO,","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    CHECKOUT","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":20}},{"path":"src/main/java/duke/enums/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.enums;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" * Enum types for Task.","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    TODO(\"todo\", new DukeException(\"Your format is incorrect.\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"            + \"Please try again with the following format: todo [description].\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    EVENT(\"event\", new DukeException(\"Your format is incorrect.\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"            + \"Please try again with the following format: event [description] /from [yyyy-mm-dd] /to [yyyy-mm-dd].\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    DEADLINE(\"deadline\", new DukeException(\"Your format is incorrect.\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"            + \"Please try again with the following format: deadline [description] /by [yyyy-mm-dd].\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    ALL(\"*\", new DukeException(\"Your format is incorrect.\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    /** type of task **/","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    private final String type;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    /** exception to be thrown when an error occurs **/","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    private final DukeException err;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    TaskType(String type, DukeException err) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        this.err \u003d err;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    public String getType() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        return this.type;","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    public DukeException getErr() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        return err;","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"     * Checks if a task type is the default ALL value.","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"     * @return boolean value","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    public boolean isAll() {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        return Objects.equals(this.getType(), \"*\");","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":46}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":" * A wrapper around the Exception class for the duke.Duke Chatbot.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.CheckoutCommand;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.DateCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.DeadlineCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.DeleteCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.EventCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.FindCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.GoodbyeCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.MarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.TodoCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.UndoCommand;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.UnmarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"import duke.enums.CommandType;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":" * Represents a generic Parser that parses a string input.","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":" * It does not need to be initialized.","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"public abstract class Parser {","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern VALID_COMMAND \u003d","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"                    \"^(?\u003ccmd\u003elist|bye|mark|date|unmark|delete|todo|deadline|event|find|undo|checkout)(?\u003carguments\u003e.*)?\",","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"                    Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    private static final Command invalidCommand \u003d","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"            new Command(CommandType.INVALID) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"                @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"                public String execute(Supplier\u003c? extends CacheManager\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means~\");","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"            };","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    private static Command parse(CommandType cmd, String rInput) {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        switch(cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        case BYE: return new GoodbyeCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        case LIST: return new ListCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"        case MARK: return new MarkCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"        case DATE: return new DateCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"        case UNMARK: return new UnmarkCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        case DELETE: return new DeleteCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"        case TODO: return new TodoCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"        case DEADLINE: return new DeadlineCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"        case EVENT: return new EventCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"        case FIND: return new FindCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"        case CHECKOUT: return new CheckoutCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        case UNDO: return new UndoCommand(rInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        default: return invalidCommand;","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"     * Parses the string input and returns an appropriate command.","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"     * @param input String user input.","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"     * @return Command to be executed.","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"        String uInput \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"        Matcher matcher \u003d VALID_COMMAND.matcher(uInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"            String cmd \u003d matcher.group(\"cmd\").strip().toUpperCase();","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"            CommandType cmdType \u003d CommandType.valueOf(cmd);","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"            return parse(cmdType, uInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"            return invalidCommand;","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Zxun2":76}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.io.File;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import duke.entities.SerializableTask;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import duke.enums.TaskType;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"import duke.utils.Loader;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":" * Represents a Storage class which save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":" * Load the data from the hard disk when duke.Duke starts up.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"public class Storage implements Loader\u003cCacheManager\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    private static final String GENERIC_ERROR \u003d \"An error occurred when creating the database: \";","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    private final File file;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     * Initializes a Storage object with the specified filename.","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     * @param filename Filename to store the data.","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    public Storage(String filename) {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        String fileDirectory \u003d \"data\";","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        this.file \u003d new File(String.format(\"%s/%s\", fileDirectory, filename));","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"     * Loads the data stored in the hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException A generic application error that specifies the type of error thrown.","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    public void connect() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        File folder \u003d file.getParentFile();","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"            if (!folder.exists() \u0026\u0026 !folder.mkdirs()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"                throw new DukeException(GENERIC_ERROR + folder.getName());","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"            if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"                throw new DukeException(GENERIC_ERROR + file.getName());","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"Successfully connected to duke.storage.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"        } catch (IOException | SecurityException err) {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(GENERIC_ERROR + err.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"     * Loads the data from the specified filename.","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"     * @param cacheManager TaskList to add the loaded data to.","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"     * @return A boolean value indicating the success of the operation.","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException An exception to be thrown if there are any errors that occur.","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"    public Boolean load(CacheManager cacheManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"            Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"                List\u003cString\u003e data \u003d Arrays.asList(reader.nextLine().split(\" \\\\| \"));","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"                // Parse task attributes from data","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"                // Expect only valid data to be saved to hard drive","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"                TaskType taskType \u003d getTaskType(data);","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"                boolean isDone \u003d isDone(data);","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"                String description \u003d data.get(2);","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"                SerializableTask task;","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"                switch(taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"                case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"                case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"                    String aFlags \u003d data.subList(3, data.size()).toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"                    String flags \u003d aFlags.substring(1, aFlags.length() - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"                    task \u003d new SerializableTask(taskType, isDone, description, flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"                default: task \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"                    return false;","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"                String msg \u003d cacheManager.addTask(task.unmarshal(), false);","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"                if (msg !\u003d null) {","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"                    System.out.println(msg);","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"            return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(GENERIC_ERROR + e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"Zxun2"},"content":"    private static boolean isDone(List\u003cString\u003e data) {","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"Zxun2"},"content":"        assert data.get(1).equals(\"1\") || data.get(1).equals(\"0\") : \"status can only be yes or no\";","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"Zxun2"},"content":"        return data.get(1).equals(\"1\");","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"Zxun2"},"content":"    private static TaskType getTaskType(List\u003cString\u003e data) {","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"Zxun2"},"content":"        assert !data.isEmpty() : \"data cannot be empty!\";","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"Zxun2"},"content":"        assert Arrays.stream(TaskType.values()).anyMatch(i -\u003e Objects.equals(i.getType(), data.get(0)));","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"Zxun2"},"content":"        // Expect only valid data to be saved to hard drive","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"Zxun2"},"content":"        return TaskType.valueOf(data.get(0).toUpperCase());","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"Zxun2"},"content":"     * Writes all task currently in memory to the hard disk.","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"Zxun2"},"content":"     * @param cacheManager The task-list in memory.","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException An exception to be thrown if there are any errors that occur.","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":120,"author":{"gitId":"Zxun2"},"content":"    public void writeAll(CacheManager cacheManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"Zxun2"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"Zxun2"},"content":"            cacheManager.getTaskList().parallelStream().forEach(task -\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"Zxun2"},"content":"                try {","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"Zxun2"},"content":"                    write(fileWriter, task);","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"Zxun2"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"Zxun2"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"Zxun2"},"content":"            });","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"Zxun2"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Zxun2"},"content":"        } catch (IOException | RuntimeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":132,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(GENERIC_ERROR + e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":136,"author":{"gitId":"Zxun2"},"content":"    private static void write(FileWriter fileWriter, Task task) throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"Zxun2"},"content":"        assert task !\u003d null : \"cannot write empty task to hard disk\";","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"Zxun2"},"content":"        SerializableTask tsk \u003d task.serialize();","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"Zxun2"},"content":"        fileWriter.write(tsk.marshal() + \"\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"Zxun2"},"content":"     * Append current task in memory to the hard disk.","lastModifiedDate":"2023-01-23"},{"lineNumber":145,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"Zxun2"},"content":"     * @param task The task in memory.","lastModifiedDate":"2023-01-23"},{"lineNumber":147,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException An exception to be thrown if there are any errors that occur.","lastModifiedDate":"2023-01-23"},{"lineNumber":148,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"Zxun2"},"content":"    public void writeOne(Task task) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":151,"author":{"gitId":"Zxun2"},"content":"            FileWriter fileWriter \u003d new FileWriter(file, true);","lastModifiedDate":"2023-01-23"},{"lineNumber":152,"author":{"gitId":"Zxun2"},"content":"            write(fileWriter, task);","lastModifiedDate":"2023-02-05"},{"lineNumber":153,"author":{"gitId":"Zxun2"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":154,"author":{"gitId":"Zxun2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":155,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(GENERIC_ERROR + e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":156,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":157,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":158,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":158}},{"path":"src/main/java/duke/utils/CustomValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.utils;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":" * A custom validator class that does validation.","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"public class CustomValidator {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"    public static boolean validate(String string, Validator validator) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"        return validator.validate(string);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":10}},{"path":"src/main/java/duke/utils/IExecutable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.utils;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" * An interface for objects that are executables.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":" *","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" * @param \u003cT\u003e The store to be supplied.","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"public interface IExecutable\u003cT\u003e {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    String execute(Supplier\u003c? extends T\u003e store) throws DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Zxun2":15}},{"path":"src/main/java/duke/utils/ISerializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":" * An interface for performing the serializing action.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":" * @param \u003cT\u003e The type to serialize to.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public interface ISerializable\u003cT, U\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    T marshal();","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    U unmarshal() throws DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Zxun2":13}},{"path":"src/main/java/duke/utils/Loader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.utils;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":" * An interface for performing the loading action.","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":" *","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":" * @param \u003cT\u003e The store to load to.","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"@FunctionalInterface","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"public interface Loader\u003cT\u003e {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    Boolean load(T store) throws DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Zxun2":13}},{"path":"src/main/java/duke/utils/Validator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.utils;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":" * An interface for performing the validation action.","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"@FunctionalInterface","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"public interface Validator {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    boolean validate(String value);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":9}},{"path":"src/main/java/duke/views/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.views;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":" * Represents the views of the program. Contains methods for printing to console.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"public class UI {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"    /** Font options **/","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    public static final String FONT_TYPE \u003d \"Courier New\";","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    public static final Integer FONT_SIZE_H1 \u003d 30;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    public static final Integer FONT_SIZE_P \u003d 15;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    public static final Integer FONT_SIZE_SMALL \u003d 12;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private static final String DATE_FORMAT \u003d \"YYYY-MM-DD\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    private static final String INDENT_SPACES \u003d \"    \";","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    public static String separatorLine() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        return \"\\n--------------------------------------------------------------------\";","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    public static String indentMessage(String message) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        return \"\\n\" + INDENT_SPACES + message;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public static String newLine() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        return \"\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     * Returns the welcome message on start.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * @return Welcome message.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    public static String welcomeMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        return \"Hello! I\u0027m Duke. What can i do for you? \"","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"                + \"You can click on the help button on the top right to view the available commands!\";","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"     * Returns the help message.","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"     * @return The list of commands available.","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    public static String helpMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        return \"These are the available commands:\"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"bye\")","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"undo\")","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"unmark   [task]\")","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"mark     [task]\")","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"delete   [task]\")","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"find     [filter]?\")","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"checkout [version]\")","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"todo     [description]\")","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"date     [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"list     (todo | deadline | event)?\")","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"deadline [description] /by   [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"event    [description] /from [\" + DATE_FORMAT + \"] /to [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"                + separatorLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Zxun2":59}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package gui;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"public class Launcher {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Zxun2":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package gui;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import gui.managers.RouterManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    public Main() {}","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        // Default stage settings","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"        stage.show();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        // Initializes the router object","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        RouterManager router \u003d RouterManager.createRouterSingleton(stage);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        router.showLandingView();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Zxun2":24}},{"path":"src/main/java/gui/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package gui.components;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":" * A custom control using FXML.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    private Label username;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    private DialogBox(String text, Image img, String user) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        username.setText(user);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        dialog.setFont(new Font(UI.FONT_TYPE, UI.FONT_SIZE_P));","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"        username.setFont(new Font(UI.FONT_TYPE, UI.FONT_SIZE_SMALL));","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"        dialog.setMnemonicParsing(false);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        dialog.setMaxWidth(650);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    private void flip() {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"        return new DialogBox(text, img, \"jinx\");","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"        var db \u003d new DialogBox(text, img, \"duke\");","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        db.flip();","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"        return db;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Zxun2":71}},{"path":"src/main/java/gui/components/Landing.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package gui.components;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import gui.managers.RouterManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" * Controller for gui.components.Landing. Provides the layout for the other controls.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"public class Landing extends AnchorPane {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private Button startButton;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"     * This function is called when the GUI window starts.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"     * It is used to set icons, title, and on start-up commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    public void initialize() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public void initRouter(RouterManager router) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        startButton.setOnAction(event -\u003e router.showMainView());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Zxun2":25}},{"path":"src/main/java/gui/components/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package gui.components;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import duke.views.UI;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" * Controller for gui.components.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    private Label appLabel;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    private VBox modalContainer;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    private Button helpButton;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    private final Image userImage \u003d","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/Jinx.png\")));","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    private final Image dukeImage \u003d","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/Silco.jpg\")));","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    private final Font appFont \u003d new Font(UI.FONT_TYPE, UI.FONT_SIZE_P);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"     * This function is called when the GUI window starts.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"     * It is used to set icons, title, and on start-up commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"        validateInput();","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"        appLabel.setText(\"DUKE\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        userInput.setFont(appFont);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        sendButton.setFont(appFont);","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        appLabel.setFont(new Font(UI.FONT_TYPE, UI.FONT_SIZE_H1));","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"        modalContainer.getChildren().add(DialogBox.getDukeDialog(UI.helpMessage(), dukeImage));","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(UI.welcomeMessage(), dukeImage));","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"    private void validateInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"        sendButton.setDisable(userInput.getText().length() \u003d\u003d 0);","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"    private void toggleModal() {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"        modalContainer.setVisible(!modalContainer.isVisible());","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"        if (modalContainer.isVisible()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"            dialogContainer.setOpacity(0.7);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"            dialogContainer.setOpacity(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"    private void closeModal() {","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"        modalContainer.setVisible(false);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"        dialogContainer.setOpacity(1);","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"        );","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"Zxun2"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"        userInput.requestFocus();","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Zxun2":102}},{"path":"src/main/java/gui/managers/RouterManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package gui.managers;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import gui.Main;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import gui.components.Landing;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import gui.components.MainWindow;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":" * Manages different routes in the application.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"public class RouterManager {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    private static RouterManager router;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    private final Duke duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    private final Stage stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    private RouterManager(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     * Creates a router manager instance if there is none instantiated, else create one.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * @param stage The stage needed to set the scene.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     * @return The router singleton.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    public static RouterManager createRouterSingleton(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        if (router \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"            router \u003d new RouterManager(stage);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        return router;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"     * Sets the scene to the main application view.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    public void showMainView() {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"            Logger.getLogger(RouterManager.class.getName()).log(Level.SEVERE, null, ex);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"     * Sets the scene to the landing view.","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"    public void showLandingView() {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/Landing.fxml\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"            fxmlLoader.\u003cLanding\u003egetController().initRouter(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"            Logger.getLogger(RouterManager.class.getName()).log(Level.SEVERE, null, ex);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Zxun2":70}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" style\u003d\"-fx-background-color: #2D2D34; -fx-background-radius: 5; -fx-padding: 2; -fx-border-color: #0E3643; -fx-border-radius: 5;\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"            \u003cInsets left\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" lineSpacing\u003d\"1.0\" text\u003d\"Label\" textAlignment\u003d\"JUSTIFY\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"            \u003cImage url\u003d\"@../images/Jinx.png\"/\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        \u003cLabel fx:id\u003d\"username\" text\u003d\"Name\"/\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Zxun2":33}},{"path":"src/main/resources/view/Landing.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.paint.LinearGradient?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.paint.Stop?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"775.0\" prefWidth\u003d\"615.0\" style\u003d\"-fx-background-color: #CEB1BE;\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.components.Landing\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"      \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"775.0\" prefWidth\u003d\"615.0\" spacing\u003d\"20.0\" style\u003d\"-fx-background-color: #B97375;\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"            \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"                  \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"63.0\" prefWidth\u003d\"188.0\" text\u003d\"DUKE\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"                        \u003cFont name\u003d\"Courier New\" size\u003d\"70.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"                     \u003ctextFill\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"                        \u003cLinearGradient endX\u003d\"1.0\" endY\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"                           \u003cstops\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"                              \u003cStop\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"                                 \u003ccolor\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"                                    \u003cColor red\u003d\"1.0\" green\u003d\"0.7453703880310059\" blue\u003d\"0.7623456716537476\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"                                 \u003c/color\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"                              \u003c/Stop\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"                              \u003cStop offset\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"                                 \u003ccolor\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"                                    \u003cColor red\u003d\"1.0\" green\u003d\"1.0\" blue\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"                                 \u003c/color\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"                              \u003c/Stop\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"                           \u003c/stops\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"                        \u003c/LinearGradient\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"                     \u003c/textFill\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"                  \u003cLabel fx:id\u003d\"appLabel1\" alignment\u003d\"CENTER\" prefHeight\u003d\"42.0\" prefWidth\u003d\"621.0\" text\u003d\"Your personal chatbot assistant\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"                        \u003cFont name\u003d\"Courier New\" size\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"                     \u003ctextFill\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"                        \u003cLinearGradient endX\u003d\"1.0\" endY\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"                           \u003cstops\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"                              \u003cStop\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"                                 \u003ccolor\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"                                    \u003cColor red\u003d\"1.0\" green\u003d\"0.7453703880310059\" blue\u003d\"0.7623456716537476\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"                                 \u003c/color\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"                              \u003c/Stop\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"                              \u003cStop offset\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"                                 \u003ccolor\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"                                    \u003cColor red\u003d\"1.0\" green\u003d\"1.0\" blue\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"                                 \u003c/color\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"                              \u003c/Stop\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"                           \u003c/stops\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"                        \u003c/LinearGradient\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"                     \u003c/textFill\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"            \u003cButton fx:id\u003d\"startButton\" alignment\u003d\"CENTER\" lineSpacing\u003d\"7.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"46.0\" prefWidth\u003d\"129.0\" style\u003d\"-fx-background-color: transparent; -fx-border-color: #E2DCDE; -fx-border-radius: 10;\" text\u003d\"Get started\" textAlignment\u003d\"CENTER\" textFill\u003d\"#ffe1e1\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"                  \u003cFont name\u003d\"Courier New\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"               \u003ccursor\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"                  \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"               \u003c/cursor\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Zxun2":74}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"775.0\" prefWidth\u003d\"830.0\" style\u003d\"-fx-background-color: #CEB1BE;\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.components.MainWindow\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"62.0\" prefHeight\u003d\"658.0\" prefWidth\u003d\"830.0\" style\u003d\"-fx-background-color: #B97375; -fx-border-color: #B97375;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"BOTTOM_LEFT\" prefHeight\u003d\"654.0\" prefWidth\u003d\"828.0\" style\u003d\"-fx-background-color: #B97375;\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    \u003cHBox alignment\u003d\"CENTER\" layoutY\u003d\"557.4000244140625\" prefHeight\u003d\"54.0\" prefWidth\u003d\"830.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" onKeyPressed\u003d\"#validateInput\" onKeyReleased\u003d\"#validateInput\" onKeyTyped\u003d\"#validateInput\" prefHeight\u003d\"54.0\" prefWidth\u003d\"757.0\" promptText\u003d\"Enter a command...\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"54.0\" prefWidth\u003d\"90.0\" style\u003d\"-fx-background-color: #2D2D34;\" text\u003d\"Send\" textFill\u003d\"white\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" prefHeight\u003d\"65.0\" prefWidth\u003d\"830.0\" spacing\u003d\"640.0\" style\u003d\"-fx-background-color: #B97375; -fx-padding: 12;\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        \u003ceffect\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"            \u003cDropShadow blurType\u003d\"TWO_PASS_BOX\" height\u003d\"45.59\" radius\u003d\"10.8975\" width\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        \u003c/effect\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        \u003cLabel fx:id\u003d\"appLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"35.0\" prefWidth\u003d\"91.0\" text\u003d\"DUKE\" textFill\u003d\"#ffe5e5\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"                \u003cFont name\u003d\"Courier New\" size\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        \u003cButton fx:id\u003d\"helpButton\" alignment\u003d\"CENTER\" lineSpacing\u003d\"7.0\" mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#toggleModal\" style\u003d\"-fx-background-color: transparent; -fx-border-color: #E2DCDE; -fx-border-radius: 10;\" text\u003d\"Help\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"                \u003cFont name\u003d\"Courier New\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"            \u003ceffect\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"                \u003cDropShadow height\u003d\"23.34\" radius\u003d\"18.1875\" width\u003d\"51.41\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"            \u003c/effect\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"            \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"         \u003c/cursor\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    \u003cVBox fx:id\u003d\"modalContainer\" alignment\u003d\"CENTER\" layoutY\u003d\"-1.0\" onMouseClicked\u003d\"#closeModal\" prefHeight\u003d\"775.0\" prefWidth\u003d\"830.0\" style\u003d\"-fx-background-color: transparent;\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Zxun2":44}},{"path":"src/test/java/duke/controllers/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.controllers;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import duke.stubs.TestStorageStub;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    private final Storage storage \u003d new TestStorageStub(\"test.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    public void listTest_emptyList_emptyTaskStringReturned() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"            CacheManager cacheManager \u003d new CacheManager(storage);","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"            assertEquals(\"There are no outstanding tasks!\", cacheManager.listTasks(task -\u003e true, true));","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"            fail();","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    public void listTest_addMultipleTasks_successReturned() {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"            CacheManager cacheManager \u003d new CacheManager(storage);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"            for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"                Task task \u003d new Todo(\"Task \" + (i + 1));","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"                cacheManager.addTask(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"            assertEquals(10, cacheManager.getTaskList().size());","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"            fail();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Zxun2":40}},{"path":"src/test/java/duke/entities/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    public void markTest_testIsMarked_nullReturned() {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        Task tsk \u003d new Deadline(\"Hello World\", LocalDate.parse(\"2023-01-22\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        tsk.markTask();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"        assertTrue(tsk.isDone);","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public void unmarkTest_testIsUnmarked_nullReturned() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        Task tsk \u003d new Deadline(\"Hello World\", LocalDate.parse(\"2023-01-22\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        tsk.unmarkTask();","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        assertFalse(tsk.isDone);","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    public void toStringTest_printString_validRepresentationReturned() {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"        Task task \u003d new Deadline(\"Hello World\", LocalDate.parse(\"2023-01-22\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        assertEquals(\"[D][ ] Hello World (by: sunday, Jan 22 2023)\", task.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Zxun2":33}},{"path":"src/test/java/duke/entities/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    public void markTest_testIsMarked_nullReturned() {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"        Task tsk \u003d new Todo(\"Hello World\");","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"        tsk.markTask();","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        assertTrue(tsk.isDone);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    public void unmarkTest_testIsUnmarked_nullReturned() {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        Task tsk \u003d new Todo(\"Hello World\");","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        tsk.unmarkTask();","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        assertFalse(tsk.isDone);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    public void toStringTest_printString_validRepresentationReturned() {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        Task task \u003d new Todo(\"Hello World\");","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        assertEquals(\"[T][ ] Hello World\", task.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Zxun2":29}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.CheckoutCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.GoodbyeCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.ListCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import duke.controllers.UndoCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import duke.stubs.TestCacheManagerStub;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"import duke.stubs.TestStorageStub;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"class ParserTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    private final Storage storage \u003d new TestStorageStub(\"test.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    private final CacheManager cm \u003d new TestCacheManagerStub(storage);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    ParserTest() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    public void parseInput_isBye_returnsGoodByeCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        assertTrue(command instanceof GoodbyeCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    public void parseInputisList_returnsListCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    public void parseInput_isUndo_returnsUndoCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"        String input \u003d \"undo\";","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        assertTrue(command instanceof UndoCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"    public void parseInput_isCheckout_returnsCheckoutCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        String input \u003d \"checkout\";","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"        assertTrue(command instanceof CheckoutCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"    public void parseInput_isUnknownCommand_throwsDukeException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        String input \u003d \"hello world\";","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"            command.execute(() -\u003e cm);","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"            assertTrue(true);","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Zxun2":63}},{"path":"src/test/java/duke/stubs/TestCacheManagerStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.stubs;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.List;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import duke.views.UI;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":" * A stub implementation of TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"public class TestCacheManagerStub extends CacheManager {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    /** In memory store **/","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    private final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * Initializes a TaskList with preloaded data.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     * @param storage storage class for writing to hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    public TestCacheManagerStub(Storage storage) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        super(storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"     * A generic filter function which parses through the TaskList and return tasks that match.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * @param predicate A boolean function.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    public String filter(Predicate\u003c? super Task\u003e predicate, String emptyMsg) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        return \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    private String filter(Predicate\u003c? super Task\u003e predicate, String emptyMsg, boolean index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"        return \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"     * Adds a given task into the TaskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"     * @param print Boolean value indicating if console messages should be printed.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"    public String addTask(Task task, boolean print) {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"        if (print) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"            return \"Successfully added task to memory.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        return UI.newLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"     * Adds a task into the taskList.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException A duke specific exception thrown due to adding error.","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"    public String addTask(Task task) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"        return \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"                + UI.indentMessage(String.valueOf(task))","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"                + UI.newLine() + \"Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"    private boolean isValidKey(Integer key) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"        return (key \u003c\u003d taskList.size() \u0026\u0026 key \u003e 0);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"     * Gets the task from the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"     * @param key The task of choice.","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"     * @return The specified task.","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException An error indicating there was an error in retrieving the specified task.","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"    public Task getTask(Integer key) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"        if (!isValidKey(key)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"This task don\u0027t exists! Please select one from the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"        // accounts for 0-based indexing","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"        return taskList.get(0);","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Zxun2":88}},{"path":"src/test/java/duke/stubs/TestStorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.stubs;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import duke.entities.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import duke.entities.managers.CacheManager;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":" * A stub implementation of storage.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public class TestStorageStub extends Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"     * Initializes a Storage object with the specified filename.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"     * @param filename Filename to store the data.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    public TestStorageStub(String filename) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"        super(filename);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * Simple implementation that does not actually create a file.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    public void connect() {}","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    public Boolean load(CacheManager cacheManager) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    public void writeOne(Task task) {}","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    public void writeAll(CacheManager cacheManager) {}","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Zxun2":37}},{"path":"src/test/java/duke/views/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package duke.views;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"public class UiTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    private static final String DATE_FORMAT \u003d \"YYYY-MM-DD\";","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    private static final String INDENT_SPACES \u003d \"    \";","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    public static String separatorLine() {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"        return \"\\n--------------------------------------------------------------------\";","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    public static String indentMessage(String message) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        return \"\\n\" + INDENT_SPACES + message;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    public void welcomeMessage_printMessage_correctStringReturned() {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        String message \u003d UI.welcomeMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        assertEquals(\"Hello! I\u0027m Duke. What can i do for you? \"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"                + \"You can click on the help button on the top right to view the available commands!\", message);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    public void helpMessage_printMessage_correctStringReturned() {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        String message \u003d UI.helpMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        assertEquals(\"These are the available commands:\"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"bye\")","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"undo\")","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"unmark   [task]\")","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"mark     [task]\")","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"delete   [task]\")","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"find     [filter]?\")","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"checkout [version]\")","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"todo     [description]\")","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"date     [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"list     (todo | deadline | event)?\")","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"deadline [description] /by   [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"                + indentMessage(\"event    [description] /from [\" + DATE_FORMAT + \"] /to [\" + DATE_FORMAT + \"]\")","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"                + separatorLine(), message);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Zxun2":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"TODO return book","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"DEADLINE mark scripts /by 2022-01-11","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"EVENT project meeting /from 2023-01-12 /to 2023-02-22","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"mark -1","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"unmark -1","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"delete -1","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"send help","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"delete 01","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"EVENT project meeting /from 2023-01-12 /to 2023-02-22","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"event project meeting","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"date 2023-01-12","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"date 2023-01-01","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"REM delete the data directory if it exists","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"if exist data del /f /q data","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"REM convert file to unix","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"dos2unix ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zxun2":6,"-":21}}]
