[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"import controllers.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"import entities.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import views.UI;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private static Storage storage;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private static Scanner in;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    private static UI ui;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    public Duke(String filename) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        storage \u003d new Storage(filename);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"            storage.connect();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"            taskList \u003d new TaskList(() -\u003e storage.load());","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"There was an error loading the data. Storage will be reset.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    public void run() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"        while (in.hasNext() \u0026\u0026 !isExit) {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"            Command cmd \u003d Parser.parse(in.nextLine());","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"                cmd.execute();","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"                if (cmd.isTerminating()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"                    storage.write(taskList);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"                    isExit \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Zxun2":45,"-":4}},{"path":"src/main/java/controllers/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import utils.Executable;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"abstract public class Command implements Executable {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    private final CommandType commandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    private boolean isTerminating \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    protected static final Pattern NUMBERS \u003d Pattern.compile(\"[-+]?\\\\d+\");","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    protected static final Pattern DATE_FORMAT \u003d","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})-(?\u003cmonth\u003e0[0-9]|1[0-2])-(?\u003cday\u003e0[0-9]|1[0-9]|2[0-9]|3[0-1])$\");","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    public Command(CommandType cmdType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        this.commandType \u003d cmdType;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    public Command(CommandType cmdType, boolean isTerminating) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        this.commandType \u003d cmdType;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        this.isTerminating \u003d isTerminating;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        return commandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    public abstract void execute() throws DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    public boolean isTerminating() { return isTerminating; }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":31}},{"path":"src/main/java/controllers/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.TaskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    public DateCommand(String args) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.DATE);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        Matcher matcher \u003d DATE_FORMAT.matcher(args.strip());","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"            TaskList.filter(task -\u003e task.activeOn(LocalDate.parse(args.split(\" \")[1])));","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"Invalid Date Format. Please follow: date [yyyy-mm-dd].\");","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Zxun2":27}},{"path":"src/main/java/controllers/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    public DeadlineCommand(String arguments) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.DEADLINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        Matcher mDeadline \u003d Task.DEADLINE.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        Task.processTask(mDeadline, TaskType.DEADLINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":22}},{"path":"src/main/java/controllers/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    public DeleteCommand(String args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.DELETE);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        Matcher m \u003d NUMBERS.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        if (m.find()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"            Integer key \u003d Integer.parseInt(m.group());","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"            TaskList.deleteTask(key);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"Invalid format. Please ensure that you specify the task number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":28}},{"path":"src/main/java/controllers/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    public EventCommand(String arguments) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.EVENT);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        Matcher mEvent \u003d Task.EVENT.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        Task.processTask(mEvent, TaskType.EVENT);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":23}},{"path":"src/main/java/controllers/GoodbyeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"public class GoodbyeCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"    private static final String message \u003d \"Goodbye!\";","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    public GoodbyeCommand() {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.BYE, true);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    public void execute() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":16}},{"path":"src/main/java/controllers/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.LIST);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    public void execute() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        System.out.println(TaskList.listTasks());","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":16}},{"path":"src/main/java/controllers/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import entities.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    public MarkCommand(String args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.MARK);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        Matcher m \u003d NUMBERS.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        if (m.find()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"            Integer key \u003d Integer.parseInt(m.group());","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"            Optional\u003cTask\u003e task \u003d TaskList.getTask(key);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"            task.ifPresent(Task::markTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"Invalid format. Please ensure that you specify the task number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":30}},{"path":"src/main/java/controllers/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    public TodoCommand(String arguments) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.TODO);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d arguments;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        Matcher mTodo \u003d Task.TODO.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        Task.processTask(mTodo, TaskType.TODO);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":23}},{"path":"src/main/java/controllers/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package controllers;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import entities.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private final String args;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    public UnmarkCommand(String args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        super(CommandType.UNMARK);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        Matcher m \u003d NUMBERS.matcher(args);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        if (m.find()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"            Integer key \u003d Integer.parseInt(m.group());","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"            Optional\u003cTask\u003e task \u003d TaskList.getTask(key);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"            task.ifPresent(Task::unmarkTask);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"Invalid format. Please ensure that you specify the task number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":30}},{"path":"src/main/java/entities/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package entities;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        String flags \u003d by.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        return new SerializableTask(TaskType.DEADLINE, isDone, description, flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    public boolean activeOn(LocalDate date) {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        return by.equals(date);","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"                by.getDayOfWeek().toString().toLowerCase() + \", \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Zxun2":37}},{"path":"src/main/java/entities/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package entities;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    public Event(String description, String ...flags) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        this.from \u003d LocalDate.parse(flags[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        this.to \u003d LocalDate.parse(flags[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        String flags \u003d from + \" to \" + to;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        return new SerializableTask(TaskType.EVENT, isDone, description, flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    public boolean activeOn(LocalDate date) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"        return date.isAfter(from) \u0026\u0026 date.isBefore(to) || date.isEqual(from) || date.equals(to);","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" +  to.format(formatter) + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Zxun2":39}},{"path":"src/main/java/entities/SerializableTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package entities;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import utils.Marshal;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import utils.Unmarshal;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"public class SerializableTask implements Marshal, Unmarshal {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    private final TaskType taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    private final boolean done;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    private final String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    private String flags \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask(TaskType taskType, boolean done, String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask(TaskType taskType, boolean done, String description, String flags) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"        this(taskType, done, description);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        this.flags \u003d flags;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    public String marshal() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        StringBuilder sb \u003d new StringBuilder(taskType.getType() + \" | \" + (done ? \"1\" : \"0\") + \" | \" + description);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        if (!flags.isBlank()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"            sb.append(\" | \").append(flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    public Task unmarshal() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"            case TODO: return new Todo(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"            case DEADLINE: return new Deadline(description, flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"            case EVENT: return new Event(description, flags.split(\" to \"));","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"            default: return null;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":42}},{"path":"src/main/java/entities/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package entities;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import utils.CustomValidator;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"abstract public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern DATE_FORMAT \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"^(?\u003cyear\u003e\\\\d{4})-(?\u003cmonth\u003e0[0-9]|1[0-2])-(?\u003cday\u003e0[0-9]|1[0-9]|2[0-9]|3[0-1])$\");","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    public static final Pattern DEADLINE \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"^(deadline) (?\u003cdescription\u003e.+) /by (?\u003cby\u003e.+)$\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    public  static final Pattern EVENT \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"^(event) (?\u003cdescription\u003e.+) /from (?\u003cfrom\u003e.+) /to (?\u003cto\u003e.+)$\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    public static final Pattern TODO \u003d Pattern.compile(\"^(todo) (?\u003cdescription\u003e.+)$\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d \"Date is not valid! Please try again.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    public abstract SerializableTask serialize();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    public abstract boolean activeOn(LocalDate date);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    private static boolean validateDate(String date) {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        return CustomValidator.validate(date, (String val) -\u003e DATE_FORMAT.matcher(val).matches());","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    private static Task createTask(TaskType type, String description, Matcher matcher) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        switch (type) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"            case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"                return new Todo(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"            case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"                String from \u003d matcher.group(\"from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"                String to \u003d matcher.group(\"to\");","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"                if (!validateDate(from) || !validateDate(to) ) {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"                    throw type.getErr();","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"                LocalDate fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"                LocalDate toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"                if (!fromDate.isBefore(toDate) \u0026\u0026 fromDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"                    throw new DukeException(INVALID_DATE_MESSAGE);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"                return new Event(description, fromDate, toDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"                String by \u003d matcher.group(\"by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"                if (!validateDate(by)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"                    throw type.getErr();","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"                LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"                if (! byDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"                    throw new DukeException(INVALID_DATE_MESSAGE);","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"                return new Deadline(description, byDate);","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"            default:","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"                throw type.getErr();","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"    public static void processTask(Matcher matcher, TaskType type) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"            throw type.getErr();","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"        Task task \u003d createTask(type, description, matcher);","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"        TaskList.addTask(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n [X] \"  + description);","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n [ ] \" + description);","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Zxun2":95}},{"path":"src/main/java/entities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package entities;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    public TaskList(Supplier\u003c? extends Boolean\u003e preloader) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"        Boolean success \u003d preloader.get();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"        if (success) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"Successfully loaded data.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    public TaskList() {}","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    public static void filter(Predicate\u003c? super Task\u003e predicate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        List\u003cTask\u003e filteredList \u003d taskList.stream().filter(predicate).collect(Collectors.toList());","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"There are no active tasks on this date!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"            return;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"        filteredList.forEach(System.out::println);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    public static void addTask(Task task, boolean print) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        if (print) {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"\\t\" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        addTask(task, true);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    public static Optional\u003cTask\u003e getTask(Integer key) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        if (!isValidKey(key)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"This task don\u0027t exists! Please select one from the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"            return Optional.empty();","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"        // accounts for 0-based indexing","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        return Optional.of(taskList.get(key - 1));","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"    private static boolean isValidKey(Integer key) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"        return (key \u003c\u003d taskList.size() \u0026\u0026 key \u003e 0);","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    public static void deleteTask(Integer key) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        if (isValidKey(key)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"            Task task \u003d taskList.get(key - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"            taskList.remove(key - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"Noted. I\u0027ve removed the task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"\\t\" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"This task don\u0027t exists! Please select one from the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        return taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"    public static String listTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"        if (taskList.size() \u003e 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"            ListIterator\u003cTask\u003e it \u003d taskList.listIterator();","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"            while (it.hasNext()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"                sb.append(it.nextIndex() + 1).append(\". \").append(it.next()).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"            sb.deleteCharAt(sb.length() - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"            return sb.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"            return \"There are no outstanding tasks!\";","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"        return listTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":89}},{"path":"src/main/java/entities/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package entities;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    public SerializableTask serialize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        return new SerializableTask(TaskType.TODO, isDone, description);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    public boolean activeOn(LocalDate date) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Zxun2":26}},{"path":"src/main/java/enums/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package enums;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"public enum CommandType {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    INVALID(\"invalid\"),","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    DATE(\"date\");","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    private final String type;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    CommandType(String type) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    public String getType() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        return type;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":23}},{"path":"src/main/java/enums/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package enums;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"    TODO(\"todo\", new DukeException(\"Your format is incorrect.\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"            \"Please try again with the following format: todo [description].\")),","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    EVENT(\"event\", new DukeException(\"Your format is incorrect.\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"            \"Please try again with the following format: event [description] /from [yyyy-mm-dd] /to [yyyy-mm-dd].\")),","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    DEADLINE(\"deadline\", new DukeException(\"Your format is incorrect.\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"            \"Please try again with the following format: deadline [description] /by [yyyy-mm-dd].\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private final String type;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private final DukeException err;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    TaskType(String type, DukeException err) {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        this.err \u003d err;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    public String getType() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        return this.type;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    public DukeException getErr() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"        return err;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":27}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package exceptions;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package parser;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import controllers.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import enums.CommandType;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"public class Parser {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"    private static final Pattern VALID_COMMAND \u003d","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"            Pattern.compile(\"^(?\u003ccmd\u003elist|bye|mark|date|unmark|delete|todo|deadline|event)(?\u003carguments\u003e.*)?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private static final Command invalidCommand \u003d  new Command(CommandType.INVALID) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        public void execute() throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    };","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"    private static Command parse(CommandType cmd, String arguments) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"        switch(cmd) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"            case BYE:        return new GoodbyeCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"            case LIST:       return new ListCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"            case MARK:       return new MarkCommand(arguments);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"            case DATE:       return new DateCommand(arguments);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"            case UNMARK:     return new UnmarkCommand(arguments);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"            case DELETE:     return new DeleteCommand(arguments);","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"            case TODO:       return new TodoCommand(arguments);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"            case DEADLINE:   return new DeadlineCommand(arguments);","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"            case EVENT:      return new EventCommand(arguments);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"            default:         return invalidCommand;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        String uInput \u003d input.toLowerCase();","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        Matcher matcher \u003d VALID_COMMAND.matcher(uInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"            String cmd  \u003d matcher.group(\"cmd\").strip().toUpperCase();","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            CommandType cmdType \u003d CommandType.valueOf(cmd);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"            return parse(cmdType, uInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"            return invalidCommand;","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Zxun2":46}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package storage;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import entities.SerializableTask;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import entities.Task;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import entities.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import enums.TaskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import java.io.File;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"public class Storage {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    private static final String GENERIC_ERROR \u003d \"An error occurred when creating the database: \";","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    private final File file;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    public Storage(String filename) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        this.file \u003d new File(String.format(\"%s/%s\", FILE_DIRECTORY, filename));","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"     * Loads the data stored in the hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     * @throws DukeException A generic application error that specifies the type of error thrown.","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    public void connect() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"        File folder \u003d file.getParentFile();","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"            if (!folder.exists() \u0026\u0026 !folder.mkdirs()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"                throw new DukeException(GENERIC_ERROR + folder.getName());","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"            if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"                throw new DukeException(GENERIC_ERROR + file.getName());","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"            System.out.println(\"Successfully connected to storage.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"        } catch (IOException | SecurityException err) {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(GENERIC_ERROR + err.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    public boolean load() {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"            Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"                List\u003cString\u003e data \u003d Arrays.asList(reader.nextLine().split(\" \\\\| \"));","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"                // Expect only valid data to be saved to hard drive","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"                TaskType taskType \u003d TaskType.valueOf(data.get(0).toUpperCase());","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"                boolean isDone \u003d data.get(1).equals(\"1\");","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"                String description \u003d data.get(2);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"                SerializableTask task;","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"                switch(taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"                    case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"                    case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"                        String aFlags \u003d data.subList(3, data.size()).toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"                        String flags \u003d aFlags.substring(1, aFlags.length()-1);","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"                        task \u003d new SerializableTask(taskType, isDone, description, flags);","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"                    default: task \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"                if (task !\u003d null) TaskList.addTask(task.unmarshal(), false);","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"            return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"            System.out.println(GENERIC_ERROR + e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"            return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"    public void write(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"            for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"                SerializableTask tsk \u003d task.serialize();","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"                fileWriter.write( tsk.marshal() + \"\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"            throw new DukeException(GENERIC_ERROR + e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":88}},{"path":"src/main/java/utils/CustomValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package utils;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"public class CustomValidator {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"    public static boolean validate(String string, Validator validator) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"        return validator.validate(string);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":7}},{"path":"src/main/java/utils/Executable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package utils;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"@FunctionalInterface","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"public interface Executable {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"    void execute() throws DukeException;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":8}},{"path":"src/main/java/utils/Marshal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package utils;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"public interface Marshal {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"    Object marshal();","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":5}},{"path":"src/main/java/utils/Unmarshal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package utils;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"public interface Unmarshal {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"    Object unmarshal();","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":5}},{"path":"src/main/java/utils/Validator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package utils;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"@FunctionalInterface","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"public interface Validator {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"    boolean validate(String value);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":7}},{"path":"src/main/java/views/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package views;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"public class UI {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"    private final String DATE_FORMAT \u003d \"YYYY-MM-DD\";","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"    private String indentMessage(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"        return \"\\n\\t \" + message;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    private String separatorLine() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"        return  \"\\n------------------------------------------------\";","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        System.out.println(\"Hello! I\u0027m Duke. What can i do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        System.out.println(","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"                \"These are the available commands:\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"                        indentMessage(\"todo     [description]\") +","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"                        indentMessage(\"event    [description] /from [\" + DATE_FORMAT + \"] /to [\" + DATE_FORMAT + \"]\") +","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"                        indentMessage(\"deadline [description] /by   [\" + DATE_FORMAT + \"]\") +","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"                        separatorLine());","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Zxun2":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"TODO return book","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"DEADLINE mark scripts /by 2022-01-11","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"EVENT project meeting /from 2023-01-12 /to 2023-02-22","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"mark -1","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"unmark -1","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"delete -1","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"send help","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"delete 01","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"EVENT project meeting /from 2023-01-12 /to 2023-02-22","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"event project meeting","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"date 2023-01-12","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"date 2023-01-01","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Zxun2":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"REM delete the data directory if it exists","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"if exist data del /f /q data","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"REM convert file to unix","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"dos2unix ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Zxun2":6,"-":21}}]
