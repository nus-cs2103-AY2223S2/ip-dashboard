[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"plugins {","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"repositories {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"dependencies {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    implementation \u0027org.jetbrains:annotations:23.0.0\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"test {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    testLogging {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        showExceptions true","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        showCauses true","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"        showStackTraces true","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"application {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"shadowJar {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"run{","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"checkstyle {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"adam07018":47}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"@rem","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"@rem","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"@rem","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"@rem","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"@rem","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"@rem","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"@rem","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"@rem Find java.exe","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"echo.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"echo.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"goto fail","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"echo.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"echo.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"goto fail","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"adam07018"},"content":":init","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"adam07018"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"adam07018"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"adam07018"},"content":":win9xME_args","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"adam07018"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"adam07018"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"adam07018"},"content":"set _SKIP\u003d2","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"adam07018"},"content":":win9xME_args_slurp","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"adam07018"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"adam07018"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"adam07018"},"content":":execute","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"adam07018"},"content":"@rem Setup the command line","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"adam07018"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"adam07018"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"adam07018"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"adam07018"},"content":":end","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"adam07018"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"adam07018"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"adam07018"},"content":":fail","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"adam07018"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"adam07018"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"adam07018"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"adam07018"},"content":"exit /b 1","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"adam07018"},"content":":mainEnd","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"adam07018"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"adam07018"},"content":":omega","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"adam07018":103}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    ByeCommand() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"        taskList.end();","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":13}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public interface Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    public void execute (TaskList taskList) throws DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    public boolean isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    protected Times ddline;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"[D]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        ddline \u003d new Times(by);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"     * Adds new deadline task","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"     * @param input Input Chat which starts with \"deadline\"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"     *              Format: \"deadline {description} /by {time}","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"     *              example: deadline return book /by 2019-10-15 1530","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    public static Deadline createDeadline(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        int ddlineIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"        if (ddlineIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"            throw new DukeException(ExceptionType.TASK_FORMAT_ERROR);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(9, ddlineIndex - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        String by \u003d input.substring(ddlineIndex + 4);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        Deadline temp \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"        return temp;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"        return type + super.toString() + \" (by: \" + ddline + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"    public String getDescriptionAndTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"        return description + \" (by: \" + ddline + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":37}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    private Task newDeadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    DeadlineCommand(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"        newDeadline \u003d t;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":16}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    private int deleteIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    DeleteCommand(int i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"        deleteIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    public void execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"        taskList.delete(deleteIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    private TaskList list;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    private Storage s;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    Duke() {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        s \u003d new Storage();","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        Duke a \u003d new Duke();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        a.start();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    public void start() throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        ui.sayHello();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"                Command cmd \u003d parser.parse(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"                cmd.execute(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"                if (cmd.isExit()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"                    sc.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"                    return;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"adam07018":35}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    DukeException(ExceptionType e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"        switch (e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"            default:","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"Unknown error occured\");","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"            case DESCRIPTION_EMPTY:","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"            case TASK_FORMAT_ERROR:","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"Sorry, the format of task is incorrect\");","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"            case TASK_NOT_EXIST:","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"Sorry, There is no such task for this command\");","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"            case NO_NUMBER:","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"Please key in number for this command\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"            case UNCLEAR_COMMAND:","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"adam07018":26}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    protected Times from, to;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"[E]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"        this.from \u003d new Times(from);","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"        this.to \u003d new Times(to);","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    public static Event createEvent(String input) throws DukeException{","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        int index1 \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        int index2 \u003d input.lastIndexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        if (index1 \u003d\u003d -1 || index2 \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"            throw new DukeException(ExceptionType.TASK_FORMAT_ERROR);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(6,index1 - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        String from \u003d input.substring(index1 + 6, index2 - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        String to \u003d input.substring(index2 + 4);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"        Event temp \u003d new Event(description,from,to);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"        return temp;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    public String getDescriptionAndTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"        return description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"        return type + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":33}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    private Task newEvent;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    EventCommand(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"        newEvent \u003d t;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        taskList.add(newEvent);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":14}},{"path":"src/main/java/ExceptionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public enum ExceptionType {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    DESCRIPTION_EMPTY, TASK_FORMAT_ERROR, NO_NUMBER, TASK_NOT_EXIST, UNCLEAR_COMMAND","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"adam07018":3}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    ListCommand() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"        taskList.list();","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":12}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    private int markIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    MarkCommand(int i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"        markIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public void execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        taskList.mark(markIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    private static final int TODO_LENGTH \u003d 4;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    Parser() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"        int startIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"        Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        // Get the substring of command and store in header","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        int firstBlank \u003d input.indexOf(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        // No description of task","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"        if (firstBlank \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"                throw new DukeException(ExceptionType.DESCRIPTION_EMPTY);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        String header \u003d input.substring(0, firstBlank);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"            startIndex \u003d TODO_LENGTH + 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"            description \u003d input.substring(startIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"            newTask \u003d new ToDo(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"            return new ToDoCommand(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"            newTask \u003d Deadline.createDeadline(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"            return new DeadlineCommand(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"event\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"            newTask \u003d Event.createEvent(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"            return new EventCommand(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"delete\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"                int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"                throw new DukeException(ExceptionType.NO_NUMBER);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"                int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"                throw new DukeException(ExceptionType.NO_NUMBER);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"                int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"                throw new DukeException(ExceptionType.NO_NUMBER);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"        throw new DukeException(ExceptionType.UNCLEAR_COMMAND);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":64}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.nio.file.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    protected String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    protected Path path;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    protected File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    Storage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        path \u003d Paths.get(home,\"data\",\"duke.txt\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"            file \u003d new File(path.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"            if (file.createNewFile())","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"file created\");","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"            else {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"                file.delete();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"Fail to create file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    public void write(Task t) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"        int isDone \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"        if(t.getIsDone())","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"            isDone \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"        String description \u003d t.type + \" | \" + isDone + \" | \" + t.getDescriptionAndTime() + System.lineSeparator();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"            Files.writeString(path,description,StandardCharsets.UTF_8,StandardOpenOption.APPEND);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"File doesn\u0027t exist\");","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"    public void update(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        file.delete();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"Fail to create file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"        Iterator\u003cTask\u003e it \u003d list.iterator();","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"            int isDone \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"            Task t \u003d it.next();","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"            if (t.getIsDone())","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"                isDone \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"            String description \u003d t.type + \" | \" + isDone + \" | \" + t.getDescriptionAndTime() + System.lineSeparator();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"                Files.writeString(path,description,StandardCharsets.UTF_8,StandardOpenOption.APPEND);","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"File doesn\u0027t exist\");","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"adam07018":65}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    protected String description;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"Task\";","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        return (isDone ? \"[X] \" : \"[] \"); // mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    public String getDescriptionAndTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"        return description;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":36}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"     * Here we assume all input is in correct format","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"     * Moreover, all index is correct for compile","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"     * Error handling and index handling (i - 1) will be done by parser","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    private Storage s \u003d new Storage();","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    public void end() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        ui.sayBye();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    public void mark(int i) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"            list.get(i).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"            s.update(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"            ui.showMark(list.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        } catch (IndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"            throw new DukeException(ExceptionType.TASK_NOT_EXIST);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    public void unmark(int i) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"            list.get(i).markAsNotDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"            s.update(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"            ui.showMarkNotDone(list.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"        } catch (IndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"            throw new DukeException(ExceptionType.TASK_NOT_EXIST);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    public void list() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"        ui.showList(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"        list.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        s.write(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"        ui.showAddTask(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"    public void delete(int deleteIndex) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"            Task temp \u003d list.remove(deleteIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"            s.update(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"            ui.showDelete(temp, list);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"        } catch (IndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"            throw new DukeException(ExceptionType.TASK_NOT_EXIST);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":55}},{"path":"src/main/java/Times.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"public class Times {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    protected LocalDateTime d;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    final static DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"     * Constructor of Times","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"     * @param time (format:yyyy-mm-dd hhmm) (eg. 2019-10-15 1530)","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    Times(String time) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"           d \u003d LocalDateTime.parse(time,FORMATTER);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"Input String is not correct format for time\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"        Times a \u003d new Times(\"2019-10-15 1530\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"        System.out.println(a);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"adam07018":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"[T]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    public static ToDo createToDo(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"        ToDo temp \u003d new ToDo((description));","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        return temp;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        return type + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":19}},{"path":"src/main/java/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class ToDoCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    private Task newToDo;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    ToDoCommand(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"        newToDo \u003d t;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        taskList.add(newToDo);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":14}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    Ui() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"     * Output message of marking","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"     * @param t -\u003e task mark as done","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    public void showMark(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"     * Output message of Unmarking","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"     * @param t -\u003e task mark as not done","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    public void showMarkNotDone(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"     * Greets to user","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    public void sayHello() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Hello! I\u0027m Luminus\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"    public void sayBye() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"     * show list of task to user","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"     * @param list -\u003e list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"    public void showList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"            System.out.println(i + \". \" + list.get(i - 1));","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"     * When a task is added to list, following will be output","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"     * 1. task(with description) is added (to the end of list)","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"     * 2. print current size of list","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"     * @param list -\u003e list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"    public void showAddTask(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"        System.out.println(list.get(list.size() - 1));","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"     * When a task is deleted from list, following will be output","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"     * 1. which task is deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"     * 2. After deletion, how many tasks are left","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"     * @param temp -\u003e the deleted task","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"     * @param list -\u003e list after deletion","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"adam07018"},"content":"    public void showDelete(Task temp, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"adam07018"},"content":"        System.out.println(temp);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":75}},{"path":"src/main/java/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class UnMarkCommand implements Command{","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    private int unMarkIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    UnMarkCommand(int i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"        unMarkIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    public void execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"        taskList.unmark(unMarkIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":16}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public void testCreateToDo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        String testcase \u003d \"read book\";","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"        ToDo a \u003d new ToDo(testcase);","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"        ToDo b \u003d ToDo.createToDo(\"todo \" + testcase);","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        assertEquals(a.toString(),b.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        String testcase \u003d \"read book\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        ToDo a \u003d new ToDo(testcase);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        assertEquals(a.toString(), \"[T][] read book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"adam07018":20}}]
