[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"plugins {","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    // javafx","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.11\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"repositories {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"javafx {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    version \u003d \"17.0.2\"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"dependencies {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    implementation \u0027org.jetbrains:annotations:23.0.0\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"test {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"    testLogging {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        showExceptions true","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"        showCauses true","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"        showStackTraces true","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"application {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"shadowJar {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"run{","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"adam07018"},"content":"checkstyle {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"adam07018"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"adam07018":70}},{"path":"src/main/java/Command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":" * This command doesn\u0027t do anything to task list","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" * Instead, it set exit as true and will shut down process in duke class","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    public ByeCommand() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        return taskList.end();","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":21}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" * Command Interface","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"public interface Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) throws DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public boolean isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":12}},{"path":"src/main/java/Command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import Task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" * Command class for Deadline object","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    private Task newDeadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    public DeadlineCommand(Task t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        newDeadline \u003d t;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        return taskList.add(newDeadline);","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":25}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":" * Command class for delete","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    private int deleteIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    public DeleteCommand(int i) {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        deleteIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        return taskList.delete(deleteIndex);","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":23}},{"path":"src/main/java/Command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import Task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" * Command class for event","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    private Task newEvent;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public EventCommand(Task t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        newEvent \u003d t;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        return taskList.add(newEvent);","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":22}},{"path":"src/main/java/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" * Command class for find","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    private String keywords;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public FindCommand(String s) {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        keywords \u003d s;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        return taskList.find(keywords);","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"adam07018":24}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":" * Command class for listing out","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    public ListCommand() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        return taskList.list();","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":19}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" * Command class for mark","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    private int markIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public MarkCommand(int i) {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        markIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        return taskList.mark(markIndex);","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":23}},{"path":"src/main/java/Command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" * Command class for ToDo","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"public class ToDoCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    private Task newToDo;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    public ToDoCommand(Task t) {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        newToDo \u003d t;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        return taskList.add(newToDo);","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":25}},{"path":"src/main/java/Command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" * Command class for unmark","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"public class UnMarkCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    private int unMarkIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public UnMarkCommand(int i) {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        unMarkIndex \u003d i;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        return taskList.unmark(unMarkIndex);","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":24}},{"path":"src/main/java/DukeException/DescriptionEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"public class DescriptionEmptyException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public DescriptionEmptyException() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        return \"OOPS!!! The description cannot be empty.\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":10}},{"path":"src/main/java/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":" * Exception class","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":" * Print various messages to users due to different error situations","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    DukeException() {}","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"adam07018":10}},{"path":"src/main/java/DukeException/NoNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"public class NoNumberException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public NoNumberException() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        return \"Please key in number for this command\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":10}},{"path":"src/main/java/DukeException/TaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"public class TaskFormatException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public TaskFormatException(){}","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        return \"Sorry, the format of task is incorrect\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":10}},{"path":"src/main/java/DukeException/TaskNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"public class TaskNotExistException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public TaskNotExistException() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        return \"Sorry, There is no such task for this command\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":10}},{"path":"src/main/java/DukeException/UnclearCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"public class UnclearCommandException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public UnclearCommandException() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":10}},{"path":"src/main/java/DukeException/UnknownErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"public class UnknownErrorException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public UnknownErrorException() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        return \"Unknown error occurred\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":10}},{"path":"src/main/java/DukeException/WrongFormatTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"public class WrongFormatTimeException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    public WrongFormatTimeException() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"        return \"Input String is not correct format for time\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":11}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import DukeException.TaskFormatException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import duke.Times;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" * Object class of Deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":" * Deadline has and only has one time attribute","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    protected static final int DEADLINE \u003d 8;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    protected static final int BY \u003d 4; // /by/n \u003d 4","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    protected Times ddline;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"[D]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"     * @param description -\u003e Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"     * @param by          -\u003e String format of time deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"        ddline \u003d new Times(by);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"     * Adds new deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"     * Format: \"deadline {description} /by {time}","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"     * example: deadline return book /by 2019-10-15 1530","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"     * @param input Input Chat which starts with \"deadline\"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"     * @throws DukeException if format of deadline task is wrong.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    public static Deadline createDeadline(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"        int ddlineIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"        if (ddlineIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"            DukeException e \u003d new TaskFormatException();","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"            throw e;","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(DEADLINE + 1, ddlineIndex - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        String by \u003d input.substring(ddlineIndex + BY);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"        return type + super.toString() + \" (by: \" + ddline + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"    public String getDescriptionAndTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"        return description + \" (by: \" + ddline + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":59}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import DukeException.TaskFormatException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import duke.Times;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" * Object class of Event","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":" * Event must have two time attribute","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    protected static final int EVENT \u003d 5;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    protected static final int FROM \u003d 6; // /from/n \u003d 6","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    protected static final int TO \u003d 4; // /to/n \u003d 4","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    protected Times from;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    protected Times to;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"[E]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"     * Constructor for Event","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"     * @param description -\u003e Task description","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"     * @param from -\u003e String format of starting time of event","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"     * @param to -\u003e String format of ending time of event","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        this.from \u003d new Times(from);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"        this.to \u003d new Times(to);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"     * Creates event object","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"     * Format: event {description} /from {time} /to {time}","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"     * Example: event read book /from 2019-10-15 1530 /to 2020-12-11 1200","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"     * @param input -\u003e Input Chat which starts with \"event\"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"     * @return Event object","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"     * @throws DukeException if format of event task is wrong.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    public static Event createEvent(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"        int index1 \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"        int index2 \u003d input.lastIndexOf(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"        // format is wrong, there are less than 2 \"/\"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"        if (index1 \u003d\u003d -1 || index2 \u003d\u003d -1 || index1 \u003d\u003d index2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"            DukeException e \u003d new TaskFormatException();","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"            throw e;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(EVENT + 1, index1 - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        String from \u003d input.substring(index1 + FROM, index2 - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"        String to \u003d input.substring(index2 + TO);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"        Event temp \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"        return temp;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"    public String getDescriptionAndTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"        return description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"        return type + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":63}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":" * Parent class task.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":" * Subclass:ToDo,Deadline,Event","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    protected String description;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"Task\";","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"     * Constructor","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"     * @param description","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        return (isDone ? \"[X] \" : \"[] \"); // mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"    public String getDescriptionAndTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        return description;","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"    public String getType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        return type;","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":49}},{"path":"src/main/java/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import DukeException.TaskNotExistException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":" * Class which stores a list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":" * Most operations are done in this class","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"     * Here we assume all input is in correct format","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"     * Moreover, all index is correct for compile","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"     * Error handling and index handling (i - 1) will be done by parser","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    private Storage s \u003d new Storage();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    public String end() {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"        return ui.sayBye();","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"     * Mark ith task as done","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"     * @param i","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"     * @throws DukeException if ith task doesn\u0027t exist","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    public String mark(int i) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"            list.get(i).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"            assert i \u003e\u003d 0 \u0026\u0026 i \u003c list.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"            s.update(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"            return ui.showMark(list.get(i));","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"        } catch (IndexOutOfBoundsException E) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"            DukeException e \u003d new TaskNotExistException();","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"            return e.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"     * Unmark ith task as not done","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"     * @param i","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"    public String unmark(int i) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"            list.get(i).markAsNotDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"            assert i \u003e\u003d 0 \u0026\u0026 i \u003c list.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"            s.update(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"            return ui.showMarkNotDone(list.get(i));","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"        } catch (IndexOutOfBoundsException E) {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"            DukeException e \u003d new TaskNotExistException();","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"            return e.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"adam07018"},"content":"    public String list() {","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"adam07018"},"content":"        return ui.showList(list);","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"adam07018"},"content":"     * Adds task to list","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"adam07018"},"content":"     * @param t","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"adam07018"},"content":"    public String add(Task t) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"adam07018"},"content":"        list.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"adam07018"},"content":"        s.write(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"adam07018"},"content":"        return ui.showAddTask(list);","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"adam07018"},"content":"     * Deletes ith task from list","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"adam07018"},"content":"     * @param deleteIndex","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"adam07018"},"content":"     * @throws DukeException if ith task doesn\u0027t exist","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"adam07018"},"content":"    public String delete(int deleteIndex) {","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"adam07018"},"content":"            Task temp \u003d list.remove(deleteIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"adam07018"},"content":"            s.update(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"adam07018"},"content":"            return ui.showDelete(temp, list);","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"adam07018"},"content":"        } catch (IndexOutOfBoundsException E) {","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"adam07018"},"content":"            DukeException e \u003d new TaskNotExistException();","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"adam07018"},"content":"            return e.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"adam07018"},"content":"     * List out the tasks which contain keywords","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"adam07018"},"content":"     * @param keywords","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"adam07018"},"content":"    public String find(String keywords) {","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"adam07018"},"content":"        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"adam07018"},"content":"        Iterator\u003cTask\u003e it \u003d list.iterator();","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"adam07018"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"adam07018"},"content":"            Task t \u003d it.next();","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"adam07018"},"content":"            if (t.getDescriptionAndTime().contains(keywords)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"adam07018"},"content":"                matches.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"adam07018"},"content":"        assert it.hasNext() \u003d\u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"adam07018"},"content":"        return ui.showFind(matches);","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":116}},{"path":"src/main/java/Task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":" * Object class of ToDo","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    protected static final int TODO \u003d 4;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"[T]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"     * Create todo task","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"     * @param input","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"     * @return todo object","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    public static ToDo createToDo(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(TODO + 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"        return new ToDo((description));","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        return type + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":29}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"    private void flip() {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"        db.flip();","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"        return db;","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import Command.Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import Task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":" * Github id: adam07018","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":" *","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":" * @author Lu Chenyu","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    private TaskList list;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"     * default constructor","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    public Duke() {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"            Command cmd \u003d parser.parse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"            isExit \u003d cmd.isExit();","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"            return cmd.execute(list);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"            return e.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"            return null;","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"        return isExit;","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        return ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"adam07018":45}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"public class Launcher {","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":8}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"            stage.show();","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":30}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getUi().sayHello(), dukeImage));","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"        if (duke.getIsExit()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"            assert duke.getIsExit() \u003d\u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"            // This code is gotten from","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"            // https://stackoverflow.com/questions/27334455/how-to-close-a-stage-after-a-certain-amount-of-time-javafx","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"            delay.setOnFinished( event -\u003e Platform.exit() );","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"            delay.play();","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"            return;","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"        assert duke.getIsExit() \u003d\u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":65}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import Command.ByeCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Command.Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import Command.DeadlineCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"import Command.EventCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"import Command.FindCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"import Command.ListCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"import Command.MarkCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"import Command.ToDoCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"import Command.UnMarkCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"import DukeException.DescriptionEmptyException;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"import DukeException.NoNumberException;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"import DukeException.UnclearCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"import Task.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"import Task.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"import Task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"import Task.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":" * Object class for Parser","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":" * Parser acts like a compiler which translates user input into command","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    private static final int TODO_LENGTH \u003d 4;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    Parser() {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"     * Parse the input into commands which system understand","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"     * @param input -\u003e Raw input from user","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"     * @return command object","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"     * @throws DukeException -\u003e Input doesn\u0027t match with any known commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"        int startIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"        Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"        String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"        DukeException e;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        // command bye","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"        // command list","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"        // Get the substring of command and store in header","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"        int firstBlank \u003d input.indexOf(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"        // No description of task","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"        if (firstBlank \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"            e \u003d new DescriptionEmptyException();","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"            throw e;","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"        String header \u003d input.substring(0, firstBlank);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"        // command todo","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"            startIndex \u003d TODO_LENGTH + 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"            description \u003d input.substring(startIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"            newTask \u003d new ToDo(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"adam07018"},"content":"            return new ToDoCommand(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"adam07018"},"content":"        // command deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"adam07018"},"content":"            newTask \u003d Deadline.createDeadline(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"adam07018"},"content":"            return new DeadlineCommand(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"adam07018"},"content":"        // command event","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"event\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"adam07018"},"content":"            newTask \u003d Event.createEvent(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"adam07018"},"content":"            return new EventCommand(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"adam07018"},"content":"        // command delete","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"delete\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"adam07018"},"content":"                int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"adam07018"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"adam07018"},"content":"            } catch (NumberFormatException E) {","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"adam07018"},"content":"                e \u003d new NoNumberException();","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"adam07018"},"content":"                throw e;","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"adam07018"},"content":"        // command mark","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"adam07018"},"content":"                int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"adam07018"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"adam07018"},"content":"            } catch (NumberFormatException E) {","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"adam07018"},"content":"                e \u003d new NoNumberException();","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"adam07018"},"content":"                throw e;","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"adam07018"},"content":"        // command unmark","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"adam07018"},"content":"                int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"adam07018"},"content":"                return new UnMarkCommand(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"adam07018"},"content":"            } catch (NumberFormatException E) {","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"adam07018"},"content":"                e \u003d new NoNumberException();","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"adam07018"},"content":"                throw e;","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"adam07018"},"content":"        if (header.equals(\"find\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"adam07018"},"content":"            String keywords \u003d input.substring(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"adam07018"},"content":"            return new FindCommand(keywords);","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"adam07018"},"content":"        e \u003d new UnclearCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"adam07018"},"content":"        throw e;","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":115}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"import Task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":" * Object Class for Storage","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":" * Creates folder and file if it\u0027s first time running on the device.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":" * Update the hard copy when changes are made.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    protected String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    protected Path path;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    protected File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"     * Default Constructor of Storage","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"     * Whenever duke is started, storage is initialized","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"     * Thus this constructor will be invoked.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"     * It will delete the old file and create new file under /user/data/duke.txt","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    public Storage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"        path \u003d Paths.get(home, \"data\", \"duke.txt\");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"            file \u003d new File(path.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"file created\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"                file.delete();","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"Fail to create file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"     * Write task to hard copy","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"     * @param t","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"    public void write(Task t) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"        int isDone \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"        if (t.getIsDone()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"            isDone \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"        String type \u003d t.getType();","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"        String description \u003d type + \" | \" + isDone + \" | \" + t.getDescriptionAndTime() + System.lineSeparator();","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"            Files.writeString(path, description, StandardCharsets.UTF_8, StandardOpenOption.APPEND);","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"File doesn\u0027t exist\");","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"adam07018"},"content":"     * Update hard copy by rewriting everything","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"adam07018"},"content":"     * Only happen when a task is marked/unmarked/deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"adam07018"},"content":"     * @param list","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"adam07018"},"content":"    public void update(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"adam07018"},"content":"        file.delete();","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"adam07018"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"Fail to create file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"adam07018"},"content":"        Iterator\u003cTask\u003e it \u003d list.iterator();","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"adam07018"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"adam07018"},"content":"            int isDone \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"adam07018"},"content":"            Task t \u003d it.next();","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"adam07018"},"content":"            if (t.getIsDone()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"adam07018"},"content":"                isDone \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"adam07018"},"content":"            String type \u003d t.getType();","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"adam07018"},"content":"            String description \u003d type + \" | \" + isDone + \" | \" + t.getDescriptionAndTime() + System.lineSeparator();","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"adam07018"},"content":"                Files.writeString(path, description, StandardCharsets.UTF_8, StandardOpenOption.APPEND);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"adam07018"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"File doesn\u0027t exist\");","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"adam07018":96}},{"path":"src/main/java/duke/Times.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import DukeException.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import DukeException.WrongFormatTimeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":" * Object class for time","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":" * Input of time will be formatted to MMM d yyyy hh:mm","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"public class Times {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    protected LocalDateTime d;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"     * Constructor of Times","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"     * @param time (format:yyyy-mm-dd hhmm) (eg. 2019-10-15 1530)","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    public Times(String time) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"            d \u003d LocalDateTime.parse(time, FORMATTER);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        } catch (DateTimeParseException E) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"            DukeException e \u003d new WrongFormatTimeException();","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"            throw e;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"adam07018":36}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import Task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":" * Class that display messages (except error messages) to user","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    public Ui() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"     * Output message of marking","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"     * @param t -\u003e task mark as done","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public String showMark(Task t) {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + t + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"     * Output message of Unmarking","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"     * @param t -\u003e task mark as not done","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"    public String showMarkNotDone(Task t) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + t + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"     * Greets to user","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    public String sayHello() {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"        return \"Hello! I\u0027m Luminus\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"    public String sayBye() {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"     * show list of task to user","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"     * @param list -\u003e list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"    public String showList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"            return \"Excuse me, your list is still empty lei\";","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        assert(list.size() \u003e 0);","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        StringBuilder str \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"            str.append(i + \". \" + list.get(i - 1) + \"\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"        return str.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"     * When a task is added to list, following will be output","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"     * 1. task(with description) is added (to the end of list)","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"     * 2. print current size of list","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"     * @param list -\u003e list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"    public String showAddTask(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"        StringBuilder str \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"        str.append(list.get(list.size() - 1) + \"\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"        str.append(\"Now you have \" + list.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"        return str.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"adam07018"},"content":"     * When a task is deleted from list, following will be output","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"adam07018"},"content":"     * 1. which task is deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"adam07018"},"content":"     * 2. After deletion, how many tasks are left","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"adam07018"},"content":"     * @param temp -\u003e the deleted task","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"adam07018"},"content":"     * @param list -\u003e list after deletion","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"adam07018"},"content":"    public String showDelete(Task temp, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"adam07018"},"content":"        StringBuilder str \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"adam07018"},"content":"        str.append(temp + \"\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"adam07018"},"content":"        str.append(\"Now you have \" + list.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"adam07018"},"content":"        return str.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"adam07018"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"adam07018"},"content":"     * Output the tasks which matches keywords","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"adam07018"},"content":"     * @param matches","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"adam07018"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"adam07018"},"content":"    public String showFind(ArrayList\u003cTask\u003e matches) {","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"adam07018"},"content":"        if (matches.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"adam07018"},"content":"            return \"Sorry, I can\u0027t find any tasks that matches your keywords.\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"adam07018"},"content":"        StringBuilder str \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"adam07018"},"content":"        for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"adam07018"},"content":"            Task temp \u003d matches.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"adam07018"},"content":"            str.append((i + 1) + \". \" + temp + \"\\n\");","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"adam07018"},"content":"        return str.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"adam07018":97}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Say something ...\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"adam07018":19}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"import Task.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    public void testCreateToDo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"        String testcase \u003d \"read book\";","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"        ToDo a \u003d new ToDo(testcase);","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        ToDo b \u003d ToDo.createToDo(\"todo \" + testcase);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        assertEquals(a.toString(),b.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        String testcase \u003d \"read book\";","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        ToDo a \u003d new ToDo(testcase);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"        assertEquals(a.toString(), \"[T][] read book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"adam07018":21}}]
