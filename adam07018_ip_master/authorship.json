[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"[D]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        return type + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    Save s;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    Duke() {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"        list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        s \u003d new Save();","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        Duke a \u003d new Duke();","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"        System.out.println(a.greeting());","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        a.echo();","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    private String greeting() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        return \"Hello! I\u0027m Luminus\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    private void toDo(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        ToDo temp \u003d new ToDo((description));","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        list.add(temp);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"        s.write(temp);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"        System.out.println(temp);","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"    private void event(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"        int index1 \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"        int index2 \u003d input.lastIndexOf(\"/\");","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(6,index1 - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"        String from \u003d input.substring(index1 + 6, index2 - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"        String to \u003d input.substring(index2 + 4);","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"        Event temp \u003d new Event(description,from,to);","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"        list.add(temp);","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"        s.write(temp);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"        System.out.println(temp);","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"    private void deadline(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        int index \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"        String description \u003d input.substring(9, index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"        String by \u003d input.substring(index + 4);","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"        Deadline temp \u003d new Deadline(description,by);","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"        list.add(temp);","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"        s.write(temp);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"        System.out.println(temp);","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"    private void delete(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"        int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"        Task temp \u003d list.get(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"        list.remove(index - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"        s.update(list);","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"        System.out.println(temp);","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"adam07018"},"content":"    private void echo() {","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"adam07018"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"adam07018"},"content":"        while(true) {","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"adam07018"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"adam07018"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"adam07018"},"content":"                return;","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"adam07018"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"adam07018"},"content":"                for (int i \u003d 1; i \u003c\u003d this.list.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"adam07018"},"content":"                    System.out.println(i + \". \" + list.get(i - 1));","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"adam07018"},"content":"                continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"adam07018"},"content":"            // Mark the task","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"adam07018"},"content":"            if (input.length() \u003e 5 \u0026\u0026 input.substring(0,4).equals(\"mark\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"adam07018"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"adam07018"},"content":"                    int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"adam07018"},"content":"                    this.list.get(index - 1).markAsDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"adam07018"},"content":"                    s.update(list);","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"adam07018"},"content":"                } catch (IndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"There is no such task for marking ☹\");","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"adam07018"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"Please key in number after mark ☹\");","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"adam07018"},"content":"                } finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"adam07018"},"content":"                    continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"adam07018"},"content":"            // Unmark the task","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"adam07018"},"content":"            if (input.length() \u003e 7 \u0026\u0026 input.substring(0,6).equals(\"unmark\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"adam07018"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"adam07018"},"content":"                    int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"adam07018"},"content":"                    this.list.get(index - 1).markAsNotDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"adam07018"},"content":"                    s.update(list);","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"adam07018"},"content":"                } catch (IndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"There is no such task for unmarking ☹\");","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"adam07018"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"Please key in number after unmark ☹\");","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"adam07018"},"content":"                } finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"adam07018"},"content":"                    continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"adam07018"},"content":"            // Add a toDo task to the list","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"adam07018"},"content":"            if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0,4).equals(\"todo\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"adam07018"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"adam07018"},"content":"                    toDo(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"adam07018"},"content":"                } catch (StringIndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"adam07018"},"content":"                } finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"adam07018"},"content":"                    continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"adam07018"},"content":"            // Add a event task to the list","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"adam07018"},"content":"            if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0,5).equals(\"event\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"adam07018"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"adam07018"},"content":"                    event(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"adam07018"},"content":"                } catch (StringIndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"OOPS!!! The description of a event is not correct.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"adam07018"},"content":"                } finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"adam07018"},"content":"                    continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"adam07018"},"content":"            // Add a deadline task to the list","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"adam07018"},"content":"            if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0,8).equals(\"deadline\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"adam07018"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"adam07018"},"content":"                    deadline(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"adam07018"},"content":"                } catch (StringIndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"OOPS!!! The description of a deadline is not correct.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"adam07018"},"content":"                } finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"adam07018"},"content":"                    continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"adam07018"},"content":"            // delete task from list","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"adam07018"},"content":"            if (input.length() \u003e 7 \u0026\u0026 input.substring(0,6).equals(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"adam07018"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"adam07018"},"content":"                    delete(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"adam07018"},"content":"                } catch (IndexOutOfBoundsException IOBE) {","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"There is no such task for deletion ☹\");","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"adam07018"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"adam07018"},"content":"                    System.out.println(\"Please key in number after deletion ☹\");","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"adam07018"},"content":"                finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"adam07018"},"content":"                    continue;","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"adam07018"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"adam07018":152}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    protected String from, to;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"[E]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"        Event a \u003d new Event(\"read book\", \"Mon 2pm\" , \"4pm\");","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        System.out.println(a);","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        return type + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":19}},{"path":"src/main/java/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"import java.nio.file.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"public class Save {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    protected String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"    protected Path path;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    protected File file;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    Save() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"        path \u003d Paths.get(home,\"data\",\"duke.txt\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"            file \u003d new File(path.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"            if (file.createNewFile())","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"file created\");","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"            else {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"                file.delete();","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"Fail to create file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    public void write(Task t) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"        int isDone \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"        if(t.getIsDone())","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"            isDone \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"        String description \u003d t.type + \" | \" + isDone + \" | \" + t.getDescription() + System.lineSeparator();","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"            Files.writeString(path,description,StandardCharsets.UTF_8,StandardOpenOption.APPEND);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"File doesn\u0027t exist\");","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"adam07018"},"content":"    public void update(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"adam07018"},"content":"        file.delete();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"adam07018"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"adam07018"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"adam07018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"adam07018"},"content":"            System.out.println(\"Fail to create file\");","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"adam07018"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"adam07018"},"content":"        Iterator\u003cTask\u003e it \u003d list.iterator();","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"adam07018"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"adam07018"},"content":"            int isDone \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"adam07018"},"content":"            Task t \u003d it.next();","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"adam07018"},"content":"            if (t.getIsDone())","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"adam07018"},"content":"                isDone \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"adam07018"},"content":"            String description \u003d t.type + \" | \" + isDone + \" | \" + t.getDescription() + System.lineSeparator();","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"adam07018"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"adam07018"},"content":"                Files.writeString(path,description,StandardCharsets.UTF_8,StandardOpenOption.APPEND);","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"adam07018"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"adam07018"},"content":"                System.out.println(\"File doesn\u0027t exist\");","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"adam07018"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"adam07018"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"adam07018":65}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    protected String description;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"    protected String type \u003d \"Task\";","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"adam07018"},"content":"        return (isDone ? \"[X] \" : \"[] \"); // mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"adam07018"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"adam07018"},"content":"        System.out.println(this);","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"adam07018"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"adam07018"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"adam07018"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"adam07018"},"content":"        System.out.println(this);","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"adam07018"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"adam07018"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"adam07018"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"adam07018"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"adam07018"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"adam07018"},"content":"        return description;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":40}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adam07018"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"adam07018"},"content":"    protected  String type \u003d \"[T]\";","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"adam07018"},"content":"    public ToDo (String description){","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"adam07018"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"adam07018"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"adam07018"},"content":"        return type + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"adam07018"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"adam07018"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"adam07018"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"adam07018":11}}]
