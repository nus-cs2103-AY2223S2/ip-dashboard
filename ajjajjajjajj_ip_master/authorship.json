[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"# readme is ","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":1}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"    mainClassName \u003d \"chatbot.Duke\"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ajjajjajjajj":6,"-":40}},{"path":"data/storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"D | 1 | call the police | by:2023-02-03T20:00","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"D | 0 | call the ambulance | by:2024-02-02T08:00","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"E | 0 | court hearing | from:2023-08-01T18:00 | to:2023-08-01T20:00","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"T | 0 | go and do some stuff","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"E | 1 | class | from:2023-01-25T19:00 | to:2023-01-25T20:00","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"D | 1 | complete this task | by:2023-01-26T17:00","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"ajjajjajjajj":6}},{"path":"src/main/java/app/chatbot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package chatbot;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import command.LoadCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import command.SaveCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    private static final Path STORAGE_LOCATION \u003d Paths.get(\".\", \"data\", \"storage.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"    Duke(Path path) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"            this.storage \u003d new Storage(path);","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"    public void run() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"        // load in saved data","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"        Command loadCommand \u003d new LoadCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"            loadCommand.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"ajjajjajjajj"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"ajjajjajjajj"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"ajjajjajjajj"},"content":"                ui.showLine(); // show divider","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"ajjajjajjajj"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"ajjajjajjajj"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"ajjajjajjajj"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"ajjajjajjajj"},"content":"                if (c.isSave()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"ajjajjajjajj"},"content":"                    Command save \u003d new SaveCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"ajjajjajjajj"},"content":"                    save.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"ajjajjajjajj"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ajjajjajjajj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"ajjajjajjajj"},"content":"            } finally {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"ajjajjajjajj"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"ajjajjajjajj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"ajjajjajjajj"},"content":"        Duke duke \u003d new Duke(STORAGE_LOCATION);","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"ajjajjajjajj"},"content":"        duke.run();","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ajjajjajjajj":67,"-":2}},{"path":"src/main/java/app/chatbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package chatbot;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import command.AddCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import command.CommandNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"import command.ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"import command.MarkAsDoneCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"import command.MarkAsUndoneCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"import static task.TaskType.inputToTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"    /**Splits a String line of input into its command (the first word), and its subsequent arguments.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"     * By default, the key \"Command\" maps to the name of the command input (the first word).","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"     * The name of the Command is also a key to its default arguments; for eg: \"delete 1\" creates a mapping of \"delete\" -\u003e \"1\".","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"     * In the case of adding a new event, the name of the command is mapped to its description; for eg: \"event\" -\u003e \"attend wedding\"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"     * @param input arguments to be split","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"     * @return map a mapping of each argument name to its value","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"    private static Map\u003cString,String\u003e splitArgs(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"        // returns a Map mapping name of arg to arg value based on the raw format","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"        // raw format according to task is /\u003cname\u003e \u003cvalue\u003e","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"        Map\u003cString,String\u003e map \u003d new HashMap\u003cString,String\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"        String[] args \u003d input.split(\" /\");","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"        // process main command","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"        String[] mainCommand \u003d args[0].split(\" \",2);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"        map.put(\"Command\", mainCommand[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"        String desc \u003d mainCommand.length \u003d\u003d 1 ? \"\" : mainCommand[1].stripTrailing();","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"        map.put(mainCommand[0], desc); // 0 refers to name of command, 1 refers to its additional desc","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"        // process additional args, if present","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"        if (args.length \u003e 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"            List\u003cString\u003e addtlArgs \u003d Arrays.asList(args).subList(1, args.length);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ajjajjajjajj"},"content":"            for (String arg : addtlArgs) {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ajjajjajjajj"},"content":"                String[] s \u003d arg.split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ajjajjajjajj"},"content":"                String name \u003d s[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"ajjajjajjajj"},"content":"                String value \u003d s.length \u003d\u003d 1 ? \"\" : s[1].stripTrailing();","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ajjajjajjajj"},"content":"                map.put(name, value);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ajjajjajjajj"},"content":"        return map;","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"ajjajjajjajj"},"content":"    public static Command parse(String input) throws CommandNotFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"ajjajjajjajj"},"content":"        Map\u003cString,String\u003e argValues \u003d Parser.splitArgs(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"ajjajjajjajj"},"content":"        String command \u003d argValues.get(\"Command\");","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"ajjajjajjajj"},"content":"        switch (command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"list\":","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"ajjajjajjajj"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"ajjajjajjajj"},"content":"                return new MarkAsDoneCommand(argValues.get(command)); // pass in index to command","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"ajjajjajjajj"},"content":"                return new MarkAsUndoneCommand(argValues.get(command)); // pass in index to command","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"ajjajjajjajj"},"content":"                return new DeleteCommand(argValues.get(command)); // pass in index to command","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"ajjajjajjajj"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"ajjajjajjajj"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"ajjajjajjajj"},"content":"                if (inputToTask.containsKey(command)) { // check if command is to add a task","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"ajjajjajjajj"},"content":"                    String desc \u003d argValues.get(command);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"ajjajjajjajj"},"content":"                    argValues.put(\"Description\", desc); // change the for description from the name of Command","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"ajjajjajjajj"},"content":"                    return new AddCommand(inputToTask.get(command), argValues);","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"ajjajjajjajj"},"content":"                throw new CommandNotFoundException(\"I\u0027m sorry, I don\u0027t recognise this command :/\");","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":77}},{"path":"src/main/java/app/chatbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package chatbot;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskType;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.List;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"    public static final String SEPARATOR_REGEX \u003d \" \\\\| \";","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"    public static final String SEPARATOR \u003d \" | \";","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"    public static final String SUB_SEPARATOR \u003d \":\";","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"    private Path path;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"    private final File file;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"    Storage(Path path) throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"        this.file \u003d new File(path.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"        // creates storage directory or data if they don\u0027t exist","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"        this.file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"            this.file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"    /** Loads a single line in storage into a given task.TaskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"ajjajjajjajj"},"content":"     *  It is assumed that a line in storage follows the format specified here:","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"ajjajjajjajj"},"content":"     *  \u003ctask symbol\u003e | \u003cisDone\u003e | \u003cdesc\u003e | \u003caddtl-arg1\u003e:\u003cvalues\u003e | \u003caddtl-arg2\u003e:\u003cvalue\u003e ...","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ajjajjajjajj"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"ajjajjajjajj"},"content":"     * For example, a project meeting task.Event from 1pm to 3pm marked done:","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ajjajjajjajj"},"content":"     * E | 1 | project meeting | from:1pm | to:3pm","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ajjajjajjajj"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ajjajjajjajj"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"ajjajjajjajj"},"content":"    public int loadIntoTaskList(TaskList tl) throws Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"ajjajjajjajj"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(this.file));","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"ajjajjajjajj"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"ajjajjajjajj"},"content":"            int totalTaskCounter \u003d 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"ajjajjajjajj"},"content":"            int totalSuccess \u003d 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"ajjajjajjajj"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"ajjajjajjajj"},"content":"                totalTaskCounter++;","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"ajjajjajjajj"},"content":"                List\u003cString\u003e args \u003d Arrays.asList(line.split(SEPARATOR_REGEX));","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"ajjajjajjajj"},"content":"                // get task type","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"ajjajjajjajj"},"content":"                String symbol \u003d args.get(0);","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"ajjajjajjajj"},"content":"                TaskType.Type taskType \u003d TaskType.symbolToTask.get(symbol);","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"ajjajjajjajj"},"content":"                // get arg map","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"ajjajjajjajj"},"content":"                Map\u003cString,String\u003e argValues \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"ajjajjajjajj"},"content":"                boolean isDone \u003d args.get(1).equals(\"1\");","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"ajjajjajjajj"},"content":"                argValues.put(\"Description\", args.get(2));","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"ajjajjajjajj"},"content":"                // remaining named arguments","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"ajjajjajjajj"},"content":"                if (args.size() \u003e 3) {","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"ajjajjajjajj"},"content":"                    for (String pair : args.subList(3,args.size())) {","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"ajjajjajjajj"},"content":"                        String[] split \u003d pair.split(SUB_SEPARATOR,2);","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"ajjajjajjajj"},"content":"                        argValues.put(split[0], split[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"ajjajjajjajj"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"ajjajjajjajj"},"content":"                try {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"ajjajjajjajj"},"content":"                    if (isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"ajjajjajjajj"},"content":"                        tl.addDoneTask(taskType, argValues);","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"ajjajjajjajj"},"content":"                    } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"ajjajjajjajj"},"content":"                        tl.addTask(taskType, argValues);","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"ajjajjajjajj"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"ajjajjajjajj"},"content":"                    totalSuccess++;","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"ajjajjajjajj"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"ajjajjajjajj"},"content":"                    throw new Exception(\"task.Task number \" + totalTaskCounter + \" failed to load.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"ajjajjajjajj"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"ajjajjajjajj"},"content":"            return totalSuccess;","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"ajjajjajjajj"},"content":"            throw e;","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"ajjajjajjajj"},"content":"    public int saveToStorage(TaskList tl) throws Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"ajjajjajjajj"},"content":"        BufferedWriter br \u003d new BufferedWriter(new FileWriter(this.file));","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"ajjajjajjajj"},"content":"        for (Task task : tl.getAllTasks()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"ajjajjajjajj"},"content":"            String data \u003d task.asDataFormat();","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"ajjajjajjajj"},"content":"            br.write(data);","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"ajjajjajjajj"},"content":"            br.newLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"ajjajjajjajj"},"content":"        br.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"ajjajjajjajj"},"content":"        return 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"ajjajjajjajj"},"content":"    public static class InvalidStorageException extends Exception{","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"ajjajjajjajj"},"content":"        InvalidStorageException(String msg) {","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"ajjajjajjajj"},"content":"            super(msg);","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":114}},{"path":"src/main/java/app/chatbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package chatbot;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"    private String LOGO \u003d \"       _             _    _    _                _                \\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"            \"  ___ | |__    __ _ | |_ | |_ (_) _ __    __ _ | |_  ___   _ __  \\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"            \" / __|| \u0027_ \\\\  / _` || __|| __|| || \u0027_ \\\\  / _` || __|/ _ \\\\ | \u0027_ \\\\ \\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"            \"| (__ | | | || (_| || |_ | |_ | || | | || (_| || |_| (_) || | | |\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"            \" \\\\___||_| |_| \\\\__,_| \\\\__| \\\\__||_||_| |_| \\\\__, | \\\\__|\\\\___/ |_| |_|\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"            \"                                         |___/                   \";","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    Ui() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"    public void showWelcome(){","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"        reply(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"        reply(\"This is Chattington the Chatter, I\u0027ll chat with you.\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"                \"What can I do for you?\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"    public void reply(String s) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"        if (!s.endsWith(\"\\n\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"            s +\u003d \u0027\\n\u0027;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"        for (String line : s.split(\"\\n\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"            System.out.println(indent(line));","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"    public void showError(String s) {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"        reply(s);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"ajjajjajjajj"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"ajjajjajjajj"},"content":"    private static String indent(String s) {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"ajjajjajjajj"},"content":"        return \"\\t\" + s;","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":50}},{"path":"src/main/java/app/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskType;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"    private Map\u003cString,String\u003e args;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    private TaskType.Type taskType;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    public AddCommand(TaskType.Type type, Map\u003cString, String\u003e args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        this.taskType \u003d type;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isSave \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"            Task newTask \u003d tl.addTask(this.taskType, this.args);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"            int numTasks \u003d tl.getAllTasks().size();","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(\"New task added:\");","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(newTask.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(\"You now have \" + numTasks + \" task(s) in your list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"            throw e;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":34}},{"path":"src/main/java/app/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"    protected boolean isSave;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"    protected Command() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    public abstract void execute(TaskList tl, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"    public boolean isSave() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"        return this.isSave;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":23}},{"path":"src/main/java/app/command/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"public class CommandNotFoundException extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"    public CommandNotFoundException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":7}},{"path":"src/main/java/app/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"    private String deleteAtIndex;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    public DeleteCommand(String index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isSave \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"        this.deleteAtIndex \u003d index;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"            int i \u003d Integer.valueOf(deleteAtIndex) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"            Task deletedTask \u003d tl.deleteTask(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(\"Removed \" + deletedTask.getDesc() + \" from the list. You now have \" + tl.size() + \" tasks left.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"            throw e;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":27}},{"path":"src/main/java/app/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"        super();","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isSave \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        ui.reply(\"Alright, goodbye to you too!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":18}},{"path":"src/main/java/app/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isSave \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        List\u003cTask\u003e listTasks \u003d tl.getAllTasks();","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"        if (listTasks.isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(\"You don\u0027t have anything listed right now.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"            StringBuilder output \u003d new StringBuilder(\"Eh this is what you\u0027ve written down so far:\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"            for (int i \u003d 0; i \u003c listTasks.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"                output.append(i+1);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"                output.append(\": \" + listTasks.get(i));","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(output.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(\"You have \" + listTasks.size() + \" tasks listed.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":33}},{"path":"src/main/java/app/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"    public LoadCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isSave \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        Integer numLoaded \u003d 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"            numLoaded \u003d storage.loadIntoTaskList(tl);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(\"Successfully loaded \" + numLoaded + \" task(s) from storage.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(\"Successfully loaded \" + numLoaded + \" task(s) from storage.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"            throw e;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ajjajjajjajj":25}},{"path":"src/main/java/app/command/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"public class MarkAsDoneCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"    private String markAtIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"    public MarkAsDoneCommand(String index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isSave \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"        this.markAtIndex \u003d index;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        boolean alreadyMarked;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"            int i \u003d Integer.valueOf(this.markAtIndex) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"            alreadyMarked \u003d tl.markAsDone(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"            if (alreadyMarked) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"                ui.reply(tl.getTask(i).getDesc() + \" already marked as done!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"                ui.reply(\"Marked \" + tl.getTask(i).getDesc() + \" as done!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new Exception(\"Please specify the task by its index number.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new Exception(\"Seems like this task doesn\u0027t exist.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":33}},{"path":"src/main/java/app/command/MarkAsUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"public class MarkAsUndoneCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"    private String unmarkAtIndex;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"    public MarkAsUndoneCommand(String index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isSave \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"        this.unmarkAtIndex \u003d index;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        boolean alreadyMarked;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"            int i \u003d Integer.valueOf(this.unmarkAtIndex) - 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"            alreadyMarked \u003d tl.unmarkDone(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"            if (alreadyMarked) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"                ui.reply(tl.getTask(i).getDesc() + \" is already undone!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"            } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"                ui.reply(\"Unmarked \" + tl.getTask(i).getDesc() + \".\");","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new Exception(\"Please specify the task by its index number.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new Exception(\"Seems like this task doesn\u0027t exist.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":33}},{"path":"src/main/java/app/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"    public SaveCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isSave \u003d false; // no data is changed in this command that warrants saving","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    public void execute(TaskList tl, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"            storage.saveToStorage(tl);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"            ui.reply(\"Changes are saved to storage.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"            throw e;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ajjajjajjajj":22}},{"path":"src/main/java/app/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    Deadline(String description, String deadline) throws InvalidDateTimeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"        this.symbol \u003d \"D\";","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"        for (DateTimeFormatter f : SUPPORTED_DATE_TIME_INPUT) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"                this.deadline \u003d LocalDateTime.parse(deadline, f);","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"                continue;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"        if (Objects.isNull(this.deadline)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new InvalidDateTimeException(\"Try reformatting your date/time to the supported formats:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"                    \"yyyy-MM-dd HHmm or yyyy/MM/dd HHmm\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"                    \"Make sure that the date/time is valid!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"        return super.toString() + \" (by: \" + this.deadline.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"    public String asDataFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"        return super.asDataFormat(\"by:\" + this.deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":40}},{"path":"src/main/java/app/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"    Event(String description, String from, String to) throws InvalidDateTimeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"        this.symbol \u003d \"E\";","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        for (DateTimeFormatter f : SUPPORTED_DATE_TIME_INPUT) {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"                this.from \u003d LocalDateTime.parse(from, f);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"                continue;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"        for (DateTimeFormatter f : SUPPORTED_DATE_TIME_INPUT) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"                this.to \u003d LocalDateTime.parse(to, f);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"                continue;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"        if (Objects.isNull(this.from) || Objects.isNull(this.to)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new InvalidDateTimeException(\"Try reformatting your date/time to the supported formats:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"                    \"yyyy-MM-dd HHmm or yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"    public String asDataFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"        return super.asDataFormat(\"from:\" + this.from, \"to:\" + this.to);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ajjajjajjajj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ajjajjajjajj"},"content":"        return super.toString() + \" (from: \" + this.from.format(OUTPUT_FORMAT) + \", to: \" + this.to.format(OUTPUT_FORMAT) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":49}},{"path":"src/main/java/app/task/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"public class InvalidDateTimeException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"    InvalidDateTimeException(String msg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"        super(msg);","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ajjajjajjajj":7}},{"path":"src/main/java/app/task/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    InvalidInputException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":8}},{"path":"src/main/java/app/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import chatbot.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"    protected String symbol;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    protected static final List\u003cDateTimeFormatter\u003e SUPPORTED_DATE_TIME_INPUT \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"EEE, dd MMM yy hh:mma\");","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    static {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        SUPPORTED_DATE_TIME_INPUT.add(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"        SUPPORTED_DATE_TIME_INPUT.add(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        SUPPORTED_DATE_TIME_INPUT.add(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"    public Task(String description)  {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"    // constructor for preloaded tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"    public Task(String description, String isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isDone \u003d Integer.parseInt(isDone) \u003d\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"    public String getDesc() {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"        return this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"ajjajjajjajj"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"ajjajjajjajj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"ajjajjajjajj"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"ajjajjajjajj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"ajjajjajjajj"},"content":"    public abstract String asDataFormat();","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"ajjajjajjajj"},"content":"    protected String asDataFormat(String... fields) {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"ajjajjajjajj"},"content":"        String base \u003d String.join(Storage.SEPARATOR, this.symbol, this.isDone() ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"ajjajjajjajj"},"content":"        for (String s : fields) {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"ajjajjajjajj"},"content":"            if (!s.isBlank()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"ajjajjajjajj"},"content":"                base \u003d String.join(Storage.SEPARATOR, base, s);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"ajjajjajjajj"},"content":"        return base;","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"ajjajjajjajj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"ajjajjajjajj"},"content":"        return \"[\" + this.symbol + \"][\" + this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ajjajjajjajj":68}},{"path":"src/main/java/app/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import command.CommandNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"    public int size() {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"    public Task addTask(TaskType.Type type, Map\u003cString,String\u003e args) throws InvalidDateTimeException, CommandNotFoundException, InvalidInputException {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"        Task newTask;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"        String desc;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"        switch (type) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"            case TODO:","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"                desc \u003d args.get(\"Description\");","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"                if (Objects.isNull(desc) || desc.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"                    throw new InvalidInputException(\"eh ur description is blank\");","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"                newTask \u003d new ToDo(desc);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"                desc \u003d args.get(\"Description\");","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"                if (Objects.isNull(desc) || desc.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"                    throw new InvalidInputException(\"eh ur description is blank\");","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"                String by \u003d args.get(\"by\");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"ajjajjajjajj"},"content":"                if (Objects.isNull(by) || by.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"ajjajjajjajj"},"content":"                    throw new InvalidInputException(\"eh need to specify ur deadline by when - deadline \u003cdesc\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"ajjajjajjajj"},"content":"                newTask \u003d new Deadline(desc, by);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"ajjajjajjajj"},"content":"            case EVENT:","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"ajjajjajjajj"},"content":"                desc \u003d args.get(\"Description\");","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"ajjajjajjajj"},"content":"                if (Objects.isNull(desc) || desc.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"ajjajjajjajj"},"content":"                    throw new InvalidInputException(\"eh ur description is blank\");","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"ajjajjajjajj"},"content":"                String from \u003d args.get(\"from\");","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"ajjajjajjajj"},"content":"                String to \u003d args.get(\"to\");","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"ajjajjajjajj"},"content":"                if (Objects.isNull(from) || Objects.isNull(to) || from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"ajjajjajjajj"},"content":"                    throw new InvalidInputException(\"eh need to specify ur event from when to when - event \u003cdesc\u003e /from \u003cwhen\u003e /to \u003cwhen\u003e\");","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"ajjajjajjajj"},"content":"                newTask \u003d new Event(desc, from, to);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"ajjajjajjajj"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"ajjajjajjajj"},"content":"                throw new CommandNotFoundException(\"I don\u0027t recognise this type of task. Try add todo \u003cdesc\u003e!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"ajjajjajjajj"},"content":"        this.tasks.add(this.tasks.size(), newTask); // always adds to the end","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"ajjajjajjajj"},"content":"        return newTask;","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"ajjajjajjajj"},"content":"    public Task addDoneTask(TaskType.Type type, Map\u003cString,String\u003e args) throws InvalidDateTimeException, CommandNotFoundException, InvalidInputException {","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"ajjajjajjajj"},"content":"        Task newTask \u003d addTask(type, args); // add to end of list","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"ajjajjajjajj"},"content":"        int index \u003d this.tasks.size() - 1; // mark last(est) item as done","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"ajjajjajjajj"},"content":"        markAsDone(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"ajjajjajjajj"},"content":"        return newTask;","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"ajjajjajjajj"},"content":"    public Task deleteTask(int index) throws InvalidInputException {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"ajjajjajjajj"},"content":"        //removes a task at given index","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"ajjajjajjajj"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new InvalidInputException(\"Hello hello there is no task to delete!!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"ajjajjajjajj"},"content":"            Task deletedTask \u003d this.tasks.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"ajjajjajjajj"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"ajjajjajjajj"},"content":"            return deletedTask;","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new InvalidInputException(\"This task doesn\u0027t exist in your list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"ajjajjajjajj"},"content":"    public boolean markAsDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"ajjajjajjajj"},"content":"        boolean alreadyMarked \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"ajjajjajjajj"},"content":"            Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"ajjajjajjajj"},"content":"            if (task.isDone()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"ajjajjajjajj"},"content":"                alreadyMarked \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"ajjajjajjajj"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"ajjajjajjajj"},"content":"            return alreadyMarked;","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"ajjajjajjajj"},"content":"            throw e;","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"ajjajjajjajj"},"content":"    public boolean unmarkDone(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"ajjajjajjajj"},"content":"        boolean alreadyMarked \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"ajjajjajjajj"},"content":"            Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"ajjajjajjajj"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"ajjajjajjajj"},"content":"                alreadyMarked \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"ajjajjajjajj"},"content":"            task.unmarkDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"ajjajjajjajj"},"content":"            return alreadyMarked;","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"ajjajjajjajj"},"content":"            throw e;","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ajjajjajjajj":122}},{"path":"src/main/java/app/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"public class TaskType {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"    public enum Type { TODO, DEADLINE, EVENT }","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"    public static final Map\u003cString, Type\u003e inputToTask \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"    public static final Map\u003cString, Type\u003e symbolToTask \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    static{","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        inputToTask.put(\"todo\", Type.TODO);","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"        inputToTask.put(\"deadline\", Type.DEADLINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"        inputToTask.put(\"event\", Type.EVENT);","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        symbolToTask.put(\"T\", Type.TODO);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"        symbolToTask.put(\"D\", Type.DEADLINE);","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        symbolToTask.put(\"E\", Type.EVENT);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ajjajjajjajj":20}},{"path":"src/main/java/app/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"        this.symbol \u003d \"T\";","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    public String asDataFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        return super.asDataFormat(\"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"todo","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"todo go and do some stuff","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"deadline wake up","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"deadline wake up /by 1200hrs","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"event have lunch /from 1200hrs /to 1800hrs","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ajjajjajjajj":8}}]
