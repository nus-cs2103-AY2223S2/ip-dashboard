[{"path":"src/main/java/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.*;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"public class ChatBot {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"    private enum Tasks { TODO, DEADLINE, EVENT }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    private static final Map\u003cString, Tasks\u003e inputToTask \u003d new HashMap\u003cString,Tasks\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"    static{","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"        inputToTask.put(\"todo\", Tasks.TODO);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"        inputToTask.put(\"deadline\", Tasks.DEADLINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"        inputToTask.put(\"event\", Tasks.EVENT);","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    ChatBot() {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    public void processInput(String input) throws Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        Map\u003cString,String\u003e argValues \u003d InputProcessor.splitArgs(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        String command \u003d argValues.get(\"Command\");","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"        switch (command) {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"list\":","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"                output \u003d this.listItems();","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"                output \u003d this.markAsDone(argValues.get(\"mark\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"                output \u003d this.unmarkDone(argValues.get(\"unmark\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"                output \u003d this.deleteTask(argValues.get(\"delete\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"            default:","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"                if (this.inputToTask.containsKey(command)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ajjajjajjajj"},"content":"                    try {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ajjajjajjajj"},"content":"                        output \u003d addTask(inputToTask.get(command),argValues);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"ajjajjajjajj"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ajjajjajjajj"},"content":"                        throw e;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ajjajjajjajj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ajjajjajjajj"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ajjajjajjajj"},"content":"                    output \u003d \"Hmm, I don\u0027t recognise this command. Try todo \u003ctask\u003e to add task to the list.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"ajjajjajjajj"},"content":"        this.reply(output);","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"ajjajjajjajj"},"content":"    private String listItems() {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"ajjajjajjajj"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"ajjajjajjajj"},"content":"            return (\"You don\u0027t have anything listed right now.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"ajjajjajjajj"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"ajjajjajjajj"},"content":"            StringBuilder output \u003d new StringBuilder(\"Eh this is what you\u0027ve written down so far:\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ajjajjajjajj"},"content":"            for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"ajjajjajjajj"},"content":"                output.append(i+1);","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"ajjajjajjajj"},"content":"                output.append(\": \" + list.get(i));","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"ajjajjajjajj"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"ajjajjajjajj"},"content":"            return output.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"ajjajjajjajj"},"content":"    private String addTask(Tasks t, Map\u003cString,String\u003e args) throws Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ajjajjajjajj"},"content":"        Task item;","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"ajjajjajjajj"},"content":"        String desc;","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"ajjajjajjajj"},"content":"            switch (t) {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ajjajjajjajj"},"content":"                case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ajjajjajjajj"},"content":"                    desc \u003d args.get(\"todo\");","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ajjajjajjajj"},"content":"                    if (Objects.isNull(desc)|| desc.equals(\"\") ) {","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ajjajjajjajj"},"content":"                        throw new InvalidInputException(\"eh ur description is blank\");","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ajjajjajjajj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ajjajjajjajj"},"content":"                    item \u003d new ToDo(desc);","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ajjajjajjajj"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"ajjajjajjajj"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ajjajjajjajj"},"content":"                    desc \u003d args.get(\"deadline\");","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ajjajjajjajj"},"content":"                    if (Objects.isNull(desc) || desc.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ajjajjajjajj"},"content":"                        throw new InvalidInputException(\"eh ur description is blank\");","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ajjajjajjajj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"ajjajjajjajj"},"content":"                    String by \u003d args.get(\"by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ajjajjajjajj"},"content":"                    if ( Objects.isNull(by) || by.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ajjajjajjajj"},"content":"                        throw new InvalidInputException(\"eh need to specify ur deadline by when - deadline \u003cdesc\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"ajjajjajjajj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"ajjajjajjajj"},"content":"                    item \u003d new Deadline(desc, by);","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"ajjajjajjajj"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ajjajjajjajj"},"content":"                case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ajjajjajjajj"},"content":"                    desc \u003d args.get(\"event\");","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"ajjajjajjajj"},"content":"                    if ( Objects.isNull(desc) || desc.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"ajjajjajjajj"},"content":"                        throw new InvalidInputException(\"eh ur description is blank\");","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ajjajjajjajj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ajjajjajjajj"},"content":"                    String from \u003d args.get(\"from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ajjajjajjajj"},"content":"                    String to \u003d args.get(\"to\");","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ajjajjajjajj"},"content":"                    if (Objects.isNull(from) ||  Objects.isNull(to) || from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ajjajjajjajj"},"content":"                        throw new InvalidInputException(\"eh need to specify ur event from when to when - event \u003cdesc\u003e /from \u003cwhen\u003e /to \u003cwhen\u003e\");","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"ajjajjajjajj"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"ajjajjajjajj"},"content":"                    item \u003d new Event(desc, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"ajjajjajjajj"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"ajjajjajjajj"},"content":"                default:","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"ajjajjajjajj"},"content":"                    throw new Exception(\"Invalid task type\");","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"ajjajjajjajj"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"ajjajjajjajj"},"content":"        this.list.add(item);","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"ajjajjajjajj"},"content":"        return (\"Item added!\\n\" + indent(item.toString()) +\"\\nYou now have \" + this.list.size() +\" task(s).\");","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"ajjajjajjajj"},"content":"    private String deleteTask(String index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"ajjajjajjajj"},"content":"        //removes a task at given index","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"ajjajjajjajj"},"content":"        int i;","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"ajjajjajjajj"},"content":"            i \u003d Integer.valueOf(index) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"ajjajjajjajj"},"content":"            return \"Please specify the task by its index number.\";","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"ajjajjajjajj"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"ajjajjajjajj"},"content":"            return \"There\u0027s nothing to delete la\";","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"ajjajjajjajj"},"content":"            Task removed \u003d this.list.get(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"ajjajjajjajj"},"content":"            this.list.remove(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"ajjajjajjajj"},"content":"            return \"Okie I removed this task:\\n\" + indent(removed.toString()) + \"\\nYou now have \" + this.list.size() + \" task(s) left.\";","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"ajjajjajjajj"},"content":"            return \"This task doesn\u0027t exist in your list.\";","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"ajjajjajjajj"},"content":"    private String markAsDone(String index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":133,"author":{"gitId":"ajjajjajjajj"},"content":"        // marks a task as done, but if a task is already done, notifies the user","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"ajjajjajjajj"},"content":"        int i;","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"ajjajjajjajj"},"content":"            i \u003d Integer.valueOf(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"ajjajjajjajj"},"content":"            return \"Please specify the task by its index number.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"ajjajjajjajj"},"content":"        Task task \u003d this.list.get(i-1);","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"ajjajjajjajj"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"ajjajjajjajj"},"content":"            return \"You\u0027ve already marked \" + task.description + \" as done!\\n\" +task.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":145,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"ajjajjajjajj"},"content":"        return (\"Coolio. Marked \" + task.description + \" as done!\\n\" + task.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"ajjajjajjajj"},"content":"    private String unmarkDone(String index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"ajjajjajjajj"},"content":"        // marks a task as undone, but if already unmarked, notifies the user","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"ajjajjajjajj"},"content":"        int i;","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"ajjajjajjajj"},"content":"            i \u003d Integer.valueOf(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"ajjajjajjajj"},"content":"            return \"Please specify the task by its index number.\";","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"ajjajjajjajj"},"content":"        Task task \u003d this.list.get(i-1);","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"ajjajjajjajj"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"ajjajjajjajj"},"content":"            task.unmarkDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"ajjajjajjajj"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"ajjajjajjajj"},"content":"            return \"The task \" + task.description + \" is already unmarked.\\n\" + task.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"ajjajjajjajj"},"content":"        return (\"Okay. Unmarked \" + task.description + \" for you.\\n\" + task.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"ajjajjajjajj"},"content":"    public void reply(String s) {","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"ajjajjajjajj"},"content":"        if (s.charAt(s.length() - 1) !\u003d \u0027\\n\u0027) {","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"ajjajjajjajj"},"content":"            s +\u003d \u0027\\n\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":170,"author":{"gitId":"ajjajjajjajj"},"content":"        String LINE_SEPARATOR \u003d \"----------------------------------------\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":171,"author":{"gitId":"ajjajjajjajj"},"content":"        String output \u003d LINE_SEPARATOR + s + LINE_SEPARATOR;","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"ajjajjajjajj"},"content":"        for (String line : output.split(\"\\n\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"ajjajjajjajj"},"content":"            System.out.println(indent(line));","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"ajjajjajjajj"},"content":"    private static String indent(String s) {","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"ajjajjajjajj"},"content":"        return \"\\t\" + s;","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"ajjajjajjajj"},"content":"    public void close() {","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"ajjajjajjajj"},"content":"        this.reply(\"Alright, goodbye to you too!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":185,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ajjajjajjajj":185}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    protected String deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"    Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"        this.symbol \u003d \"D\";","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"        return this.deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        return super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"        String LOGO \u003d \"       _             _    _    _                _                \\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"                \"  ___ | |__    __ _ | |_ | |_ (_) _ __    __ _ | |_  ___   _ __  \\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"                \" / __|| \u0027_ \\\\  / _` || __|| __|| || \u0027_ \\\\  / _` || __|/ _ \\\\ | \u0027_ \\\\ \\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"                \"| (__ | | | || (_| || |_ | |_ | || | | || (_| || |_| (_) || | | |\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"                \" \\\\___||_| |_| \\\\__,_| \\\\__| \\\\__||_||_| |_| \\\\__, | \\\\__|\\\\___/ |_| |_|\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"                \"                                         |___/                   \";","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"        ChatBot chatBot \u003d new ChatBot();","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        chatBot.reply(\"This is Chattington the Chatter, I\u0027ll chat with you.\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"                \"What can I do for you?\\n\");","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"        while(true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"                chatBot.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"                    chatBot.processInput(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"                    throw e;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ajjajjajjajj":33,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"    private static String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    private static String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"    Event(String description, String from, String to)  {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"        this.symbol \u003d \"E\";","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"        return super.toString() + \" (from: \" + this.from + \", to: \" + this.to + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":17}},{"path":"src/main/java/InputProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"public class InputProcessor {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"    protected static Map\u003cString,String\u003e splitArgs(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"        // returns a Map mapping name of arg to arg value based on the raw format","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"        // raw format according to task is /\u003cname\u003e \u003cvalue\u003e","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"        Map\u003cString,String\u003e map \u003d new HashMap\u003cString,String\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"        String[] args \u003d input.split(\"/\");","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"        // process main command","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"        String[] mainCommand \u003d args[0].split(\" \",2);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"        map.put(\"Command\", mainCommand[0]);","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"        String desc \u003d mainCommand.length \u003d\u003d 1 ? \"\" : mainCommand[1].stripTrailing();","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        map.put(mainCommand[0], desc); // 0 refers to name of command, 1 refers to its additional desc","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"        // process additional args, if present","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"        if (args.length \u003e 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"            List\u003cString\u003e addtlArgs \u003d Arrays.asList(args).subList(1, args.length);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"            for (String arg : addtlArgs) {","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"                String[] s \u003d arg.split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"                String name \u003d s[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"                String value \u003d s.length \u003d\u003d 1 ? \"\" : s[1].stripTrailing();","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"                map.put(name, value);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"        return map;","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":32}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"    InvalidInputException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"    protected String symbol;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    public Task(String description)  {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ajjajjajjajj"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ajjajjajjajj"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ajjajjajjajj"},"content":"    public void markAsDone() throws Exception{","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ajjajjajjajj"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new Exception(\"Already Done\");","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ajjajjajjajj"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ajjajjajjajj"},"content":"    public void unmarkDone() throws Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ajjajjajjajj"},"content":"        if (!isDone) {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ajjajjajjajj"},"content":"            throw new Exception(\"Task is already marked undone\");","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ajjajjajjajj"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ajjajjajjajj"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ajjajjajjajj"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ajjajjajjajj"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ajjajjajjajj"},"content":"        return \"[\" + this.symbol + \"][\" + this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ajjajjajjajj"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ajjajjajjajj":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"    ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"        this.symbol \u003d \"T\";","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ajjajjajjajj":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ajjajjajjajj"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ajjajjajjajj"},"content":"todo","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ajjajjajjajj"},"content":"todo go and do some stuff","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ajjajjajjajj"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ajjajjajjajj"},"content":"deadline wake up","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ajjajjajjajj"},"content":"deadline wake up /by 1200hrs","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ajjajjajjajj"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ajjajjajjajj"},"content":"event have lunch /from 1200hrs /to 1800hrs","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ajjajjajjajj":8}}]
