[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"plugins {","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"repositories {","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    mavenCentral()","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"dependencies {","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.0\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.0\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"test {","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":19}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"T | 0 | CS2103T 05-20","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":1}},{"path":"dukeChatBox/build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"plugins {","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"repositories {","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    mavenCentral()","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"dependencies {","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.0\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.0\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"test {","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":19}},{"path":"dukeChatBox/gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"@rem","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"@rem","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"@rem","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"@rem","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"@rem","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"@rem","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"@rem","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"@rem Find java.exe","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-04-22"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"echo.","lastModifiedDate":"2023-04-22"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-04-22"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"echo.","lastModifiedDate":"2023-04-22"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-04-22"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"goto fail","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-04-22"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-04-22"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2023-04-22"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"echo.","lastModifiedDate":"2023-04-22"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-04-22"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"echo.","lastModifiedDate":"2023-04-22"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-04-22"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-04-22"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"goto fail","lastModifiedDate":"2023-04-22"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":":execute","lastModifiedDate":"2023-04-22"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"@rem Setup the command line","lastModifiedDate":"2023-04-22"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-04-22"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-04-22"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2023-04-22"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":":end","lastModifiedDate":"2023-04-22"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-04-22"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2023-04-22"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":":fail","lastModifiedDate":"2023-04-22"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-04-22"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-04-22"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2023-04-22"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"exit /b 1","lastModifiedDate":"2023-04-22"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":":mainEnd","lastModifiedDate":"2023-04-22"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-04-22"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":":omega","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":89}},{"path":"dukeChatBox/settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"rootProject.name \u003d \u0027dukeChatBox\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":2}},{"path":"dukeChatBox/src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.command.Command;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"/**","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":" * The chatting bot Duke.","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":" */","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"public class Duke {","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    private Storage storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    private Ui ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * Initialization of Duke and loading of file.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param filePath The path of the file that stores the tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        tasks \u003d loadTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"    private TaskList loadTasks() {","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        TaskList taskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"        return taskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"     * Process of user\u0027s input and storage of the new taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"    public void run() {","lastModifiedDate":"2023-04-22"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-04-22"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-04-22"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"        while (!isExit) {","lastModifiedDate":"2023-04-22"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"            processUserInput();","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"            isExit \u003d checkForExit();","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"    private void processUserInput() {","lastModifiedDate":"2023-04-22"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-04-22"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"            ui.showLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-04-22"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-04-22"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-04-22"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"        } finally {","lastModifiedDate":"2023-04-22"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"            ui.showLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"    private boolean checkForExit() {","lastModifiedDate":"2023-04-22"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"        String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-04-22"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"        Command c \u003d null;","lastModifiedDate":"2023-04-22"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"            c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-04-22"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-04-22"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"        return c.isExit();","lastModifiedDate":"2023-04-22"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"     * Set the filePath and activate run function.","lastModifiedDate":"2023-04-22"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-04-22"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-04-22"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":87}},{"path":"dukeChatBox/src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"bye\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":33}},{"path":"dukeChatBox/src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"public abstract class Command {","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    String keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    String statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    Boolean isExit \u003d false;","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * Execute a specific user\u0027s command and change the storage file accordingly.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"     * Decide if the user wants to quit.","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    public Boolean isExit() {","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        return isExit;","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"     * Create a directory \"data\" if not exists to contain the \"tasks.txt\".","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"     * @param tasks the task list.","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"    static void createDirectory(Ui ui, Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-22"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"        ui.showLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Seems the data directory doesn\u0027t exist yet. Try to create for you!\");","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"            Path path \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-04-22"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2023-04-22"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     Sorry, creation failed!\");","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":54}},{"path":"dukeChatBox/src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryAddDeadline;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public DeadlineCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"deadline\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        tryAddDeadline(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":34}},{"path":"dukeChatBox/src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryDeleteTask;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public DeleteCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"delete\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        tryDeleteTask(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":34}},{"path":"dukeChatBox/src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryAddEvent;","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"    public EventCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"event\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        tryAddEvent(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":33}},{"path":"dukeChatBox/src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.findTask;","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    String statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    public FindCommand(String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"find\" command.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        findTask(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":31}},{"path":"dukeChatBox/src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.printTaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"    public ListCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"list\" command.","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        printTaskList(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":28}},{"path":"dukeChatBox/src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryMarkTask;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    public MarkCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"mark\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        tryMarkTask(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":35}},{"path":"dukeChatBox/src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.File;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryAddTodo;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    public TodoCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"todoTask\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        tryAddTodo(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":40}},{"path":"dukeChatBox/src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryUnmarkTask;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public UnmarkCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"unmark\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        tryUnmarkTask(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":34}},{"path":"dukeChatBox/src/main/java/duke/efficiency_command.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"在终端中，您可以使用以下命令来移动光标/指针：","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"Ctrl + A：将光标移动到命令行的开头。","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"Ctrl + E：将光标移动到命令行的结尾。","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"Ctrl + F：将光标向前移动一个字符。","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"Ctrl + B：将光标向后移动一个字符。","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"Alt + F：将光标向前移动一个单词。","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"Alt + B：将光标向后移动一个单词。","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"Ctrl + L：清屏并将光标移动到命令行的顶部。","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"Ctrl + U：删除命令行上光标之前的所有字符。","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"Ctrl + K：删除命令行上光标之后的所有字符。","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"Ctrl + W：删除光标前的一个单词。","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"这些命令可以让您更轻松地在终端中编辑命令并移动光标/指针。使用这些命令可以提高您在终端中的效率和速度。","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":13}},{"path":"dukeChatBox/src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.exception;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"/**","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":" * Exceptions specific to Duke.","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":" */","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":9}},{"path":"dukeChatBox/src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.parser;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.command.*;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"public class Parser {","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    private static String keyword;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    private static String statement;","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"     * Parse the user\u0027s input into formatted command.","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"     * @param fullCommand a single user\u0027s command line.","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        fullCommand \u003d fullCommand.trim();","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"        if (countWithSplit(fullCommand) \u003d\u003d 0) throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"        else if (countWithSplit(fullCommand) \u003d\u003d 1){","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"            keyword \u003d fullCommand;","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"            switch (keyword) {","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"                case \"list\":","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"                    return new ListCommand(keyword, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"                case \"bye\":","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"                    return new ByeCommand();","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"                default:","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"                    throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        else {","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"            keyword \u003d fullCommand.split(\"\\\\s+\")[0];","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"            keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"            statement \u003d fullCommand.replaceFirst(keyword + \"\\\\s+\", \"\");","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"            switch (keyword) {","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"                case \"mark\":","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"                    return new MarkCommand(keyword, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"                case \"unmark\":","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"                    return new UnmarkCommand(keyword, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"                case \"todo\":","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"                    return new TodoCommand(keyword, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"                case \"deadline\":","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"                    return new DeadlineCommand(keyword, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"                case \"event\":","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"                    return new EventCommand(keyword, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"                case \"find\":","lastModifiedDate":"2023-04-22"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"                    return new FindCommand(statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"                case \"delete\":","lastModifiedDate":"2023-04-22"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"                    return new DeleteCommand(keyword, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"                default:","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"                    throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"    public static int countWithSplit(String str) {","lastModifiedDate":"2023-04-22"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"        if (isNullOrBlank(str)) {","lastModifiedDate":"2023-04-22"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"            return 0;","lastModifiedDate":"2023-04-22"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"        return str.split(\"\\\\s+\").length;","lastModifiedDate":"2023-04-22"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"    public static boolean isNullOrBlank(String param) {","lastModifiedDate":"2023-04-22"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"        return param \u003d\u003d null || param.trim().length() \u003d\u003d 0;","lastModifiedDate":"2023-04-22"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":65}},{"path":"dukeChatBox/src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.storage;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.Event;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.io.File;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.*;","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"public class Storage {","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    private File f;","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"    private String filePath;","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    public Storage(String filePath){","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        Scanner s;","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        int numberOfLine \u003d 0;","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"                String[] parsedLine \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"                numberOfLine +\u003d 1;","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"                switch (parsedLine[0]) {","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"                    case \"T\":","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"                        addTodo(tasks, parsedLine[2]);","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"                    case \"D\":","lastModifiedDate":"2023-04-22"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"                        String deadline \u003d parsedLine[2] + \" /by \" + parsedLine[3];","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"                        addDeadline(tasks, deadline);","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-22"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"                    case \"E\":","lastModifiedDate":"2023-04-22"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"                        String event \u003d parsedLine[2] + \" /at \" + parsedLine[3];","lastModifiedDate":"2023-04-22"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"                        addEvent(tasks, event);","lastModifiedDate":"2023-04-22"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"                    default:","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"                }","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"                switch (parsedLine[1]) {","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"                    case \"1\":","lastModifiedDate":"2023-04-22"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"                        markTask(tasks, numberOfLine);","lastModifiedDate":"2023-04-22"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-22"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"                    case \"0\":","lastModifiedDate":"2023-04-22"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"                        unmarkTask(tasks, numberOfLine);","lastModifiedDate":"2023-04-22"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-22"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"                    default:","lastModifiedDate":"2023-04-22"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"                }","lastModifiedDate":"2023-04-22"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"        } catch (ArrayIndexOutOfBoundsException | DukeException | FileNotFoundException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"            throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"        Ui.showMessage(\"     Congrats! Your previous tasks have been loaded.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"        return tasks;","lastModifiedDate":"2023-04-22"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"    public void write(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-04-22"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-04-22"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-04-22"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"            String line \u003d \"\";","lastModifiedDate":"2023-04-22"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"            switch (tasks.get(i).getClass().getSimpleName()) {","lastModifiedDate":"2023-04-22"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"                case \"Todo\":","lastModifiedDate":"2023-04-22"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"T | \";","lastModifiedDate":"2023-04-22"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-22"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"                case \"Deadline\":","lastModifiedDate":"2023-04-22"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"D | \";","lastModifiedDate":"2023-04-22"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-22"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"                case \"Event\":","lastModifiedDate":"2023-04-22"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"E | \";","lastModifiedDate":"2023-04-22"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-22"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"            switch (tasks.get(i).getStatusIcon()) {","lastModifiedDate":"2023-04-22"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"                case \"X\":","lastModifiedDate":"2023-04-22"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"1 | \";","lastModifiedDate":"2023-04-22"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-22"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"                case \" \":","lastModifiedDate":"2023-04-22"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"0 | \";","lastModifiedDate":"2023-04-22"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-22"},{"lineNumber":93,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":94,"author":{"gitId":"alextang809"},"content":"            line \u003d line + tasks.get(i).getDescription();","lastModifiedDate":"2023-04-22"},{"lineNumber":95,"author":{"gitId":"alextang809"},"content":"            switch (tasks.get(i).getClass().getSimpleName()) {","lastModifiedDate":"2023-04-22"},{"lineNumber":96,"author":{"gitId":"alextang809"},"content":"                case \"Deadline\":","lastModifiedDate":"2023-04-22"},{"lineNumber":97,"author":{"gitId":"alextang809"},"content":"                    Deadline d \u003d (Deadline) tasks.get(i);","lastModifiedDate":"2023-04-22"},{"lineNumber":98,"author":{"gitId":"alextang809"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-04-22"},{"lineNumber":99,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \" | \" + d.getBy().format(formatter);","lastModifiedDate":"2023-04-22"},{"lineNumber":100,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-22"},{"lineNumber":101,"author":{"gitId":"alextang809"},"content":"                case \"Event\":","lastModifiedDate":"2023-04-22"},{"lineNumber":102,"author":{"gitId":"alextang809"},"content":"                    Event e \u003d (Event) tasks.get(i);","lastModifiedDate":"2023-04-22"},{"lineNumber":103,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \" | \" + e.getAt();","lastModifiedDate":"2023-04-22"},{"lineNumber":104,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-22"},{"lineNumber":105,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":106,"author":{"gitId":"alextang809"},"content":"            line \u003d line + System.lineSeparator();","lastModifiedDate":"2023-04-22"},{"lineNumber":107,"author":{"gitId":"alextang809"},"content":"            fw.write(line);","lastModifiedDate":"2023-04-22"},{"lineNumber":108,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":109,"author":{"gitId":"alextang809"},"content":"        fw.close();","lastModifiedDate":"2023-04-22"},{"lineNumber":110,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":111,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":111}},{"path":"dukeChatBox/src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"//public class Deadline extends Task {","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"//    protected String by;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"//    public Deadline(String description, String by) {","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"//        super(description);","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"//        this.by \u003d by;","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"//    }","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"//    public String getBy() {","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"//        return by;","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"//    }","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"//    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"//    public String getTaskSymbol() {","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"//        return \"D\";","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"//    }","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"//    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"//    public String toString() {","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"//        return  + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"//    }","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"//}","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"        return this.by;","lastModifiedDate":"2023-04-22"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2023-04-22"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"        return \"D\";","lastModifiedDate":"2023-04-22"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"        return \"[\" + getTaskSymbol() + \"]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":55}},{"path":"dukeChatBox/src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"public class Event extends Task {","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    protected String at;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"        this.at \u003d at;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    public String getAt() {","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"        return at;","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"        return \"E\";","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"        return \"[\" + getTaskSymbol() + \"]\" + super.toString()+ \" (at: \" + at + \")\";","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":25}},{"path":"dukeChatBox/src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"public abstract class Task {","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"    protected String description;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    public Task(String description) {","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    public String getStatusIcon() { return (isDone ? \"X\" : \" \"); }","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public String getDescription() {","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        return description;","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    public abstract String getTaskSymbol();","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    public String toString() { return \"[\" + getStatusIcon() + \"] \" + description; }","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    public void setDone() {","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"    public void setNotDone() { isDone \u003d false; }","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":27}},{"path":"dukeChatBox/src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"public class TaskList {","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        tasks.add(task);","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    public TaskList() {","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * Show the adding message of the newly added task.","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"     * @param task the new added task.","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"     * @param tasksSize the size of taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"    public static void printNewTask(Task task, int tasksSize) {","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Now you have \" + tasksSize + \" tasks in the list.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"     * Show the mark message of the newly marked task.","lastModifiedDate":"2023-04-22"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"     * @param task the new marked task.","lastModifiedDate":"2023-04-22"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"    public static void printMark(Task task) {","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"     * Show the unmark message of the newly unmarked task.","lastModifiedDate":"2023-04-22"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"     * @param task the new unmarked task.","lastModifiedDate":"2023-04-22"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"    public static void printUnmark(Task task) {","lastModifiedDate":"2023-04-22"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-04-22"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2023-04-22"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"     * Try to add an event, dealing with all the exceptions then adding.","lastModifiedDate":"2023-04-22"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"     * @param statement the description and time of the event.","lastModifiedDate":"2023-04-22"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"    public static void tryAddEvent(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"            if (statement.equals(\"\")) {","lastModifiedDate":"2023-04-22"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"            if (!statement.contains(\" /at \")) {","lastModifiedDate":"2023-04-22"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"            addEvent(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"            int eventId \u003d tasks.size() - 1;","lastModifiedDate":"2023-04-22"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"            printNewTask(tasks.get(eventId), tasks.size());","lastModifiedDate":"2023-04-22"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! The statement of the event is not correct.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"     * Directly add an event, having dealt with the exception before.","lastModifiedDate":"2023-04-22"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"     * @param statement the description and time of the event.","lastModifiedDate":"2023-04-22"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"    public static void addEvent(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":93,"author":{"gitId":"alextang809"},"content":"        String[] descriptionAt \u003d statement.split(\"\\\\s+/at\\\\s+\");","lastModifiedDate":"2023-04-22"},{"lineNumber":94,"author":{"gitId":"alextang809"},"content":"        String eventDescription \u003d descriptionAt[0];","lastModifiedDate":"2023-04-22"},{"lineNumber":95,"author":{"gitId":"alextang809"},"content":"        String at \u003d descriptionAt[1];","lastModifiedDate":"2023-04-22"},{"lineNumber":96,"author":{"gitId":"alextang809"},"content":"        Event newEvent \u003d new Event(eventDescription, at);","lastModifiedDate":"2023-04-22"},{"lineNumber":97,"author":{"gitId":"alextang809"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-04-22"},{"lineNumber":98,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":99,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":100,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":101,"author":{"gitId":"alextang809"},"content":"     * Try to add a deadline, dealing with all the exceptions then adding.","lastModifiedDate":"2023-04-22"},{"lineNumber":102,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":103,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":104,"author":{"gitId":"alextang809"},"content":"     * @param statement the description and time of the deadline.","lastModifiedDate":"2023-04-22"},{"lineNumber":105,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":106,"author":{"gitId":"alextang809"},"content":"    public static void tryAddDeadline(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":107,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":108,"author":{"gitId":"alextang809"},"content":"            if (statement.equals(\"\")) {","lastModifiedDate":"2023-04-22"},{"lineNumber":109,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":110,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":111,"author":{"gitId":"alextang809"},"content":"            if (!statement.contains(\" /by \")) {","lastModifiedDate":"2023-04-22"},{"lineNumber":112,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":113,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":114,"author":{"gitId":"alextang809"},"content":"            addDeadline(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":115,"author":{"gitId":"alextang809"},"content":"            int deadlineId \u003d tasks.size() - 1;","lastModifiedDate":"2023-04-22"},{"lineNumber":116,"author":{"gitId":"alextang809"},"content":"            printNewTask(tasks.get(deadlineId), tasks.size());","lastModifiedDate":"2023-04-22"},{"lineNumber":117,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":118,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! The statement of the deadline is not correct.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":119,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":120,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":121,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":122,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":123,"author":{"gitId":"alextang809"},"content":"     * Directly add a deadline, having dealt with the exception before.","lastModifiedDate":"2023-04-22"},{"lineNumber":124,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":125,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":126,"author":{"gitId":"alextang809"},"content":"     * @param statement the description and time of the deadline.","lastModifiedDate":"2023-04-22"},{"lineNumber":127,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":128,"author":{"gitId":"alextang809"},"content":"    public static void addDeadline(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":129,"author":{"gitId":"alextang809"},"content":"        String[] descriptionBy \u003d statement.split(\"\\\\s+/by\\\\s+\");","lastModifiedDate":"2023-04-22"},{"lineNumber":130,"author":{"gitId":"alextang809"},"content":"        String deadlineDescription \u003d descriptionBy[0];","lastModifiedDate":"2023-04-22"},{"lineNumber":131,"author":{"gitId":"alextang809"},"content":"        String by \u003d descriptionBy[1];","lastModifiedDate":"2023-04-22"},{"lineNumber":132,"author":{"gitId":"alextang809"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-04-22"},{"lineNumber":133,"author":{"gitId":"alextang809"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-04-22"},{"lineNumber":134,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":135,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":136,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":137,"author":{"gitId":"alextang809"},"content":"     * Try to add a todoTask, dealing with all the exceptions then adding.","lastModifiedDate":"2023-04-22"},{"lineNumber":138,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":139,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":140,"author":{"gitId":"alextang809"},"content":"     * @param statement the description of todoTask.","lastModifiedDate":"2023-04-22"},{"lineNumber":141,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":142,"author":{"gitId":"alextang809"},"content":"    public static void tryAddTodo(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":143,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":144,"author":{"gitId":"alextang809"},"content":"            if (statement.equals(\"\")) {","lastModifiedDate":"2023-04-22"},{"lineNumber":145,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":146,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":147,"author":{"gitId":"alextang809"},"content":"            addTodo(tasks, statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":148,"author":{"gitId":"alextang809"},"content":"            int todoId \u003d tasks.size() - 1;","lastModifiedDate":"2023-04-22"},{"lineNumber":149,"author":{"gitId":"alextang809"},"content":"            printNewTask(tasks.get(todoId), tasks.size());","lastModifiedDate":"2023-04-22"},{"lineNumber":150,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":151,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":152,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":153,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":154,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":155,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":156,"author":{"gitId":"alextang809"},"content":"     * Directly add an todoTask, having dealt with the exception before.","lastModifiedDate":"2023-04-22"},{"lineNumber":157,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":158,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":159,"author":{"gitId":"alextang809"},"content":"     * @param statement the description of todoTask.","lastModifiedDate":"2023-04-22"},{"lineNumber":160,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":161,"author":{"gitId":"alextang809"},"content":"    public static void addTodo(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":162,"author":{"gitId":"alextang809"},"content":"        Todo newTodo \u003d new Todo(statement);","lastModifiedDate":"2023-04-22"},{"lineNumber":163,"author":{"gitId":"alextang809"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-04-22"},{"lineNumber":164,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":165,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":166,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":167,"author":{"gitId":"alextang809"},"content":"     * Try to mark a task, dealing with all the exceptions then mark.","lastModifiedDate":"2023-04-22"},{"lineNumber":168,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":169,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":170,"author":{"gitId":"alextang809"},"content":"     * @param id the unprocessed markId.","lastModifiedDate":"2023-04-22"},{"lineNumber":171,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":172,"author":{"gitId":"alextang809"},"content":"    public static void tryMarkTask(ArrayList\u003cTask\u003e tasks, String id) {","lastModifiedDate":"2023-04-22"},{"lineNumber":173,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":174,"author":{"gitId":"alextang809"},"content":"            if (id.equals(\"\")) {","lastModifiedDate":"2023-04-22"},{"lineNumber":175,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":176,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":177,"author":{"gitId":"alextang809"},"content":"            if (!isInteger(id)) {","lastModifiedDate":"2023-04-22"},{"lineNumber":178,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":179,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":180,"author":{"gitId":"alextang809"},"content":"            int markId \u003d Integer.parseInt(id);","lastModifiedDate":"2023-04-22"},{"lineNumber":181,"author":{"gitId":"alextang809"},"content":"            if ((markId \u003e tasks.size()) || (markId \u003c\u003d 0)) {","lastModifiedDate":"2023-04-22"},{"lineNumber":182,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":183,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":184,"author":{"gitId":"alextang809"},"content":"            markTask(tasks, markId);","lastModifiedDate":"2023-04-22"},{"lineNumber":185,"author":{"gitId":"alextang809"},"content":"            printUnmark(tasks.get(markId - 1));","lastModifiedDate":"2023-04-22"},{"lineNumber":186,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":187,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! Please input the mark id again.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":188,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":189,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":190,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":191,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":192,"author":{"gitId":"alextang809"},"content":"     * Directly mark a task, having dealt with the exception before.","lastModifiedDate":"2023-04-22"},{"lineNumber":193,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":194,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":195,"author":{"gitId":"alextang809"},"content":"     * @param markId the ID of the mark task.","lastModifiedDate":"2023-04-22"},{"lineNumber":196,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":197,"author":{"gitId":"alextang809"},"content":"    public static void markTask(ArrayList\u003cTask\u003e tasks, int markId) {","lastModifiedDate":"2023-04-22"},{"lineNumber":198,"author":{"gitId":"alextang809"},"content":"        markId \u003d markId - 1;","lastModifiedDate":"2023-04-22"},{"lineNumber":199,"author":{"gitId":"alextang809"},"content":"        tasks.get(markId).setDone();","lastModifiedDate":"2023-04-22"},{"lineNumber":200,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":201,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":202,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":203,"author":{"gitId":"alextang809"},"content":"     * Try to unmark a task, dealing with all the exceptions then unmark.","lastModifiedDate":"2023-04-22"},{"lineNumber":204,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":205,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":206,"author":{"gitId":"alextang809"},"content":"     * @param id the unprocessed unmarkId.","lastModifiedDate":"2023-04-22"},{"lineNumber":207,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":208,"author":{"gitId":"alextang809"},"content":"    public static void tryUnmarkTask(ArrayList\u003cTask\u003e tasks, String id) {","lastModifiedDate":"2023-04-22"},{"lineNumber":209,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":210,"author":{"gitId":"alextang809"},"content":"            if (id.equals(\"\")) {","lastModifiedDate":"2023-04-22"},{"lineNumber":211,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":212,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":213,"author":{"gitId":"alextang809"},"content":"            if (!isInteger(id)) {","lastModifiedDate":"2023-04-22"},{"lineNumber":214,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":215,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":216,"author":{"gitId":"alextang809"},"content":"            int unmarkId \u003d Integer.parseInt(id);","lastModifiedDate":"2023-04-22"},{"lineNumber":217,"author":{"gitId":"alextang809"},"content":"            if ((unmarkId \u003e tasks.size()) || (unmarkId \u003c\u003d 0)) {","lastModifiedDate":"2023-04-22"},{"lineNumber":218,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":219,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":220,"author":{"gitId":"alextang809"},"content":"            unmarkTask(tasks, unmarkId);","lastModifiedDate":"2023-04-22"},{"lineNumber":221,"author":{"gitId":"alextang809"},"content":"            printUnmark(tasks.get(unmarkId - 1));","lastModifiedDate":"2023-04-22"},{"lineNumber":222,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":223,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! Please input the unmark id again.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":224,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":225,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":226,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":227,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":228,"author":{"gitId":"alextang809"},"content":"     * Directly unmark a task, having dealt with the exception before.","lastModifiedDate":"2023-04-22"},{"lineNumber":229,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":230,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":231,"author":{"gitId":"alextang809"},"content":"     * @param unmarkId the ID of the unmark task.","lastModifiedDate":"2023-04-22"},{"lineNumber":232,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":233,"author":{"gitId":"alextang809"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e tasks, int unmarkId) {","lastModifiedDate":"2023-04-22"},{"lineNumber":234,"author":{"gitId":"alextang809"},"content":"        unmarkId \u003d unmarkId - 1;","lastModifiedDate":"2023-04-22"},{"lineNumber":235,"author":{"gitId":"alextang809"},"content":"        tasks.get(unmarkId).setNotDone();","lastModifiedDate":"2023-04-22"},{"lineNumber":236,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":237,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":238,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":239,"author":{"gitId":"alextang809"},"content":"     * Try to delete a task, dealing with all the exceptions then delete.","lastModifiedDate":"2023-04-22"},{"lineNumber":240,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":241,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":242,"author":{"gitId":"alextang809"},"content":"     * @param id the unprocessed deleteId.","lastModifiedDate":"2023-04-22"},{"lineNumber":243,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":244,"author":{"gitId":"alextang809"},"content":"    public static void tryDeleteTask(ArrayList\u003cTask\u003e tasks, String id) {","lastModifiedDate":"2023-04-22"},{"lineNumber":245,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-22"},{"lineNumber":246,"author":{"gitId":"alextang809"},"content":"            if (id.equals(\"\")) {","lastModifiedDate":"2023-04-22"},{"lineNumber":247,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":248,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":249,"author":{"gitId":"alextang809"},"content":"            if (!isInteger(id)) {","lastModifiedDate":"2023-04-22"},{"lineNumber":250,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":251,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":252,"author":{"gitId":"alextang809"},"content":"            int deleteId \u003d Integer.parseInt(id);","lastModifiedDate":"2023-04-22"},{"lineNumber":253,"author":{"gitId":"alextang809"},"content":"            if ((deleteId \u003e tasks.size()) || (deleteId \u003c\u003d 0)) {","lastModifiedDate":"2023-04-22"},{"lineNumber":254,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-22"},{"lineNumber":255,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":256,"author":{"gitId":"alextang809"},"content":"            deleteTask(tasks, deleteId - 1);","lastModifiedDate":"2023-04-22"},{"lineNumber":257,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":258,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! Please input the delete id again.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":259,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":260,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":261,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":262,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":263,"author":{"gitId":"alextang809"},"content":"     * Directly delete a task, having dealt with the exception before.","lastModifiedDate":"2023-04-22"},{"lineNumber":264,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":265,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-22"},{"lineNumber":266,"author":{"gitId":"alextang809"},"content":"     * @param deleteId the id of the task to be deleted.","lastModifiedDate":"2023-04-22"},{"lineNumber":267,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":268,"author":{"gitId":"alextang809"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, int deleteId) {","lastModifiedDate":"2023-04-22"},{"lineNumber":269,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-04-22"},{"lineNumber":270,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + tasks.get(deleteId));","lastModifiedDate":"2023-04-22"},{"lineNumber":271,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":272,"author":{"gitId":"alextang809"},"content":"        tasks.remove(deleteId);","lastModifiedDate":"2023-04-22"},{"lineNumber":273,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":274,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":275,"author":{"gitId":"alextang809"},"content":"    public static void findTask(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-22"},{"lineNumber":276,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e result \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2023-04-22"},{"lineNumber":277,"author":{"gitId":"alextang809"},"content":"                .filter(task -\u003e task.getDescription().contains(statement))","lastModifiedDate":"2023-04-22"},{"lineNumber":278,"author":{"gitId":"alextang809"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-04-22"},{"lineNumber":279,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":280,"author":{"gitId":"alextang809"},"content":"        if (result.isEmpty()) {","lastModifiedDate":"2023-04-22"},{"lineNumber":281,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     Sorry, no matching tasks.\");","lastModifiedDate":"2023-04-22"},{"lineNumber":282,"author":{"gitId":"alextang809"},"content":"        } else {","lastModifiedDate":"2023-04-22"},{"lineNumber":283,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2023-04-22"},{"lineNumber":284,"author":{"gitId":"alextang809"},"content":"            for (int i \u003d 0; i \u003c result.size(); i++) {","lastModifiedDate":"2023-04-22"},{"lineNumber":285,"author":{"gitId":"alextang809"},"content":"                System.out.println(\"     \" + (i + 1) + \".\" + result.get(i));","lastModifiedDate":"2023-04-22"},{"lineNumber":286,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":287,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":288,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":289,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":290,"author":{"gitId":"alextang809"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-04-22"},{"lineNumber":291,"author":{"gitId":"alextang809"},"content":"        return tasks;","lastModifiedDate":"2023-04-22"},{"lineNumber":292,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":293,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":294,"author":{"gitId":"alextang809"},"content":"    public static boolean isInteger(String str){","lastModifiedDate":"2023-04-22"},{"lineNumber":295,"author":{"gitId":"alextang809"},"content":"        Pattern pattern \u003d Pattern.compile(\"[0-9]*\");","lastModifiedDate":"2023-04-22"},{"lineNumber":296,"author":{"gitId":"alextang809"},"content":"        Matcher isNum \u003d pattern.matcher(str);","lastModifiedDate":"2023-04-22"},{"lineNumber":297,"author":{"gitId":"alextang809"},"content":"        if( !isNum.matches() ){","lastModifiedDate":"2023-04-22"},{"lineNumber":298,"author":{"gitId":"alextang809"},"content":"            return false;","lastModifiedDate":"2023-04-22"},{"lineNumber":299,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":300,"author":{"gitId":"alextang809"},"content":"        return true;","lastModifiedDate":"2023-04-22"},{"lineNumber":301,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":302,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":302}},{"path":"dukeChatBox/src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"        return \"T\";","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        return \"[\" + getTaskSymbol() + \"]\" + super.toString();","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":18}},{"path":"dukeChatBox/src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.ui;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-22"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"public class Ui {","lastModifiedDate":"2023-04-22"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    public static final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-04-22"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"     * Show the horizontal divider line.","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    public static void showLine() {","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-04-22"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"     * Show the loading error of the file that stores the tasks, which may not exist.","lastModifiedDate":"2023-04-22"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-04-22"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"        showMessage(\"     Load failed! Please put the formatted file \\\"tasks.txt\\\" in the path\");","lastModifiedDate":"2023-04-22"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * Show welcome message to the user.","lastModifiedDate":"2023-04-22"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    public static void showWelcome() {","lastModifiedDate":"2023-04-22"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        showMessage(\"     Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-04-22"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"                \"     What can I do for you?\");","lastModifiedDate":"2023-04-22"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-22"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"     * Formatting the output message, adding divider line above and below.","lastModifiedDate":"2023-04-22"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-22"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"     * @param message the message that needs to be formatted and shown.","lastModifiedDate":"2023-04-22"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-22"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"    public static void showMessage(String message) {","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        showLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"        System.out.println(message);","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"        showLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"    public static void showError(String message) {","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"        if (message \u003d\u003d null) {","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-04-22"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"        } else {","lastModifiedDate":"2023-04-22"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"            System.out.println(message);","lastModifiedDate":"2023-04-22"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-22"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"    public String readCommand() {","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"        return in.nextLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-22"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":55}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"rootProject.name \u003d \u0027dukeChatBox\u0027","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"}],"authorContributionMap":{"alextang809":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package main.java.duke;","lastModifiedDate":"2023-04-22"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.command.Command;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"/**","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":" * The chatting bot Duke.","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":" */","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"public class Duke {","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    private Storage storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    private Ui ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * Initialization of Duke and loading of file.","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param filePath The path of the file that stores the tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        tasks \u003d loadTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"    private TaskList loadTasks() {","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        TaskList taskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-04-19"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"        return taskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"     * Process of user\u0027s input and storage of the new taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"    public void run() {","lastModifiedDate":"2023-04-19"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-04-19"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-04-19"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"        while (!isExit) {","lastModifiedDate":"2023-04-19"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"            try {","lastModifiedDate":"2023-04-22"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-04-22"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"                ui.showLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-04-22"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-04-22"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-04-22"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-04-22"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-04-22"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"            } finally {","lastModifiedDate":"2023-04-22"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"                ui.showLine();","lastModifiedDate":"2023-04-22"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-22"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"    private void processUserInput() {","lastModifiedDate":"2023-04-19"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-04-19"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"            ui.showLine();","lastModifiedDate":"2023-04-19"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-04-19"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-04-19"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-04-19"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"        } finally {","lastModifiedDate":"2023-04-19"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"            ui.showLine();","lastModifiedDate":"2023-04-19"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"    private boolean checkForExit() {","lastModifiedDate":"2023-04-19"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"        String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-04-19"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"        Command c \u003d null;","lastModifiedDate":"2023-04-19"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"            c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-04-19"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-04-19"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"        return c.isExit();","lastModifiedDate":"2023-04-19"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"     * Set the filePath and activate run function.","lastModifiedDate":"2023-04-19"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-04-19"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-04-19"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":93,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"},{"lineNumber":94,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":95,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":96,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":96}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"bye\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"public abstract class Command {","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    String keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    String statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    Boolean isExit \u003d false;","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * Execute a specific user\u0027s command and change the storage file accordingly.","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"     * Decide if the user wants to quit.","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    public Boolean isExit() {","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        return isExit;","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"     * Create a directory \"data\" if not exists to contain the \"tasks.txt\".","lastModifiedDate":"2023-04-19"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"     * @param tasks the task list.","lastModifiedDate":"2023-04-19"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"    static void createDirectory(Ui ui, Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-19"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"        ui.showLine();","lastModifiedDate":"2023-04-19"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Seems the data directory doesn\u0027t exist yet. Try to create for you!\");","lastModifiedDate":"2023-04-19"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"            Path path \u003d Paths.get(\"./data\");","lastModifiedDate":"2023-04-19"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2023-04-19"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-04-19"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     Sorry, creation failed!\");","lastModifiedDate":"2023-04-19"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":54}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-22"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-22"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-22"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryAddDeadline;","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    public DeadlineCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"deadline\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        tryAddDeadline(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":37}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryDeleteTask;","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public DeleteCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"delete\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        tryDeleteTask(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":34}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryAddEvent;","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"    public EventCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"event\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        tryAddEvent(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.findTask;","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    String statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    public FindCommand(String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"find\" command.","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        findTask(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.printTaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"    public ListCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"list\" command.","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        printTaskList(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryMarkTask;","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    public MarkCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"mark\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        tryMarkTask(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":35}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.File;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryAddTodo;","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    public TodoCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"todoTask\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        tryAddTodo(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":40}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.command;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.tryUnmarkTask;","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public UnmarkCommand(String keyword, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        this.statement \u003d statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"     * Execute user\u0027s \"unmark\" command and change the storage file accordingly.","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"     * @param taskList The list containing tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"     * @param ui dealing with interactions with the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"     * @param storage The storage file of tasks.","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"        tryUnmarkTask(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"            storage.write(tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"            createDirectory(ui, storage, tasks);","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":34}},{"path":"src/main/java/duke/efficiency_command.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"在终端中，您可以使用以下命令来移动光标/指针：","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"Ctrl + A：将光标移动到命令行的开头。","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"Ctrl + E：将光标移动到命令行的结尾。","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"Ctrl + F：将光标向前移动一个字符。","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"Ctrl + B：将光标向后移动一个字符。","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"Alt + F：将光标向前移动一个单词。","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"Alt + B：将光标向后移动一个单词。","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"Ctrl + L：清屏并将光标移动到命令行的顶部。","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"Ctrl + U：删除命令行上光标之前的所有字符。","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"Ctrl + K：删除命令行上光标之后的所有字符。","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"Ctrl + W：删除光标前的一个单词。","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"这些命令可以让您更轻松地在终端中编辑命令并移动光标/指针。使用这些命令可以提高您在终端中的效率和速度。","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.exception;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"/**","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":" * Exceptions specific to Duke.","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":" */","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":9}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.parser;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.command.*;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"public class Parser {","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    private static String keyword;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    private static String statement;","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"     * Parse the user\u0027s input into formatted command.","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"     * @param fullCommand a single user\u0027s command line.","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        fullCommand \u003d fullCommand.trim();","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"        if (countWithSplit(fullCommand) \u003d\u003d 0) throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"        else if (countWithSplit(fullCommand) \u003d\u003d 1){","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"            keyword \u003d fullCommand;","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"            switch (keyword) {","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"                case \"list\":","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"                    return new ListCommand(keyword, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"                case \"bye\":","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"                    return new ByeCommand();","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"                default:","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"                    throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        else {","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"            keyword \u003d fullCommand.split(\"\\\\s+\")[0];","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"            keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"            statement \u003d fullCommand.replaceFirst(keyword + \"\\\\s+\", \"\");","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"            switch (keyword) {","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"                case \"mark\":","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"                    return new MarkCommand(keyword, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"                case \"unmark\":","lastModifiedDate":"2023-04-19"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"                    return new UnmarkCommand(keyword, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"                case \"todo\":","lastModifiedDate":"2023-04-19"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"                    return new TodoCommand(keyword, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"                case \"deadline\":","lastModifiedDate":"2023-04-19"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"                    return new DeadlineCommand(keyword, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"                case \"event\":","lastModifiedDate":"2023-04-19"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"                    return new EventCommand(keyword, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"                case \"find\":","lastModifiedDate":"2023-04-19"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"                    return new FindCommand(statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"                case \"delete\":","lastModifiedDate":"2023-04-19"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"                    return new DeleteCommand(keyword, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"                default:","lastModifiedDate":"2023-04-19"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"                    throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"    public static int countWithSplit(String str) {","lastModifiedDate":"2023-04-19"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"        if (isNullOrBlank(str)) {","lastModifiedDate":"2023-04-19"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"            return 0;","lastModifiedDate":"2023-04-19"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"        return str.split(\"\\\\s+\").length;","lastModifiedDate":"2023-04-19"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"    public static boolean isNullOrBlank(String param) {","lastModifiedDate":"2023-04-19"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"        return param \u003d\u003d null || param.trim().length() \u003d\u003d 0;","lastModifiedDate":"2023-04-19"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":65}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.storage;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import duke.task.Event;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import duke.task.Task;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"import java.io.File;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"import static duke.task.TaskList.*;","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"public class Storage {","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    private File f;","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"    private String filePath;","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    public Storage(String filePath){","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        Scanner s;","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        int numberOfLine \u003d 0;","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"                String[] parsedLine \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"                numberOfLine +\u003d 1;","lastModifiedDate":"2023-04-19"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"                switch (parsedLine[0]) {","lastModifiedDate":"2023-04-19"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"                    case \"T\":","lastModifiedDate":"2023-04-19"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"                        addTodo(tasks, parsedLine[2]);","lastModifiedDate":"2023-04-19"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-19"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"                    case \"D\":","lastModifiedDate":"2023-04-19"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"                        String deadline \u003d parsedLine[2] + \" /by \" + parsedLine[3];","lastModifiedDate":"2023-04-19"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"                        addDeadline(tasks, deadline);","lastModifiedDate":"2023-04-19"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-19"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"                    case \"E\":","lastModifiedDate":"2023-04-19"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"                        String event \u003d parsedLine[2] + \" /at \" + parsedLine[3];","lastModifiedDate":"2023-04-19"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"                        addEvent(tasks, event);","lastModifiedDate":"2023-04-19"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-19"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"                    default:","lastModifiedDate":"2023-04-19"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"                }","lastModifiedDate":"2023-04-19"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"                switch (parsedLine[1]) {","lastModifiedDate":"2023-04-19"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"                    case \"1\":","lastModifiedDate":"2023-04-19"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"                        markTask(tasks, numberOfLine);","lastModifiedDate":"2023-04-19"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-19"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"                    case \"0\":","lastModifiedDate":"2023-04-19"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"                        unmarkTask(tasks, numberOfLine);","lastModifiedDate":"2023-04-19"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"                        break;","lastModifiedDate":"2023-04-19"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"                    default:","lastModifiedDate":"2023-04-19"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"                        throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"                }","lastModifiedDate":"2023-04-19"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"        } catch (ArrayIndexOutOfBoundsException | DukeException | FileNotFoundException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"            throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"        Ui.showMessage(\"     Congrats! Your previous tasks have been loaded.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"        return tasks;","lastModifiedDate":"2023-04-19"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"    public void write(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-04-19"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-04-19"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-04-19"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"            String line \u003d \"\";","lastModifiedDate":"2023-04-19"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"            switch (tasks.get(i).getClass().getSimpleName()) {","lastModifiedDate":"2023-04-19"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"                case \"Todo\":","lastModifiedDate":"2023-04-19"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"T | \";","lastModifiedDate":"2023-04-19"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-19"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"                case \"Deadline\":","lastModifiedDate":"2023-04-19"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"D | \";","lastModifiedDate":"2023-04-19"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-19"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"                case \"Event\":","lastModifiedDate":"2023-04-19"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"E | \";","lastModifiedDate":"2023-04-19"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-19"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"            switch (tasks.get(i).getStatusIcon()) {","lastModifiedDate":"2023-04-19"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"                case \"X\":","lastModifiedDate":"2023-04-19"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"1 | \";","lastModifiedDate":"2023-04-19"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-19"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"                case \" \":","lastModifiedDate":"2023-04-19"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \"0 | \";","lastModifiedDate":"2023-04-19"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-19"},{"lineNumber":93,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":94,"author":{"gitId":"alextang809"},"content":"            line \u003d line + tasks.get(i).getDescription();","lastModifiedDate":"2023-04-19"},{"lineNumber":95,"author":{"gitId":"alextang809"},"content":"            switch (tasks.get(i).getClass().getSimpleName()) {","lastModifiedDate":"2023-04-19"},{"lineNumber":96,"author":{"gitId":"alextang809"},"content":"                case \"Deadline\":","lastModifiedDate":"2023-04-19"},{"lineNumber":97,"author":{"gitId":"alextang809"},"content":"                    Deadline d \u003d (Deadline) tasks.get(i);","lastModifiedDate":"2023-04-19"},{"lineNumber":98,"author":{"gitId":"alextang809"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-04-19"},{"lineNumber":99,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \" | \" + d.getBy().format(formatter);","lastModifiedDate":"2023-04-19"},{"lineNumber":100,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-19"},{"lineNumber":101,"author":{"gitId":"alextang809"},"content":"                case \"Event\":","lastModifiedDate":"2023-04-19"},{"lineNumber":102,"author":{"gitId":"alextang809"},"content":"                    Event e \u003d (Event) tasks.get(i);","lastModifiedDate":"2023-04-19"},{"lineNumber":103,"author":{"gitId":"alextang809"},"content":"                    line \u003d line + \" | \" + e.getAt();","lastModifiedDate":"2023-04-19"},{"lineNumber":104,"author":{"gitId":"alextang809"},"content":"                    break;","lastModifiedDate":"2023-04-19"},{"lineNumber":105,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":106,"author":{"gitId":"alextang809"},"content":"            line \u003d line + System.lineSeparator();","lastModifiedDate":"2023-04-19"},{"lineNumber":107,"author":{"gitId":"alextang809"},"content":"            fw.write(line);","lastModifiedDate":"2023-04-19"},{"lineNumber":108,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":109,"author":{"gitId":"alextang809"},"content":"        fw.close();","lastModifiedDate":"2023-04-19"},{"lineNumber":110,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":111,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":111}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"//public class Deadline extends Task {","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"//    protected String by;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"//    public Deadline(String description, String by) {","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"//        super(description);","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"//        this.by \u003d by;","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"//    }","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"//    public String getBy() {","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"//        return by;","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"//    }","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"//    @Override","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"//    public String getTaskSymbol() {","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"//        return \"D\";","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"//    }","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"//","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"//    @Override","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"//    public String toString() {","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"//        return  + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"//    }","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"//}","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        assert description !\u003d null : \"Description cannot be null\";","lastModifiedDate":"2023-04-22"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"        assert by !\u003d null : \"By (deadline) cannot be null\";","lastModifiedDate":"2023-04-22"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-04-22"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-04-19"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-22"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"        assert this.by !\u003d null : \"Parsed LocalDateTime cannot be null\";","lastModifiedDate":"2023-04-22"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-04-19"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"        return this.by;","lastModifiedDate":"2023-04-19"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-19"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2023-04-19"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"        return \"D\";","lastModifiedDate":"2023-04-19"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-19"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-04-19"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-04-19"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"        return \"[\" + getTaskSymbol() + \"]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-04-19"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    protected String at;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"        this.at \u003d at;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    public String getAt() {","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"        return at;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"        return \"E\";","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"        return \"[\" + getTaskSymbol() + \"]\" + super.toString()+ \" (at: \" + at + \")\";","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"public abstract class Task {","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"    protected String description;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    public Task(String description) {","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    public String getStatusIcon() { return (isDone ? \"X\" : \" \"); }","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    public String getDescription() {","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"        return description;","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    public abstract String getTaskSymbol();","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    public String toString() { return \"[\" + getStatusIcon() + \"] \" + description; }","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    public void setDone() {","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"    public void setNotDone() { isDone \u003d false; }","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":27}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"public class TaskList {","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        tasks.add(task);","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    public TaskList() {","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * Show the adding message of the newly added task.","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"     * @param task the new added task.","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"     * @param tasksSize the size of taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"    public static void printNewTask(Task task, int tasksSize) {","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Now you have \" + tasksSize + \" tasks in the list.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-04-19"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2023-04-19"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-04-19"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-04-19"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"     * Show the mark message of the newly marked task.","lastModifiedDate":"2023-04-19"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"     * @param task the new marked task.","lastModifiedDate":"2023-04-19"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"    public static void printMark(Task task) {","lastModifiedDate":"2023-04-19"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-04-19"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2023-04-19"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"     * Show the unmark message of the newly unmarked task.","lastModifiedDate":"2023-04-19"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"     * @param task the new unmarked task.","lastModifiedDate":"2023-04-19"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"    public static void printUnmark(Task task) {","lastModifiedDate":"2023-04-19"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-04-19"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + task);","lastModifiedDate":"2023-04-19"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"     * Try to add an event, dealing with all the exceptions then adding.","lastModifiedDate":"2023-04-19"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"     * @param statement the description and time of the event.","lastModifiedDate":"2023-04-19"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"    public static void tryAddEvent(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"            if (statement.equals(\"\")) {","lastModifiedDate":"2023-04-19"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"            if (!statement.contains(\" /at \")) {","lastModifiedDate":"2023-04-19"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"            addEvent(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"            int eventId \u003d tasks.size() - 1;","lastModifiedDate":"2023-04-19"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"            printNewTask(tasks.get(eventId), tasks.size());","lastModifiedDate":"2023-04-19"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! The statement of the event is not correct.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"     * Directly add an event, having dealt with the exception before.","lastModifiedDate":"2023-04-19"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"     * @param statement the description and time of the event.","lastModifiedDate":"2023-04-19"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"    public static void addEvent(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":93,"author":{"gitId":"alextang809"},"content":"        String[] descriptionAt \u003d statement.split(\"\\\\s+/at\\\\s+\");","lastModifiedDate":"2023-04-19"},{"lineNumber":94,"author":{"gitId":"alextang809"},"content":"        String eventDescription \u003d descriptionAt[0];","lastModifiedDate":"2023-04-19"},{"lineNumber":95,"author":{"gitId":"alextang809"},"content":"        String at \u003d descriptionAt[1];","lastModifiedDate":"2023-04-19"},{"lineNumber":96,"author":{"gitId":"alextang809"},"content":"        Event newEvent \u003d new Event(eventDescription, at);","lastModifiedDate":"2023-04-19"},{"lineNumber":97,"author":{"gitId":"alextang809"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-04-19"},{"lineNumber":98,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":99,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":100,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":101,"author":{"gitId":"alextang809"},"content":"     * Try to add a deadline, dealing with all the exceptions then adding.","lastModifiedDate":"2023-04-19"},{"lineNumber":102,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":103,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":104,"author":{"gitId":"alextang809"},"content":"     * @param statement the description and time of the deadline.","lastModifiedDate":"2023-04-19"},{"lineNumber":105,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":106,"author":{"gitId":"alextang809"},"content":"    public static void tryAddDeadline(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":107,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":108,"author":{"gitId":"alextang809"},"content":"            if (statement.equals(\"\")) {","lastModifiedDate":"2023-04-19"},{"lineNumber":109,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":110,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":111,"author":{"gitId":"alextang809"},"content":"            if (!statement.contains(\" /by \")) {","lastModifiedDate":"2023-04-19"},{"lineNumber":112,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":113,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":114,"author":{"gitId":"alextang809"},"content":"            addDeadline(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":115,"author":{"gitId":"alextang809"},"content":"            int deadlineId \u003d tasks.size() - 1;","lastModifiedDate":"2023-04-19"},{"lineNumber":116,"author":{"gitId":"alextang809"},"content":"            printNewTask(tasks.get(deadlineId), tasks.size());","lastModifiedDate":"2023-04-19"},{"lineNumber":117,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":118,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! The statement of the deadline is not correct.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":119,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":120,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":121,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":122,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":123,"author":{"gitId":"alextang809"},"content":"     * Directly add a deadline, having dealt with the exception before.","lastModifiedDate":"2023-04-19"},{"lineNumber":124,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":125,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":126,"author":{"gitId":"alextang809"},"content":"     * @param statement the description and time of the deadline.","lastModifiedDate":"2023-04-19"},{"lineNumber":127,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":128,"author":{"gitId":"alextang809"},"content":"    public static void addDeadline(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":129,"author":{"gitId":"alextang809"},"content":"        //String[] descriptionBy \u003d statement.split(\"\\\\s+/by\\\\s+\");","lastModifiedDate":"2023-04-22"},{"lineNumber":130,"author":{"gitId":"alextang809"},"content":"        String[] descriptionBy \u003d statement.split(\"\\\\s?/by\\\\s+\");","lastModifiedDate":"2023-04-22"},{"lineNumber":131,"author":{"gitId":"alextang809"},"content":"        String deadlineDescription \u003d descriptionBy[0];","lastModifiedDate":"2023-04-19"},{"lineNumber":132,"author":{"gitId":"alextang809"},"content":"        String by \u003d descriptionBy[1];","lastModifiedDate":"2023-04-19"},{"lineNumber":133,"author":{"gitId":"alextang809"},"content":"        Deadline newDeadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-04-19"},{"lineNumber":134,"author":{"gitId":"alextang809"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-04-19"},{"lineNumber":135,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":136,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":137,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":138,"author":{"gitId":"alextang809"},"content":"     * Try to add a todoTask, dealing with all the exceptions then adding.","lastModifiedDate":"2023-04-19"},{"lineNumber":139,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":140,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":141,"author":{"gitId":"alextang809"},"content":"     * @param statement the description of todoTask.","lastModifiedDate":"2023-04-19"},{"lineNumber":142,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":143,"author":{"gitId":"alextang809"},"content":"    public static void tryAddTodo(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":144,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":145,"author":{"gitId":"alextang809"},"content":"            if (statement.equals(\"\")) {","lastModifiedDate":"2023-04-19"},{"lineNumber":146,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":147,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":148,"author":{"gitId":"alextang809"},"content":"            addTodo(tasks, statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":149,"author":{"gitId":"alextang809"},"content":"            int todoId \u003d tasks.size() - 1;","lastModifiedDate":"2023-04-19"},{"lineNumber":150,"author":{"gitId":"alextang809"},"content":"            printNewTask(tasks.get(todoId), tasks.size());","lastModifiedDate":"2023-04-19"},{"lineNumber":151,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":152,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":153,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":154,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":155,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":156,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":157,"author":{"gitId":"alextang809"},"content":"     * Directly add an todoTask, having dealt with the exception before.","lastModifiedDate":"2023-04-19"},{"lineNumber":158,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":159,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":160,"author":{"gitId":"alextang809"},"content":"     * @param statement the description of todoTask.","lastModifiedDate":"2023-04-19"},{"lineNumber":161,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":162,"author":{"gitId":"alextang809"},"content":"    public static void addTodo(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":163,"author":{"gitId":"alextang809"},"content":"        Todo newTodo \u003d new Todo(statement);","lastModifiedDate":"2023-04-19"},{"lineNumber":164,"author":{"gitId":"alextang809"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-04-19"},{"lineNumber":165,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":166,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":167,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":168,"author":{"gitId":"alextang809"},"content":"     * Try to mark a task, dealing with all the exceptions then mark.","lastModifiedDate":"2023-04-19"},{"lineNumber":169,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":170,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":171,"author":{"gitId":"alextang809"},"content":"     * @param id the unprocessed markId.","lastModifiedDate":"2023-04-19"},{"lineNumber":172,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":173,"author":{"gitId":"alextang809"},"content":"    public static void tryMarkTask(ArrayList\u003cTask\u003e tasks, String id) {","lastModifiedDate":"2023-04-19"},{"lineNumber":174,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":175,"author":{"gitId":"alextang809"},"content":"            if (id.equals(\"\")) {","lastModifiedDate":"2023-04-19"},{"lineNumber":176,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":177,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":178,"author":{"gitId":"alextang809"},"content":"            if (!isInteger(id)) {","lastModifiedDate":"2023-04-19"},{"lineNumber":179,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":180,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":181,"author":{"gitId":"alextang809"},"content":"            int markId \u003d Integer.parseInt(id);","lastModifiedDate":"2023-04-19"},{"lineNumber":182,"author":{"gitId":"alextang809"},"content":"            if ((markId \u003e tasks.size()) || (markId \u003c\u003d 0)) {","lastModifiedDate":"2023-04-19"},{"lineNumber":183,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":184,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":185,"author":{"gitId":"alextang809"},"content":"            markTask(tasks, markId);","lastModifiedDate":"2023-04-19"},{"lineNumber":186,"author":{"gitId":"alextang809"},"content":"            printUnmark(tasks.get(markId - 1));","lastModifiedDate":"2023-04-19"},{"lineNumber":187,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":188,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! Please input the mark id again.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":189,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":190,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":191,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":192,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":193,"author":{"gitId":"alextang809"},"content":"     * Directly mark a task, having dealt with the exception before.","lastModifiedDate":"2023-04-19"},{"lineNumber":194,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":195,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":196,"author":{"gitId":"alextang809"},"content":"     * @param markId the ID of the mark task.","lastModifiedDate":"2023-04-19"},{"lineNumber":197,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":198,"author":{"gitId":"alextang809"},"content":"    public static void markTask(ArrayList\u003cTask\u003e tasks, int markId) {","lastModifiedDate":"2023-04-19"},{"lineNumber":199,"author":{"gitId":"alextang809"},"content":"        markId \u003d markId - 1;","lastModifiedDate":"2023-04-19"},{"lineNumber":200,"author":{"gitId":"alextang809"},"content":"        tasks.get(markId).setDone();","lastModifiedDate":"2023-04-19"},{"lineNumber":201,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":202,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":203,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":204,"author":{"gitId":"alextang809"},"content":"     * Try to unmark a task, dealing with all the exceptions then unmark.","lastModifiedDate":"2023-04-19"},{"lineNumber":205,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":206,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":207,"author":{"gitId":"alextang809"},"content":"     * @param id the unprocessed unmarkId.","lastModifiedDate":"2023-04-19"},{"lineNumber":208,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":209,"author":{"gitId":"alextang809"},"content":"    public static void tryUnmarkTask(ArrayList\u003cTask\u003e tasks, String id) {","lastModifiedDate":"2023-04-19"},{"lineNumber":210,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":211,"author":{"gitId":"alextang809"},"content":"            if (id.equals(\"\")) {","lastModifiedDate":"2023-04-19"},{"lineNumber":212,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":213,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":214,"author":{"gitId":"alextang809"},"content":"            if (!isInteger(id)) {","lastModifiedDate":"2023-04-19"},{"lineNumber":215,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":216,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":217,"author":{"gitId":"alextang809"},"content":"            int unmarkId \u003d Integer.parseInt(id);","lastModifiedDate":"2023-04-19"},{"lineNumber":218,"author":{"gitId":"alextang809"},"content":"            if ((unmarkId \u003e tasks.size()) || (unmarkId \u003c\u003d 0)) {","lastModifiedDate":"2023-04-19"},{"lineNumber":219,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":220,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":221,"author":{"gitId":"alextang809"},"content":"            unmarkTask(tasks, unmarkId);","lastModifiedDate":"2023-04-19"},{"lineNumber":222,"author":{"gitId":"alextang809"},"content":"            printUnmark(tasks.get(unmarkId - 1));","lastModifiedDate":"2023-04-19"},{"lineNumber":223,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":224,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! Please input the unmark id again.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":225,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":226,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":227,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":228,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":229,"author":{"gitId":"alextang809"},"content":"     * Directly unmark a task, having dealt with the exception before.","lastModifiedDate":"2023-04-19"},{"lineNumber":230,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":231,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":232,"author":{"gitId":"alextang809"},"content":"     * @param unmarkId the ID of the unmark task.","lastModifiedDate":"2023-04-19"},{"lineNumber":233,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":234,"author":{"gitId":"alextang809"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e tasks, int unmarkId) {","lastModifiedDate":"2023-04-19"},{"lineNumber":235,"author":{"gitId":"alextang809"},"content":"        unmarkId \u003d unmarkId - 1;","lastModifiedDate":"2023-04-19"},{"lineNumber":236,"author":{"gitId":"alextang809"},"content":"        tasks.get(unmarkId).setNotDone();","lastModifiedDate":"2023-04-19"},{"lineNumber":237,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":238,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":239,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":240,"author":{"gitId":"alextang809"},"content":"     * Try to delete a task, dealing with all the exceptions then delete.","lastModifiedDate":"2023-04-19"},{"lineNumber":241,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":242,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":243,"author":{"gitId":"alextang809"},"content":"     * @param id the unprocessed deleteId.","lastModifiedDate":"2023-04-19"},{"lineNumber":244,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":245,"author":{"gitId":"alextang809"},"content":"    public static void tryDeleteTask(ArrayList\u003cTask\u003e tasks, String id) {","lastModifiedDate":"2023-04-19"},{"lineNumber":246,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-04-19"},{"lineNumber":247,"author":{"gitId":"alextang809"},"content":"            if (id.equals(\"\")) {","lastModifiedDate":"2023-04-19"},{"lineNumber":248,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":249,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":250,"author":{"gitId":"alextang809"},"content":"            if (!isInteger(id)) {","lastModifiedDate":"2023-04-19"},{"lineNumber":251,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":252,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":253,"author":{"gitId":"alextang809"},"content":"            int deleteId \u003d Integer.parseInt(id);","lastModifiedDate":"2023-04-19"},{"lineNumber":254,"author":{"gitId":"alextang809"},"content":"            if ((deleteId \u003e tasks.size()) || (deleteId \u003c\u003d 0)) {","lastModifiedDate":"2023-04-19"},{"lineNumber":255,"author":{"gitId":"alextang809"},"content":"                throw new DukeException();","lastModifiedDate":"2023-04-19"},{"lineNumber":256,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":257,"author":{"gitId":"alextang809"},"content":"            deleteTask(tasks, deleteId - 1);","lastModifiedDate":"2023-04-19"},{"lineNumber":258,"author":{"gitId":"alextang809"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-19"},{"lineNumber":259,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! Please input the delete id again.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":260,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":261,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":262,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":263,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":264,"author":{"gitId":"alextang809"},"content":"     * Directly delete a task, having dealt with the exception before.","lastModifiedDate":"2023-04-19"},{"lineNumber":265,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":266,"author":{"gitId":"alextang809"},"content":"     * @param tasks the taskList.","lastModifiedDate":"2023-04-19"},{"lineNumber":267,"author":{"gitId":"alextang809"},"content":"     * @param deleteId the id of the task to be deleted.","lastModifiedDate":"2023-04-19"},{"lineNumber":268,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":269,"author":{"gitId":"alextang809"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, int deleteId) {","lastModifiedDate":"2023-04-19"},{"lineNumber":270,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-04-19"},{"lineNumber":271,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + tasks.get(deleteId));","lastModifiedDate":"2023-04-19"},{"lineNumber":272,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":273,"author":{"gitId":"alextang809"},"content":"        tasks.remove(deleteId);","lastModifiedDate":"2023-04-19"},{"lineNumber":274,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":275,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":276,"author":{"gitId":"alextang809"},"content":"    public static void findTask(ArrayList\u003cTask\u003e tasks, String statement) {","lastModifiedDate":"2023-04-19"},{"lineNumber":277,"author":{"gitId":"alextang809"},"content":"        ArrayList\u003cTask\u003e result \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2023-04-19"},{"lineNumber":278,"author":{"gitId":"alextang809"},"content":"                .filter(task -\u003e task.getDescription().contains(statement))","lastModifiedDate":"2023-04-19"},{"lineNumber":279,"author":{"gitId":"alextang809"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-04-19"},{"lineNumber":280,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":281,"author":{"gitId":"alextang809"},"content":"        if (result.isEmpty()) {","lastModifiedDate":"2023-04-19"},{"lineNumber":282,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     Sorry, no matching tasks.\");","lastModifiedDate":"2023-04-19"},{"lineNumber":283,"author":{"gitId":"alextang809"},"content":"        } else {","lastModifiedDate":"2023-04-19"},{"lineNumber":284,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2023-04-19"},{"lineNumber":285,"author":{"gitId":"alextang809"},"content":"            for (int i \u003d 0; i \u003c result.size(); i++) {","lastModifiedDate":"2023-04-19"},{"lineNumber":286,"author":{"gitId":"alextang809"},"content":"                System.out.println(\"     \" + (i + 1) + \".\" + result.get(i));","lastModifiedDate":"2023-04-19"},{"lineNumber":287,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-04-19"},{"lineNumber":288,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":289,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":290,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":291,"author":{"gitId":"alextang809"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-04-19"},{"lineNumber":292,"author":{"gitId":"alextang809"},"content":"        return tasks;","lastModifiedDate":"2023-04-19"},{"lineNumber":293,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":294,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":295,"author":{"gitId":"alextang809"},"content":"    public static boolean isInteger(String str){","lastModifiedDate":"2023-04-19"},{"lineNumber":296,"author":{"gitId":"alextang809"},"content":"        Pattern pattern \u003d Pattern.compile(\"[0-9]*\");","lastModifiedDate":"2023-04-19"},{"lineNumber":297,"author":{"gitId":"alextang809"},"content":"        Matcher isNum \u003d pattern.matcher(str);","lastModifiedDate":"2023-04-19"},{"lineNumber":298,"author":{"gitId":"alextang809"},"content":"        if( !isNum.matches() ){","lastModifiedDate":"2023-04-19"},{"lineNumber":299,"author":{"gitId":"alextang809"},"content":"            return false;","lastModifiedDate":"2023-04-19"},{"lineNumber":300,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":301,"author":{"gitId":"alextang809"},"content":"        return true;","lastModifiedDate":"2023-04-19"},{"lineNumber":302,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":303,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":303}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.task;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"        return \"T\";","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        return \"[\" + getTaskSymbol() + \"]\" + super.toString();","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":18}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"package duke.ui;","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"public class Ui {","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    public static final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"     * Show the horizontal divider line.","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    public static void showLine() {","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"     * Show the loading error of the file that stores the tasks, which may not exist.","lastModifiedDate":"2023-04-19"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-04-19"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"        showMessage(\"     Load failed! Please put the formatted file \\\"tasks.txt\\\" in the path\");","lastModifiedDate":"2023-04-19"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"     * Show welcome message to the user.","lastModifiedDate":"2023-04-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    public static void showWelcome() {","lastModifiedDate":"2023-04-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"        showMessage(\"     Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-04-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"                \"     What can I do for you?\");","lastModifiedDate":"2023-04-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-04-19"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"     * Formatting the output message, adding divider line above and below.","lastModifiedDate":"2023-04-19"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-04-19"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"     * @param message the message that needs to be formatted and shown.","lastModifiedDate":"2023-04-19"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-04-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"    public static void showMessage(String message) {","lastModifiedDate":"2023-04-19"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        showLine();","lastModifiedDate":"2023-04-19"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"        System.out.println(message);","lastModifiedDate":"2023-04-19"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"        showLine();","lastModifiedDate":"2023-04-19"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"    public static void showError(String message) {","lastModifiedDate":"2023-04-19"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"        if (message \u003d\u003d null) {","lastModifiedDate":"2023-04-19"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     T_T OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-04-19"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"        } else {","lastModifiedDate":"2023-04-19"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"            System.out.println(message);","lastModifiedDate":"2023-04-19"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"    public String readCommand() {","lastModifiedDate":"2023-04-19"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-19"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"        return in.nextLine();","lastModifiedDate":"2023-04-19"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":55}},{"path":"suggestions/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"public class Duke {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"    public static final int MAX_TASK \u003d 100;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"    public static void printBlahMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     blah\");","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"        printWelcomeMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"        Task[] tasks \u003d new Task[MAX_TASK];","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        request:","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        while(true){","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            String[] parsedInput \u003d line.split(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"            switch (parsedInput[0]) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"            case \"list\":","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"                Task.printTaskList(tasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"                int markId \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"                tasks[markId].setDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"                tasks[markId].printMark();","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"                markTask(tasks, parsedInput);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"                int unmarkId \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"                tasks[unmarkId].setNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"                tasks[unmarkId].printUnmark();","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"                unmarkTask(tasks, parsedInput);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"                String todoDescription \u003d line.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"                tasks[Todo.getNumberOfTasks()] \u003d new Todo(todoDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"                int todoId \u003d Todo.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"                tasks[todoId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"                addTodo(tasks, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"                String[] DescriptionBy \u003d line.replaceFirst(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"                String deadlineDescription \u003d DescriptionBy[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"                String by \u003d DescriptionBy[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"                tasks[Deadline.getNumberOfTasks()] \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"                int deadlineId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"                tasks[deadlineId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"                addDeadline(tasks, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"            case \"event\":","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"                String[] DescriptionAt \u003d line.replaceFirst(\"event \", \"\").split(\" /at \");","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"                String eventDescription \u003d DescriptionAt[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"                String at \u003d DescriptionAt[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"                tasks[Event.getNumberOfTasks()] \u003d new Event(eventDescription, at);","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"                int eventId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"                tasks[eventId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"                addEvent(tasks, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"            case \"blah\":","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"                printBlahMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"@@ -76,11 +59,52 @@ public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"                printByeMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"                break request;","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"            default:","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"                tasks[Task.getNumberOfTasks()] \u003d new Task(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"                int taskId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"                tasks[taskId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"                addTask(tasks, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"    private static void addTask(Task[] tasks, String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"        tasks[Task.getNumberOfTasks()] \u003d new Task(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"        int taskId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"        tasks[taskId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"    private static void addEvent(Task[] tasks, String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"        String[] DescriptionAt \u003d line.replaceFirst(\"event \", \"\").split(\" /at \");","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"alextang809"},"content":"        String eventDescription \u003d DescriptionAt[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"alextang809"},"content":"        String at \u003d DescriptionAt[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"alextang809"},"content":"        tasks[Event.getNumberOfTasks()] \u003d new Event(eventDescription, at);","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"alextang809"},"content":"        int eventId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"alextang809"},"content":"        tasks[eventId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"alextang809"},"content":"    private static void addDeadline(Task[] tasks, String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"alextang809"},"content":"        String[] DescriptionBy \u003d line.replaceFirst(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"alextang809"},"content":"        String deadlineDescription \u003d DescriptionBy[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"alextang809"},"content":"        String by \u003d DescriptionBy[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"alextang809"},"content":"        tasks[Deadline.getNumberOfTasks()] \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"alextang809"},"content":"        int deadlineId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"alextang809"},"content":"        tasks[deadlineId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"alextang809"},"content":"    private static void addTodo(Task[] tasks, String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"alextang809"},"content":"        String todoDescription \u003d line.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"alextang809"},"content":"        tasks[Todo.getNumberOfTasks()] \u003d new Todo(todoDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"alextang809"},"content":"        int todoId \u003d Todo.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"alextang809"},"content":"        tasks[todoId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"alextang809"},"content":"    private static void unmarkTask(Task[] tasks, String[] parsedInput) {","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"alextang809"},"content":"        int unmarkId \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"alextang809"},"content":"        tasks[unmarkId].setNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"alextang809"},"content":"        tasks[unmarkId].printUnmark();","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"alextang809"},"content":"    private static void markTask(Task[] tasks, String[] parsedInput) {","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"alextang809"},"content":"        int markId \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"alextang809"},"content":"        tasks[markId].setDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"alextang809"},"content":"        tasks[markId].printMark();","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":127}},{"path":"suggestions/lab4.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"class A {","lastModifiedDate":"2023-04-19"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"    private int x;","lastModifiedDate":"2023-04-19"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"    public static A zeroValueA \u003d new A(0);","lastModifiedDate":"2023-04-19"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    private A(int x){","lastModifiedDate":"2023-04-19"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"        this.x \u003d x;","lastModifiedDate":"2023-04-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-04-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"    public static A construct(int x) {","lastModifiedDate":"2023-04-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"        if (x \u003d\u003d 0) {","lastModifiedDate":"2023-04-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"            return A.zeroValueA;","lastModifiedDate":"2023-04-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"        } else {","lastModifiedDate":"2023-04-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"            return A(x);","lastModifiedDate":"2023-04-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-04-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-04-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-04-19"}],"authorContributionMap":{"alextang809":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"todo CS2103T 05-20","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"deadline weekly CS2030 quiz /by Tuesday 2359pm","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"list","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"event CS2103T lecture /at Friday 4 to 6 pm","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"mark 1","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"list","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":6}}]
