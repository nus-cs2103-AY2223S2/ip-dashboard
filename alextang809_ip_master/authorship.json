[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"    protected String by;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"        return by;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    public static final int MAX_TASK \u003d 1000;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        printWelcomeMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"        Task[] taskList \u003d new Task[MAX_TASK]; //ask[] taskList \u003d new Task[100];","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"        //int taskCounter \u003d 0;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"        // use while loop to deal with user input through scanner","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"        String msgDescription;   //String line; Line // msgDescription","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"        request:","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"            msgDescription \u003d in.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"            String[] splitMessage \u003d msgDescription.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"//            switch (splitMessage[0]) {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            if (Objects.equals(msgDescription, \"list\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"//                Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"//                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"//                for (int i \u003d 0; i \u003c Task.getTotalNumberOfTask(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"//                    taskList[i].printTaskList(taskList);","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"//                }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"//                Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"                Task.printTaskList(taskList);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"            } else if (Objects.equals(msgDescription, \"blah\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"                printBlahMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"            } else if (Objects.equals(msgDescription, \"bye\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"                Duke.printByeMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"                break request;","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"            } else if (Objects.equals(msgDescription.split(\" \")[0], \"mark\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"                int id \u003d Integer.parseInt(msgDescription.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"                taskList[id].setDone();","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"                taskList[id].printMark();","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"//                Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"//                System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"//                System.out.println(\"       [X] \" + taskList[id].getDescription());","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"//                Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"            } else if (Objects.equals(msgDescription.split(\" \")[0], \"unmark\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"                int id \u003d Integer.parseInt(msgDescription.split(\" \")[1]) - 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"                taskList[id].setNotDone();","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"                taskList[id].printUnmark();","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"//                Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"//                System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"//                System.out.println(\"       [] \" + taskList[id].getDescription());","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"//                Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"            } else if (Objects.equals(msgDescription.split(\" \")[0], \"todo\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"                String description \u003d msgDescription.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"                taskList[Todo.getTotalNumberOfTask()] \u003d new Todo(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"                int id \u003d Todo.getTotalNumberOfTask() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"                taskList[id].printUpdatedTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"            } else if (Objects.equals(msgDescription.split(\" \")[0], \"deadline\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"                String[] DescriptionBy \u003d msgDescription.replaceFirst(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"                String description \u003d DescriptionBy[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"                String by \u003d DescriptionBy[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"                taskList[Deadline.getTotalNumberOfTask()] \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"                int id \u003d Task.getTotalNumberOfTask() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"                taskList[id].printUpdatedTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"            } else if (Objects.equals(msgDescription.split(\" \")[0], \"event\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"                String[] DescriptionAt \u003d msgDescription.replaceFirst(\"event \", \"\").split(\" /at \");","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"                String description \u003d DescriptionAt[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"                String at \u003d DescriptionAt[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"                taskList[Event.getTotalNumberOfTask()] \u003d new Event(description, at);","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"                int id \u003d Task.getTotalNumberOfTask() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"                taskList[id].printUpdatedTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"            } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"//                taskList[Task.getTotalNumberOfTask()] \u003d new Task(msgDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"//                System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"//                System.out.println(\"     added: \" + msgDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"//                System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"                taskList[Task.getTotalNumberOfTask()] \u003d new Task(msgDescription);","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"                int id \u003d Task.getTotalNumberOfTask() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"                taskList[id].printUpdatedTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"    private static void printByeMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"alextang809"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"alextang809"},"content":"    public static void printBlahMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     blah\");","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"alextang809"},"content":"    public static void printWriteAgainMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     this is an unknown command, please write again --Notice Duke is case sensitive\");","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"alextang809"},"content":"    public static void printMessage(String msgDescription){","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     added: \" + msgDescription);","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"alextang809":109,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"    protected String at;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"        this.at \u003d at;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    public String getAt() {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"        return at;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"        return \"[E]\" + super.toString()+ \" (at: \" + at + \")\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"    public static final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"    public static int BRACKET_LENGTH \u003d 3;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    public String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"    public int id;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    public boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"    public static int totalNumberOfTask \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"        totalNumberOfTask++;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"        this.id \u003d totalNumberOfTask;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"    public String getStatusIcon() { return (isDone ? \"X\" : \" \"); }","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"    public String toString() { return \"[ ]\" + \"[\" + getStatusIcon() + \"] \" + description; }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"    public static int getTotalNumberOfTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        return totalNumberOfTask;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"    public static void printTaskList(Task[] taskList) {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"        //","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"//        for (int i \u003d 0; i \u003c Task.getTotalNumberOfTask(); i++) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"//            System.out.println(\"     \" + taskList[i].id + \". \" + taskList[i].description);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"//        }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"        //","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalNumberOfTask(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"            System.out.println(\"     \" + taskList[i].id + \". \" + taskList[i]);","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"        //","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"    public void printMark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + this);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"    public void printUnmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + this);","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"    public void printUpdatedTask() {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"       \" + this);","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Now you have \" + Task.getTotalNumberOfTask() + \" tasks in the list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"        return description;","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"alextang809":78}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"        super(description);","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"    public String toString() {","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"//        return \"[T]\" + super.toString().replaceFirst(\"[]\", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"//        should use regular expression to avoid magic number, but haven\u0027t figured out how to do","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"        return \"[T]\" + super.toString().substring(BRACKET_LENGTH);","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":13}},{"path":"src/main/java/efficiency_command.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"在终端中，您可以使用以下命令来移动光标/指针：","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"Ctrl + A：将光标移动到命令行的开头。","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"Ctrl + E：将光标移动到命令行的结尾。","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"Ctrl + F：将光标向前移动一个字符。","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"Ctrl + B：将光标向后移动一个字符。","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"Alt + F：将光标向前移动一个单词。","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"Alt + B：将光标向后移动一个单词。","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"Ctrl + L：清屏并将光标移动到命令行的顶部。","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"Ctrl + U：删除命令行上光标之前的所有字符。","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"Ctrl + K：删除命令行上光标之后的所有字符。","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"Ctrl + W：删除光标前的一个单词。","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"这些命令可以让您更轻松地在终端中编辑命令并移动光标/指针。使用这些命令可以提高您在终端中的效率和速度。","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":13}},{"path":"suggestions/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"public class Duke {","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"    public static final int MAX_TASK \u003d 100;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"alextang809"},"content":"    public static void printBlahMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     blah\");","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"alextang809"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"alextang809"},"content":"        Task.printHorizontalLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"alextang809"},"content":"        printWelcomeMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"        Task[] tasks \u003d new Task[MAX_TASK];","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":"        request:","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":"        while(true){","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"alextang809"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"            String[] parsedInput \u003d line.split(\" \");","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"            switch (parsedInput[0]) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"            case \"list\":","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"alextang809"},"content":"                Task.printTaskList(tasks);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"                int markId \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"alextang809"},"content":"                tasks[markId].setDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"                tasks[markId].printMark();","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"                markTask(tasks, parsedInput);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"                int unmarkId \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"alextang809"},"content":"                tasks[unmarkId].setNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"alextang809"},"content":"                tasks[unmarkId].printUnmark();","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"alextang809"},"content":"                unmarkTask(tasks, parsedInput);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"                String todoDescription \u003d line.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"                tasks[Todo.getNumberOfTasks()] \u003d new Todo(todoDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"alextang809"},"content":"                int todoId \u003d Todo.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"                tasks[todoId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"alextang809"},"content":"                addTodo(tasks, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"alextang809"},"content":"                String[] DescriptionBy \u003d line.replaceFirst(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"alextang809"},"content":"                String deadlineDescription \u003d DescriptionBy[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"                String by \u003d DescriptionBy[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"alextang809"},"content":"                tasks[Deadline.getNumberOfTasks()] \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"alextang809"},"content":"                int deadlineId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"alextang809"},"content":"                tasks[deadlineId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"                addDeadline(tasks, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"            case \"event\":","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"alextang809"},"content":"                String[] DescriptionAt \u003d line.replaceFirst(\"event \", \"\").split(\" /at \");","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"alextang809"},"content":"                String eventDescription \u003d DescriptionAt[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"                String at \u003d DescriptionAt[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"alextang809"},"content":"                tasks[Event.getNumberOfTasks()] \u003d new Event(eventDescription, at);","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"alextang809"},"content":"                int eventId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"alextang809"},"content":"                tasks[eventId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"alextang809"},"content":"                addEvent(tasks, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"            case \"blah\":","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"                printBlahMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"alextang809"},"content":"@@ -76,11 +59,52 @@ public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"alextang809"},"content":"                printByeMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"alextang809"},"content":"                break request;","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"alextang809"},"content":"            default:","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"alextang809"},"content":"                tasks[Task.getNumberOfTasks()] \u003d new Task(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"alextang809"},"content":"                int taskId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"alextang809"},"content":"                tasks[taskId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"alextang809"},"content":"                addTask(tasks, line);","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"alextang809"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"alextang809"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"alextang809"},"content":"    private static void addTask(Task[] tasks, String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"        tasks[Task.getNumberOfTasks()] \u003d new Task(line);","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"alextang809"},"content":"        int taskId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"alextang809"},"content":"        tasks[taskId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"    private static void addEvent(Task[] tasks, String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"        String[] DescriptionAt \u003d line.replaceFirst(\"event \", \"\").split(\" /at \");","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"alextang809"},"content":"        String eventDescription \u003d DescriptionAt[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"alextang809"},"content":"        String at \u003d DescriptionAt[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"alextang809"},"content":"        tasks[Event.getNumberOfTasks()] \u003d new Event(eventDescription, at);","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"alextang809"},"content":"        int eventId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"alextang809"},"content":"        tasks[eventId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"alextang809"},"content":"    private static void addDeadline(Task[] tasks, String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"alextang809"},"content":"        String[] DescriptionBy \u003d line.replaceFirst(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"alextang809"},"content":"        String deadlineDescription \u003d DescriptionBy[0];","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"alextang809"},"content":"        String by \u003d DescriptionBy[1];","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"alextang809"},"content":"        tasks[Deadline.getNumberOfTasks()] \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"alextang809"},"content":"        int deadlineId \u003d Task.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"alextang809"},"content":"        tasks[deadlineId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"alextang809"},"content":"    private static void addTodo(Task[] tasks, String line) {","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"alextang809"},"content":"        String todoDescription \u003d line.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"alextang809"},"content":"        tasks[Todo.getNumberOfTasks()] \u003d new Todo(todoDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"alextang809"},"content":"        int todoId \u003d Todo.getNumberOfTasks() - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"alextang809"},"content":"        tasks[todoId].printNewTask();","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"alextang809"},"content":"    private static void unmarkTask(Task[] tasks, String[] parsedInput) {","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"alextang809"},"content":"        int unmarkId \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"alextang809"},"content":"        tasks[unmarkId].setNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"alextang809"},"content":"        tasks[unmarkId].printUnmark();","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"alextang809"},"content":"    private static void markTask(Task[] tasks, String[] parsedInput) {","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"alextang809"},"content":"        int markId \u003d Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"alextang809"},"content":"        tasks[markId].setDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"alextang809"},"content":"        tasks[markId].printMark();","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":127}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alextang809"},"content":"todo CS2103T 05-20","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"alextang809"},"content":"deadline weekly CS2030 quiz /by Tuesday 2359pm","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"alextang809"},"content":"list","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"alextang809"},"content":"event CS2103T lecture /at Friday 4 to 6 pm","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"alextang809"},"content":"mark 1","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"list","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"alextang809":6}}]
