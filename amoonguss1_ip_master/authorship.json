[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"    protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"import java.util.*;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"    public static void main(String[] args) throws EmptyDescException, InvalidInputException{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"        greet();","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"        //echo();","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"        processInputs(list);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    private static void greet() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    // echoes strings inputted by the user","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    private static void echo() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"        while (input.equals(\"bye\") \u003d\u003d false) {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"            System.out.println(input);","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"            System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"            input \u003d sc.next();","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"        exit();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"    //exits the application when \"exit\" is inputted","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"    private static void exit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"    //adds items into the list and prints it when \"list\" is the input","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"    //our list takes in Tasks that are marked with a boolean.","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"    //processes the list with inputs from the user with list and Tasks operations.","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"    private static void processInputs(List\u003cTask\u003e list) throws InvalidInputException, EmptyDescException{","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"        Scanner sc \u003d new Scanner(System.in).useDelimiter(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"        while (input.equals(\"bye\") \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"                String[] split \u003d input.split(\" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"                switch (split[0]) {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"                    case (\"list\"):","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"                        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"                            Task element \u003d list.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"                            System.out.println(String.format(\"%d.%s\", i + 1, element.toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"                    case (\"mark\"):","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"                        if (split.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"                            throw new EmptyDescException(\"Sorry! you can\u0027t have empty descriptions!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"amoonguss1"},"content":"                        int item \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"amoonguss1"},"content":"                        Task curr \u003d list.get(item - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"amoonguss1"},"content":"                        curr.setDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"Nice, this task has been marked as done:\\n %s\", curr.toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"amoonguss1"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"amoonguss1"},"content":"                    case (\"unmark\"):","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"amoonguss1"},"content":"                        if (split.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"amoonguss1"},"content":"                            throw new EmptyDescException(\"Sorry! you can\u0027t have empty descriptions!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"amoonguss1"},"content":"                        item \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"amoonguss1"},"content":"                        curr \u003d list.get(item - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"amoonguss1"},"content":"                        curr.setUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"ok, this task has been marked as not done yet:\\n %s\", curr.toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"amoonguss1"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"amoonguss1"},"content":"                    case (\"todo\"):","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"amoonguss1"},"content":"                        if (split.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"amoonguss1"},"content":"                            throw new EmptyDescException(\"Sorry! you can\u0027t have empty descriptions!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"amoonguss1"},"content":"                        String task \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"amoonguss1"},"content":"                        for (int i \u003d 1; i \u003c split.length; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"amoonguss1"},"content":"                            task +\u003d split[i] + \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"amoonguss1"},"content":"                        Todo stuff \u003d new Todo(task.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"amoonguss1"},"content":"                        list.add(stuff);","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"alright, I\u0027ve added the following task:\\n %s\", stuff.toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.size()));","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"amoonguss1"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"amoonguss1"},"content":"                    case (\"deadline\"):","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"amoonguss1"},"content":"                        if (split.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"amoonguss1"},"content":"                            throw new EmptyDescException(\"Sorry! you can\u0027t have empty descriptions!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"amoonguss1"},"content":"                        task \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"amoonguss1"},"content":"                        String date \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"amoonguss1"},"content":"                        boolean passed \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"amoonguss1"},"content":"                        for (int i \u003d 1; i \u003c split.length; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"amoonguss1"},"content":"                            if (!split[i].equals(\"/by\") \u0026\u0026 passed \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"amoonguss1"},"content":"                                task +\u003d split[i] + \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"amoonguss1"},"content":"                            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"amoonguss1"},"content":"                                if (i \u003c split.length - 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"amoonguss1"},"content":"                                    date +\u003d split[i + 1] + \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"amoonguss1"},"content":"                                }","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"amoonguss1"},"content":"                                passed \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"amoonguss1"},"content":"                            }","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"amoonguss1"},"content":"                        Deadline deadline \u003d new Deadline(task.trim(), date.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"amoonguss1"},"content":"                        list.add(deadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"Received, I\u0027ve added the following deadlines:\\n %s\", deadline.toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.size()));","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"amoonguss1"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"amoonguss1"},"content":"                    case (\"event\"):","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"amoonguss1"},"content":"                        if (split.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"amoonguss1"},"content":"                            throw new EmptyDescException(\"Sorry! you can\u0027t have empty descriptions!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"amoonguss1"},"content":"                        task \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"amoonguss1"},"content":"                        String from \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"amoonguss1"},"content":"                        String to \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"amoonguss1"},"content":"                        passed \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"amoonguss1"},"content":"                        boolean passed2 \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"amoonguss1"},"content":"                        for (int i \u003d 1; i \u003c split.length; i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"amoonguss1"},"content":"                            if (!split[i].equals(\"/from\") \u0026\u0026 passed \u003d\u003d false \u0026\u0026 passed2 \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"amoonguss1"},"content":"                                task +\u003d split[i] + \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"amoonguss1"},"content":"                            } else if (passed2 \u003d\u003d false \u0026\u0026 !split[i + 1].equals(\"/to\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"amoonguss1"},"content":"                                from +\u003d split[i + 1] + \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"amoonguss1"},"content":"                                passed \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"amoonguss1"},"content":"                            } else if (i \u003c split.length - 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"amoonguss1"},"content":"                                to +\u003d split[i + 2] + \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"amoonguss1"},"content":"                                passed2 \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"amoonguss1"},"content":"                            }","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"amoonguss1"},"content":"                        Event event \u003d new Event(task.trim(), from.trim(), to.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"amoonguss1"},"content":"                        list.add(event);","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"Sure!, I\u0027ve added the following events:\\n %s\", event.toString()));","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list.\", list.size()));","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"amoonguss1"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"amoonguss1"},"content":"                    case (\"delete\"):","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"amoonguss1"},"content":"                        if (split.length \u003c 2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"amoonguss1"},"content":"                            throw new EmptyDescException(\"Sorry! you can\u0027t have empty descriptions!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"amoonguss1"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"amoonguss1"},"content":"                        item \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"amoonguss1"},"content":"                        curr \u003d list.remove(item - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"ok, this task has been removed:\\n %s\", curr.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(String.format(\"Now you have %d tasks in the list\",list.size()));","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"amoonguss1"},"content":"                        System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"amoonguss1"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"amoonguss1"},"content":"                    default:","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"amoonguss1"},"content":"                        throw new InvalidInputException(\"Sorry! I have no idea what that means ??? \u003e:c\");","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"amoonguss1"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"amoonguss1"},"content":"            } catch (InvalidInputException e){","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"amoonguss1"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"amoonguss1"},"content":"                System.out.println(\"---------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"amoonguss1"},"content":"            if (!sc.hasNextLine()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"amoonguss1"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"amoonguss1"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"amoonguss1"},"content":"        exit();","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":162,"-":10}},{"path":"src/main/java/EmptyDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"public class EmptyDescException extends InvalidInputException{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"    public EmptyDescException(String message){","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"amoonguss1":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"    protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"    protected String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"    Event(String description, String from, String to){","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    public String toString(){","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":14}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"public class InvalidInputException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"    public InvalidInputException(String message){","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"amoonguss1":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"    Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    public void setUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    public String toString(){","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"[%s] %s\",this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"    public Todo(String description){","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"    public String toString(){","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"todo buy book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"todo mark scripts","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"deadline return book /by june 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"event project meeting event /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"amoonguss1":9}}]
