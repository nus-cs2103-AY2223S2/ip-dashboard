[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"# Nerd.Nerd project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"instructions on how to use it.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"   first)","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"3. After that, locate the `src/main/java/Nerd.Nerd.java` file, right-click it, and choose `Run Nerd.Nerd.main()` (if the","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"   like the below as the output:","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amoonguss1":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"    mainClassName \u003d \"gui.Launcher\"","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"    archiveBaseName \u003d \"Nerd\"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amoonguss1":16,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"T | 0 | read book","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"D | 0 | return book | 2019-10-15","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"D | 0 | project meeting | 2019-10-15","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"T | 1 | join sports club","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"E | 0 | book event | 2019-10-15 | 2019-10-15","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"D | 1 | this  | 2019-12-12","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"amoonguss1":6}},{"path":"src/main/java/Nerd/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.Command abstract class.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":" * Several commands inherit from Command, and instantiating this","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":" * will create the command required for processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     * Duke.Commands abstract method that processes the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     * @param list The tasklist of the Nerdbot.","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     * @param ui The user interface of the Nerdbot.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    public abstract String processCommand(TaskList list, Ui ui);","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"amoonguss1":21}},{"path":"src/main/java/Nerd/Commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.DeadlineCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    private final String description;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"    private final String by;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     * Constructor for a deadline command.","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"     * @param by The date of the deadline.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a deadline Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"     * @param list The TaskList object that stores tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"     * @param ui   User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"     * @return A string output for adding a deadline task.","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"        list.addTask(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"        String response \u003d ui.printDeadlineResponse(deadline.toString(), list.getSize());","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"        return response;","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":42}},{"path":"src/main/java/Nerd/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.DeleteCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    private final int index;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"     * Constructor of delete commands.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     * @param index The index of the command to be deleted.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a DeleteCommand Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"     * @param list  The TaskList object that stores Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"     * @param ui    User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"     * @return The string output of processing a delete command.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"        Task task \u003d list.getTask(index);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        list.deleteTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"        String response \u003d ui.printDeleteResponse(task.toString(), list.getSize());","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"        return response;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":37}},{"path":"src/main/java/Nerd/Commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.EventCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    private final String description;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"    private final String from;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    private final String to;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     * Constructor of Event commands","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     * @param from The date the event starts.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"     * @param to The date the event ends.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a EventCommand Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"     * @param list The TaskList object that stores Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"     * @param ui   User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"     * @return A string output from processing the event task.","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"        list.addTask(event);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"        String response \u003d ui.printEventResponse(event.toString(), list.getSize());","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"        return response;","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":43}},{"path":"src/main/java/Nerd/Commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.ExitCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for an ExitCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     * @return The string for processing an exit command.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"        return ui.printBye();","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":21}},{"path":"src/main/java/Nerd/Commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Parser.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"    private final String description;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"     * Constructor of Find commands","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    public FindCommand(String description, Parser parser) {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for an FindCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     * @param list Tasklist of the Chat bot.","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"     * @param ui User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"     * @return The tasks searched by the command.","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"        String result \u003d parser.searchDescription(list, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d ui.printSearchResponse(result, this.description);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"amoonguss1":35}},{"path":"src/main/java/Nerd/Commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.ListCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a ListCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     * @param list The TaskList object that stores Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     * @param ui   User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     * @return The string of all task currently in the TaskList.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"        return ui.printListResponse(list);","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":24}},{"path":"src/main/java/Nerd/Commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.MarkCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    private final int index;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     * Constructor of mark commands","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a MarkCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"     * @param list  The TaskList object that stores Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"     * @param ui    User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"     * @return The task being marked.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"        Task task \u003d list.getTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        task.setDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d ui.printMarkResponse(task.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":37}},{"path":"src/main/java/Nerd/Commands/ReminderCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"import java.time.Period;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.DeadlineCommand of the Chat bot.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    private int rangeOfDays;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    private LocalDate currentDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"     * Constructor for a Reminder command.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"     * @param rangeOfDays Days remaining before actual task","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    public ReminderCommand(int rangeOfDays) {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"        this.rangeOfDays \u003d rangeOfDays;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"        this.currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a Reminder command.","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"     * @param list The TaskList object that stores tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"     * @param ui   User interface of the Chat bot.","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"     * @return A string output for adding a deadline task.","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d \"REMINDERS!:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"            Task currTask \u003d list.getTask(i);","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"            if (currTask instanceof Deadline) {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"                LocalDate deadline \u003d ((Deadline) currTask).getBy();","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"                Period difference \u003d Period.between(currentDate, deadline);","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"                int days \u003d difference.getDays();","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"                if (days \u003e\u003d 0 \u0026\u0026 days \u003c\u003d rangeOfDays) {","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"                    output +\u003d String.format(\"%d days to Deadline:\\n%s\\n\", days, currTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"            if (currTask instanceof Event) {","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"                LocalDate startDate \u003d ((Event) currTask).getStartDate();","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"                Period difference \u003d Period.between(currentDate, startDate);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"                int days \u003d difference.getDays();","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"                if (days \u003e\u003d 0 \u0026\u0026 days \u003c\u003d rangeOfDays) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"                    output +\u003d String.format(\"%d days to Event:\\n%s\\n\", days, currTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"amoonguss1":61}},{"path":"src/main/java/Nerd/Commands/SearchDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.SearchCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"public class SearchDateCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"    private final String date;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     * Constructor of search date commands","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"     * @param date The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    public SearchDateCommand(String date) {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a SearchCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"     * @param list The TaskList object that stores Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"     * @param ui   User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"     * @return Tasks that associate with the given date.","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"        LocalDate now \u003d LocalDate.parse(date.trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d ui.printSearchDate(now.toString(), list);","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":40}},{"path":"src/main/java/Nerd/Commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.TodoCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    private final String description;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     * Constructor of Todo commands","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a TodoCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"     * @param list The TaskList object that stores Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"     * @param ui   User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"     * @return The string result of adding a todo task.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"        Todo task \u003d new Todo(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        list.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d ui.printTodoResponse(task.toString(), list.getSize());","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":38}},{"path":"src/main/java/Nerd/Commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Commands.UnmarkCommand of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    private final int index;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     * Constructor of Unmark commands","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     * Overridden processCommand method from the abstract class Command.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     * Processes the command for a TodoCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"     * @param list  The TaskList object that stores Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"     * @param ui    User interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"     * @return The string of the task being marked.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"    public String processCommand(TaskList list, Ui ui) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"        Task task \u003d list.getTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        task.setUndone();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d ui.printUnmarkResponse(task.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":37}},{"path":"src/main/java/Nerd/Nerd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import Nerd.exceptions.NerdException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import Nerd.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Commands.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.Duke Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":" * Running a duke object loads data from the specified file into memory,","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":" * and exiting the program writes data to the hard disk.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"public class Nerd {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    private TaskList list;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     * Duke.Duke Constructor for initializing the Duke object.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"     * @param filePath of the storage","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    public Nerd(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"            storage.connect();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"            list \u003d new TaskList(storage);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"     * duke.Duke Main method that runs the duke chatbot.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"     * @param args Arguments of the main function","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"        new Nerd(\"duke.txt\");","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"     * Method that gets the user response as the input from the GUI.","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"     * @param input User input from the gui.","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"     * @return A string to displayed on the gui.","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"        String output;","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"amoonguss1"},"content":"            Command command \u003d parser.parseCommand(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"amoonguss1"},"content":"            output \u003d command.processCommand(this.list, this.ui);","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"amoonguss1"},"content":"            storage.save(this.list);","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"amoonguss1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"amoonguss1"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":74,"-":1}},{"path":"src/main/java/Nerd/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Commands.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Nerd;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"import Nerd.enums.CommandEnums;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"import Nerd.exceptions.NerdException;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":" * Represents the Parser of the Chat bot that parses the commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"     * Parses the input string into commands to be processed subsequently.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     * @param input The full line of the command and arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     * @return The command of the input.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"     * @throws NerdException            if the input contains empty descriptions","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"     * @throws IllegalArgumentException if the input contains an invalid command or arguments","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"    public Command parseCommand(String input) throws NerdException, IllegalArgumentException {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"        CommandEnums type;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"            type \u003d CommandEnums.valueOf(split[0].toUpperCase().strip());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"            throw new IllegalArgumentException(\"Sorry! I have no idea what that means ??? \u003e:c\");","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"        if (isEmptyCommand(split)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"            throw new NerdException(\"According to my calculations, there are empty inputs!\\n\" +","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"                    \"Please follow the valid command list above :D\");","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"        switch (type) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"        case LIST:","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"        case MARK:","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"            return new MarkCommand(parseIndex(input));","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"            return new UnmarkCommand(parseIndex(input));","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"        case TODO:","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"            return new TodoCommand(parseDescription(input));","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"            String[] parsedDeadline \u003d parseDeadline(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"            return new DeadlineCommand(parsedDeadline[0], parsedDeadline[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"        case EVENT:","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"            String[] eventList \u003d parseEvent(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"            return new EventCommand(eventList[0], eventList[1], eventList[2]);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"        case DELETE:","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"amoonguss1"},"content":"            return new DeleteCommand(parseIndex(input));","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"amoonguss1"},"content":"        case DATE:","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"amoonguss1"},"content":"            return new SearchDateCommand(parseDescription(input));","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"amoonguss1"},"content":"        case FIND:","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"amoonguss1"},"content":"            return new FindCommand(parseDescription(input), this);","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"amoonguss1"},"content":"        case REMINDER:","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"amoonguss1"},"content":"            return new ReminderCommand(parseIndex(input));","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"amoonguss1"},"content":"        case BYE:","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"amoonguss1"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"amoonguss1"},"content":"        default:","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"amoonguss1"},"content":"            throw new NerdException(\"Sorry! I have no idea what that means ??? \u003e:c\");","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"amoonguss1"},"content":"     * Parses the input string taken from the text file into Tasks in the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"amoonguss1"},"content":"     * @param input The full line of the command and arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"amoonguss1"},"content":"     * @param list  The TaskList of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"amoonguss1"},"content":"     * @return A boolean representing the success of the parsing.","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"amoonguss1"},"content":"    public boolean parseText(String input, TaskList list) {","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"amoonguss1"},"content":"        String[] split \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"amoonguss1"},"content":"        switch (split[0]) {","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"amoonguss1"},"content":"        case (\"T\"):","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"amoonguss1"},"content":"            Todo todo \u003d new Todo(split[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"amoonguss1"},"content":"            if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"amoonguss1"},"content":"                todo.setDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"amoonguss1"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"amoonguss1"},"content":"                todo.setUndone();","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"amoonguss1"},"content":"            list.addTask(todo);","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"amoonguss1"},"content":"            return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"amoonguss1"},"content":"        case (\"D\"):","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"amoonguss1"},"content":"            Deadline deadline \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"amoonguss1"},"content":"            if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"amoonguss1"},"content":"                deadline.setDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"amoonguss1"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"amoonguss1"},"content":"                deadline.setUndone();","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"amoonguss1"},"content":"            list.addTask(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"amoonguss1"},"content":"            return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"amoonguss1"},"content":"        case (\"E\"):","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"amoonguss1"},"content":"            Event event \u003d new Event(split[2], split[3], split[4]);","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"amoonguss1"},"content":"            if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"amoonguss1"},"content":"                event.setDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"amoonguss1"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"amoonguss1"},"content":"                event.setUndone();","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"amoonguss1"},"content":"            list.addTask(event);","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"amoonguss1"},"content":"            return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"amoonguss1"},"content":"        default:","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"amoonguss1"},"content":"            return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"amoonguss1"},"content":"     * Parses the input string into descriptions.","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"amoonguss1"},"content":"     * @param input The full line of the command and arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"amoonguss1"},"content":"     * @return the string representation of the description.","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"amoonguss1"},"content":"     * @throws NerdException if the input is empty.","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"amoonguss1"},"content":"    public String parseDescription(String input) throws NerdException {","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"amoonguss1"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"amoonguss1"},"content":"        if (!isEmptyCommand(split)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"amoonguss1"},"content":"            return split[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"amoonguss1"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"amoonguss1"},"content":"            throw new NerdException(\"Sorry! you can\u0027t have empty descriptions!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"amoonguss1"},"content":"     * Searches the given tasklist for any matching descriptions.","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"amoonguss1"},"content":"     * @param list The current Tasklist of the nerdbot.","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task to search for.","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"amoonguss1"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"amoonguss1"},"content":"    public String searchDescription(TaskList list, String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"amoonguss1"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"amoonguss1"},"content":"            boolean toPrint \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"amoonguss1"},"content":"            Task currentTask \u003d list.getTask(i);","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"amoonguss1"},"content":"            String[] split \u003d currentTask.getDescription().split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"amoonguss1"},"content":"            for (int j \u003d 0; j \u003c split.length; j++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"amoonguss1"},"content":"                if(split[j].equals(description)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":146,"author":{"gitId":"amoonguss1"},"content":"                    toPrint \u003d true;","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"amoonguss1"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"amoonguss1"},"content":"            if(toPrint) {","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"amoonguss1"},"content":"                output +\u003d String.format(\"%s\\n\",currentTask.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":152,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":153,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":156,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"amoonguss1"},"content":"     * Parses the input string into indices.","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"amoonguss1"},"content":"     * @param input The full line of the command and arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"amoonguss1"},"content":"     * @return The index.","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"amoonguss1"},"content":"    public int parseIndex(String input){","lastModifiedDate":"2023-02-07"},{"lineNumber":163,"author":{"gitId":"amoonguss1"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"amoonguss1"},"content":"        return Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"amoonguss1"},"content":"     * Parses the input string for deadline tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"amoonguss1"},"content":"     * @param input The full line of the command and arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"amoonguss1"},"content":"     * @return An array containing the description and date of the deadline.","lastModifiedDate":"2023-02-05"},{"lineNumber":172,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"amoonguss1"},"content":"    public String[] parseDeadline(String input) {","lastModifiedDate":"2023-02-05"},{"lineNumber":174,"author":{"gitId":"amoonguss1"},"content":"        String[] split \u003d input.split(\"/by\");","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"amoonguss1"},"content":"        String description \u003d split[0].replaceFirst(\"deadline \",\"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":176,"author":{"gitId":"amoonguss1"},"content":"        String[] result \u003d {description, split[1]};","lastModifiedDate":"2023-02-05"},{"lineNumber":177,"author":{"gitId":"amoonguss1"},"content":"        return result;","lastModifiedDate":"2023-02-05"},{"lineNumber":178,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"amoonguss1"},"content":"     * Parses the input string for Event tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"amoonguss1"},"content":"     * @param input The full line of the command and arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"amoonguss1"},"content":"     * @return A string array containing description, start and end dates.","lastModifiedDate":"2023-02-05"},{"lineNumber":185,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"amoonguss1"},"content":"    public String[] parseEvent(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":187,"author":{"gitId":"amoonguss1"},"content":"        String[] split \u003d input.split(\"/from\");","lastModifiedDate":"2023-01-27"},{"lineNumber":188,"author":{"gitId":"amoonguss1"},"content":"        String description \u003d split[0].replaceFirst(\"event \", \"\");","lastModifiedDate":"2023-02-05"},{"lineNumber":189,"author":{"gitId":"amoonguss1"},"content":"        split \u003d split[1].split(\"/to\");","lastModifiedDate":"2023-01-27"},{"lineNumber":190,"author":{"gitId":"amoonguss1"},"content":"        String[] result \u003d {description, split[0], split[1]};","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"amoonguss1"},"content":"        return result;","lastModifiedDate":"2023-02-05"},{"lineNumber":192,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":193,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":194,"author":{"gitId":"amoonguss1"},"content":"    public boolean isEmptyCommand(String[] input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"amoonguss1"},"content":"        if(input.length \u003c 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"amoonguss1"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"amoonguss1"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"amoonguss1"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":201,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":201}},{"path":"src/main/java/Nerd/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" * Represents the user interface of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"        return(\"Hello! I\u0027m NerdBot\\nI am very smart and can do many things!\");","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    public String showCommandList() {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"        String availableCommands \u003d \"Available commands:\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"                + \"todo [description]\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"                + \"event [description] /from [date] /to [date]\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"                + \"deadline [description] /by [date]\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"                + \"mark [index]\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"                + \"unmark [index]\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"                + \"list\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"                + \"delete [index]\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"                + \"date [date]\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"                + \"reminder [days from today]\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"                + \"date formats are in yyyy-mm-dd\";","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"        return availableCommands;","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"    public String printError(String err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"        return err;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"    public String printBye() {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"    public void print(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"        System.out.println(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"    public String printDeadlineResponse(String deadline, int size) {","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"Received, I\u0027ve added the following deadlines:\\n %s\\nNow you have %d tasks in the list.\\n\" +","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"                        \"Be sure to finish these tasks before the deadline!\", deadline, size);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"    public String printDeleteResponse(String task, int size) {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"Finally done?!, Sure, this task has been removed:\\n %s\\nNow you have %d tasks in the list\",","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"                task, size);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"    public String printEventResponse(String event, int size) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"Sure!, I\u0027ve added the following events:\\n %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"                event, size);","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"amoonguss1"},"content":"    public String printSearchResponse(String result, String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d \"Easy command for me! Here are the tasks that are associated with\" + description + \":\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"amoonguss1"},"content":"        output +\u003d result;","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"amoonguss1"},"content":"    public String printListResponse(TaskList list) {","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d \"Here is the current list:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"amoonguss1"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"amoonguss1"},"content":"            Task t \u003d list.getTask(i);","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"amoonguss1"},"content":"            output +\u003d String.format(\"%d.%s\\n\", i + 1, t.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"amoonguss1"},"content":"    public String printMarkResponse(String task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"Nice, this task has been marked as done:\\n %s\", task);","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"amoonguss1"},"content":"    public String printUnmarkResponse(String task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"Nice, this task has been unmarked:\\n %s\", task);","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"amoonguss1"},"content":"    public String printTodoResponse(String todo, int size) {","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"Sure!, I\u0027ve added the following todo task:\\n %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"amoonguss1"},"content":"                todo, size);","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"amoonguss1"},"content":"    public String printSuccessfulConnection() {","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"amoonguss1"},"content":"        return \"Successfully connected to the database!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"amoonguss1"},"content":"    public String printSearchDate(String date, TaskList list) {","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"amoonguss1"},"content":"        String output \u003d \"Tasks occurring on \" + date + \":\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"amoonguss1"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"amoonguss1"},"content":"            Task currTask \u003d list.getTask(i);","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"amoonguss1"},"content":"            if (currTask instanceof Deadline) {","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"amoonguss1"},"content":"                if (date.equals(((Deadline) currTask).getBy())) {","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"amoonguss1"},"content":"                    output \u003d output + currTask.toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"amoonguss1"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"amoonguss1"},"content":"            } else if (currTask instanceof Event) {","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"amoonguss1"},"content":"                if (date.equals(((Event) currTask).getEndDate()) || date.equals(((Event) currTask).getStartDate())) {","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"amoonguss1"},"content":"                    output \u003d output + currTask.toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"amoonguss1"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"amoonguss1"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"amoonguss1":108}},{"path":"src/main/java/Nerd/entities/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.entities;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.exceptions.NerdException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":" * Represents the Deadline Task of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     * Instantiates a Deadline Object that can be placed into the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     * @param deadline    The date of the Deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        this.deadline \u003d LocalDate.parse(deadline.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"        return this.deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"     * Process the current Deadline object to be saved into a text file.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"     * @return a String representing the Deadline to be saved.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    public String toSave() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"        if (super.isDone \u003d\u003d true) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"            return String.format(\"D | 1 | %s | %s\\n\", super.getDescription(), this.deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"D | 0 | %s | %s\\n\", super.getDescription(), this.deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"     * Process the current Deadline object to be displayed.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"     * @return a String representing the Deadline to be displayed by the User Interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":52}},{"path":"src/main/java/Nerd/entities/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.entities;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":" * Represents the Event Task of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     * Instantiates an Event Object that can be placed into the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     * @param startDate   The start date of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     * @param endDate     The end date of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"        this.startDate \u003d LocalDate.parse(startDate.trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        this.endDate \u003d LocalDate.parse(endDate.trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"        return this.startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"        return this.endDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"     * Process the current Event object to be saved into a text file.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"     * @return a String representing the Event to be saved.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"    public String toSave() {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"        if (super.isDone \u003d\u003d true) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"            return String.format(\"E | 1 | %s | %s | %s\\n\", super.getDescription(), this.startDate, this.endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"E | 0 | %s | %s | %s\\n\", super.getDescription(), this.startDate, this.endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"     * Process the current Event object to be displayed.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"     * @return a String representing the Event to be displayed by the User Interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"                + \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":58}},{"path":"src/main/java/Nerd/entities/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.entities;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":" * Represents the Duke.entities.Task of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"     * Instantiates a Task Object that can be placed into the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"        assert !this.description.equals(\"\") : \"description should not be empty!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"    public void setUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"     * Process the current Task object to be saved into a text file.","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"     * @return a String representing the Task to be saved.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"    public abstract String toSave();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"     * Process the current Task object to be displayed.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"     * @return a String representing the Task to be displayed by the User Interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"amoonguss1":58}},{"path":"src/main/java/Nerd/entities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.entities;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import Nerd.exceptions.NerdException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import Nerd.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":" * Represents the list of Tasks of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    protected Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"     * Instantiates a TaskList Object that keeps track of the Tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     * @param storage The storage object that contains the preload data.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    public TaskList(Storage storage) throws NerdException, FileNotFoundException {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        if (!storage.load(this)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"            throw new NerdException(\"Sorry! I have detected weird inputs in the commands\");","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"        this.list.add(t);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"        assert index \u003c 0 : \"Invalid index\";","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"        assert index \u003c 0 : \"Invalid index\";","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"amoonguss1":47}},{"path":"src/main/java/Nerd/entities/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.entities;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":" * Represents the Todo Task of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"     * Instantiates an Todo Object that can be placed into the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"     * Process the current Todo object to be saved into a text file.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"     * @return a String representing the Todo task to be saved.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"    public String toSave() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"        if (super.isDone \u003d\u003d true) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"            return String.format(\"T | 1 | %s\\n\", super.getDescription());","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"T | 0 | %s\\n\", super.getDescription());","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"     * Process the current Todo object to be displayed.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"     * @return a String representing the Todo task to be displayed by the User Interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"amoonguss1":39}},{"path":"src/main/java/Nerd/enums/CommandEnums.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.enums;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":" * Represents the enumerated commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"public enum CommandEnums {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"    DATE(\"date\"),","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    REMINDER(\"reminder\"),","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    DELETE(\"delete\");","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    private final String command;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"     * Instantiates an Event Object that can be placed into the TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     * @param command the input command through the User Interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    CommandEnums(String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"        return command;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"amoonguss1":34}},{"path":"src/main/java/Nerd/exceptions/NerdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.exceptions;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":" * A wrapper around the Exception class for the Nerd Chat bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"public class NerdException extends Exception {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"    public NerdException(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"        super(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"amoonguss1":10}},{"path":"src/main/java/Nerd/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package Nerd.storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"import Nerd.exceptions.NerdException;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Parser.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":" * Represents the Storage of the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    private final Path HOME_DIRECTORY \u003d Path.of(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    private File file;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"     * Instantiates a storage object that stores and loads data from a file.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"     * @param file The name of the file.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    public Storage(String file) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"        this.file \u003d new File(this.HOME_DIRECTORY + \"/\" + file);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"     * Connects and checks if the Chat bot is connected to the database.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"     * @throws NerdException if file does not exist.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"    public void connect() throws NerdException {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"            throw new NerdException(\"An error occurred when connecting to the database!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"     * Loads the storage to the Chat bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"     * @param list A TaskList object, preferably a new TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"     * @return A boolean representation of the loading.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"     * @throws FileNotFoundException if file does not exist.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"    public boolean load(TaskList list) throws FileNotFoundException {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"        assert list !\u003d null : \"Cannot load data into a non existing tasklist\";","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"            if (parser.parseText(input, list) \u003d\u003d false) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"                return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"amoonguss1"},"content":"        return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"amoonguss1"},"content":"     * Saves the current TaskList to the file.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"amoonguss1"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"amoonguss1"},"content":"     * @param list A TaskList object.","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"amoonguss1"},"content":"     * @throws IOException When file cannot be written","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"amoonguss1"},"content":"    public void save(TaskList list) throws IOException{","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"amoonguss1"},"content":"        assert list !\u003d null : \"Cannot save data from a non existing tasklist\";","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"amoonguss1"},"content":"        FileWriter myWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"amoonguss1"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"amoonguss1"},"content":"            String line \u003d list.getTask(i).toSave();","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"amoonguss1"},"content":"            myWriter.write(line);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"amoonguss1"},"content":"        myWriter.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"amoonguss1":78}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package gui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"    private void flip() {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"        db.flip();","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"        return db;","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"amoonguss1":60}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"amoonguss1":7}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Nerd;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"public class Main extends Application{","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"    private Nerd nerd \u003d new Nerd(\"duke.txt\");","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    private Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/nerdicon.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"            stage.setTitle(\"NerdBot\");","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setNerd(nerd, ui);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDefaultMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"amoonguss1":35}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package gui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Nerd;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import Nerd.Ui.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"amoonguss1"},"content":"    private Nerd nerd;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"amoonguss1"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"amoonguss1"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"amoonguss1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/amoonguss.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"amoonguss1"},"content":"    private Image nerdImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/nerd.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"amoonguss1"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"amoonguss1"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"amoonguss1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"amoonguss1"},"content":"    public void setNerd(Nerd d, Ui ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"amoonguss1"},"content":"        nerd \u003d d;","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"amoonguss1"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"amoonguss1"},"content":"    public void setDefaultMessage() {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"amoonguss1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"amoonguss1"},"content":"                DialogBox.getDukeDialog(ui.printSuccessfulConnection(), nerdImage),","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"amoonguss1"},"content":"                DialogBox.getDukeDialog(ui.showWelcome(), nerdImage),","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"amoonguss1"},"content":"                DialogBox.getDukeDialog(ui.showCommandList(), nerdImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"amoonguss1"},"content":"        );","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"amoonguss1"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"amoonguss1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"amoonguss1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"amoonguss1"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"amoonguss1"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"amoonguss1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"amoonguss1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"amoonguss1"},"content":"        String response \u003d nerd.getResponse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"amoonguss1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"amoonguss1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"amoonguss1"},"content":"                DialogBox.getDukeDialog(response, nerdImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"amoonguss1"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"amoonguss1"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"amoonguss1"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"amoonguss1"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(5));","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"amoonguss1"},"content":"            delay.setOnFinished(event -\u003e stage.close() );","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"amoonguss1"},"content":"            delay.play();","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"amoonguss1"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"amoonguss1"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"amoonguss1"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"amoonguss1":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"2.0\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-padding: 10px; -fx-background-color: grey; -fx-background-radius: 14px;\" text\u003d\"Label\" textFill\u003d\"#071397\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"                \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"            \u003cFont name\u003d\"Century Gothic Bold Italic\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"amoonguss1":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"702.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"        \u003cHBox alignment\u003d\"BOTTOM_CENTER\" prefHeight\u003d\"600.0\" prefWidth\u003d\"702.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"            \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"            \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"549.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"50.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"544.0\" prefWidth\u003d\"637.0\" styleClass\u003d\"root\" stylesheets\u003d\"@style.css\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"amoonguss1":22}},{"path":"src/test/java/duke/entities/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"        Task t \u003d new Event(\"test test\", \"2019-10-15\", \"2019-10-17\");","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"        t.setDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"        assertTrue(t.isDone());","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"        Task t \u003d new Event(\"test test\", \"2019-10-15\", \"2019-10-17\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"        t.setUndone();","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"        assertFalse(t.isDone());;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"        Task t \u003d new Event(\"test test\", \"2019-10-15\", \"2019-10-17\");","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"        assertEquals(\"[E][ ] test test (from: Oct 15 2019 to: Oct 17 2019)\", t.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"amoonguss1":27}},{"path":"src/test/java/duke/entities/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"package duke.entities;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"import Nerd.entities.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"amoonguss1"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"amoonguss1"},"content":"    public void markTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"amoonguss1"},"content":"        Task t \u003d new Todo(\"mark test\");","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"amoonguss1"},"content":"        t.setDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"amoonguss1"},"content":"        assertTrue(t.isDone());","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"amoonguss1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"amoonguss1"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"    public void unmarkTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"amoonguss1"},"content":"        Task t \u003d new Todo(\"unmark test\");","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"amoonguss1"},"content":"        t.setUndone();","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"amoonguss1"},"content":"        assertFalse(t.isDone());","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"amoonguss1"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"amoonguss1"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"amoonguss1"},"content":"        Task task \u003d new Todo(\"Hello World\");","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"amoonguss1"},"content":"        assertEquals(\"[T][ ] Hello World\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"amoonguss1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"amoonguss1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"amoonguss1":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amoonguss1"},"content":"todo buy book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"amoonguss1"},"content":"todo mark scripts","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"amoonguss1"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"amoonguss1"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"amoonguss1"},"content":"deadline return book /by june 6th","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"amoonguss1"},"content":"event project meeting event /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"amoonguss1"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"amoonguss1"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"amoonguss1"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"amoonguss1":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amoonguss1"},"content":"java -classpath ..\\bin Nerd.Nerd \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amoonguss1":1,"-":20}}]
