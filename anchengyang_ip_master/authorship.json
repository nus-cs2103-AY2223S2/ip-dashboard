[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"# Duke","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen ([source](https://dansilvestre.com/productivity-quotes/))","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"Duke frees your mind by remembering things you need to do","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"It\u0027s ","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"- Text-based","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"- easy to learn","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"- ~~Fast~~ _SUPER FAST_ to use","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"## Steps to run","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"1. Pull the code from the repo [here](https://github.com/anchengyang/ip)","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"2. Run it","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"3. Add your tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"4. Let it manage your tasks for you üëç","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"## Features","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"- [x] Managing todo","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"- [x] Managing deadlines","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"- [x] Managing events","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"- [x] Filter by keyword","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"- [x] Mark and unmark tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"- [ ] Filter by date","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"This is the main function:","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"   ```ruby","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"   public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"anchengyang":25,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"    id \u0027org.beryx.jlink\u0027 version \u00272.23.6\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"javafx {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"    version \u003d \"19\"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"anchengyang":15,"-":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"    private Circle circle \u003d new Circle(50, 40, 39);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"anchengyang":67}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":" * The main class.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"public class Duke {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"     * Duke constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    public Duke() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"        String filePath \u003d \"tasks.txt\";","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"            this.tasks \u003d storage.loadTaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"            System.out.println(Ui.showLoadingError());","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"     * Shows welcome message on start.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"     * @return String The welcome message.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"        return Ui.showWelcomeMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"     * Generates a response based on user input.","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"     * @return String of the response.","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"            Command c \u003d Parser.parse(input.trim());","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"            return c.execute(this.tasks, this.storage);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"            return \"Unrecognised command. Try again.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":53}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":" * The class that extends Exception class.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"     * DukeException constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"     * @param error Takes in the error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"        super(error);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anchengyang":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"anchengyang":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this.duke);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"anchengyang":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/zoro.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chopper.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"     * Initializes the application.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"        this.duke \u003d new Duke();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"                DialogBox.getDukeDialog(duke.showWelcomeMessage(), dukeImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"        String text \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"        String input \u003d text + \"    \";","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"        String response \u003d duke.getResponse(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"anchengyang":59}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.commands.FindDateCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"import duke.commands.UpdateCommand;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":" * The class to generate Command objects.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    private enum Type {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, FINDDATE, UPDATE","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"     * Creates appropriate Commands based on the input string.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"     * @throws IllegalArgumentException  when user\u0027s input does not correspond to any of the cases.","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"    public static Command parse(String input) throws IllegalArgumentException {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"        Type t \u003d Type.valueOf(words[0].toUpperCase());","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"        switch(t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"        case LIST:","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            return new ListCommand(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"        case TODO:","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"        case EVENT:","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"            return new EventCommand(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"        case DELETE:","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"        case MARK:","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"        case FIND:","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"            return new FindCommand(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"        case FINDDATE:","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"            return new FindDateCommand(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"        case UPDATE:","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"            return new UpdateCommand(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"        case BYE:","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"            return new ByeCommand(input);","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"anchengyang"},"content":"        default:","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"anchengyang"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":72}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":" * The class to store tasks into a text file.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"    private String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     * Storage constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     * @param filePath The relative path of the text file that tasks are saved into.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"     * Saves the TaskList into the text file.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"     * Prints the error message if there is one.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"     * @param tl TaskList that contains objects of type Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"    public void saveTaskList(TaskList tl) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"            FileOutputStream fos \u003d new FileOutputStream(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"            oos.writeObject(tl);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            oos.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            fos.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"            System.out.println(\"Saved\");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"     * Loads the TaskList from the text file into the program.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"     * If file exists, return the TaskList stored in the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"     * If not, return a new TaskList and creates the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"     * @return TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"    public TaskList loadTaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"            TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"                FileInputStream fis \u003d new FileInputStream(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"                tl \u003d (TaskList) ois.readObject();","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"                ois.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"                fis.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"                System.out.println(\"File is empty\");","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"            return tl;","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"anchengyang"},"content":"                System.out.println(\"Cant create file\");","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"anchengyang"},"content":"            return new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"anchengyang":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":" * The TaskList that stores Task objects.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     * TaskList constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"     * Returns the Task object at the specified index of the ArrayList.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"     * @param i An integer representing the index","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"     * @return Task","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"     * Adds a Task object into the ArrayList.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"     * @param t The Task object to be added into the ArrayList.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"     * Returns the size of the ArrayList.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"     * @return int representing the size.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"    public int size() {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"     * Removes the Task object at the specified index of the ArrayList.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"     * @param i An integer representing the index","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"     * Filters the tasks in the list by their description.","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"     * @return ArrayList of the filtered tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"    public ArrayList\u003cTask\u003e filter(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"anchengyang"},"content":"        ArrayList\u003cTask\u003e filtered \u003d this.tasks.stream()","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"anchengyang"},"content":"                .filter(task -\u003e task.contains(input))","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"anchengyang"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"anchengyang"},"content":"        return filtered;","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"anchengyang"},"content":"     * Filters the tasks in the list by their dates.","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"anchengyang"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"anchengyang"},"content":"     * @return ArrayList of the filtered tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"anchengyang"},"content":"    public ArrayList\u003cTask\u003e filterDate(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"anchengyang"},"content":"        ArrayList\u003cTask\u003e filtered \u003d this.tasks.stream()","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"anchengyang"},"content":"                .filter(task -\u003e isDeadlineHasWord(task, input) || isEventHasWord(task, input))","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"anchengyang"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"anchengyang"},"content":"        return filtered;","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"anchengyang"},"content":"     * Checks if the task is an Event and contains the word in their date.","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"anchengyang"},"content":"     * @param t The Task.","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"anchengyang"},"content":"     * @param keyword The input string.","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"anchengyang"},"content":"     * @return Boolean","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"anchengyang"},"content":"    private boolean isEventHasWord(Task t, String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"anchengyang"},"content":"        return (t instanceof Event) \u0026\u0026 ((Event) t).dateContains(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"anchengyang"},"content":"     * Checks if the task is an Deadline and contains the word in their date.","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"anchengyang"},"content":"     * @param t The Task.","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"anchengyang"},"content":"     * @param keyword The input string.","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"anchengyang"},"content":"     * @return Boolean","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"anchengyang"},"content":"    private boolean isDeadlineHasWord(Task t, String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"anchengyang"},"content":"        return (t instanceof Deadline) \u0026\u0026 ((Deadline) t).dateContains(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"anchengyang"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"anchengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"anchengyang"},"content":"        return \"\" + this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"anchengyang":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":" * The class for the UI of the program.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"     * Returns an error message if loading tasks from text file fails.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"     * @return The String message.","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"        return \"Unable to load tasks from storage\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"     * Returns the welcome message on start.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"     * @return The String message.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"        return \"Hello I\u0027m chopper\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"                + \"My commands are the following:\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"                + \"  1. todo \u003cdescription\u003e\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"                + \"  2. deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd\\n      HHmm(optional)\u003e\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"                + \"  3. event \u003cdescription\u003e /from \u003cyyyy-MM-dd\\n      HHmm(optional)\u003e \"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"                + \"/to \u003cyyyy-MM-dd\\n      HHmm(optional)\u003e\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"                + \"  4. delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"                + \"  5. mark \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"                + \"  6. unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"                + \"  7. list\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"                + \"  8. find \u003ckeyword(s)\u003e\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"                + \"  9. finddate \u003cdate\u003e\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"                + \"  10. update \u003cindex\u003e /\u003cdeadline or description\u003e \u003cnew changes\u003e\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"                + \"  11. bye\\n\"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"     * Returns the bye message when user inputs bye.","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"     * @return The String message.","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"    public static String showByeMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"     * Returns the confirmation message after performing an action.","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"     * @param action String of the action.","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"     * @param tasks TaskList of all tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"     * @param task The task in question.","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"     * @return String The message itself.","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"    public static String confirmationMessage(String action, TaskList tasks, Task task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"        return \"Got it. I\u0027ve \" + action + \" this task:\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"                + \"  \"","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"                + task","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"                + tasks.size()","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"     * Return empty description message.","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"anchengyang"},"content":"     * @return String The message.","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"anchengyang"},"content":"    public static String emptyDescriptionError() {","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"anchengyang"},"content":"        return \"OOPS!!! The description of a task cannot be empty.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"anchengyang"},"content":"     * Return wrong deadline command format message.","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"anchengyang"},"content":"     * @return String The message.","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"anchengyang"},"content":"    public static String wrongDeadlineCommandFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"anchengyang"},"content":"        return \"OOPS!!! Deadline must be in the format\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"anchengyang"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"anchengyang"},"content":"     * Return wrong deadline date format message.","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"anchengyang"},"content":"     * @return String The message.","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"anchengyang"},"content":"    public static String wrongDeadlineDateFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"anchengyang"},"content":"        return \"Deadline must have a date of the following format:\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"anchengyang"},"content":"                + \"1. yyyy-MM-dd\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"anchengyang"},"content":"                + \"2. yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"anchengyang"},"content":"     * Return wrong event date format message.","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"anchengyang"},"content":"     * @return String The message.","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"anchengyang"},"content":"    public static String wrongEventDateFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"anchengyang"},"content":"        return \"Event must have start and end dates of the following format:\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"anchengyang"},"content":"                + \"1. yyyy-MM-dd\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"anchengyang"},"content":"                + \"2. yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"anchengyang"},"content":"     * Return wrong event command format message.","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"anchengyang"},"content":"     * @return String The message.","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"anchengyang"},"content":"    public static String wrongEventCommandFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"anchengyang"},"content":"        return \"OOPS!!! Event must be in the format\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"anchengyang"},"content":"                + \"event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\";","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"anchengyang"},"content":"     * Return insufficient tasks message.","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"anchengyang"},"content":"     * @return String The message.","lastModifiedDate":"2023-02-06"},{"lineNumber":115,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"anchengyang"},"content":"    public static String insufficientTasksMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"anchengyang"},"content":"        return \"There are insufficient tasks.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"anchengyang"},"content":"     * Return no tasks message.","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"anchengyang"},"content":"     * @return String The message.","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"anchengyang"},"content":"    public static String noTasksMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"anchengyang"},"content":"        return \"There are no tasks.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"anchengyang"},"content":"     * Return tasks in the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"anchengyang"},"content":"     * @param tasks The tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"anchengyang"},"content":"     * @return String The message.","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"anchengyang"},"content":"    public static String printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"anchengyang"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"anchengyang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"anchengyang"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"anchengyang"},"content":"            result +\u003d \"    \"","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"anchengyang"},"content":"                    + num","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"anchengyang"},"content":"                    + \". \"","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"anchengyang"},"content":"                    + tasks.get(i)","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"anchengyang"},"content":"                    + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"anchengyang"},"content":"        return result;","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"anchengyang"},"content":"     * Returns the error message for wrong update format.","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"anchengyang"},"content":"     * @return The String message.","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"anchengyang"},"content":"    public static String updateWrongFormat() {","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"anchengyang"},"content":"        return \"Update command must be in the format\\nupdate \u003cindex\u003e /\u003cdeadline or description\u003e \u003cnew changes\u003e\";","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"anchengyang"},"content":"     * Returns the error message for date has passed.","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"anchengyang"},"content":"     * @return The String message.","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"anchengyang"},"content":"    public static String datePassed() {","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"anchengyang"},"content":"        return \"Date has passed.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":161,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"anchengyang"},"content":"     * Returns the error message for start date later than end date.","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"anchengyang"},"content":"     * @return The String message.","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"anchengyang"},"content":"    public static String startDatelaterThanEnd() {","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"anchengyang"},"content":"        return \"End date is earlier than start date\";","lastModifiedDate":"2023-02-10"},{"lineNumber":168,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":169,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":169}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":" * The class for the Bye command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"     * ByeCommand constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    public ByeCommand(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"        return Ui.showByeMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"        return true;","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":36}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":" * The abstract class for command.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"     * Prints appropriate error messages.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"     * @param tasks TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     * @param storage The Storage object used to save the edited TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     * @return True if the execution is successful, false if it\u0027s not.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"    public abstract String execute(TaskList tasks, Storage storage);","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"     * Overridden by ByeCommand only.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"     * @return True if the program needs to terminate, false if it does not.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":29}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":" * The class for the Deadline command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     * DeadlineCommand constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"     * Checks if the format of the input is valid.","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"     * @param indexBy index of the /by in the input.","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"     * @return a boolean","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"    private boolean checkFormat(int indexBy) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"        return indexBy \u003c 0","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"                || indexBy - 1 \u003c 9","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"                || indexBy + 4 \u003e input.length()","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"                || !input.substring(indexBy, indexBy + 4).equals(\"/by \");","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"            int indexBy \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"            String[] words \u003d this.input.split(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"            if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.emptyDescriptionError());","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"            if (checkFormat(indexBy)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.wrongDeadlineCommandFormat());","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"            Deadline d \u003d new Deadline(input.substring(9, indexBy - 1),","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"                    input.substring(indexBy + 4, input.length()));","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"            tasks.add(d);","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"            return Ui.confirmationMessage(\"added\", tasks, d);","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"            return Ui.wrongDeadlineDateFormat();","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":63}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":" * The class for the Delete command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     * DeleteCommand constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"            if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(\"OOPS!!! Delete must be followed by an int.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"            assert index \u003c\u003d tasks.size() : Ui.insufficientTasksMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            return Ui.confirmationMessage(\"deleted\", tasks, task);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"            return de.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"        } catch (AssertionError ae) {","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"            return ae.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":43}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":" * The class for the Event command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     * EventCommand constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"     * Checks if the format of the input is valid.","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"     * @param indexFrom the index of the /from.","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"     * @param indexTo the index of the /to.","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"     * @return a boolean","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"    private boolean checkFormat(int indexFrom, int indexTo) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"        return indexFrom \u003c -1","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"                || indexFrom - 1 \u003c 6","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"                || (indexFrom + 6 \u003e indexTo - 1)","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"                || (indexTo + 4 \u003e this.input.length())","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"                || (!(this.input.substring(indexFrom, indexFrom + 6).equals(\"/from \")","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"                \u0026\u0026 this.input.substring(indexTo, indexTo + 4).equals(\"/to \")));","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"            int indexFrom \u003d input.indexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"            int indexTo \u003d input.lastIndexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"            String[] words \u003d this.input.split(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"            if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.emptyDescriptionError());","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"            if (checkFormat(indexFrom, indexTo)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.wrongEventCommandFormat());","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"            Event e \u003d new Event(input.substring(6, indexFrom - 1),","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"                    input.substring(indexFrom + 6, indexTo - 1),","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"                    input.substring(indexTo + 4, input.length()));","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"            tasks.add(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"            return Ui.confirmationMessage(\"added\", tasks, e);","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"            return Ui.wrongEventDateFormat();","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":69}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":" * The class for the Find command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     * FindCommand constructor.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"            String keyword \u003d this.input.substring(5, input.length());","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            ArrayList\u003cTask\u003e filtered \u003d tasks.filter(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"            assert filtered.size() \u003e 0 : Ui.noTasksMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"            return Ui.printTasks(filtered);","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"        } catch (AssertionError ae) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            return ae.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"anchengyang":39}},{"path":"src/main/java/duke/commands/FindDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":" * The class for the FindDate command which extends Command class.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"public class FindDateCommand extends Command {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     * FindDateCommand constructor.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"    public FindDateCommand(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"            String keyword \u003d this.input.substring(9, input.length());","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"            ArrayList\u003cTask\u003e filtered \u003d tasks.filterDate(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            assert filtered.size() \u003e 0 : Ui.noTasksMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"            return Ui.printTasks(filtered);","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"        } catch (AssertionError ae) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            return ae.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"anchengyang":38}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":" * The class for the List command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"     * ListCommand constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"            assert tasks.size() \u003e 0 : Ui.noTasksMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"            String result \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"                result +\u003d \"    \"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"                        + num","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"                        + \". \"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"                        + tasks.get(i)","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"                        + \"\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            return result;","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"        } catch (AssertionError ae) {","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"            return ae.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":41}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":" * The class for the Mark command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     * MarkCommand constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"            if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(\"OOPS!!! You are missing the number of the task to be marked.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"            int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"            if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.insufficientTasksMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"            task.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"            return de.getMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"            return \"OOPS!!! Mark has to be followed by an int.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":46}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":" * The class for the Todo command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     * TodoCommand constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"            String[] words \u003d this.input.split(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"            if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.emptyDescriptionError());","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"            Todo td \u003d new Todo(input.substring(5, input.length()));","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"            tasks.add(td);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            return Ui.confirmationMessage(\"added\", tasks, td);","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":40}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":" * The class for the Unmark command which extends Command class.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     * UnmarkCommand constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"            if (input.length() \u003c\u003d 7) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(\"OOPS!!! You are missing the number of the task to be unmarked.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"            if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.insufficientTasksMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            task.unmark();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"            return \"OOPS!!! Unmark has to be followed by an int.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":45}},{"path":"src/main/java/duke/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":" * The class for the Update command which extends Command class.","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"    private String input;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"     * TodoCommand constructor.","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    public UpdateCommand(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"            String[] words \u003d this.input.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            int index \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"            if (index \u003e tasks.size() || index \u003c\u003d 0) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.insufficientTasksMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            Task t \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"            if (words[2].equals(\"/description\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"                t.update(this.input.split(\"/description\")[1].trim());","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"            } else if (words[2].equals(\"/deadline\") \u0026\u0026 (t instanceof Deadline)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"                d.updateDeadline(this.input.split(\"/deadline\")[1].trim());","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"            } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"                throw new DukeException(Ui.updateWrongFormat());","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"            return Ui.confirmationMessage(\"updated\", tasks, t);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"            return Ui.updateWrongFormat();","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"anchengyang":53}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":" * The Deadline class that extends Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    private String by;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     * Constructor for a Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"     * @param description The Event description.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"     * @param date The date of the Deadline.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    public Deadline(String description, String date) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"        LocalDateTime byDateTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"            byDateTime \u003d LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"            this.by \u003d byDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            LocalDate byDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"            this.by \u003d byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"            byDateTime \u003d byDate.atTime(23, 59);","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"        if (!byDateTime.isAfter(LocalDateTime.now())) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"            throw new DukeException(Ui.datePassed());","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"     * Check if the deadline\u0027s date contains the given keyword.","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"     * @param keyword The keyword argument.","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"     * @return A boolean value.","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"    public boolean dateContains(String keyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"        if (this.by.length() \u003e\u003d keyword.length()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"            return this.by.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"            return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"     * Updates the deadline attribute of the object.","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"     * @param date String input of the new date.","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"    public void updateDeadline(String date) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"        LocalDateTime newByDateTime;","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"            newByDateTime \u003d LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"            this.by \u003d newByDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"            LocalDate byDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"anchengyang"},"content":"            this.by \u003d byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"anchengyang"},"content":"            newByDateTime \u003d byDate.atTime(23, 59);","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"anchengyang"},"content":"        if (!newByDateTime.isAfter(LocalDateTime.now())) {","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"anchengyang"},"content":"            throw new DukeException(Ui.datePassed());","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"anchengyang"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"anchengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"anchengyang"},"content":"        return \"[D]\" + super.toString() + \"\\n (by: \" + this.by + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anchengyang":83}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":" * The Event object that extends Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"    private String from;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    private String to;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     * Constructor for an Event object.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"     * @param description The Event description.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"     * @param from The start date of the Event.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"     * @param to The end date of the Event.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"        LocalDateTime fromDateTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"        LocalDateTime toDateTime;","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"            fromDateTime \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            this.from \u003d fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"            this.from \u003d fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"            fromDateTime \u003d fromDate.atStartOfDay();","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"        if (!fromDateTime.isAfter(LocalDateTime.now())) {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"            throw new DukeException(Ui.datePassed());","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"            toDateTime \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"            this.to \u003d toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"            LocalDate toDate \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"            this.to \u003d toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"            toDateTime \u003d toDate.atTime(23, 59);","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"        if (!toDateTime.isAfter(fromDateTime)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"            throw new DukeException(Ui.startDatelaterThanEnd());","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"     * Check if the event\u0027s dates contains the given keyword.","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"     * @param keyword The keyword argument.","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"     * @return A boolean value.","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"    public boolean dateContains(String keyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"        keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"        if ((this.from.length() \u003e\u003d keyword.length()) || (this.to.length() \u003e\u003d keyword.length())) {","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"            return this.from.toLowerCase().contains(keyword) || this.to.toLowerCase().contains(keyword);","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"            return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"anchengyang"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"anchengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"anchengyang"},"content":"        return \"[E]\" + super.toString() + \"\\n (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anchengyang":75}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":" * The Task object that implements Serializable.","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"    private String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"     * @param description The Event description.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"     * Check if the task\u0027s description contains the given keyword.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"     * @param keyword The keyword argument.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"     * @return A boolean value.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"        if (description.length() \u003e\u003d keyword.length()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"            return description.contains(keyword);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"            return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"anchengyang"},"content":"     * Method to mark the task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"anchengyang"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"anchengyang"},"content":"        if (!this.isDone) {","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"anchengyang"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"anchengyang"},"content":"     * Method to unmark the task as not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"anchengyang"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"anchengyang"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"anchengyang"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"anchengyang"},"content":"    public void update(String newDescription) {","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"anchengyang"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"anchengyang"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"anchengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"anchengyang"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"anchengyang"},"content":"            return String.format(\" [x] \" + this.description);","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"anchengyang"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"anchengyang"},"content":"            return String.format(\" [ ] \" + this.description);","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"anchengyang":68}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":" * The Todo object that extends Task.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"     * Constructor for a Todo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"     * @param description The Todo description.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anchengyang":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-text-fill: white;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"anchengyang":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"            xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" style\u003d\"-fx-background-color: #D3D3D3;\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #5A5A5A; -fx-text-fill: white; -fx-font-size: 13;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: linear-gradient(from 0% 0% to 100% 200%, repeat, black 10%, maroon 50%);\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"anchengyang":21}},{"path":"src/test/java/duke/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"    public void executeTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"        Storage storage \u003d new Storage(\"taskListTest.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"            Deadline d \u003d new Deadline(\"homework\",","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"                    \"2024-10-20 2359\");","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"            tl.add(d);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"anchengyang"},"content":"            e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"anchengyang"},"content":"        MarkCommand mc \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"anchengyang"},"content":"        assertEquals(mc.execute(tl, storage),","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"anchengyang"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"anchengyang"},"content":"                        + \"  [D] [x] homework\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"anchengyang"},"content":"                        + \" (by: Oct 20 2024 11:59 PM)\");","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":33}},{"path":"src/test/java/duke/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"public class TodoCommandTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"    public void executeTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"        Storage storage \u003d new Storage(\"taskListTest.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"        TodoCommand tdc \u003d new TodoCommand(\"todo test\");","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"        assertEquals(tdc.execute(tl, storage),","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"                \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"anchengyang"},"content":"                        + \"  [T] [ ] test\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"anchengyang"},"content":"                        + \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":23}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"    public void deadlineTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"            Deadline d \u003d new Deadline(\"homework\", \"2024-01-20 1400\");","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"            assertEquals(\"[D] [ ] homework\\n (by: Jan 20 2024 02:00 PM)\", d.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"            e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":19}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"public class EventTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"    public void eventTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"            Event e \u003d new Event(\"meeting\", \"2024-01-20 1400\", \"2024-01-21 1400\");","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"anchengyang"},"content":"            assertEquals(\"[E] [ ] meeting\\n (from: Jan 20 2024 02:00 PM to: Jan 21 2024 02:00 PM)\", e.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"anchengyang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"anchengyang"},"content":"            e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"anchengyang"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":19}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"    public void todoTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"        Todo t \u003d new Todo(\"return book\");","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"        assertEquals(\"[T] [ ] return book\", t.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"anchengyang":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"anchengyang"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"anchengyang"},"content":"deadline NOC application /by Sunday 12pm","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"anchengyang"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"anchengyang"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"anchengyang"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"anchengyang"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"anchengyang"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"anchengyang"},"content":"delete 3","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"anchengyang"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"anchengyang"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"anchengyang"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"anchengyang"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"anchengyang"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"anchengyang":13}},{"path":"taskListTest.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"anchengyang":0}},{"path":"tasks.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"anchengyang":0}}]
